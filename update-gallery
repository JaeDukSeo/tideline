#!/bin/bash

if [ -z "$1" ]; then
    echo "As a first arg, you need to provide a branch name"
    exit
fi
FILENAME=$1

if [ -z "$2" ]; then
    echo "As the second arg, you need to provide a short description of the option encoded in the branch (in quotes)"
    exit
fi
DESC=$2

TITLE=$3

FILENAME=${FILENAME//\//-}

cd ../

sed 's/\/fonts\//\/tideline\/fonts\//g' example/less/example.less > example/less/ghpages.less
sed 's/img/..\/img/' example/example.js > example/ghpages.js
cp -r fonts/ web/fonts/
cp -r img/ web/img/

REAL='blip-output.json'

if [ -z "$DATA" ]; then
    echo "Using default 'device-data.json'"
    echo "Set DATA env variable to change"
    DATA='device-data.json'
else
    if [ "$DATA" == "$REAL" ]; then
        # according to Google, sed -i doesn't work on OS X???
        # output to tmp is the poor man's sed -i
        sed 's/device-data/blip-output/' example/ghpages.js > example/tmp.js
        mv example/tmp.js example/ghpages.js
    fi
fi

gulp ghpages

cp example/bundle.js web/example/$FILENAME.js
cp example/example.css web/example/$FILENAME.css
cp example/data/$DATA web/example/data/
cp web/example/current-progress.html web/example/$FILENAME.html

# clean up
rm -f example/less/ghpages.less
rm -f example/ghpages.js

rm -f example/example.css
rm -f example/bundle.js

cd web/

if [ -z "$3" ]; then
    python update_gallery.py $FILENAME "$DESC"
    exit
fi

python update_gallery.py $FILENAME "$DESC" -t "$TITLE"
