/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/** @jsx React.DOM */
	var _ = window._;
	var bows = window.bows;
	var React = window.React;

	var data = __webpack_require__(6);

	var Daily = __webpack_require__(1);
	var Weekly = __webpack_require__(2);
	var Settings = __webpack_require__(3);
	// tideline dependencies & plugins
	var tideline = window.tideline = __webpack_require__(4);
	var preprocess = tideline.preprocess = __webpack_require__(5);

	var example = {
	  log: bows('Example')
	};

	var Example = React.createClass({displayName: 'Example',
	  log: bows('Example'),
	  propTypes: {
	    chartData: React.PropTypes.object.isRequired,
	    imagesBaseUrl: React.PropTypes.string.isRequired
	  },
	  getDefaultProps: function() {
	    return {
	      chartData: preprocess.processData(data),
	      imagesBaseUrl: '../img'
	    };
	  },
	  getInitialState: function() {
	    return {
	      chartPrefs: {
	        bgUnits: 'mg/dL',
	        hiddenPools: {
	          basalSettings: true
	        }
	      },
	      datetimeLocation: null,
	      initialDatetimeLocation: null,
	      chartType: 'daily'
	    };
	  },
	  render: function() {
	    var chart = this.renderChart();
	    /* jshint ignore:start */
	    return (
	      React.DOM.div(null, 
	        React.DOM.div( {className:"vSpace"}),
	          chart,
	        React.DOM.div( {className:"vSpace"})
	      )
	    );
	    /* jshint ignore:end */
	  },
	  renderChart: function() {
	    window.tidelineData = this.props.chartData;
	    switch (this.state.chartType) {
	      case 'daily':
	        /* jshint ignore:start */
	        return (
	          Daily( 
	            {chartPrefs:this.state.chartPrefs,
	            imagesBaseUrl:this.props.imagesBaseUrl,
	            initialDatetimeLocation:this.state.initialDatetimeLocation,
	            patientData:this.props.chartData,
	            onSwitchToDaily:this.handleSwitchToDaily,
	            onSwitchToSettings:this.handleSwitchToSettings,
	            onSwitchToWeekly:this.handleSwitchToWeekly,
	            updateChartPrefs:this.updateChartPrefs,
	            updateDatetimeLocation:this.updateDatetimeLocation} )
	          );
	        /* jshint ignore:end */
	      case 'weekly':
	        /* jshint ignore:start */
	        return (
	          Weekly( 
	            {chartPrefs:this.state.chartPrefs,
	            imagesBaseUrl:this.props.imagesBaseUrl,
	            initialDatetimeLocation:this.state.initialDatetimeLocation,
	            patientData:this.props.chartData,
	            onSwitchToDaily:this.handleSwitchToDaily,
	            onSwitchToSettings:this.handleSwitchToSettings,
	            onSwitchToWeekly:this.handleSwitchToWeekly,
	            updateChartPrefs:this.updateChartPrefs,
	            updateDatetimeLocation:this.updateDatetimeLocation} )
	          );
	        /* jshint ignore:end */
	      case 'settings':
	        /* jshint ignore:start */
	        return (
	          Settings( 
	            {chartPrefs:this.state.chartPrefs,
	            patientData:this.props.chartData,
	            onSwitchToDaily:this.handleSwitchToDaily,
	            onSwitchToSettings:this.handleSwitchToSettings,
	            onSwitchToWeekly:this.handleSwitchToWeekly} )
	          );
	        /* jshint ignore:end */
	    }
	  },
	  // handlers
	  handleSwitchToDaily: function(datetime) {
	    this.setState({
	      chartType: 'daily',
	      initialDatetimeLocation: datetime || this.state.datetimeLocation
	    });
	  },
	  handleSwitchToSettings: function() {
	    this.setState({
	      chartType: 'settings'
	    });
	  },
	  handleSwitchToWeekly: function(datetime) {
	    this.setState({
	      chartType: 'weekly',
	      initialDatetimeLocation: datetime || this.state.datetimeLocation
	    });
	  },
	  updateChartPrefs: function(newChartPrefs) {
	    var currentPrefs = _.clone(this.state.chartPrefs);
	    _.assign(currentPrefs, newChartPrefs);
	    this.setState({
	      chartPrefs: currentPrefs
	    }, function() {
	      // this.log('Global example state changed:', JSON.stringify(this.state));
	    });
	  },
	  updateDatetimeLocation: function(datetime) {
	    this.setState({
	      datetimeLocation: datetime
	    }, function() {
	      // this.log('Global example state changed:', JSON.stringify(this.state));
	    });
	  }
	});

	React.renderComponent(
	  /* jshint ignore:start */
	  Example(null ),
	  /* jshint ignore:end */
	  document.body
	);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/** @jsx React.DOM */
	var _ = window._;
	var bows = window.bows;
	var moment = window.moment;
	var React = window.React;

	// tideline dependencies & plugins
	var tideline = window.tideline = __webpack_require__(4);
	var blip = tideline.blip = __webpack_require__(9);
	var chartDailyFactory = blip.oneday;

	var Header = __webpack_require__(7);
	var Footer = __webpack_require__(8);

	var Daily = React.createClass({displayName: 'Daily',
	  chartType: 'daily',
	  log: bows('Daily View'),
	  propTypes: {
	    chartPrefs: React.PropTypes.object.isRequired,
	    imagesBaseUrl: React.PropTypes.string.isRequired,
	    initialDatetimeLocation: React.PropTypes.string,
	    patientData: React.PropTypes.object.isRequired,
	    onSwitchToDaily: React.PropTypes.func.isRequired,
	    onSwitchToSettings: React.PropTypes.func.isRequired,
	    onSwitchToWeekly: React.PropTypes.func.isRequired,
	    updateChartPrefs: React.PropTypes.func.isRequired,
	    updateDatetimeLocation: React.PropTypes.func.isRequired
	  },
	  getInitialState: function() {
	    return {
	      atMostRecent: false,
	      inTransition: false,
	      title: ''
	    };
	  },
	  render: function() {
	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {id:"tidelineMain", className:"grid"}, 
	        Header(
	          {chartType:this.chartType,
	          inTransition:this.state.inTransition,
	          atMostRecent:this.state.atMostRecent,
	          title:this.state.title,
	          iconBack:'icon-back',
	          iconNext:'icon-next',
	          iconMostRecent:'icon-most-recent',
	          onClickBack:this.handlePanBack,
	          onClickMostRecent:this.handleClickMostRecent,
	          onClickNext:this.handlePanForward,
	          onClickOneDay:this.handleClickOneDay,
	          onClickTwoWeeks:this.handleClickTwoWeeks,
	          onClickSettings:this.props.onSwitchToSettings,
	        ref:"header"} ),
	        React.DOM.div( {id:"tidelineOuterContainer"}, 
	          DailyChart(
	            {bgUnits:this.props.chartPrefs.bgUnits,
	            hiddenPools:this.props.chartPrefs.hiddenPools,
	            imagesBaseUrl:this.props.imagesBaseUrl,
	            initialDatetimeLocation:this.props.initialDatetimeLocation,
	            patientData:this.props.patientData,
	            // handlers
	            onDatetimeLocationChange:this.handleDatetimeLocationChange,
	            onHideBasalSettings:this.handleHideBasalSettings,
	            onMostRecent:this.handleMostRecent,
	            onShowBasalSettings:this.handleShowBasalSettings,
	            onTransition:this.handleInTransition,
	            ref:"chart"} )
	        ),
	        Footer(
	         {chartType:this.chartType,
	        ref:"footer"} )
	      )
	      );
	    /* jshint ignore:end */
	  },
	  getTitle: function(datetime) {
	    return moment(datetime).utc().format('dddd, MMMM Do');
	  },
	  // handlers
	  handleClickMostRecent: function() {
	    this.refs.chart.goToMostRecent();
	  },
	  handleClickOneDay: function() {
	    return;
	  },
	  handleClickTwoWeeks: function() {
	    var datetime = this.refs.chart.getCurrentDay();
	    this.props.onSwitchToWeekly(datetime);
	  },
	  handleDatetimeLocationChange: function(datetimeLocationEndpoints) {
	    this.setState({
	      datetimeLocation: datetimeLocationEndpoints[1],
	      title: this.getTitle(datetimeLocationEndpoints[1])
	    });
	    this.props.updateDatetimeLocation(datetimeLocationEndpoints[1]);
	  },
	  handleHideBasalSettings: function() {
	    this.props.updateChartPrefs({
	      hiddenPools: {
	        basalSettings: true
	      }
	    });
	    this.setState({
	      hiddenPools: {
	        basalSettings: true
	      }
	    }, this.refs.chart.rerenderChart);
	  },
	  handleInTransition: function(inTransition) {
	    this.setState({
	      inTransition: inTransition
	    });

	  },
	  handleMostRecent: function(atMostRecent) {
	    this.setState({
	      atMostRecent: atMostRecent
	    });
	  },
	  handlePanBack: function() {
	    this.refs.chart.panBack();
	  },
	  handlePanForward: function() {
	    this.refs.chart.panForward();
	  },
	  handleShowBasalSettings: function() {
	    this.props.updateChartPrefs({
	      hiddenPools: {
	        basalSettings: false
	      }
	    });
	    this.setState({
	      hiddenPools: {
	        basalSettings: false
	      }
	    }, this.refs.chart.rerenderChart);
	  }
	});

	var DailyChart = React.createClass({displayName: 'DailyChart',
	  chartOpts: ['bgUnits', 'hiddenPools', 'imagesBaseUrl'],
	  log: bows('Daily Chart'),
	  propTypes: {
	    bgUnits: React.PropTypes.string.isRequired,
	    hiddenPools: React.PropTypes.object.isRequired,
	    imagesBaseUrl: React.PropTypes.string.isRequired,
	    initialDatetimeLocation: React.PropTypes.string,
	    patientData: React.PropTypes.object.isRequired,
	    // handlers
	    onDatetimeLocationChange: React.PropTypes.func.isRequired,
	    onHideBasalSettings: React.PropTypes.func.isRequired,
	    onMostRecent: React.PropTypes.func.isRequired,
	    onShowBasalSettings: React.PropTypes.func.isRequired,
	    onTransition: React.PropTypes.func.isRequired
	  },
	  getInitialState: function() {
	    return {
	      datetimeLocation: null
	    };
	  },
	  componentDidMount: function() {
	    this.mountChart();
	    this.initializeChart(this.props.initialDatetimeLocation);
	  },
	  componentWillUnmount: function() {
	    this.unmountChart();
	  },
	  mountChart: function() {
	    this.log('Mounting...');
	    this.chart = chartDailyFactory(this.getDOMNode(), _.pick(this.props, this.chartOpts))
	      .setupPools();
	    this.bindEvents();
	  },
	  unmountChart: function() {
	    this.log('Unmounting...');
	    this.chart.destroy();
	  },
	  bindEvents: function() {
	    this.chart.emitter.on('navigated', this.handleDatetimeLocationChange);
	    this.chart.emitter.on('hideBasalSettings', this.props.onHideBasalSettings);
	    this.chart.emitter.on('inTransition', this.props.onTransition);
	    this.chart.emitter.on('mostRecent', this.props.onMostRecent);
	    this.chart.emitter.on('showBasalSettings', this.props.onShowBasalSettings);
	  },
	  initializeChart: function(datetime) {
	    this.log('Initializing...');
	    if (_.isEmpty(this.props.patientData)) {
	      throw new Error('Cannot create new chart with no data');
	    }

	    this.chart.load(this.props.patientData);
	    if (datetime) {
	      this.chart.locate(datetime);
	    }
	    else if (this.state.datetimeLocation != null) {
	      this.chart.locate(this.state.datetimeLocation);
	    }
	    else {
	      this.chart.locate();
	    }
	  },
	  render: function() {
	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {id:"tidelineContainer"})
	      );
	    /* jshint ignore:end */
	  },
	  // handlers
	  handleDatetimeLocationChange: function(datetimeLocationEndpoints) {
	    this.setState({
	      datetimeLocation: datetimeLocationEndpoints[1]
	    });
	    this.props.onDatetimeLocationChange(datetimeLocationEndpoints);
	  },
	  rerenderChart: function() {
	    this.unmountChart();
	    this.mountChart();
	    this.initializeChart();
	  },
	  getCurrentDay: function() {
	    return this.chart.getCurrentDay().toISOString();
	  },
	  goToMostRecent: function() {
	    this.chart.setAtDate(null, true);
	  },
	  panBack: function() {
	    this.chart.panBack();
	  },
	  panForward: function() {
	    this.chart.panForward();
	  }
	});

	module.exports = Daily;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/** @jsx React.DOM */
	var _ = window._;
	var bows = window.bows;
	var moment = window.moment;
	var React = window.React;

	// tideline dependencies & plugins
	var tideline = window.tideline = __webpack_require__(4);
	var blip = tideline.blip = __webpack_require__(9);
	var chartWeeklyFactory = blip.twoweek;

	var Header = __webpack_require__(7);
	var Footer = __webpack_require__(8);

	var tideline = {
	  log: bows('Two Weeks')
	};

	var Weekly = React.createClass({displayName: 'Weekly',
	  chartType: 'weekly',
	  log: bows('Weekly View'),
	  propTypes: {
	    chartPrefs: React.PropTypes.object.isRequired,
	    imagesBaseUrl: React.PropTypes.string.isRequired,
	    initialDatetimeLocation: React.PropTypes.string,
	    patientData: React.PropTypes.object.isRequired,
	    onSwitchToDaily: React.PropTypes.func.isRequired,
	    onSwitchToSettings: React.PropTypes.func.isRequired,
	    onSwitchToWeekly: React.PropTypes.func.isRequired,
	    updateChartPrefs: React.PropTypes.func.isRequired,
	    updateDatetimeLocation: React.PropTypes.func.isRequired
	  },
	  getInitialState: function() {
	    return {
	      atMostRecent: false,
	      inTransition: false,
	      showingValues: false,
	      title: ''
	    };
	  },
	  render: function() {
	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {id:"tidelineMain", className:"grid"}, 
	        Header(
	          {chartType:this.chartType,
	          atMostRecent:this.state.atMostRecent,
	          inTransition:this.state.inTransition,
	          title:this.state.title,
	          iconBack:'icon-back-down',
	          iconNext:'icon-next-up',
	          iconMostRecent:'icon-most-recent-up',
	          onClickBack:this.handlePanBack,
	          onClickMostRecent:this.handleClickMostRecent,
	          onClickNext:this.handlePanForward,
	          onClickOneDay:this.handleClickOneDay,
	          onClickTwoWeeks:this.handleClickTwoWeeks,
	          onClickSettings:this.props.onSwitchToSettings,
	        ref:"header"} ),
	        React.DOM.div( {id:"tidelineOuterContainer"}, 
	          WeeklyChart(
	            {bgUnits:this.props.chartPrefs.bgUnits,
	            imagesBaseUrl:this.props.imagesBaseUrl,
	            initialDatetimeLocation:this.props.initialDatetimeLocation,
	            patientData:this.props.patientData,
	            // handlers
	            onDatetimeLocationChange:this.handleDatetimeLocationChange,
	            onMostRecent:this.handleMostRecent,
	            onClickValues:this.toggleValues,
	            onSelectSMBG:this.handleSelectSMBG,
	            onTransition:this.handleInTransition,
	            ref:"chart"} )
	        ),
	        Footer(
	         {chartType:this.chartType,
	         onClickValues:this.toggleValues,
	         showingValues:this.state.showingValues,
	        ref:"footer"} )
	      )
	      );
	    /* jshint ignore:end */
	  },
	  formatDate: function(datetime) {
	    return moment(datetime).utc().format('MMMM Do');
	  },
	  getTitle: function(datetimeLocationEndpoints) {
	    return this.formatDate(datetimeLocationEndpoints[0]) + ' - ' + this.formatDate(datetimeLocationEndpoints[1]);
	  },
	  // handlers
	  handleClickMostRecent: function() {
	    this.setState({showingValues: false});
	    this.refs.chart.goToMostRecent();
	  },
	  handleClickOneDay: function() {
	    var datetime = this.refs.chart.getCurrentDay();
	    this.props.onSwitchToDaily(datetime);
	  },
	  handleClickTwoWeeks: function() {
	    return;
	  },
	  handleDatetimeLocationChange: function(datetimeLocationEndpoints) {
	    this.setState({
	      datetimeLocation: datetimeLocationEndpoints[1],
	      title: this.getTitle(datetimeLocationEndpoints)
	    });
	    this.props.updateDatetimeLocation(this.refs.chart.getCurrentDay());
	  },
	  handleInTransition: function(inTransition) {
	    this.setState({
	      inTransition: inTransition
	    });
	  },
	  handleMostRecent: function(atMostRecent) {
	    this.setState({
	      atMostRecent: atMostRecent
	    });
	  },
	  handlePanBack: function() {
	    this.refs.chart.panBack();
	  },
	  handlePanForward: function() {
	    this.refs.chart.panForward();
	  },
	  handleSelectSMBG: function(datetime) {
	    this.props.onSwitchToDaily(datetime);
	  },
	  toggleValues: function() {
	    if (this.state.showingValues) {
	      this.refs.chart.hideValues();
	    }
	    else {
	      this.refs.chart.showValues();
	    }
	    this.setState({showingValues: !this.state.showingValues});
	  }
	});

	var WeeklyChart = React.createClass({displayName: 'WeeklyChart',
	  chartOpts: ['bgUnits'],
	  log: bows('Weekly Chart'),
	  propTypes: {
	    bgUnits: React.PropTypes.string.isRequired,
	    imagesBaseUrl: React.PropTypes.string.isRequired,
	    initialDatetimeLocation: React.PropTypes.string,
	    patientData: React.PropTypes.object.isRequired,
	    // handlers
	    onDatetimeLocationChange: React.PropTypes.func.isRequired,
	    onMostRecent: React.PropTypes.func.isRequired,
	    onClickValues: React.PropTypes.func.isRequired,
	    onSelectSMBG: React.PropTypes.func.isRequired,
	    onTransition: React.PropTypes.func.isRequired
	  },
	  componentDidMount: function() {
	    this.mountChart(this.getDOMNode());
	    this.initializeChart(this.props.patientData, this.props.initialDatetimeLocation);
	  },
	  componentWillUnmount: function() {
	    this.unmountChart();
	  },
	  mountChart: function(node, chartOpts) {
	    this.log('Mounting...');
	    chartOpts = chartOpts || {imagesBaseUrl: this.props.imagesBaseUrl};
	    this.chart = chartWeeklyFactory(node, _.assign(chartOpts, _.pick(this.props, this.chartOpts)));
	    this.bindEvents();
	  },
	  unmountChart: function() {
	    this.log('Unmounting...');
	    this.chart.destroy();
	  },
	  bindEvents: function() {
	    this.chart.emitter.on('inTransition', this.props.onTransition);
	    this.chart.emitter.on('navigated', this.handleDatetimeLocationChange);
	    this.chart.emitter.on('mostRecent', this.props.onMostRecent);
	    this.chart.emitter.on('selectSMBG', this.props.onSelectSMBG);
	  },
	  initializeChart: function(data, datetimeLocation) {
	    this.log('Initializing...');
	    if (_.isEmpty(data)) {
	      throw new Error('Cannot create new chart with no data');
	    }

	    if (datetimeLocation) {
	      this.chart.load(data, datetimeLocation);
	    }
	    else {
	      this.chart.load(data);
	    }
	  },
	  render: function() {
	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {id:"tidelineContainer"})
	      );
	    /* jshint ignore:end */
	  },
	  // handlers
	  handleDatetimeLocationChange: function(datetimeLocationEndpoints) {
	    this.setState({
	      datetimeLocation: datetimeLocationEndpoints[1]
	    });
	    this.props.onDatetimeLocationChange(datetimeLocationEndpoints);
	  },
	  getCurrentDay: function() {
	    return this.chart.getCurrentDay().toISOString();
	  },
	  goToMostRecent: function() {
	    this.chart.clear();
	    this.bindEvents();
	    this.chart.load(this.props.patientData);
	  },
	  hideValues: function() {
	    this.chart.hideValues();
	  },
	  panBack: function() {
	    this.chart.panBack();
	  },
	  panForward: function() {
	    this.chart.panForward();
	  },
	  showValues: function() {
	    this.chart.showValues();
	  }
	});

	module.exports = Weekly;


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/** @jsx React.DOM */
	var _ = window._;
	var bows = window.bows;
	var React = window.React;

	// tideline dependencies & plugins
	var tideline = window.tideline = __webpack_require__(4);
	var blip = tideline.blip = __webpack_require__(9);
	var chartSettingsFactory = blip.settings;

	var Header = __webpack_require__(7);
	var Footer = __webpack_require__(8);

	var tideline = {
	  log: bows('Settings')
	};

	var Settings = React.createClass({displayName: 'Settings',
	  chartType: 'settings',
	  log: bows('Settings View'),
	  propTypes: {
	    chartPrefs: React.PropTypes.object.isRequired,
	    patientData: React.PropTypes.object.isRequired,
	    onSwitchToDaily: React.PropTypes.func.isRequired,
	    onSwitchToSettings: React.PropTypes.func.isRequired,
	    onSwitchToWeekly: React.PropTypes.func.isRequired
	  },
	  getInitialState: function() {
	    return {
	      atMostRecent: true,
	      inTransition: false,
	      title: ''
	    };
	  },
	  render: function() {
	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {id:"tidelineMain"}, 
	        Header(
	          {chartType:this.chartType,
	          atMostRecent:true,
	          inTransition:this.state.inTransition,
	          title:this.state.title,
	          onClickMostRecent:this.handleClickMostRecent,
	          onClickOneDay:this.handleClickOneDay,
	          onClickTwoWeeks:this.handleClickTwoWeeks,
	        ref:"header"} ),
	        React.DOM.div( {id:"tidelineOuterContainer"}, 
	          SettingsChart(
	            {bgUnits:this.props.chartPrefs.bgUnits,
	            patientData:this.props.patientData,
	            ref:"chart"} )
	        ),
	        Footer(
	         {chartType:this.chartType,
	         onClickSettings:this.props.onSwitchToSettings,
	        ref:"footer"} )
	      )
	      );
	    /* jshint ignore:end */
	  },
	  // handlers
	  handleClickMostRecent: function() {
	    return;
	  },
	  handleClickOneDay: function() {
	    this.props.onSwitchToDaily();
	  },
	  handleClickTwoWeeks: function() {
	    this.props.onSwitchToWeekly();
	  }
	});

	var SettingsChart = React.createClass({displayName: 'SettingsChart',
	  chartOpts: ['bgUnits'],
	  log: bows('Settings Chart'),
	  propTypes: {
	    bgUnits: React.PropTypes.string.isRequired,
	    initialDatetimeLocation: React.PropTypes.string,
	    patientData: React.PropTypes.object.isRequired,
	  },
	  componentDidMount: function() {
	    this.mountChart(this.getDOMNode());
	    this.initializeChart(this.props.patientData);
	  },
	  componentWillUnmount: function() {
	    this.unmountChart();
	  },
	  mountChart: function(node, chartOpts) {
	    this.log('Mounting...');
	    this.chart = chartSettingsFactory(node, _.pick(this.props, this.chartOpts));
	  },
	  unmountChart: function() {
	    this.log('Unmounting...');
	    this.chart.destroy();
	  },
	  initializeChart: function(data) {
	    this.log('Initializing...');
	    if (_.isEmpty(data)) {
	      throw new Error('Cannot create new chart with no data');
	    }

	    this.chart.load(data);
	  },
	  render: function() {
	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {id:"tidelineContainer"})
	      );
	    /* jshint ignore:end */
	  }
	});

	module.exports = Settings;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	module.exports = {
	  TidelineData: __webpack_require__(10),
	  pool: __webpack_require__(11),
	  oneDay: __webpack_require__(12),
	  twoWeek: __webpack_require__(13),
	  settings: __webpack_require__(14),

	  data: {
	    BasalUtil: __webpack_require__(15),
	    BolusUtil: __webpack_require__(16),
	    BGUtil: __webpack_require__(17),
	    DeviceUtil: __webpack_require__(18),
	    SegmentUtil: __webpack_require__(19),
	    SettingsUtil: __webpack_require__(20),
	    util: {
	      datetime: __webpack_require__(21),
	      format: __webpack_require__(22),
	      TidelineCrossFilter: __webpack_require__(23),
	      Timeline: __webpack_require__(24)
	    }
	  },

	  lib: __webpack_require__(25),

	  plot: {
	    basal: __webpack_require__(26),
	    basaltab: __webpack_require__(27),
	    quickbolus: __webpack_require__(28),
	    cbg: __webpack_require__(29),
	    message: __webpack_require__(30),
	    SMBGTime: __webpack_require__(31),
	    smbg: __webpack_require__(32),
	    wizard: __webpack_require__(33),
	    stats: {
	      puddle: __webpack_require__(34),
	      widget: __webpack_require__(35)
	    },
	    util: {
	      annotations: {
	        annotation: __webpack_require__(43),
	        defs: __webpack_require__(44)
	      },
	      axes: {
	        dailyx: __webpack_require__(45)
	      },
	      tooltips: {
	        shapes: __webpack_require__(46),
	        Tooltips: __webpack_require__(47)
	      },
	      bgboundary: __webpack_require__(36),
	      fill: __webpack_require__(37),
	      shadow: __webpack_require__(38),
	      legend: __webpack_require__(39),
	      scales: __webpack_require__(40),
	      shapeutil: __webpack_require__(41),
	      drawbolus: __webpack_require__(42)
	    }
	  }
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var tideline = window.tideline;
	var watson = tideline.watson = __webpack_require__(48);
	var _ = tideline.lib._;
	var TidelineData = tideline.TidelineData;
	var SegmentUtil = tideline.data.SegmentUtil;
	var datetime = tideline.data.util.datetime;

	var log = tideline.lib.bows('Preprocess');

	function alwaysTrue() {
	  return true;
	}

	function notZero(e) {
	  return e.value !== 0;
	}

	function withTiming(name, fn) {
	  var now = Date.now();
	  var retVal = fn.apply(null, Array.prototype.slice.call(arguments, 2));
	  log(name + ' completed in ' + (Date.now() - now) + ' millis. ');
	  return retVal;
	}

	/**
	 * This converts suspend start and end events into basal-rate-segments for the visualization
	 *
	 * @param data Array of data, assumed to be only deviceMeta events.
	 * @returns {Array} modified array of data to have basal-rate-segments for suspend start and end events.
	 */
	function processSuspends(data) {
	  data = _.sortBy(data, 'deviceTime');

	  var retVal = [];
	  var suspends = {};

	  for (var i = 0; i < data.length; ++i) {
	    if (data[i].subType === 'status') {
	      switch (data[i].status) {
	        case 'suspended':
	          suspends[data[i].id] = data[i];
	          break;
	        case 'resumed':
	        case 'resume': // 2014-05-06: Non past-tense should be removed.  If this still exists in June, please remove
	          if (data[i].joinKey == null) {
	            retVal.push(data[i]);
	          } else {
	            var suspended = suspends[data[i].joinKey];

	            if (suspended == null) {
	              retVal.push(data[i]);
	            } else {
	              retVal.push(
	                _.assign({}, suspended,
	                {
	                  id: suspended.id + '_' + data[i].id,
	                  type: 'basal-rate-segment',
	                  start: suspended.deviceTime,
	                  end: data[i].deviceTime,
	                  deliveryType: 'suspend',
	                  value: 0
	                }
	                )
	              );
	              delete suspends[data[i].joinKey];
	            }
	          }
	          break;
	        default:
	          retVal.push(data[i]);
	      }
	    } else {
	      retVal.push(data[i]);
	    }
	  }

	  return retVal.concat(Object.keys(suspends).map(function(key){ return suspends[key]; }));
	}

	var TYPES_TO_INCLUDE = {
	  // basals with value 0 don't get excluded because they are legitimate targets for visualization
	  'basal-rate-segment': function(e){ return e.start !== e.end; },
	  basal: alwaysTrue,
	  bolus: notZero,
	  cbg: notZero,
	  deviceMeta: alwaysTrue,
	  message: notZero,
	  smbg: notZero,
	  wizard: notZero,
	  settings: notZero
	};

	var preprocess = {

	  REQUIRED_TYPES: ['basal-rate-segment', 'bolus', 'wizard', 'cbg', 'message', 'smbg', 'settings'],

	  OPTIONAL_TYPES: [],

	  MMOL_STRING: 'mmol/L',

	  MGDL_STRING: 'mg/dL',

	  MMOL_TO_MGDL: 18.01559,

	  mungeBasals: function(data) {
	    var segments = new SegmentUtil(data);
	    data = _.reject(data, function(d) {
	      return d.type === 'basal-rate-segment';
	    });
	    if (segments.timeline.length === 0) {
	      return _.map(data, function(d) {
	        if (d.type === 'basal') {
	          d.type = 'basal-rate-segment';
	        }
	        return d;
	      });
	    } else {
	      return data.concat(segments.timeline);
	    }
	  },

	  editBoluses: function(data) {
	    // two adjustments to boluses here:
	    // changed `extended` to false when extendedDelivery = 0
	    // (these are instances where someone changed their mind about a combo bolus, basically)
	    // ~and~
	    // when there is a joinKey to a wizard event from which we can obtain
	    // the recommendation for a bolus, extract it to populate the `recommended` field
	    var wizards = _.indexBy(data, function(d) {
	      if (d.type === 'wizard') {
	        return d.joinKey;
	      }
	    });
	    return _.map(data, function(d) {
	      if (d.type === 'bolus' && d.joinKey != null) {
	        var joined = wizards[d.joinKey];
	        if (joined && joined.payload.estimate != null) {
	          d.recommended = joined.payload.estimate;
	        }
	        return d;
	      }
	      if (d.extended && d.extendedDelivery === 0) {
	        d.extended = false;
	        return d;
	      }
	      else {
	        return d;
	      }
	    });
	  },

	  filterData: function(data) {
	    // filter out types we aren't using for visualization
	    //  ~and~
	    // because of how the Tidepool back end parses some data sources
	    // we're creating things like carb events with values of 0, which
	    // we don't want to visualize, so...
	    // this function also removes all data with value 0 except for basals, since
	    // we do want to visualize basals (e.g., temps) with value 0.0

	    var counts = {};

	    function incrementCount(count, type) {
	      if (counts[count] == null) {
	        counts[count] = {};
	      }

	      if (counts[count][type] == null) {
	        counts[count][type] = 0;
	      }

	      ++counts[count][type];
	    }

	    var nonZeroData = _.filter(data, function(d) {
	      var includeFn = TYPES_TO_INCLUDE[d.type];
	      if (includeFn == null) {
	        incrementCount('excluded', d.type);
	        return false;
	      }

	      var retVal = includeFn(d);
	      incrementCount(retVal ? 'included' : 'excluded', d.type);
	      return retVal;
	    });

	    log('Excluded:', counts.excluded || 0);
	    log('# of data points', nonZeroData.length);
	    log('Data types:', counts.included);

	    return nonZeroData;
	  },

	  processDeviceMeta: function(data) {
	    var other = [];
	    var deviceMeta = [];

	    for (var i = 0; i < data.length; ++i) {
	      if (data[i].type === 'deviceMeta') {
	        deviceMeta.push(data[i]);
	      } else {
	        other.push(data[i]);
	      }
	    }

	    return other.concat(processSuspends(deviceMeta));
	  },

	  runWatson: function(data) {
	    data = watson.normalizeAll(data);
	    // Ensure the data is properly sorted
	    data = _.sortBy(data, function(d) {
	      // ISO8601 format lexicographically sorts according to timestamp
	      return d.normalTime;
	    });
	    return data;
	  },

	  checkRequired: function(tidelineData) {
	    _.forEach(this.REQUIRED_TYPES, function(type) {
	      if (!tidelineData.grouped[type]) {
	        log('No', type, 'data! Replaced with empty array.');
	        tidelineData.grouped[type] = [];
	      }
	    });

	    return tidelineData;
	  },

	  translateMmol: function(data) {
	    return _.map(data, function(d) {
	      if (d.units === this.MMOL_STRING) {
	        d.units = this.MGDL_STRING;
	        d.value = parseInt(Math.round(d.value * this.MMOL_TO_MGDL, 10));
	      }
	      return d;
	    }, this);
	  },

	  basalSchedulesToArray: function(basalSchedules) {
	    var schedules = [];
	    for(var key in basalSchedules) {
	      schedules.push({
	        'name': key,
	        'value': basalSchedules[key]
	      });
	    }
	    return schedules;
	  },

	  sortBasalSchedules: function(data) {
	    return _.map(data, function(d) {
	      var schedules;
	      if (d.type === 'settings') {
	        schedules = this.basalSchedulesToArray(d.basalSchedules);
	        if (d.source === 'carelink') {
	          for (var i = 0; i < schedules.length; ++i) {
	            if (schedules[i].name.toLowerCase() === 'standard') {
	              var standard = schedules[i];
	              var index = schedules.indexOf(standard);
	              schedules.splice(index, 1);
	              schedules = _.sortBy(schedules, function(d) { return d.name; });
	              schedules.unshift(standard);
	              break;
	            }
	          }
	        }
	        d.basalSchedules = schedules;
	        return d;
	      }
	      else {
	        return d;
	      }
	    }, this);
	  },

	  appendBolusToWizard: function(data) {
	    if (!(data && data.length)) {
	      log('Unexpected data input, defaulting to empty array.');
	      data = [];
	    }
	    return _.filter(data, function(d) {
	      // TODO: remove copying from payload when new data model
	      // shim for Carelink and universal uploader data
	      if ((d.type === 'wizard' && d.joinKey) || (d.type === 'wizard' && d.bolus)) {
	        if (d.payload.carbInput) {
	          d.carbs = {
	            value: d.payload.carbInput
	          };
	        }
	        if (d.bolus) {
	          // shim for universal uploader
	          d.joinKey = d.bolus;
	          d.bolus = _.find(data, function(_d) {
	            return _d.type === 'bolus' && _d.id === d.joinKey;
	          });
	        }
	        else {
	          d.bolus = _.find(data, function(_d) {
	            return _d.type === 'bolus' && _d.joinKey === d.joinKey;
	          });
	        }

	        //clean undefined
	        if (!d.bolus) {
	          delete d.bolus;
	          return false;
	        }
	        return true;
	      }
	      else {
	        return true;
	      }
	    });
	  },

	  processData: function(data) {
	    if (!(data && data.length)) {
	      log('Unexpected data input, defaulting to empty array.');
	      data = [];
	    }

	    data = withTiming('editBoluses', this.editBoluses.bind(this), data);
	    data = withTiming('filterData', this.filterData.bind(this), data);
	    data = withTiming('processDeviceMeta', this.processDeviceMeta.bind(this), data);
	    data = withTiming('mungeBasals', this.mungeBasals.bind(this), data);
	    data = withTiming('runWatson', this.runWatson.bind(this), data);
	    data = withTiming('translateMmol', this.translateMmol.bind(this), data);
	    data = withTiming('sortBasalSchedules', this.sortBasalSchedules.bind(this), data);
	    data = withTiming('appendBolusToWizard', this.appendBolusToWizard.bind(this), data);

	    var tidelineData = this.checkRequired(new TidelineData(data));

	    return tidelineData;
	  }
	};

	module.exports = preprocess;


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = [
		{
			"deviceTime": "2014-08-04T14:50:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fea76a6a-1ee8-47bd-863e-7c874ee6e13b"
		},
		{
			"deviceTime": "2014-08-04T14:55:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39887417-8e9c-4cfa-afbf-c329f550b38f"
		},
		{
			"deviceTime": "2014-08-04T15:00:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63fa8046-10d3-4a21-b3ff-4065a1cb74fc"
		},
		{
			"deviceTime": "2014-08-04T15:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14a1eb6b-49d6-41f8-aca6-a91b3f11933b"
		},
		{
			"deviceTime": "2014-08-04T15:10:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae287aaf-252f-417a-8191-aa5de87ba1e8"
		},
		{
			"deviceTime": "2014-08-04T15:15:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6481a8cb-7436-40d7-9cf3-53cc13a49563"
		},
		{
			"deviceTime": "2014-08-04T15:20:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53c56e64-a0c6-4b4a-84d4-af05e772da53"
		},
		{
			"deviceTime": "2014-08-04T15:25:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce05be31-6624-46f7-98f5-5b54c217ad63"
		},
		{
			"deviceTime": "2014-08-04T15:30:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd13f1d2-c5fe-4e00-ac2e-da12a8ec3e3e"
		},
		{
			"deviceTime": "2014-08-04T15:35:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46316e64-b01a-4786-bbc2-2293f9381cf7"
		},
		{
			"deviceTime": "2014-08-04T15:40:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b3b01c8-7d3a-4247-bb2c-abdcd952c665"
		},
		{
			"deviceTime": "2014-08-04T15:45:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62353d38-be90-4c1d-977a-3b7fadbd5b7c"
		},
		{
			"deviceTime": "2014-08-04T15:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2708641-05b7-4852-8749-05283592ee9e"
		},
		{
			"deviceTime": "2014-08-04T15:55:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88e07565-bbd3-451d-8d56-1a66e3d91886"
		},
		{
			"deviceTime": "2014-08-04T16:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c60eb1a-ad71-423b-8ba8-9b225d33b55c"
		},
		{
			"deviceTime": "2014-08-04T16:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0611ad9c-0c23-45ce-806c-ca554a33f26e"
		},
		{
			"deviceTime": "2014-08-04T16:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96cbeaf5-fd2d-4146-a904-d528c3ce8564"
		},
		{
			"deviceTime": "2014-08-04T16:15:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53195a53-1c14-4402-aff1-b382465e810d"
		},
		{
			"deviceTime": "2014-08-04T16:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a219f196-e2f3-4393-a6f6-b7f8f158af35"
		},
		{
			"deviceTime": "2014-08-04T16:25:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f6e1cd5-018a-4db4-b895-7126f3f78860"
		},
		{
			"deviceTime": "2014-08-04T16:30:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f435b05b-7df8-45b3-b85b-f85a829d0bcf"
		},
		{
			"deviceTime": "2014-08-04T16:35:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60534d93-732a-4830-837b-a303e2b2a75c"
		},
		{
			"deviceTime": "2014-08-04T16:40:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07b37dc7-3382-4834-9563-43d90e20d8ce"
		},
		{
			"deviceTime": "2014-08-04T16:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d63751da-5000-42ef-84a0-f0a41bbe5c7a"
		},
		{
			"deviceTime": "2014-08-04T16:50:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da0c4693-eced-4ea2-8235-6c945f41cbe9"
		},
		{
			"deviceTime": "2014-08-04T16:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8f7d052-988d-4668-aa36-fbcb97365060"
		},
		{
			"deviceTime": "2014-08-04T17:00:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c77034ea-4699-4e4f-a06d-f00e21500de4"
		},
		{
			"deviceTime": "2014-08-04T17:05:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2dccb1b7-9417-4945-b514-fa872d7ced48"
		},
		{
			"deviceTime": "2014-08-04T17:10:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e5298eb-d41b-47b1-af82-545b7db989af"
		},
		{
			"deviceTime": "2014-08-04T17:15:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9ef0722-c926-47e0-8c90-05c257984c29"
		},
		{
			"deviceTime": "2014-08-04T17:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e240fe04-1c53-4171-b0c7-0616c241578e"
		},
		{
			"deviceTime": "2014-08-04T17:22:01",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4b60ba8e-5c46-4e63-8239-f320b79f84fc"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-04T20:00:00",
			"start": "2014-08-04T17:22:01",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 9479000,
			"type": "basal-rate-segment",
			"id": "994e89be-eeb9-4d52-96dd-5a69e86efa28"
		},
		{
			"deviceTime": "2014-08-04T17:22:01",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "94a568f7-5e91-46bf-82db-29d1dcf1cadd"
		},
		{
			"deviceTime": "2014-08-04T17:22:01",
			"id": "94a568f7-5e91-46bf-82db-29d1dcf1cadd",
			"source": "demo",
			"joinKey": "6119bfd7-d9f9-4497-9357-42a37a7480cd",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 60
			}
		},
		{
			"deviceTime": "2014-08-04T17:22:01",
			"programmed": 4,
			"joinKey": "6119bfd7-d9f9-4497-9357-42a37a7480cd",
			"value": 4,
			"source": "demo",
			"recommended": 4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "7ab7dd46-eb5f-4cfd-8695-3e3ae9fb3f0e"
		},
		{
			"deviceTime": "2014-08-04T17:25:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4620e151-5aba-4c08-9afb-8334f8ce3f91"
		},
		{
			"deviceTime": "2014-08-04T17:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49653b9e-debb-4c4c-8b40-24b1faa35805"
		},
		{
			"deviceTime": "2014-08-04T17:35:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b2329bc-9dbf-4af8-a435-79fe7d37c174"
		},
		{
			"deviceTime": "2014-08-04T17:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6cd534a-fbec-47dd-a1ee-aa6b0d672d6e"
		},
		{
			"deviceTime": "2014-08-04T17:45:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e66a39a6-fb52-4e68-8b5e-6dd87740b9eb"
		},
		{
			"deviceTime": "2014-08-04T17:50:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89a7cf26-00ff-43c6-9470-3a30da6f7e94"
		},
		{
			"deviceTime": "2014-08-04T17:55:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38d769cc-3a40-47fa-b7f3-a82d21e2d21e"
		},
		{
			"deviceTime": "2014-08-04T18:00:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d706a889-28a2-46a5-9dba-a1c678a65085"
		},
		{
			"deviceTime": "2014-08-04T18:05:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a87ab17-4975-4257-8070-f06a515a26ab"
		},
		{
			"deviceTime": "2014-08-04T18:10:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e95bd5f-7090-493a-8da0-ffd63ec8205a"
		},
		{
			"deviceTime": "2014-08-04T18:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f384af4-e0de-4b30-b97e-cc98ac081861"
		},
		{
			"deviceTime": "2014-08-04T18:20:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a79c0f3f-97be-4d44-a5cb-d5efe1dfb70f"
		},
		{
			"deviceTime": "2014-08-04T18:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ff2afd3-daf1-4a80-b740-fce631a9355c"
		},
		{
			"deviceTime": "2014-08-04T18:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0928b4ac-b05a-41c3-b84c-1388e5060fb7"
		},
		{
			"deviceTime": "2014-08-04T18:35:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "685fb75b-d027-4567-8248-fb1aad065c0f"
		},
		{
			"deviceTime": "2014-08-04T18:40:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bd4a5cb-0fb3-41f6-8f95-d3dfa47cbfff"
		},
		{
			"deviceTime": "2014-08-04T18:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60546148-f886-4200-8ad7-1c7d6134db45"
		},
		{
			"deviceTime": "2014-08-04T18:50:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "335c915c-57c3-4704-8ede-65b26b5c7368"
		},
		{
			"deviceTime": "2014-08-04T18:55:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "753d74de-3225-4b9c-95a8-e75f59770160"
		},
		{
			"deviceTime": "2014-08-04T19:00:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b4391fb-f663-4930-b993-d40b2bb70c8c"
		},
		{
			"deviceTime": "2014-08-04T19:05:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cc60169-6b0d-4c88-bbf3-dd3f4b775479"
		},
		{
			"deviceTime": "2014-08-04T19:10:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4f96ec1-1a53-459d-b94b-8d0871dd80b5"
		},
		{
			"deviceTime": "2014-08-04T19:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59010ef8-445c-4e05-9e89-db26a63ef363"
		},
		{
			"deviceTime": "2014-08-04T19:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77dd7ca4-c34d-4cad-84c2-23e3dc48fd9e"
		},
		{
			"deviceTime": "2014-08-04T19:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6e9a09d-d5ff-44f8-9909-30cce401b849"
		},
		{
			"deviceTime": "2014-08-04T19:30:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e9e021f-e38f-4b6a-bd48-f5ec1f088ee6"
		},
		{
			"deviceTime": "2014-08-04T19:35:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5122365-0808-4173-83f3-ac6e0080feb0"
		},
		{
			"deviceTime": "2014-08-04T19:40:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "304224c4-c28e-4c92-b0e1-2a96b8914169"
		},
		{
			"deviceTime": "2014-08-04T19:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e09d9344-3fbb-4867-8a39-2f8446d7008c"
		},
		{
			"deviceTime": "2014-08-04T19:50:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d25ef899-500f-4335-8aec-cc598d828181"
		},
		{
			"deviceTime": "2014-08-04T19:55:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b102335-9c63-4196-bf8d-2ba87710bafb"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-05T00:00:00",
			"start": "2014-08-04T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "dc97cf45-500e-4248-adef-69e12ea0245e"
		},
		{
			"deviceTime": "2014-08-04T20:00:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b656eac6-3ede-4fc4-a7ad-a480d29fbc10"
		},
		{
			"deviceTime": "2014-08-04T20:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a776d6b5-51ef-4170-b126-09f4915a70f0"
		},
		{
			"deviceTime": "2014-08-04T20:10:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08938689-24a6-455c-9265-526da73705c2"
		},
		{
			"deviceTime": "2014-08-04T20:15:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79d08f5d-58f4-4d45-a9a5-5fdb7c664c26"
		},
		{
			"deviceTime": "2014-08-04T20:20:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2a8efdf-1347-45c9-94d5-3a0ca1e3b6da"
		},
		{
			"deviceTime": "2014-08-04T20:25:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "507be1c3-44a8-4c78-90c9-fa6511cd377e"
		},
		{
			"messageText": "Pork loin t-bone adipisicing nostrud cillum. Pastrami dolore flank shank deserunt capicola tri-tip ex.",
			"parentMessage": "",
			"utcTime": "2014-08-04T20:26:29Z",
			"type": "message",
			"id": "566f18e9-30fe-4c54-bac1-b8aa9aa3b4e7"
		},
		{
			"deviceTime": "2014-08-04T20:30:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e2c2fbe-47e7-49fe-9ac0-950a5bbe7818"
		},
		{
			"messageText": "Incididunt non ribeye, in kielbasa aliqua fatback et tenderloin cupidatat.",
			"parentMessage": "566f18e9-30fe-4c54-bac1-b8aa9aa3b4e7",
			"utcTime": "2014-08-04T20:32:29Z",
			"type": "message",
			"id": "fedc0e4f-6af2-4afe-9dc2-547e2801fb9c"
		},
		{
			"deviceTime": "2014-08-04T20:35:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70aff8ed-3e16-4f7b-b097-b01b35c5e973"
		},
		{
			"deviceTime": "2014-08-04T20:40:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfe53519-552c-49f1-a28b-29e727d5a1a0"
		},
		{
			"deviceTime": "2014-08-04T20:45:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6e8b3d6-e92a-480d-afe2-18ccde521572"
		},
		{
			"deviceTime": "2014-08-04T20:50:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a8cf8ea-68f6-453b-b49e-573fa56aa8d6"
		},
		{
			"deviceTime": "2014-08-04T20:55:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25ff7ea0-9129-4784-b604-0059d89701b5"
		},
		{
			"messageText": "Ribeye id adipisicing pig, short loin exercitation cupidatat in magna ullamco. Drumstick shankle quis, qui dolore culpa prosciutto commodo enim chicken do shoulder pork. Prosciutto sirloin ball tip, proident irure sint fugiat shankle elit exercitation mollit enim turducken in pork loin.",
			"parentMessage": "566f18e9-30fe-4c54-bac1-b8aa9aa3b4e7",
			"utcTime": "2014-08-04T20:56:29Z",
			"type": "message",
			"id": "8e3ebb67-bd0b-4c5f-bb4e-dbc810a41d41"
		},
		{
			"deviceTime": "2014-08-04T21:00:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e6cc47a-91c1-4566-a739-7de2efa824bf"
		},
		{
			"deviceTime": "2014-08-04T21:05:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "048ce20f-1806-47b6-b7a1-081e036ed062"
		},
		{
			"deviceTime": "2014-08-04T21:10:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7c72653-93eb-4fbd-b4d6-99d5f19a78a0"
		},
		{
			"deviceTime": "2014-08-04T21:15:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46e5bca3-24a5-437c-9033-1dd8d11680b0"
		},
		{
			"messageText": "Doner quis prosciutto shoulder, biltong ea proident aliquip spare ribs pork loin. Minim swine short loin hamburger t-bone boudin flank tenderloin rump excepteur turducken nostrud esse meatball dolore. Tenderloin ground round kevin veniam, meatball pork belly et venison anim leberkas chicken chuck minim sed.",
			"parentMessage": "566f18e9-30fe-4c54-bac1-b8aa9aa3b4e7",
			"utcTime": "2014-08-04T21:19:29Z",
			"type": "message",
			"id": "ef6aadf1-a900-431d-966c-859c77f3e245"
		},
		{
			"deviceTime": "2014-08-04T21:20:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d183cbb6-4fa3-45fb-a103-36d3eee943c9"
		},
		{
			"deviceTime": "2014-08-04T21:25:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae48faf1-5a2a-45b7-9faa-3097b4044cb6"
		},
		{
			"deviceTime": "2014-08-04T21:30:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a7fe51a-20e4-45b3-949d-a678d5024147"
		},
		{
			"deviceTime": "2014-08-04T21:35:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "484c05bd-8999-4984-9735-4b81ffb6ef9e"
		},
		{
			"deviceTime": "2014-08-04T21:40:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72ebc9bb-7d2b-43c8-ae5a-98da434a12fb"
		},
		{
			"deviceTime": "2014-08-04T21:45:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e20fbf30-fc8f-4320-94d7-444fb8d13b4e"
		},
		{
			"deviceTime": "2014-08-04T21:50:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3958ce7-0a53-43fa-a784-9e8e26cc24e9"
		},
		{
			"deviceTime": "2014-08-04T21:55:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c47be704-6b84-4323-a22a-39149231afd3"
		},
		{
			"deviceTime": "2014-08-04T22:00:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2ce5723-bda9-4b86-9fef-17db836eee69"
		},
		{
			"deviceTime": "2014-08-04T22:05:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a5bdc01-18a0-47b3-af6a-43216a88c7ce"
		},
		{
			"deviceTime": "2014-08-04T22:10:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e8db80e-6b4b-48ee-87f2-01e3d567ef25"
		},
		{
			"deviceTime": "2014-08-04T22:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f3adc2e-f621-43d3-8f94-618db04b4236"
		},
		{
			"deviceTime": "2014-08-04T22:20:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dddfc14d-24bf-424f-b7a8-bd9342b3ad57"
		},
		{
			"deviceTime": "2014-08-04T22:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e46c61b8-3a48-446a-9a91-1d20be46a2d8"
		},
		{
			"deviceTime": "2014-08-04T22:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f090f528-5042-4ec2-a0ca-89e5e8cb83ca"
		},
		{
			"deviceTime": "2014-08-04T22:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8aa01a78-9ce0-4d26-bd65-db9876ac8f81"
		},
		{
			"deviceTime": "2014-08-04T22:40:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8ba50b6-72f5-4b52-8c34-20379ecd5849"
		},
		{
			"deviceTime": "2014-08-04T22:45:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "221a62ef-eb14-4016-8194-b375191a2179"
		},
		{
			"deviceTime": "2014-08-04T22:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40079f0a-5fe5-4f30-8db5-0f7b5214cedd"
		},
		{
			"deviceTime": "2014-08-04T22:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69223887-874d-4c1f-b49a-1e7b6bc4c3cf"
		},
		{
			"deviceTime": "2014-08-04T23:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0c8519a-90ff-4188-a211-e1b0e9aa4c6e"
		},
		{
			"deviceTime": "2014-08-04T23:05:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d933d34-006e-4291-838f-f6b0b619c3ab"
		},
		{
			"deviceTime": "2014-08-04T23:10:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4ffd44a-dbf7-413d-a9e7-a7f05e9dbb1f"
		},
		{
			"deviceTime": "2014-08-04T23:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd6c6fb3-5c01-4603-9388-379b8a2361f3"
		},
		{
			"deviceTime": "2014-08-04T23:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cab2ac26-9c29-490c-802d-0e146b27db67"
		},
		{
			"deviceTime": "2014-08-04T23:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f41ea1f-52f0-42f7-88ed-534de4620aa6"
		},
		{
			"deviceTime": "2014-08-04T23:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e9a6e6a-80be-49c5-9c47-271058ad1a06"
		},
		{
			"deviceTime": "2014-08-04T23:35:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a18c6246-b131-4687-8502-7877cc4cc779"
		},
		{
			"deviceTime": "2014-08-04T23:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13145464-7e06-4a7c-9e8d-87ae3e15ff1d"
		},
		{
			"deviceTime": "2014-08-04T23:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b2ac223-4924-4b2d-a7e5-85413df24779"
		},
		{
			"deviceTime": "2014-08-04T23:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3083a406-689e-4df4-a9a7-a07644d9c44c"
		},
		{
			"deviceTime": "2014-08-04T23:55:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cb610cf-0411-4a84-ab28-6cb06a010367"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-05T02:00:00",
			"start": "2014-08-05T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "428e0967-642e-4f0b-8019-a69084f6f14b"
		},
		{
			"deviceTime": "2014-08-05T00:00:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a89e4472-1cde-40fe-aaae-7ac381b46ef4"
		},
		{
			"deviceTime": "2014-08-05T00:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe09902a-9e47-4d01-9347-d1f6e3347a61"
		},
		{
			"deviceTime": "2014-08-05T00:10:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66080ad2-7361-452e-858d-492e9b144a63"
		},
		{
			"deviceTime": "2014-08-05T00:15:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30de3c0b-2770-4992-ac78-6a1484b46c86"
		},
		{
			"deviceTime": "2014-08-05T00:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ce19c64-2ddc-4f22-a35f-3adbef3d6f6e"
		},
		{
			"deviceTime": "2014-08-05T00:25:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a233919-6f8a-491f-8631-f4dffb9b52d1"
		},
		{
			"deviceTime": "2014-08-05T00:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eb73e98-50ef-42af-852b-d06869e5210d"
		},
		{
			"deviceTime": "2014-08-05T00:35:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f11c9c0a-170c-41da-bd2d-c5a6fac2cd0e"
		},
		{
			"deviceTime": "2014-08-05T00:40:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26565c32-b69a-41dc-9fb1-a132f8aa6874"
		},
		{
			"deviceTime": "2014-08-05T00:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee9cb9f9-04bc-4fad-830a-0b1599a3ecda"
		},
		{
			"deviceTime": "2014-08-05T00:50:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50cbdfaf-2117-4185-bd1e-e96f664f7c22"
		},
		{
			"deviceTime": "2014-08-05T00:55:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bdf601e-778d-4a16-8d34-34630b993a88"
		},
		{
			"deviceTime": "2014-08-05T01:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ead269c-cca6-4c84-8ade-274d819559c5"
		},
		{
			"deviceTime": "2014-08-05T01:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec2e03eb-877a-40ec-8d98-dbd4dbbc7ad1"
		},
		{
			"deviceTime": "2014-08-05T01:35:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01230e1f-5c57-4064-9bce-40e7e4c32365"
		},
		{
			"deviceTime": "2014-08-05T01:40:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0317915-3515-47b4-aa43-8f6ca279f168"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-05T04:00:00",
			"start": "2014-08-05T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "a59b35c2-8d4a-4b89-8b83-f1ba93c77c09"
		},
		{
			"deviceTime": "2014-08-05T02:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95e637c0-b7cf-49a6-bea7-16e51b046554"
		},
		{
			"deviceTime": "2014-08-05T02:05:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73c10c89-aac2-489e-88ea-c87db788b65e"
		},
		{
			"deviceTime": "2014-08-05T02:10:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9bde5e84-073f-43f3-9bf2-0bf89c4e8e60"
		},
		{
			"deviceTime": "2014-08-05T02:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7e54e2d-95ec-42aa-9793-e0ef696947d6"
		},
		{
			"deviceTime": "2014-08-05T02:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a3a4eaf-7bb2-4d26-97b1-d9d84a4299b2"
		},
		{
			"deviceTime": "2014-08-05T02:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "895944df-a628-4bb3-859c-c3e310dde5e3"
		},
		{
			"deviceTime": "2014-08-05T02:30:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f89b908-623d-45cf-b0b2-8cce5cda54e8"
		},
		{
			"end": "2014-08-05T04:34:01",
			"start": "2014-08-05T02:34:01",
			"percent": 1.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "1dc6feee-3186-4553-8b36-9368e166539c"
		},
		{
			"deviceTime": "2014-08-05T02:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50273084-4b88-4fbf-82a1-bf186153cddd"
		},
		{
			"deviceTime": "2014-08-05T02:40:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f87aa803-9e29-4fee-9baa-0b23bb18e433"
		},
		{
			"deviceTime": "2014-08-05T02:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc82395d-d71c-4c07-b076-8d7a71b42dcc"
		},
		{
			"deviceTime": "2014-08-05T02:50:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a55b4c2-f7d2-4260-bc25-ba14200a2118"
		},
		{
			"deviceTime": "2014-08-05T03:15:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9d78894-d386-40cb-922a-0074aea582d8"
		},
		{
			"deviceTime": "2014-08-05T03:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a841cba-bfaa-4053-9b83-f75b464035af"
		},
		{
			"deviceTime": "2014-08-05T03:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b0d9873-19b4-450e-9677-a8c91be43c0d"
		},
		{
			"deviceTime": "2014-08-05T03:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51b480c2-feba-4d13-a5aa-48765f037196"
		},
		{
			"deviceTime": "2014-08-05T03:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1486f39-1cb6-4177-b543-8ccf6e60acd1"
		},
		{
			"deviceTime": "2014-08-05T03:40:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee9c343e-e236-4fd4-9834-cc314bcb26d2"
		},
		{
			"deviceTime": "2014-08-05T03:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87939a56-8dcd-47e1-8f19-b5e349cd44ca"
		},
		{
			"deviceTime": "2014-08-05T03:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e2aa0e3-d1a6-4bf6-bc72-f33d1ae43ed9"
		},
		{
			"deviceTime": "2014-08-05T03:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14e44dd3-eacc-45f4-9f6b-c54a2cb0b312"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-05T05:00:00",
			"start": "2014-08-05T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "abbda62d-53a6-47b8-a423-d52b4821bcbc"
		},
		{
			"deviceTime": "2014-08-05T04:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c644110e-61d7-4c03-a7d0-0718a9db2e86"
		},
		{
			"deviceTime": "2014-08-05T04:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7ed14af-1b94-4220-b15c-06d66f97a86f"
		},
		{
			"deviceTime": "2014-08-05T04:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0447e6a-1d86-4c74-bf9a-864a4bf993a4"
		},
		{
			"deviceTime": "2014-08-05T04:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b872e775-97a0-4248-bc85-2e46034a84fd"
		},
		{
			"deviceTime": "2014-08-05T04:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17423abe-c689-4eb8-a392-8d200875fd18"
		},
		{
			"deviceTime": "2014-08-05T04:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf34d4dd-ba50-44eb-b34d-177a4b115299"
		},
		{
			"deviceTime": "2014-08-05T04:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92dc3cd2-10f1-4b53-9715-50bda8bf7255"
		},
		{
			"deviceTime": "2014-08-05T04:35:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d5fd16f-4ed7-42fc-b30c-63c602531cda"
		},
		{
			"deviceTime": "2014-08-05T04:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3923dc3-465a-4282-ae73-3324ce6aeec0"
		},
		{
			"deviceTime": "2014-08-05T04:45:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33791c5d-e335-4cc6-9835-78c8f8575687"
		},
		{
			"deviceTime": "2014-08-05T04:50:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53f225b6-c8c5-4c55-a0fd-4a4532944001"
		},
		{
			"deviceTime": "2014-08-05T04:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e49a2589-b1f1-4f7f-807b-b7ca0a2f8912"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-05T06:00:00",
			"start": "2014-08-05T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "0a472d94-c3b3-449a-b110-0c93be472e6c"
		},
		{
			"deviceTime": "2014-08-05T05:00:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a14d8798-7c7b-4c8a-8330-fb86c2cc1b7e"
		},
		{
			"deviceTime": "2014-08-05T05:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be5e56a4-b89a-4b4f-9378-1378336f9891"
		},
		{
			"deviceTime": "2014-08-05T05:26:01",
			"value": 4.8,
			"source": "demo",
			"recommended": 3.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b7fdbd12-98fb-43f0-85b9-20a0b4d83dd3"
		},
		{
			"deviceTime": "2014-08-05T05:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23271657-79dd-4d26-8996-f120ce88d5b9"
		},
		{
			"deviceTime": "2014-08-05T05:45:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6553c16-81e1-4987-b990-23197566e463"
		},
		{
			"deviceTime": "2014-08-05T05:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66547f94-8422-4238-a67c-ef96d0cff794"
		},
		{
			"deviceTime": "2014-08-05T05:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb9278b8-6d73-4b3e-a79a-1464ad338fa1"
		},
		{
			"delivered": 1,
			"end": "2014-08-05T09:00:00",
			"start": "2014-08-05T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "841f3530-179b-48da-a6be-c936bd9b4640"
		},
		{
			"deviceTime": "2014-08-05T06:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d63d07c-5d47-45f6-a095-5c1376e35c7a"
		},
		{
			"deviceTime": "2014-08-05T06:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9b0e8b3-3f9e-440f-9056-5459270fdf48"
		},
		{
			"deviceTime": "2014-08-05T06:10:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "085e5ec9-55fc-4d15-8222-b24af560e454"
		},
		{
			"deviceTime": "2014-08-05T06:15:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "536d4000-a5b2-4d8b-9c6f-f05523be7d4f"
		},
		{
			"deviceTime": "2014-08-05T06:20:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ead7f235-7384-41af-8f3f-7bcdafa68e0b"
		},
		{
			"deviceTime": "2014-08-05T06:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f61cb079-b5f2-4722-a59a-5d7a8b2904c8"
		},
		{
			"deviceTime": "2014-08-05T06:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93cec416-81f6-44f9-b76c-32a3cf722f0a"
		},
		{
			"deviceTime": "2014-08-05T07:00:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0404ad8-2ca3-40d5-ae52-d5ab9b4e42c7"
		},
		{
			"deviceTime": "2014-08-05T07:04:55",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b0808301-1bd3-4a63-98a8-d6c30e3d2203"
		},
		{
			"deviceTime": "2014-08-05T07:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5177a9fc-8a89-40f3-abc3-793a86a29d3b"
		},
		{
			"deviceTime": "2014-08-05T07:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "806a29b8-635e-4344-b05f-e916efdfce07"
		},
		{
			"deviceTime": "2014-08-05T07:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57d1badd-112b-4190-b448-14c79f91c591"
		},
		{
			"deviceTime": "2014-08-05T07:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "762071ef-5d28-4d6a-aef5-bdf3ce41ab54"
		},
		{
			"deviceTime": "2014-08-05T07:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4091c5eb-9916-4b27-96b8-80da8b6bbfbb"
		},
		{
			"deviceTime": "2014-08-05T07:30:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c39dc8b-c529-4139-9a17-4a876fd96560"
		},
		{
			"deviceTime": "2014-08-05T07:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f9d70c8-8a82-4621-8484-a2a41f350c48"
		},
		{
			"deviceTime": "2014-08-05T07:40:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "866def30-a80b-4b37-89a2-20b7a23c149a"
		},
		{
			"deviceTime": "2014-08-05T07:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54508ce3-10e4-496e-8020-4d1295ccaa1b"
		},
		{
			"deviceTime": "2014-08-05T07:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d34c455-521f-4fac-9320-79c11dca6753"
		},
		{
			"deviceTime": "2014-08-05T07:55:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8099fd3-242c-4dd6-94e6-2e6101f497f1"
		},
		{
			"deviceTime": "2014-08-05T08:00:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be71611f-057f-4f09-88cf-82adfa382fa3"
		},
		{
			"deviceTime": "2014-08-05T08:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6732e29f-fd26-425f-b90c-32fe0f002a6e"
		},
		{
			"deviceTime": "2014-08-05T08:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6860a33-a8e5-43b3-8b93-a7847da5aaf3"
		},
		{
			"deviceTime": "2014-08-05T08:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94099a4a-6f3b-4e01-8537-fedb7ec469d3"
		},
		{
			"deviceTime": "2014-08-05T08:20:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f7f2139-0432-4307-a6c5-7833cf6b8732"
		},
		{
			"deviceTime": "2014-08-05T08:25:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30807eac-8aff-4a43-baff-62db259483b2"
		},
		{
			"deviceTime": "2014-08-05T08:27:28",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5ff2a413-935e-44a6-ab95-864c11ac174d"
		},
		{
			"deviceTime": "2014-08-05T08:27:28",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "ad8366ce-8e58-46ed-a139-74d0c8457f31"
		},
		{
			"deviceTime": "2014-08-05T08:27:28",
			"id": "ad8366ce-8e58-46ed-a139-74d0c8457f31",
			"source": "demo",
			"joinKey": "649d617b-0462-4e0c-ae30-333ef490ec8f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 46
			}
		},
		{
			"deviceTime": "2014-08-05T08:27:28",
			"programmed": 3.1,
			"joinKey": "649d617b-0462-4e0c-ae30-333ef490ec8f",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1cd0c253-933f-495f-a5bf-9e576c4b99d2"
		},
		{
			"deviceTime": "2014-08-05T08:30:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2aeee739-30d6-4545-8fe2-4db42c4b975f"
		},
		{
			"deviceTime": "2014-08-05T08:35:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90ad5b00-b1dc-4e55-b89d-c844ed1230c6"
		},
		{
			"deviceTime": "2014-08-05T08:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "077b8909-cdca-443c-a24d-36e7a3cfa601"
		},
		{
			"deviceTime": "2014-08-05T08:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b56c0bc-420c-4871-bd58-70df62e9b942"
		},
		{
			"deviceTime": "2014-08-05T08:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74ba1841-bd1f-47d8-9c4a-4fbb26d2825e"
		},
		{
			"deviceTime": "2014-08-05T08:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61e48709-3adf-4d06-8c2f-fa38ebc086be"
		},
		{
			"deviceTime": "2014-08-05T08:57:59",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "f28cc96e-a654-4b5c-9286-787c13297aed"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-05T15:00:00",
			"start": "2014-08-05T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "1ad440cb-9a29-4487-a871-e759537e09b6"
		},
		{
			"deviceTime": "2014-08-05T09:00:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4fff62f-c2d3-49e5-8cda-3d29a8d36435"
		},
		{
			"deviceTime": "2014-08-05T09:05:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c0bc72b-d8f1-4bd0-b9cf-4ec1c4cb364b"
		},
		{
			"deviceTime": "2014-08-05T09:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eaa3c7a6-3e69-468d-bcbb-1d654c7b23c9"
		},
		{
			"deviceTime": "2014-08-05T09:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f52fff6-15ed-40ab-92b1-a06c25593cfe"
		},
		{
			"deviceTime": "2014-08-05T09:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a18e233-e2a5-4ea8-89d6-890e84c371ee"
		},
		{
			"deviceTime": "2014-08-05T09:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c828a158-0c56-4055-90d1-f78467da54b4"
		},
		{
			"deviceTime": "2014-08-05T09:39:49",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "781a06bc-65e9-4eb2-a3de-1af42d0568e5"
		},
		{
			"deviceTime": "2014-08-05T09:39:49",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "7bfdd4c5-2b59-4bd0-9ef4-2414c04fd889"
		},
		{
			"deviceTime": "2014-08-05T09:39:49",
			"id": "7bfdd4c5-2b59-4bd0-9ef4-2414c04fd889",
			"source": "demo",
			"joinKey": "8e52588a-fab6-4406-a19f-0b7460823c92",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 44
			}
		},
		{
			"deviceTime": "2014-08-05T09:39:49",
			"programmed": 2.9,
			"joinKey": "8e52588a-fab6-4406-a19f-0b7460823c92",
			"value": 2.9,
			"source": "demo",
			"recommended": 2.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "bfdd92f1-35e2-453a-a382-e31e1e7809ce"
		},
		{
			"deviceTime": "2014-08-05T09:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9374c2bf-6988-492e-b4ff-e40c3a06ceb7"
		},
		{
			"deviceTime": "2014-08-05T09:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45f23af9-f5bd-492b-8052-c8b2fffc973a"
		},
		{
			"deviceTime": "2014-08-05T10:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3174530f-87c3-4386-8f95-7ad8d854d6de"
		},
		{
			"deviceTime": "2014-08-05T10:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4161f620-28e7-432e-b9b2-fdb48ee6df7a"
		},
		{
			"deviceTime": "2014-08-05T10:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31979a79-6d53-45c8-8f9c-5dc481c7f0a2"
		},
		{
			"deviceTime": "2014-08-05T10:30:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bb59f0b-5855-4d6c-a9fa-d3944602d0d5"
		},
		{
			"deviceTime": "2014-08-05T10:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92cbf7f3-6e3b-4b88-83d5-cf39de156dc1"
		},
		{
			"deviceTime": "2014-08-05T10:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4035a7ca-28c8-4af7-a241-72a93c07092c"
		},
		{
			"deviceTime": "2014-08-05T10:45:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28e32f5c-306d-48b0-8e6e-cbcadac7fd06"
		},
		{
			"deviceTime": "2014-08-05T10:50:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86a4c6dd-3a64-45ce-bfe1-30a6f9d82874"
		},
		{
			"deviceTime": "2014-08-05T10:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff217ed6-3283-48e3-aaac-0ef059ca6a57"
		},
		{
			"deviceTime": "2014-08-05T11:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ba639bb-f1ae-41a3-a4ed-a232b99c5b35"
		},
		{
			"deviceTime": "2014-08-05T11:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f288fda-edd5-44fc-892b-2637f1dc513a"
		},
		{
			"deviceTime": "2014-08-05T11:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9345ed9d-44db-4c5c-b74c-3eccbba07c54"
		},
		{
			"deviceTime": "2014-08-05T11:15:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68ffbe2f-f0c4-4e14-af06-75a4ed3312ac"
		},
		{
			"deviceTime": "2014-08-05T11:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a5ad6f9-0a59-4636-9540-f35da3d14abe"
		},
		{
			"deviceTime": "2014-08-05T11:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e9eaab3-d07d-4971-aa00-37ce1f3d2f0e"
		},
		{
			"deviceTime": "2014-08-05T11:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51c9edfb-bb0c-407c-968b-36487f80b8a0"
		},
		{
			"deviceTime": "2014-08-05T11:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79accdc1-aebc-4b6c-904d-fa088b008a45"
		},
		{
			"deviceTime": "2014-08-05T11:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41ac92c0-3a6f-4c90-83bd-40bb2562eaa7"
		},
		{
			"deviceTime": "2014-08-05T11:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "721db89c-666f-432a-bd44-8a2f0cb3c805"
		},
		{
			"deviceTime": "2014-08-05T11:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c578961e-7dc4-49ee-ad10-c7fd2dab5d34"
		},
		{
			"deviceTime": "2014-08-05T11:55:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1106b9db-c322-4a86-ab25-f0b572e2ccdc"
		},
		{
			"deviceTime": "2014-08-05T12:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecb153e7-d481-4311-bf49-728915416bbb"
		},
		{
			"deviceTime": "2014-08-05T12:05:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c06a76f-8b6b-443b-a96e-712d75eb272a"
		},
		{
			"deviceTime": "2014-08-05T12:10:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f93dd3a2-688d-41b1-9fb4-50d17d4e6dec"
		},
		{
			"deviceTime": "2014-08-05T12:15:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "981c77e7-7bde-474c-ad5e-3ff2f06c0ea5"
		},
		{
			"messageText": "Ham t-bone consectetur, enim jowl deserunt shankle ut tail turkey porchetta chicken chuck exercitation turducken. Consequat ut rump tongue.",
			"parentMessage": "",
			"utcTime": "2014-08-05T12:17:01Z",
			"type": "message",
			"id": "79d33a40-dbbb-4732-a0eb-8878e0c4a009"
		},
		{
			"deviceTime": "2014-08-05T12:20:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc34605d-9c9a-4128-a7b6-c06732eeb0ac"
		},
		{
			"deviceTime": "2014-08-05T12:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29bda239-d1f3-4d3c-b416-bb8d754c2606"
		},
		{
			"deviceTime": "2014-08-05T12:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8715295c-b1cf-4f2d-827f-e2a5983764a9"
		},
		{
			"deviceTime": "2014-08-05T12:32:15",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "957ccd02-1e6e-430d-b487-0caffc0eda44"
		},
		{
			"deviceTime": "2014-08-05T12:35:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "136849b1-0907-4acf-80d9-2e398e1251cd"
		},
		{
			"deviceTime": "2014-08-05T12:40:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9cff605-afb4-49d6-96be-90262a39946d"
		},
		{
			"deviceTime": "2014-08-05T12:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f8be450-526e-424a-8288-3a7439007467"
		},
		{
			"deviceTime": "2014-08-05T12:50:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "731131a5-5d6e-4524-92bb-70be1366e72b"
		},
		{
			"deviceTime": "2014-08-05T12:55:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63dc091a-48e7-4553-8ec5-f8f1fcad9c6d"
		},
		{
			"deviceTime": "2014-08-05T13:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fb97f69-3a7a-478d-88b0-98c9df9469eb"
		},
		{
			"deviceTime": "2014-08-05T13:05:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72a920fc-27d7-4ddf-bdb5-951e6a5adae7"
		},
		{
			"deviceTime": "2014-08-05T13:10:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06186d38-bf62-41c7-a4bb-c25c69b7420c"
		},
		{
			"deviceTime": "2014-08-05T13:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31579b41-f5ec-4f85-971c-38b7fcf7c231"
		},
		{
			"deviceTime": "2014-08-05T13:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76f2ad12-6d83-4e3d-ab8f-e5b6ce18abca"
		},
		{
			"deviceTime": "2014-08-05T13:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ab1317b-cd61-45f0-9aa8-30a17c40685b"
		},
		{
			"deviceTime": "2014-08-05T13:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2021b0d3-c801-4b50-98b6-6fe0bf86e359"
		},
		{
			"deviceTime": "2014-08-05T13:35:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b0b0a38-0cf1-4e92-8a90-50f13b5bbe82"
		},
		{
			"deviceTime": "2014-08-05T13:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9aa4abc0-57be-4b67-802a-76312c39e00b"
		},
		{
			"deviceTime": "2014-08-05T13:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acb11aac-e713-412e-b4e6-2defa7c1c2e2"
		},
		{
			"deviceTime": "2014-08-05T13:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb1587af-100a-4895-b614-b537bccb4fbe"
		},
		{
			"deviceTime": "2014-08-05T13:55:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f1b6369-74f7-4fc6-aaee-ad43e02914ed"
		},
		{
			"deviceTime": "2014-08-05T14:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dccdd86a-9e72-4079-9e49-869fc40705c9"
		},
		{
			"deviceTime": "2014-08-05T14:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71380129-45f8-4ddf-b2d6-5aed9b41b667"
		},
		{
			"deviceTime": "2014-08-05T14:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2130e848-7e8f-4f45-8f7e-c61c557248d9"
		},
		{
			"deviceTime": "2014-08-05T14:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a680f466-19ef-478d-ad7a-3716c0c78129"
		},
		{
			"deviceTime": "2014-08-05T14:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e01b7f07-198f-4374-9e8c-4ebee6694f41"
		},
		{
			"deviceTime": "2014-08-05T14:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69314832-fae2-415a-adcc-a966128332b4"
		},
		{
			"deviceTime": "2014-08-05T14:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "866787fa-6a3f-4f42-b2f9-495bd84a6e11"
		},
		{
			"deviceTime": "2014-08-05T14:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7064f4ef-7736-49fa-96c2-d559ac17a121"
		},
		{
			"deviceTime": "2014-08-05T14:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0557f948-81a8-4a8c-a9b0-d5b4b0e72e1c"
		},
		{
			"deviceTime": "2014-08-05T14:45:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3fc5c45-698d-4458-b699-9f77e310d30e"
		},
		{
			"deviceTime": "2014-08-05T14:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fa837ce-eace-4c36-9783-e0a1c24aadb2"
		},
		{
			"deviceTime": "2014-08-05T14:55:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca2720d3-717e-4803-a0d0-34513564d581"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-05T20:00:00",
			"start": "2014-08-05T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "48ffb87e-7b8a-4ab5-b62b-473228195b96"
		},
		{
			"deviceTime": "2014-08-05T15:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e42f982-97ff-4b65-8892-40680e1c36fa"
		},
		{
			"deviceTime": "2014-08-05T15:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30138068-1649-4613-9852-a0821e3ef875"
		},
		{
			"deviceTime": "2014-08-05T15:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb1d8f65-782f-45c0-bb64-bc5b9703efd4"
		},
		{
			"deviceTime": "2014-08-05T15:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a378ca7-0523-42d6-aab1-0d595840977b"
		},
		{
			"deviceTime": "2014-08-05T15:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6efd6687-44e3-4c89-95c8-a97a86bd4ddd"
		},
		{
			"deviceTime": "2014-08-05T15:25:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7989ea0c-919a-4ed8-a9cf-376c5dfa448a"
		},
		{
			"deviceTime": "2014-08-05T15:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "087c6192-bbea-4672-9081-9cdaf9c62471"
		},
		{
			"deviceTime": "2014-08-05T15:35:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffb88cfa-4ce0-499e-8150-58e4338016c4"
		},
		{
			"deviceTime": "2014-08-05T15:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b83b996-69b3-45b2-8a8e-207df9162d4b"
		},
		{
			"deviceTime": "2014-08-05T15:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90922c39-9f70-4510-944b-834e1d9edcc7"
		},
		{
			"deviceTime": "2014-08-05T15:45:28",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "7a245f31-505f-4737-bf95-c65b9a359b0a"
		},
		{
			"deviceTime": "2014-08-05T15:50:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94de51e2-4d87-4d05-b35d-575e353018e9"
		},
		{
			"deviceTime": "2014-08-05T15:55:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8835fbe-7f26-440c-86ac-144836c9b903"
		},
		{
			"deviceTime": "2014-08-05T16:00:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98531c54-d487-4e25-8528-293026179322"
		},
		{
			"deviceTime": "2014-08-05T16:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "032ef8b9-defa-4a6a-9db6-2490c360b984"
		},
		{
			"deviceTime": "2014-08-05T16:10:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72ecf340-a4af-444f-8b0a-3c968e2e0e27"
		},
		{
			"deviceTime": "2014-08-05T16:15:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b897b2c2-7c64-40aa-875d-75f6c9d71f98"
		},
		{
			"deviceTime": "2014-08-05T16:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a36e6666-4c6d-4ec6-943c-c218c2a5557c"
		},
		{
			"deviceTime": "2014-08-05T16:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "755900a3-f0b9-4b78-828b-5882b76bdd9d"
		},
		{
			"deviceTime": "2014-08-05T16:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb454284-a89d-4a17-96aa-dc291509d52b"
		},
		{
			"deviceTime": "2014-08-05T16:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4558d11a-8e66-4532-95f0-fa76907e385e"
		},
		{
			"deviceTime": "2014-08-05T16:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd181fb1-1c06-4850-bfd8-641c347f010d"
		},
		{
			"deviceTime": "2014-08-05T16:55:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80791254-ea29-4f36-b53f-cd530444c76e"
		},
		{
			"deviceTime": "2014-08-05T17:00:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aed53a2a-861c-49ef-95b2-4ec715816575"
		},
		{
			"deviceTime": "2014-08-05T17:05:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0a36045-b703-4a03-b359-f2a322ae7699"
		},
		{
			"deviceTime": "2014-08-05T17:10:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afa53733-4462-4554-8ea3-5c21996fc04f"
		},
		{
			"deviceTime": "2014-08-05T17:15:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fe8da79-edad-45a6-9494-894e54a8bd43"
		},
		{
			"deviceTime": "2014-08-05T17:20:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2482c446-afed-4670-a7fd-3449a400cf64"
		},
		{
			"deviceTime": "2014-08-05T17:23:01",
			"value": 2.1,
			"source": "demo",
			"recommended": 2.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "6777fce3-ca76-49b2-989b-89178d61f071"
		},
		{
			"deviceTime": "2014-08-05T17:25:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fd4143f-6508-424e-bfd6-6b0cac082c3e"
		},
		{
			"deviceTime": "2014-08-05T17:30:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b2c9f6c-c6e4-4f39-a156-8d7c438aa110"
		},
		{
			"deviceTime": "2014-08-05T17:35:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30aa994a-49b1-4409-a4a4-8505f5f6e829"
		},
		{
			"deviceTime": "2014-08-05T17:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5891b201-705e-4b49-bbd9-8681cf1cdc35"
		},
		{
			"deviceTime": "2014-08-05T17:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e17ca160-1496-4be0-85f0-c50ae377e38b"
		},
		{
			"deviceTime": "2014-08-05T17:50:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59f6b235-4e4a-4c21-bb9e-0357431973d9"
		},
		{
			"deviceTime": "2014-08-05T17:55:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba936ddc-cd8d-4c34-9bb5-789a164b2da1"
		},
		{
			"deviceTime": "2014-08-05T18:00:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fbe3b50-36b1-4f42-bc92-848afbdd879f"
		},
		{
			"deviceTime": "2014-08-05T18:05:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c00a7e8a-63c6-4379-a550-bcc57ea04583"
		},
		{
			"deviceTime": "2014-08-05T18:10:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b21ba420-d0c5-44ff-b4c7-47570d96125b"
		},
		{
			"deviceTime": "2014-08-05T18:15:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e66c850b-a696-4e94-9303-9d866465a43e"
		},
		{
			"deviceTime": "2014-08-05T18:20:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72e27e60-73c2-4ac6-bbf7-a301e829c604"
		},
		{
			"deviceTime": "2014-08-05T18:25:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f20ef98a-d61d-46d6-9f63-097f50146033"
		},
		{
			"deviceTime": "2014-08-05T18:28:01",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "2bcc6010-eaf6-4b21-88ff-b882f73c3faf"
		},
		{
			"deviceTime": "2014-08-05T18:28:01",
			"value": 24,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "5c7ec02b-4492-43c4-a31d-76f1b26597ea"
		},
		{
			"deviceTime": "2014-08-05T18:28:01",
			"id": "5c7ec02b-4492-43c4-a31d-76f1b26597ea",
			"source": "demo",
			"joinKey": "236ae0d8-efe7-4620-bca5-7e0aaaa9120b",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 24
			}
		},
		{
			"deviceTime": "2014-08-05T18:28:01",
			"programmed": 1.6,
			"joinKey": "236ae0d8-efe7-4620-bca5-7e0aaaa9120b",
			"value": 1.6,
			"source": "demo",
			"recommended": 1.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "2cb53d3d-56cd-41e1-8d39-6532fb03e3c1"
		},
		{
			"deviceTime": "2014-08-05T18:30:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2012311-02f8-4a48-b319-0b91c9f02d52"
		},
		{
			"deviceTime": "2014-08-05T18:35:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42ef0975-119a-41bb-8826-63c45e292e92"
		},
		{
			"deviceTime": "2014-08-05T18:40:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f136fe29-ba8f-49f7-b17f-a8af0caa18b3"
		},
		{
			"deviceTime": "2014-08-05T18:45:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08c6c9e9-5b93-42a8-a3fb-c7e12dfd7592"
		},
		{
			"deviceTime": "2014-08-05T18:50:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc4d498d-d83b-4f91-972c-e521495291d0"
		},
		{
			"deviceTime": "2014-08-05T18:55:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b25f6666-cf21-4c2c-bef5-e6316ccf9f48"
		},
		{
			"deviceTime": "2014-08-05T19:00:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80aea983-4c1c-45f4-b32f-f75c4381350b"
		},
		{
			"deviceTime": "2014-08-05T19:05:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5d0f00d-8448-4a4f-92b5-7cc0495085f1"
		},
		{
			"deviceTime": "2014-08-05T19:10:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0fe9dfb-a5ad-450d-aabc-835c66f1084a"
		},
		{
			"deviceTime": "2014-08-05T19:15:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "923b2089-6bed-4c94-9031-579f6f4d9782"
		},
		{
			"deviceTime": "2014-08-05T19:20:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e9cbd54-edf6-4065-a15b-d463e8a6578c"
		},
		{
			"deviceTime": "2014-08-05T19:25:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ff42fe9-a927-4c64-be44-a68cad6a57d4"
		},
		{
			"deviceTime": "2014-08-05T19:30:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50a433f4-9a67-4a2e-a782-6d8e3d0496fa"
		},
		{
			"deviceTime": "2014-08-05T19:35:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2347dcb1-61b6-40a7-81dc-636c3924e4c6"
		},
		{
			"deviceTime": "2014-08-05T19:40:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3c7412e-c56e-41ff-a321-ca6d8b27eb1b"
		},
		{
			"deviceTime": "2014-08-05T19:45:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c723673-9f12-48f1-9460-cbbc444417bc"
		},
		{
			"deviceTime": "2014-08-05T19:50:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2248c5e-82d4-4643-8b6d-330b82e12cb6"
		},
		{
			"deviceTime": "2014-08-05T19:55:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "535a1409-c695-4302-b6ca-a1f4e3f89dc6"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-06T00:00:00",
			"start": "2014-08-05T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "339801ab-ac78-4e60-8a99-63e81e848d3d"
		},
		{
			"deviceTime": "2014-08-05T20:00:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6de4b8b-9c39-455c-a805-cee8bc044bf3"
		},
		{
			"deviceTime": "2014-08-05T20:05:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "156fe965-3460-4a15-98a6-f47f96e3cfc8"
		},
		{
			"deviceTime": "2014-08-05T20:30:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c400160e-fa91-422f-8ab9-01c7b21064c6"
		},
		{
			"deviceTime": "2014-08-05T20:35:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca7b7b72-7318-4264-9cea-e8f662c01a63"
		},
		{
			"deviceTime": "2014-08-05T20:40:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2cb3aa7-8085-4bdb-9adb-625922816cdf"
		},
		{
			"deviceTime": "2014-08-05T20:45:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a736ae7c-a141-4799-b3db-f1ecd4e5bc47"
		},
		{
			"deviceTime": "2014-08-05T20:50:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53acad74-c5a2-4968-8558-af049c1b78de"
		},
		{
			"deviceTime": "2014-08-05T20:55:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a14a9a94-7cf0-4497-9511-d3f88710755d"
		},
		{
			"deviceTime": "2014-08-05T21:00:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd6ec925-85fb-4e2b-9e5c-88313e8d4ee7"
		},
		{
			"end": "2014-08-05T22:02:01",
			"start": "2014-08-05T21:02:01",
			"percent": 0.35,
			"deliveryType": "temp",
			"id": "12cb462e-69e2-453b-84ba-f5d6212f840e",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-05T21:05:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69d844de-6f12-4100-802f-eefb72eabbd3"
		},
		{
			"deviceTime": "2014-08-05T21:10:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0eab7b52-e498-4a93-8868-cde95a557c17"
		},
		{
			"deviceTime": "2014-08-05T21:15:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b415fc5f-857e-4497-aaaa-6e4906ffb366"
		},
		{
			"deviceTime": "2014-08-05T21:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf328934-f036-427a-89ae-5923fd072211"
		},
		{
			"deviceTime": "2014-08-05T21:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92f7d6c0-049e-4f8f-b974-bef80fd13163"
		},
		{
			"deviceTime": "2014-08-05T21:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "241c2338-d333-459a-babb-4d48527b93fb"
		},
		{
			"deviceTime": "2014-08-05T21:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "687b29a5-adbd-4e86-a68d-2c6d2fd7ea4e"
		},
		{
			"deviceTime": "2014-08-05T21:40:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25b2d04c-fa3e-41be-8aa7-38cb6dab2441"
		},
		{
			"deviceTime": "2014-08-05T21:45:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d175d70-4c48-4043-8001-683c7b0f955e"
		},
		{
			"deviceTime": "2014-08-05T21:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2498a369-f63c-49f4-a415-4188246a2965"
		},
		{
			"deviceTime": "2014-08-05T21:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49243419-e8df-4912-b47a-5eb43fb9656e"
		},
		{
			"deviceTime": "2014-08-05T22:00:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae2105e7-6b2d-4d51-ab56-159c49eea180"
		},
		{
			"deviceTime": "2014-08-05T22:05:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1d0757c-aad9-4f6a-a956-2183a8771e59"
		},
		{
			"deviceTime": "2014-08-05T22:10:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14d06d35-641c-45b4-883c-5167a3ad03ad"
		},
		{
			"deviceTime": "2014-08-05T22:30:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53c37bb4-9693-46d5-b1ee-a402de04bbff"
		},
		{
			"deviceTime": "2014-08-05T22:35:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b223ca2-3917-4a25-88be-498b3067c972"
		},
		{
			"deviceTime": "2014-08-05T22:40:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "999ba7e9-4035-4649-9fb0-548006583ac3"
		},
		{
			"deviceTime": "2014-08-05T22:45:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bc82ce6-a6f9-4c3d-b654-4ae52ac67028"
		},
		{
			"deviceTime": "2014-08-05T22:50:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6795d873-0d36-469f-addb-39489fd43c9e"
		},
		{
			"deviceTime": "2014-08-05T22:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "547946d2-263d-427b-978f-ed0a688387ce"
		},
		{
			"deviceTime": "2014-08-05T23:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5ba0a41-4df7-4b06-b983-bd45027dc9a7"
		},
		{
			"deviceTime": "2014-08-05T23:05:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "636dda3f-afe1-4340-b36c-9c9f97e7aecf"
		},
		{
			"deviceTime": "2014-08-05T23:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f157873f-d026-4598-8714-81de7664e57a"
		},
		{
			"deviceTime": "2014-08-05T23:15:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20ad8e12-4d3b-43f1-995c-aa65a2534e3e"
		},
		{
			"deviceTime": "2014-08-05T23:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c22b9968-b0b2-4f15-8a0d-e20aebf4ad81"
		},
		{
			"deviceTime": "2014-08-05T23:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a0dd831-caf9-4d5d-aeca-5703d70169ae"
		},
		{
			"deviceTime": "2014-08-05T23:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af5e03f6-1e7e-4596-8445-03180fca2d10"
		},
		{
			"deviceTime": "2014-08-05T23:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04a74290-8b00-4b0e-ba8a-5a5ccc1c911e"
		},
		{
			"deviceTime": "2014-08-05T23:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee8744c5-6249-42c8-afb8-c7c97df8a3bd"
		},
		{
			"deviceTime": "2014-08-05T23:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "215dcfff-d21a-4dbf-9184-151bd3791458"
		},
		{
			"deviceTime": "2014-08-05T23:50:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34b1fef0-ba78-42e8-b22b-547a5fafce8a"
		},
		{
			"deviceTime": "2014-08-05T23:55:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e815839-4136-4775-83fc-297976beff23"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-06T02:00:00",
			"start": "2014-08-06T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "8a2f44b1-ed4d-4162-b57d-85a96c81703a"
		},
		{
			"deviceTime": "2014-08-06T00:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6c977b5-9976-4459-bd78-19f5218615fb"
		},
		{
			"deviceTime": "2014-08-06T00:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61bf3af1-bb9c-4cce-94bf-5900d7f15211"
		},
		{
			"deviceTime": "2014-08-06T00:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02ddb1b8-ab28-4cc3-812c-5d26da194cba"
		},
		{
			"deviceTime": "2014-08-06T00:15:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67124efb-4a87-4321-8d12-4cd679387cca"
		},
		{
			"deviceTime": "2014-08-06T00:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a19768a8-18ec-46bf-9106-2d59a6cfeddf"
		},
		{
			"deviceTime": "2014-08-06T00:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c99c5ddc-2307-4477-b799-f09f5b6763a0"
		},
		{
			"deviceTime": "2014-08-06T00:30:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5528119-77c5-428b-aed1-88c0cc0e9b0e"
		},
		{
			"deviceTime": "2014-08-06T00:35:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56996646-15c3-4feb-bb52-557e008703b7"
		},
		{
			"deviceTime": "2014-08-06T00:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3849e458-ea70-4486-806c-0369fc4bcee9"
		},
		{
			"deviceTime": "2014-08-06T00:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f7e9c9c-c6d4-46b9-9074-c20b2279bcaf"
		},
		{
			"deviceTime": "2014-08-06T00:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bd79365-fcc8-4c28-a471-ab8adfa9a55b"
		},
		{
			"deviceTime": "2014-08-06T00:55:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b337d92-ebd6-4b9b-9932-32698ab519f1"
		},
		{
			"deviceTime": "2014-08-06T01:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60384bf7-ead0-46c1-9d76-9d8383bf241c"
		},
		{
			"deviceTime": "2014-08-06T01:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3623ea58-5c5b-4b67-bff0-7ff5faf319f1"
		},
		{
			"deviceTime": "2014-08-06T01:10:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a46527e-1407-4934-ac76-069169aca5bb"
		},
		{
			"deviceTime": "2014-08-06T01:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c9a5bf9-a0b9-413a-9abc-eace28579a6b"
		},
		{
			"deviceTime": "2014-08-06T01:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4f32b74-00f8-442c-b6e0-0d80b2f6cc27"
		},
		{
			"deviceTime": "2014-08-06T01:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c4d8205-c1df-409c-9e16-81888d54556c"
		},
		{
			"deviceTime": "2014-08-06T01:30:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d506fb7f-c7ed-4d33-b154-80ffc9c6db59"
		},
		{
			"deviceTime": "2014-08-06T01:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be428c2a-21f8-4bb7-912e-ad5ddd1bc401"
		},
		{
			"deviceTime": "2014-08-06T01:40:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f41d60b-83f8-4106-bbcf-d5641e9d2dbe"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-06T04:00:00",
			"start": "2014-08-06T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "cb824e2f-c482-44f2-9b30-86bbfe6cfb83"
		},
		{
			"deviceTime": "2014-08-06T02:10:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1f7efff-6a72-47cb-b517-a0c301d8649c"
		},
		{
			"deviceTime": "2014-08-06T02:15:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68154ad5-ebf1-431b-887b-13c10a7b0325"
		},
		{
			"deviceTime": "2014-08-06T02:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a4032d2-263e-4782-91cf-cc960ee4c710"
		},
		{
			"deviceTime": "2014-08-06T02:25:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "275cdb30-2cbf-40d0-92e4-4a2037681737"
		},
		{
			"deviceTime": "2014-08-06T02:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c7201c7-39f8-4fcb-837a-2c1860c1e7c4"
		},
		{
			"deviceTime": "2014-08-06T02:35:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e90c123b-0dbf-4abc-bcd5-12e5b640338b"
		},
		{
			"deviceTime": "2014-08-06T02:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c359a5de-6972-4557-af81-d12384382624"
		},
		{
			"deviceTime": "2014-08-06T02:45:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "864bb211-3c6a-49fd-a394-d484942ae168"
		},
		{
			"deviceTime": "2014-08-06T02:50:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20fef2a9-441b-4050-964f-831c168bd635"
		},
		{
			"deviceTime": "2014-08-06T02:55:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f465d96-4925-4e00-9f0e-30f46a6e95ce"
		},
		{
			"deviceTime": "2014-08-06T03:00:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0604f0cc-25bb-4a75-80fe-f9ea5a4e372f"
		},
		{
			"deviceTime": "2014-08-06T03:05:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64a811eb-d4cd-415a-8bd8-67e7ae738cc7"
		},
		{
			"deviceTime": "2014-08-06T03:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "221cf420-469f-4f23-9904-2ce549fdf7e9"
		},
		{
			"deviceTime": "2014-08-06T03:15:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b151497-6a15-4861-b91b-37667ff0656a"
		},
		{
			"deviceTime": "2014-08-06T03:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ab747bb-6bf9-4e2f-8871-f091bd2f32c9"
		},
		{
			"deviceTime": "2014-08-06T03:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "580ba205-16bc-405a-97ba-5fa3826d9d74"
		},
		{
			"deviceTime": "2014-08-06T03:30:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54f1855b-f173-427f-8fc0-9128098c1adb"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-06T05:00:00",
			"start": "2014-08-06T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "f7065ca5-5c9e-4053-9baa-7f11c454bac2"
		},
		{
			"deviceTime": "2014-08-06T04:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3b4ed54-748b-4d32-a01e-35563f56cb5f"
		},
		{
			"deviceTime": "2014-08-06T04:10:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a124442b-3325-4afc-b574-127e0d086cd2"
		},
		{
			"deviceTime": "2014-08-06T04:15:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbc60d76-7489-4a66-830b-6f4acd0bee66"
		},
		{
			"deviceTime": "2014-08-06T04:20:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "736c1a96-8d89-4438-9d3b-33fabed8bbde"
		},
		{
			"deviceTime": "2014-08-06T04:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f771d87b-f698-4356-8881-54c45e26b58b"
		},
		{
			"deviceTime": "2014-08-06T04:30:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d90d3863-a056-44a9-a273-06ad0316e919"
		},
		{
			"deviceTime": "2014-08-06T04:35:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e809a712-3b4e-455f-a5de-1d7f1940d22d"
		},
		{
			"deviceTime": "2014-08-06T04:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2e0ee44-acc1-471a-8de2-62cc80f2485b"
		},
		{
			"deviceTime": "2014-08-06T04:45:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f45398e-bdc6-400c-bf84-8cee2906c648"
		},
		{
			"deviceTime": "2014-08-06T04:50:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3b089e5-0361-4347-8b77-6215c30d79b5"
		},
		{
			"deviceTime": "2014-08-06T04:55:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "644dafca-c583-4306-9462-154d3d5e39d0"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-06T06:00:00",
			"start": "2014-08-06T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "7e74e37a-83c2-4f04-b034-48645e2a8ab5"
		},
		{
			"deviceTime": "2014-08-06T05:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8623de3c-7efe-40f4-8082-d3a13f765030"
		},
		{
			"deviceTime": "2014-08-06T05:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d598810-79ab-4045-ac1b-964f22931fe8"
		},
		{
			"deviceTime": "2014-08-06T05:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c004d4a-8eea-45d3-ab7b-da71dab6b5f7"
		},
		{
			"deviceTime": "2014-08-06T05:15:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba3e91a2-fe2c-49bc-b53f-df1461e6593f"
		},
		{
			"deviceTime": "2014-08-06T05:20:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd9be45c-145a-4d4f-9ee7-dd95fd1bd8a5"
		},
		{
			"deviceTime": "2014-08-06T05:24:01",
			"value": 3.1,
			"source": "demo",
			"recommended": 1.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "a873965d-8c40-4580-acb1-7b964aa1b108"
		},
		{
			"deviceTime": "2014-08-06T05:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e95a0ba-9b63-46f9-bd04-f5bf767a8187"
		},
		{
			"deviceTime": "2014-08-06T05:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26a36309-a43b-401b-95ce-803ea353b201"
		},
		{
			"deviceTime": "2014-08-06T05:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9863d3d5-d07f-4552-affa-47ad5fd0f243"
		},
		{
			"deviceTime": "2014-08-06T05:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cdf4a04-3153-4023-bb37-6e66ebc7c09c"
		},
		{
			"deviceTime": "2014-08-06T05:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "746cb50c-4959-480e-8f20-6743ec5dc3d4"
		},
		{
			"deviceTime": "2014-08-06T05:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65164bf9-2741-476d-bf0e-65f1e0c31bc7"
		},
		{
			"deviceTime": "2014-08-06T05:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "979668cc-9f6d-4d8b-840e-130981ed886d"
		},
		{
			"delivered": 1,
			"end": "2014-08-06T09:00:00",
			"start": "2014-08-06T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "8f458452-49da-4da3-bd6c-d7be9ed22ef9"
		},
		{
			"deviceTime": "2014-08-06T06:00:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c1c3dd4-4747-41e0-a601-56df7e8326c5"
		},
		{
			"deviceTime": "2014-08-06T06:05:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa0118e6-d4e8-4ed1-9d12-403c69345fe4"
		},
		{
			"deviceTime": "2014-08-06T06:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb6b8ee5-6694-4153-8f73-2b0b88746576"
		},
		{
			"deviceTime": "2014-08-06T06:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db0d87d3-1c73-4e11-a67a-7166e0c1d9cc"
		},
		{
			"deviceTime": "2014-08-06T06:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6053a01d-8fce-48a1-88c0-de6c7cd094be"
		},
		{
			"deviceTime": "2014-08-06T06:23:52",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "c00daf9f-3684-44c1-aa9a-9a7f1e6b6ee0"
		},
		{
			"deviceTime": "2014-08-06T06:23:52",
			"value": 24,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "52ea30ab-a972-4c80-80c8-c20f2a0c2128"
		},
		{
			"deviceTime": "2014-08-06T06:23:52",
			"id": "52ea30ab-a972-4c80-80c8-c20f2a0c2128",
			"source": "demo",
			"joinKey": "9fb95dce-5adc-4f51-8bbe-27ac492bc2b3",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 24
			}
		},
		{
			"deviceTime": "2014-08-06T06:23:52",
			"programmed": 1.6,
			"joinKey": "9fb95dce-5adc-4f51-8bbe-27ac492bc2b3",
			"value": 1.6,
			"source": "demo",
			"recommended": 1.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "3a5ca6c3-57ec-4947-8a38-8397bcd46cd6"
		},
		{
			"deviceTime": "2014-08-06T06:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61ac2881-0c96-4e51-9ee2-862a27b7bbfa"
		},
		{
			"deviceTime": "2014-08-06T06:34:54",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "dfea2703-2190-4a86-83ef-0d40e5b6aa13"
		},
		{
			"deviceTime": "2014-08-06T06:34:54",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "d591a89f-2b87-43b0-865b-e9602b423ce7"
		},
		{
			"deviceTime": "2014-08-06T06:34:54",
			"id": "d591a89f-2b87-43b0-865b-e9602b423ce7",
			"source": "demo",
			"joinKey": "7344b892-4ad0-4367-9d57-13b5459ce3ac",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 51
			}
		},
		{
			"deviceTime": "2014-08-06T06:34:54",
			"programmed": 3.4,
			"joinKey": "7344b892-4ad0-4367-9d57-13b5459ce3ac",
			"value": 0.3,
			"source": "demo",
			"recommended": 3.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "7c9da7ab-5197-45ca-adb5-a7b498ea9f3a"
		},
		{
			"deviceTime": "2014-08-06T06:41:59",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e6a3e641-0ffb-493b-8406-4ac530a78eb1"
		},
		{
			"deviceTime": "2014-08-06T06:41:59",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "08cedc96-04d8-45da-aaf2-ab02aa181c1b"
		},
		{
			"deviceTime": "2014-08-06T06:41:59",
			"id": "08cedc96-04d8-45da-aaf2-ab02aa181c1b",
			"source": "demo",
			"joinKey": "9cd365c9-a2cd-4fbd-8e00-f8a62414704c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 60
			}
		},
		{
			"deviceTime": "2014-08-06T06:41:59",
			"programmed": 4,
			"joinKey": "9cd365c9-a2cd-4fbd-8e00-f8a62414704c",
			"value": 4,
			"source": "demo",
			"recommended": 4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "dbe14f5d-f363-491f-b396-33e75e07742e"
		},
		{
			"deviceTime": "2014-08-06T06:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81d5d9ca-6f38-4b67-b15b-c7e29ea29bc2"
		},
		{
			"deviceTime": "2014-08-06T07:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76224ab8-db87-4335-9424-7b996bf207ff"
		},
		{
			"deviceTime": "2014-08-06T07:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f396970-4205-41ef-adfc-e8903fc1a352"
		},
		{
			"deviceTime": "2014-08-06T07:10:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bb1bbca-5988-4543-b65e-77b0c3f7e6f5"
		},
		{
			"deviceTime": "2014-08-06T07:15:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a07894d-a454-4d8e-b22c-670aec647c8f"
		},
		{
			"deviceTime": "2014-08-06T07:20:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "929c6463-f9ad-4ae6-a480-e5c7e19bfd4b"
		},
		{
			"deviceTime": "2014-08-06T07:25:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64a9bd2f-b09c-4963-9a83-394ba9e6a58e"
		},
		{
			"deviceTime": "2014-08-06T07:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e147bdf0-7538-4ddb-a839-0a6f79f2977f"
		},
		{
			"deviceTime": "2014-08-06T07:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd1fdd03-9748-4d88-b1ed-fe340e4ee0ed"
		},
		{
			"deviceTime": "2014-08-06T07:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b74a644b-1aa9-4fa4-a7af-35c16ce3016f"
		},
		{
			"deviceTime": "2014-08-06T07:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e15d905e-4e90-415e-b9d6-18f67c21ffa6"
		},
		{
			"deviceTime": "2014-08-06T07:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc3d9eef-bd50-43e2-9359-a0b281b0a0b3"
		},
		{
			"deviceTime": "2014-08-06T07:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03194531-f7f4-4df1-a43a-b78d370ab4ae"
		},
		{
			"deviceTime": "2014-08-06T08:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "243b25dd-68bb-4c93-b9bb-e663655bd019"
		},
		{
			"deviceTime": "2014-08-06T08:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "274ad5be-a9e0-4110-9882-af7f66b85af4"
		},
		{
			"deviceTime": "2014-08-06T08:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c88c2211-8425-4fa7-bccb-f09318003854"
		},
		{
			"deviceTime": "2014-08-06T08:12:32",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "15499eba-7010-4292-b032-6f39c5ffc747"
		},
		{
			"deviceTime": "2014-08-06T08:12:32",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "7bf1f248-d516-409e-8795-30a16b1af2a1"
		},
		{
			"deviceTime": "2014-08-06T08:12:32",
			"id": "7bf1f248-d516-409e-8795-30a16b1af2a1",
			"source": "demo",
			"joinKey": "d02a959a-867f-4b77-a23c-4c429e40093a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 54
			}
		},
		{
			"deviceTime": "2014-08-06T08:12:32",
			"suspendedAt": "2014-08-06T09:12:32",
			"programmed": 3.4,
			"joinKey": "d02a959a-867f-4b77-a23c-4c429e40093a",
			"value": 3.4,
			"source": "demo",
			"recommended": 3.6,
			"extendedDelivery": 3.4,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "00585c1f-c725-4657-9351-8fe85dbe350f"
		},
		{
			"deviceTime": "2014-08-06T08:45:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c8d87ea-1d5b-41f9-8a68-5805815d2fa8"
		},
		{
			"deviceTime": "2014-08-06T08:50:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cc94b23-ca85-497b-9229-496f8b71dacf"
		},
		{
			"deviceTime": "2014-08-06T08:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c68ba19-d47a-471b-8409-3038792182ec"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-06T15:00:00",
			"start": "2014-08-06T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "aad23aa8-4aee-476b-8e99-0f0647fc6f4d"
		},
		{
			"deviceTime": "2014-08-06T09:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d02e1d28-8ff8-42b6-b87d-1351b67a36dd"
		},
		{
			"deviceTime": "2014-08-06T09:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3200357f-3b7b-4182-bfe9-aecd9ccb1429"
		},
		{
			"deviceTime": "2014-08-06T09:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fed0d5ac-7061-4951-a606-b0b2aa994149"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-06T09:12:32",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "a8ed936f-d28c-40ca-9ef1-c0cc4a3c2a4b"
		},
		{
			"deviceTime": "2014-08-06T09:15:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8408f3d6-72d4-4c40-9af0-4e6f3cba0f3c"
		},
		{
			"deviceTime": "2014-08-06T09:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2771d212-0046-497b-ba22-537ce9c29a83"
		},
		{
			"deviceTime": "2014-08-06T09:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c1bd3d2-595a-44a6-94fe-621ca92d83da"
		},
		{
			"deviceTime": "2014-08-06T09:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80a98d11-0254-442d-9a29-e159ebe10943"
		},
		{
			"deviceTime": "2014-08-06T09:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6557b78a-3ed0-437f-ae4d-575a5996d8d3"
		},
		{
			"deviceTime": "2014-08-06T09:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6fa7c61-0b7d-4cfb-9338-35dd8260da14"
		},
		{
			"deviceTime": "2014-08-06T09:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46ff3724-b234-46af-aa5d-889f12cabb3c"
		},
		{
			"deviceTime": "2014-08-06T09:50:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c4e978a-3f8e-4932-a429-c86163e19d45"
		},
		{
			"deviceTime": "2014-08-06T09:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60c18f29-a728-411b-9613-88cdd801a59d"
		},
		{
			"deviceTime": "2014-08-06T10:00:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "901b7361-f3c1-471d-af42-e6c3e64e46db"
		},
		{
			"deviceTime": "2014-08-06T10:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d8dcb28-c10b-4258-9522-efff8e02391a"
		},
		{
			"deviceTime": "2014-08-06T10:10:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cb0b5fb-92e6-4c45-8b03-b717eb89832e"
		},
		{
			"deviceTime": "2014-08-06T10:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f047377-e34e-4ada-a9b2-58057e59ce7f"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-06T10:15:32",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "be5a9c85-a551-4217-a7cc-56b60498a63e",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-06T09:12:32",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "a8ed936f-d28c-40ca-9ef1-c0cc4a3c2a4b"
			}
		},
		{
			"deviceTime": "2014-08-06T10:20:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48cfd121-1194-4a1c-b79d-ab85a854a9d0"
		},
		{
			"deviceTime": "2014-08-06T10:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35cd75a1-f5fd-4274-a08e-884572029037"
		},
		{
			"deviceTime": "2014-08-06T10:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e59acf2d-ff6f-4bd7-be59-12123041b948"
		},
		{
			"deviceTime": "2014-08-06T10:35:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6121bce6-5441-4c09-98a8-8e236969b633"
		},
		{
			"deviceTime": "2014-08-06T10:40:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0456595-dc43-4e7b-8ebb-0abba583ee1c"
		},
		{
			"deviceTime": "2014-08-06T10:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b3db17a-0c30-4ad3-95db-110817369d04"
		},
		{
			"deviceTime": "2014-08-06T10:50:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac70539e-eb85-40d2-ac66-2ee404d20325"
		},
		{
			"deviceTime": "2014-08-06T10:55:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a5192b2-9348-479d-bd74-8005bb4d83f9"
		},
		{
			"deviceTime": "2014-08-06T11:00:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5eff7ef6-6897-4dc6-ae17-3e3aede8c054"
		},
		{
			"deviceTime": "2014-08-06T11:05:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "069f715b-98ee-47a5-b70a-c57112902bfe"
		},
		{
			"deviceTime": "2014-08-06T11:10:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d34d776f-3139-40ee-a3d4-3b23477c63c7"
		},
		{
			"deviceTime": "2014-08-06T11:15:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bee24976-782b-411d-a364-6a73fb75b72e"
		},
		{
			"deviceTime": "2014-08-06T11:20:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33719161-d19f-4c12-acc2-1383ba919524"
		},
		{
			"deviceTime": "2014-08-06T11:25:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99718a92-a611-4939-8236-38cfcb8b6e45"
		},
		{
			"deviceTime": "2014-08-06T11:30:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03d9b7cf-993d-4040-ba68-fadfba7ae2e1"
		},
		{
			"deviceTime": "2014-08-06T11:35:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ec256f3-a688-4072-8b3e-dcb9748b3763"
		},
		{
			"deviceTime": "2014-08-06T11:40:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de86d5f0-e480-45c4-b81d-7227903dde38"
		},
		{
			"deviceTime": "2014-08-06T11:44:44",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "8fdf090d-2c42-45e4-80d9-97292faf9919"
		},
		{
			"deviceTime": "2014-08-06T11:44:44",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "99c0f4ab-18f9-403a-b776-4b80b2ef5d6c"
		},
		{
			"deviceTime": "2014-08-06T11:44:44",
			"id": "99c0f4ab-18f9-403a-b776-4b80b2ef5d6c",
			"source": "demo",
			"joinKey": "cd1aa4d7-b319-4076-8c6a-5c5af3f4c190",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 57
			}
		},
		{
			"deviceTime": "2014-08-06T11:44:44",
			"suspendedAt": "2014-08-06T13:14:44",
			"programmed": 3.8,
			"joinKey": "cd1aa4d7-b319-4076-8c6a-5c5af3f4c190",
			"value": 3.8,
			"source": "demo",
			"recommended": 3.8,
			"extendedDelivery": 3.8,
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"extended": true,
			"type": "bolus",
			"id": "6a3fe499-5edb-49a4-a856-561907b7b558"
		},
		{
			"deviceTime": "2014-08-06T11:45:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a86053e1-7c73-40df-b84b-bec72cd0b4c1"
		},
		{
			"deviceTime": "2014-08-06T11:50:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d6498e6-dce1-46ac-9e08-379d8e1a1e63"
		},
		{
			"deviceTime": "2014-08-06T11:54:20",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ccdcf0b8-f962-495c-98ee-1ef5dd6cab3e"
		},
		{
			"deviceTime": "2014-08-06T11:54:20",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "41605bf7-cbce-4af4-be8f-24c3eb561a28"
		},
		{
			"deviceTime": "2014-08-06T11:54:20",
			"id": "41605bf7-cbce-4af4-be8f-24c3eb561a28",
			"source": "demo",
			"joinKey": "9d1017f5-f768-4637-873c-58b8c262943f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 47
			}
		},
		{
			"deviceTime": "2014-08-06T11:54:20",
			"programmed": 3.1,
			"joinKey": "9d1017f5-f768-4637-873c-58b8c262943f",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "9538fc87-a9ee-470f-9d6b-2f2cb4cdccbb"
		},
		{
			"deviceTime": "2014-08-06T11:55:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05fc57d2-bc73-4406-b9ed-a6813f0b7578"
		},
		{
			"deviceTime": "2014-08-06T12:00:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "737cc0cc-66dc-484e-9623-8a5c5659088e"
		},
		{
			"deviceTime": "2014-08-06T12:05:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6af91b2-1455-44b7-a281-e6ed07c47728"
		},
		{
			"deviceTime": "2014-08-06T12:10:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d792c2b-52d3-42cb-b4b8-1862498ceeaa"
		},
		{
			"deviceTime": "2014-08-06T12:15:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d530c5e1-0857-4445-8033-39b844547357"
		},
		{
			"deviceTime": "2014-08-06T12:20:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5481607-08cd-464f-a82c-0cf4d035f46e"
		},
		{
			"end": "2014-08-06T13:53:01",
			"start": "2014-08-06T12:23:01",
			"percent": 0.75,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "02d62165-0836-487f-9b32-1c14e909a6fb"
		},
		{
			"deviceTime": "2014-08-06T12:25:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac043c97-cc10-491b-b8b1-07cdf08ce6e6"
		},
		{
			"deviceTime": "2014-08-06T12:30:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efb145e3-c66a-424a-b96c-180fea7cb08b"
		},
		{
			"deviceTime": "2014-08-06T12:35:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f46f27d9-671a-4d52-95c4-50bc09819698"
		},
		{
			"deviceTime": "2014-08-06T12:40:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26ed064e-5513-4f40-9834-83fe55055537"
		},
		{
			"deviceTime": "2014-08-06T12:45:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2babbf34-e1bc-47e3-9fd7-48f6ff42e98d"
		},
		{
			"messageText": "Bacon corned beef in ullamco chicken dolore.",
			"parentMessage": "",
			"utcTime": "2014-08-06T12:50:21Z",
			"type": "message",
			"id": "ef31432d-f3e4-4f02-b3b5-0d73778b8569"
		},
		{
			"deviceTime": "2014-08-06T12:50:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82dc0d9c-915f-4428-8328-0a5227c3893a"
		},
		{
			"messageText": "Hamburger boudin ullamco, in ea landjaeger culpa veniam qui. Rump capicola ad chuck, elit incididunt shankle reprehenderit quis non strip steak ut.",
			"parentMessage": "ef31432d-f3e4-4f02-b3b5-0d73778b8569",
			"utcTime": "2014-08-06T12:55:21Z",
			"type": "message",
			"id": "dabcc602-309b-4d59-aee7-56230801881c"
		},
		{
			"deviceTime": "2014-08-06T12:55:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc7a5bb6-a4d5-4e7d-aaa9-a03e3b5155d9"
		},
		{
			"messageText": "Aliquip consectetur shankle, cillum nisi non laborum doner mollit. Porchetta voluptate beef mollit jerky landjaeger ribeye adipisicing. Anim ut capicola, doner proident beef magna ham turkey chuck est short loin shankle brisket.",
			"parentMessage": "ef31432d-f3e4-4f02-b3b5-0d73778b8569",
			"utcTime": "2014-08-06T12:57:21Z",
			"type": "message",
			"id": "add415ae-9db6-4383-8ef6-3126466b54cc"
		},
		{
			"deviceTime": "2014-08-06T13:00:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b62e108d-5d14-49c9-884d-c4cb658c5f55"
		},
		{
			"deviceTime": "2014-08-06T13:05:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1cd3c20-514a-4f9e-8935-6676c6ace4d1"
		},
		{
			"messageText": "Ullamco strip steak id, dolor commodo deserunt spare ribs ground round chuck shank voluptate occaecat bacon. Tri-tip chicken nisi et turkey officia short loin in incididunt pastrami bresaola venison aliqua. Non flank sausage, voluptate in excepteur kevin meatball nostrud in ut incididunt id.",
			"parentMessage": "ef31432d-f3e4-4f02-b3b5-0d73778b8569",
			"utcTime": "2014-08-06T13:10:21Z",
			"type": "message",
			"id": "bb8d6578-30dd-4ebb-942e-ced0605d7c2d"
		},
		{
			"deviceTime": "2014-08-06T13:10:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6552375a-a97e-4fa2-a95d-b4d51494f0f7"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-06T13:14:44",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "44cd97fa-e16c-460a-be9e-3f6a5484871b"
		},
		{
			"deviceTime": "2014-08-06T13:15:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65f88a5f-aa5c-4b4d-a8ac-a2ba57eeedff"
		},
		{
			"messageText": "Bacon jerky et, mollit turducken tail proident pig aliqua consequat ball tip. Pork belly short ribs flank brisket dolore ullamco esse tongue ball tip aute drumstick id commodo do. Enim dolore meatloaf strip steak tenderloin quis brisket eu eiusmod short loin prosciutto consectetur shankle jowl.",
			"parentMessage": "ef31432d-f3e4-4f02-b3b5-0d73778b8569",
			"utcTime": "2014-08-06T13:20:21Z",
			"type": "message",
			"id": "a4132bfe-b92e-4689-bfda-9afa58a8f746"
		},
		{
			"deviceTime": "2014-08-06T13:20:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84d83066-0bd3-42fc-b702-47ee86803ec8"
		},
		{
			"deviceTime": "2014-08-06T13:25:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70e75e02-bd8c-4790-a2a4-11ff854eeafb"
		},
		{
			"messageText": "Ut quis occaecat pork belly tri-tip, hamburger adipisicing dolore porchetta beef pancetta ut bacon flank jerky. Kevin shankle adipisicing turkey bresaola nulla.",
			"parentMessage": "ef31432d-f3e4-4f02-b3b5-0d73778b8569",
			"utcTime": "2014-08-06T13:29:21Z",
			"type": "message",
			"id": "4846545a-3929-468c-89bc-a602d4551924"
		},
		{
			"deviceTime": "2014-08-06T13:30:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70ee435a-8286-40c7-86e9-f703d695ce37"
		},
		{
			"deviceTime": "2014-08-06T13:35:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6642b5ca-56d0-4be4-9529-4bb827e792e2"
		},
		{
			"messageText": "Aute ex pork, irure tail pork loin shankle officia brisket exercitation cupidatat fatback anim nisi. Shank dolore pig dolore tongue salami. Doner rump in pork chop jowl.",
			"parentMessage": "ef31432d-f3e4-4f02-b3b5-0d73778b8569",
			"utcTime": "2014-08-06T13:37:21Z",
			"type": "message",
			"id": "245f9704-6653-4692-87c6-891f50610ed4"
		},
		{
			"deviceTime": "2014-08-06T13:40:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91192c9d-6175-4f3e-af18-9e1707091cc6"
		},
		{
			"deviceTime": "2014-08-06T13:45:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d44c18c9-4f33-40db-917a-726ce34a3429"
		},
		{
			"deviceTime": "2014-08-06T13:50:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1e69b62-392d-418e-b5d3-6885c3c92776"
		},
		{
			"deviceTime": "2014-08-06T13:55:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "565ea986-80a8-4faa-b81d-49e15c82975d"
		},
		{
			"deviceTime": "2014-08-06T14:00:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03d86077-8952-4115-9446-ad162c7bfc67"
		},
		{
			"deviceTime": "2014-08-06T14:05:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b421f628-5180-4f8e-8c98-03f8f1194904"
		},
		{
			"deviceTime": "2014-08-06T14:25:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f22e0096-2363-4322-910b-c9f1a34b7e9b"
		},
		{
			"deviceTime": "2014-08-06T14:30:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c832abe1-3afa-4ccd-83f4-5f23145730b5"
		},
		{
			"deviceTime": "2014-08-06T14:35:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d28cb77-4123-4d7f-9d95-acb8b0d4e311"
		},
		{
			"deviceTime": "2014-08-06T14:40:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53db5db6-7aa4-49f0-b2b8-3391efc60a67"
		},
		{
			"deviceTime": "2014-08-06T14:45:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "290dccd8-3673-449e-9f0d-4c65073fefa7"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-06T14:45:44",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "d2832a95-3d30-46fb-b61e-c43438292ef3",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-06T13:14:44",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "44cd97fa-e16c-460a-be9e-3f6a5484871b"
			}
		},
		{
			"deviceTime": "2014-08-06T14:55:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5210f9e6-d253-48e0-afaa-d17d5a571351"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-06T20:00:00",
			"start": "2014-08-06T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"id": "baad70fd-4bb3-46e2-be6a-93df20b0b0fd",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-06T15:00:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c435652-6e58-47d8-a744-aebd947eb11f"
		},
		{
			"deviceTime": "2014-08-06T15:05:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b641b879-4398-4159-8607-bad2215a7aa3"
		},
		{
			"deviceTime": "2014-08-06T15:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a1e4c15-fff6-488b-8368-6e43dc97e583"
		},
		{
			"deviceTime": "2014-08-06T15:15:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eeb91797-7b64-4d90-8ce1-80e53eeedda5"
		},
		{
			"deviceTime": "2014-08-06T15:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0d3dbb8-39a1-4bec-93ff-4bc7c9284ee7"
		},
		{
			"deviceTime": "2014-08-06T15:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de0eccd1-bb45-4004-a28d-b271d98139c9"
		},
		{
			"deviceTime": "2014-08-06T15:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ee0f635-4e15-4d29-b38a-3a9dc31e81ce"
		},
		{
			"deviceTime": "2014-08-06T15:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5975ab92-05e8-4951-8371-5664621b5070"
		},
		{
			"deviceTime": "2014-08-06T15:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bf60ed2-3775-4d7d-9182-50be18630e83"
		},
		{
			"deviceTime": "2014-08-06T15:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c9ab856-d213-4dad-a4f5-ec31fd7b8567"
		},
		{
			"deviceTime": "2014-08-06T15:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b749449b-789b-4b4e-b632-eaa8b908477e"
		},
		{
			"deviceTime": "2014-08-06T15:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d70f62ba-5025-4e2d-9baa-ff289b650730"
		},
		{
			"deviceTime": "2014-08-06T16:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dde38536-8ae1-4f6a-98cb-2fafc5e22198"
		},
		{
			"deviceTime": "2014-08-06T16:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d078531-f92b-4058-a2fb-669b40f8148a"
		},
		{
			"deviceTime": "2014-08-06T16:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d2b4c8d-2580-42a2-93e6-1967deb14879"
		},
		{
			"deviceTime": "2014-08-06T16:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79e1ef6a-a93a-4844-a271-7a1c2cf1a415"
		},
		{
			"deviceTime": "2014-08-06T16:35:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4b5ccf5-e0b2-4974-9306-03f3e492253d"
		},
		{
			"deviceTime": "2014-08-06T16:40:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d4319f1-0d03-415b-ac9f-8334b8cff3ae"
		},
		{
			"deviceTime": "2014-08-06T16:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fbd048d-4668-4ccc-9fe3-dec81d17675a"
		},
		{
			"deviceTime": "2014-08-06T16:50:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1d93be0-bb72-457e-affe-ade843d0bcca"
		},
		{
			"deviceTime": "2014-08-06T16:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f20524a-0d1c-464a-858b-8cf4c96eed62"
		},
		{
			"deviceTime": "2014-08-06T17:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "593b5385-1554-4941-85e1-b2884ba87626"
		},
		{
			"deviceTime": "2014-08-06T17:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6699977-8983-4a75-9516-c1ef00c88a6c"
		},
		{
			"deviceTime": "2014-08-06T17:10:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "471bcb91-58e1-4c4c-bcab-1e491bd0a312"
		},
		{
			"deviceTime": "2014-08-06T17:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8afefce2-cf6e-4c78-914a-9c513aea5516"
		},
		{
			"deviceTime": "2014-08-06T17:20:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00f2507e-9dbd-4bca-9ece-404f9012247e"
		},
		{
			"deviceTime": "2014-08-06T17:25:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c40fcbd-3313-4630-8551-54454730fe71"
		},
		{
			"deviceTime": "2014-08-06T17:26:01",
			"value": 2.4,
			"source": "demo",
			"recommended": 3.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "503edaf2-bf4f-4aa0-acf5-e7250520e74c"
		},
		{
			"deviceTime": "2014-08-06T17:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "541f8127-82f7-4eaa-b566-67c3e1c40fb4"
		},
		{
			"deviceTime": "2014-08-06T17:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa9ee3a1-4785-4864-8a82-3a18747c423b"
		},
		{
			"deviceTime": "2014-08-06T17:40:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3bbbfdce-1c31-419e-9da5-dc9c12797dc5"
		},
		{
			"deviceTime": "2014-08-06T17:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1a6764b-de60-474c-af57-d9782f76469f"
		},
		{
			"deviceTime": "2014-08-06T17:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d3ee2d0-ff43-4fe9-af4e-ee48b95df335"
		},
		{
			"deviceTime": "2014-08-06T17:55:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a999110-97fc-4409-8467-b4cdf3cca46b"
		},
		{
			"deviceTime": "2014-08-06T18:00:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4047631a-18fe-4fb9-9e32-16e885c7284d"
		},
		{
			"deviceTime": "2014-08-06T18:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98694bf4-71f9-4c22-98ec-652d21369565"
		},
		{
			"deviceTime": "2014-08-06T18:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5f7ce9e-7886-49c5-aec9-761b67b40be8"
		},
		{
			"deviceTime": "2014-08-06T18:15:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b89e65b5-3bb3-46be-8a76-18534d6ca609"
		},
		{
			"deviceTime": "2014-08-06T18:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f31ec0ea-d31d-471a-90c9-a606994a6571"
		},
		{
			"deviceTime": "2014-08-06T18:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b8caee1-585e-4470-b999-16b20af59f84"
		},
		{
			"deviceTime": "2014-08-06T18:30:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82183114-7abd-4659-98c2-6745deafcdf3"
		},
		{
			"deviceTime": "2014-08-06T18:35:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ef01509-51c0-4c90-a84b-16dc0245ad63"
		},
		{
			"deviceTime": "2014-08-06T18:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89517f68-3a3a-473a-9e07-108762d6375b"
		},
		{
			"deviceTime": "2014-08-06T18:50:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57f5825c-3838-48e8-a67c-5800533c224c"
		},
		{
			"deviceTime": "2014-08-06T18:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f6dae80-4c07-4795-9551-f805632b45e9"
		},
		{
			"deviceTime": "2014-08-06T19:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73a62c38-c539-422b-9fc7-e1071440bd35"
		},
		{
			"deviceTime": "2014-08-06T19:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d71e64d4-3e7f-467f-a317-7198beae2992"
		},
		{
			"deviceTime": "2014-08-06T19:10:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9022d490-e10b-4971-9a9f-df4dbd808250"
		},
		{
			"deviceTime": "2014-08-06T19:15:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eae11794-9285-4b3e-a8ea-e29058fc3370"
		},
		{
			"deviceTime": "2014-08-06T19:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df082d7e-c714-4a7f-9a53-6b4af4cb56fa"
		},
		{
			"deviceTime": "2014-08-06T19:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f67563b-59c4-491a-84c9-c0ea49fa9a67"
		},
		{
			"deviceTime": "2014-08-06T19:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7695b140-6008-43d3-851a-8993994b4658"
		},
		{
			"deviceTime": "2014-08-06T19:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0bc35c9-e837-4701-8a1e-a50683036205"
		},
		{
			"deviceTime": "2014-08-06T19:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8d014d7-19ce-49fb-aa56-9403554e2b24"
		},
		{
			"deviceTime": "2014-08-06T19:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91b7288c-d895-45e8-a8fb-81ee906f478c"
		},
		{
			"deviceTime": "2014-08-06T19:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ce3c419-e171-4640-b65e-27f73636c0dc"
		},
		{
			"deviceTime": "2014-08-06T19:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5e84632-003d-447c-ad14-4d0fe720ee8c"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-07T00:00:00",
			"start": "2014-08-06T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "92da84b4-a172-46d3-892d-e72699a044ce"
		},
		{
			"deviceTime": "2014-08-06T20:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "febf4328-46b4-461a-9774-f0e19afa59d5"
		},
		{
			"deviceTime": "2014-08-06T20:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b37ec7af-2671-4de5-ba3a-3fd5e0207722"
		},
		{
			"deviceTime": "2014-08-06T20:10:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2a0d44f-5c5f-49bc-a13c-c2b6a19f8f6b"
		},
		{
			"deviceTime": "2014-08-06T20:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2d0e036-980a-4a82-9538-7c6844c5df09"
		},
		{
			"deviceTime": "2014-08-06T20:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8be39eb6-ebaf-40f6-aff8-781774520b45"
		},
		{
			"deviceTime": "2014-08-06T20:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b12fc347-4d4b-4a42-ab6e-ea0f0f0b3607"
		},
		{
			"deviceTime": "2014-08-06T20:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ee58da1-8f24-4ccf-92e4-ea5274ce0bb2"
		},
		{
			"deviceTime": "2014-08-06T20:35:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d12ea8ff-7b07-4cbc-a470-8ec0304908ea"
		},
		{
			"deviceTime": "2014-08-06T20:40:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fca834f-a8ea-489d-90c1-43bc1bf236ee"
		},
		{
			"deviceTime": "2014-08-06T20:45:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7ed6617-63b8-4868-9d68-f271fadf6896"
		},
		{
			"deviceTime": "2014-08-06T21:05:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d97a174-b249-4000-a167-7256427bb10e"
		},
		{
			"deviceTime": "2014-08-06T21:10:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1fca87db-4c07-479a-b85a-d80d36ca3848"
		},
		{
			"deviceTime": "2014-08-06T21:15:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26b2b532-7332-4a07-b45e-08654879e643"
		},
		{
			"deviceTime": "2014-08-06T21:30:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2274bccb-bf19-45f9-80b6-df8b07ab4902"
		},
		{
			"deviceTime": "2014-08-06T21:55:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "007f97d6-6882-499d-8f26-5c06851e588f"
		},
		{
			"deviceTime": "2014-08-06T22:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cf26187-4a80-420e-b611-4b06bb4f6558"
		},
		{
			"deviceTime": "2014-08-06T22:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88a05d7d-d5c5-4ff2-82bf-114658c55f2b"
		},
		{
			"deviceTime": "2014-08-06T22:40:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65dcee06-2c32-4715-afe0-3b86a950872a"
		},
		{
			"deviceTime": "2014-08-06T22:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3335dccc-aebc-41ad-92a3-e2a5018c0fa5"
		},
		{
			"deviceTime": "2014-08-06T22:55:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44238e61-7b28-48d3-8085-72746551cf0f"
		},
		{
			"deviceTime": "2014-08-06T23:00:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a71a7a8-2384-43aa-bf4d-6c90d53d7e61"
		},
		{
			"deviceTime": "2014-08-06T23:05:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d97d529f-e6cf-4f4c-8c46-b35c41e01178"
		},
		{
			"deviceTime": "2014-08-06T23:10:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e81dd91-2204-4486-93ae-c90f737af731"
		},
		{
			"deviceTime": "2014-08-06T23:10:24",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "73c8f6ba-20ca-46f3-83d5-456a17a6eee5"
		},
		{
			"deviceTime": "2014-08-06T23:10:24",
			"value": 28,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "3ecfd4c7-9306-4613-b429-22ef9032fdad"
		},
		{
			"deviceTime": "2014-08-06T23:10:24",
			"id": "3ecfd4c7-9306-4613-b429-22ef9032fdad",
			"source": "demo",
			"joinKey": "f198ea7d-b03e-4e00-a773-ede2661abcd5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 28
			}
		},
		{
			"deviceTime": "2014-08-06T23:10:24",
			"programmed": 1.9,
			"joinKey": "f198ea7d-b03e-4e00-a773-ede2661abcd5",
			"value": 1.9,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "748465d4-48ae-4c96-838c-a7ba1dfa042a"
		},
		{
			"deviceTime": "2014-08-06T23:15:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4b41bb4-11a7-4a21-a373-1a1861446a4d"
		},
		{
			"deviceTime": "2014-08-06T23:20:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c334358-d689-4ce8-a2f3-9e26cd7797cd"
		},
		{
			"deviceTime": "2014-08-06T23:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13210f87-f64c-4951-ae7e-7e6540055b4d"
		},
		{
			"deviceTime": "2014-08-06T23:30:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cb6e69f-14ff-434f-8519-78d02eef0f6e"
		},
		{
			"deviceTime": "2014-08-06T23:35:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e41b0d2d-abf7-4008-9144-13ddc78daaeb"
		},
		{
			"deviceTime": "2014-08-06T23:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fce74699-07e5-48e4-b136-6e536ca3e6b3"
		},
		{
			"deviceTime": "2014-08-06T23:45:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20d422ea-a652-45b9-96c5-15ffc342a4c3"
		},
		{
			"deviceTime": "2014-08-06T23:50:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47dd8687-29db-45ad-98b3-92b2e4a76836"
		},
		{
			"deviceTime": "2014-08-06T23:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6e27c9d-e0a5-4167-9efe-ca7337a0b43e"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-07T02:00:00",
			"start": "2014-08-07T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "e5b58828-b7df-4d41-b834-6f5ad2834af7"
		},
		{
			"deviceTime": "2014-08-07T00:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a113afb-9baf-46ed-872e-ec05c0b552e6"
		},
		{
			"deviceTime": "2014-08-07T00:05:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ad934eb-0af1-4e93-b722-378f346cb9a1"
		},
		{
			"deviceTime": "2014-08-07T00:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3488b463-7a7e-4e76-98b6-a0a4e9be1faa"
		},
		{
			"deviceTime": "2014-08-07T00:15:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7cdbfd4-de34-47c6-bfe5-02013fcefa3d"
		},
		{
			"deviceTime": "2014-08-07T00:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da73648b-4b84-4c9f-9fcb-f0c4fbc64be5"
		},
		{
			"end": "2014-08-07T07:55:01",
			"start": "2014-08-07T00:25:01",
			"percent": 0.15,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 27000000,
			"type": "basal-rate-segment",
			"id": "c7e12308-6875-42b1-b173-744f34e910b9"
		},
		{
			"deviceTime": "2014-08-07T00:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dae8fd8b-fd90-4bf7-8d80-b5f8aba32d4e"
		},
		{
			"deviceTime": "2014-08-07T00:30:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2340fef5-289f-4288-877f-3a8244e154ca"
		},
		{
			"deviceTime": "2014-08-07T00:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53b4c382-01f8-45d6-820c-a0038a7f2705"
		},
		{
			"deviceTime": "2014-08-07T00:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d6d82c6-def1-42d6-abb2-d5ef236699cb"
		},
		{
			"deviceTime": "2014-08-07T00:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e22906ca-e720-4f38-a454-2a5a6ce020a6"
		},
		{
			"deviceTime": "2014-08-07T00:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b14a955-994b-4490-9f36-801a07da9224"
		},
		{
			"deviceTime": "2014-08-07T00:55:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5d160e7-ba16-4cd7-9da7-1879e0d3fb84"
		},
		{
			"deviceTime": "2014-08-07T01:00:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0065ae6c-67df-48ce-8b65-24afecafbb41"
		},
		{
			"deviceTime": "2014-08-07T01:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df78cc43-188b-42a5-9634-ee0fa912fa54"
		},
		{
			"deviceTime": "2014-08-07T01:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3946257c-6a0d-496c-849e-fff396f081b4"
		},
		{
			"deviceTime": "2014-08-07T01:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3da5093e-364a-49f0-bfb3-85ea6deae866"
		},
		{
			"deviceTime": "2014-08-07T01:20:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc2c0b6a-3f09-442a-a33f-7346c7a8ded5"
		},
		{
			"deviceTime": "2014-08-07T01:25:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1ac5af5-be45-44ab-a281-d89af71332f0"
		},
		{
			"deviceTime": "2014-08-07T01:30:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb8a8146-9717-497a-a6ee-2d0c1997e75c"
		},
		{
			"deviceTime": "2014-08-07T01:35:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71457579-9c48-44b0-8ce9-98e5752c9248"
		},
		{
			"deviceTime": "2014-08-07T01:40:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81630485-6a3d-4218-ad68-5d74ab209217"
		},
		{
			"deviceTime": "2014-08-07T01:45:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2084e045-a681-4612-b990-c6eda54a08aa"
		},
		{
			"deviceTime": "2014-08-07T01:50:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc33954a-a6ed-40c1-a270-7aaaed7b5d90"
		},
		{
			"deviceTime": "2014-08-07T01:55:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adfa85a3-35c2-4d62-9893-0782227c50a5"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-07T04:00:00",
			"start": "2014-08-07T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "27e86f8e-3477-4e24-8ef6-fed4244ff17e"
		},
		{
			"deviceTime": "2014-08-07T02:00:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e20b07d-f83b-4f77-a7cf-f8ffbb495df0"
		},
		{
			"deviceTime": "2014-08-07T02:05:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd273973-6bd7-4fc2-a3e9-dd019376f44d"
		},
		{
			"deviceTime": "2014-08-07T02:10:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79c7c20d-0204-4d20-8f96-350adea5f4bd"
		},
		{
			"deviceTime": "2014-08-07T02:15:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0f70e58-ec77-49f4-924f-122399bf230a"
		},
		{
			"deviceTime": "2014-08-07T02:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2911f5d-99a8-4f5b-a9b0-22a5e6a75834"
		},
		{
			"deviceTime": "2014-08-07T02:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eda4a153-8e63-473b-b6ba-ca5cc1d736c2"
		},
		{
			"deviceTime": "2014-08-07T02:30:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cfc8923-6898-4bb1-8703-9be8c38a142c"
		},
		{
			"deviceTime": "2014-08-07T02:35:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f59d03a2-dfa3-445e-adc5-a58584913949"
		},
		{
			"deviceTime": "2014-08-07T02:40:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f27a515-eec6-47ba-8170-03264f229bd3"
		},
		{
			"deviceTime": "2014-08-07T02:45:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5995df3-dc9c-4faa-bd97-a5ebaadbf79b"
		},
		{
			"deviceTime": "2014-08-07T02:50:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d576cc26-3205-4494-8679-fb31e1c5fbaf"
		},
		{
			"deviceTime": "2014-08-07T02:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4876ab3c-ee8e-4158-bf73-ec9d48c96730"
		},
		{
			"deviceTime": "2014-08-07T03:00:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "165d1d43-8d72-4e35-99c6-7d70d0892e99"
		},
		{
			"deviceTime": "2014-08-07T03:05:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06b302b8-34d0-4cb4-9e2d-fb211ad406f3"
		},
		{
			"deviceTime": "2014-08-07T03:10:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85fdeba6-4c63-47e9-8a00-496ac373d4b7"
		},
		{
			"deviceTime": "2014-08-07T03:15:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "139f3035-38c1-49d5-bfb7-cf6c4e00458a"
		},
		{
			"deviceTime": "2014-08-07T03:20:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfacdabb-aa32-425b-b67b-d782efae1efa"
		},
		{
			"deviceTime": "2014-08-07T03:25:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ead70961-9c0a-48ac-b95d-36b3063298ab"
		},
		{
			"deviceTime": "2014-08-07T03:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7845d2fe-2c63-4e92-98aa-dfd132058687"
		},
		{
			"deviceTime": "2014-08-07T03:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f32535b7-1a35-47b4-89d3-2efde5104d52"
		},
		{
			"deviceTime": "2014-08-07T03:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7453a0c1-79cf-49e2-8543-ee083a3638af"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-07T05:00:00",
			"start": "2014-08-07T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "8855268b-6935-40ea-9851-935007f2b4bd"
		},
		{
			"deviceTime": "2014-08-07T04:00:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7cc5401d-aa1c-49fa-a41d-ead0b5322018"
		},
		{
			"deviceTime": "2014-08-07T04:05:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4daaa271-8394-4cd6-a450-dffd70fb8f97"
		},
		{
			"deviceTime": "2014-08-07T04:10:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e58d2d5b-fd8e-4529-bac8-e98b59ce006e"
		},
		{
			"deviceTime": "2014-08-07T04:13:59",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "8b6ef5e3-94eb-45b6-b193-1e3459d9dfbb"
		},
		{
			"deviceTime": "2014-08-07T04:13:59",
			"value": 26,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "31c687db-e74d-4a40-9fe2-8ca2d5b1c6ed"
		},
		{
			"deviceTime": "2014-08-07T04:13:59",
			"id": "31c687db-e74d-4a40-9fe2-8ca2d5b1c6ed",
			"source": "demo",
			"joinKey": "64f1266f-a964-48af-a7d4-1712807f4e67",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 26
			}
		},
		{
			"deviceTime": "2014-08-07T04:13:59",
			"programmed": 1.7,
			"joinKey": "64f1266f-a964-48af-a7d4-1712807f4e67",
			"value": 1.7,
			"source": "demo",
			"recommended": 1.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "566240eb-2933-4b4b-b966-ae7c8853d261"
		},
		{
			"deviceTime": "2014-08-07T04:15:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55d24fb6-4b9b-4090-8874-aad0aebf6b1d"
		},
		{
			"deviceTime": "2014-08-07T04:20:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac658692-3bbf-4666-8ffa-c39d36367f14"
		},
		{
			"deviceTime": "2014-08-07T04:25:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "388648f1-be7f-4c9f-853d-f50141cd5a2a"
		},
		{
			"deviceTime": "2014-08-07T04:30:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad606863-bd0f-4a63-8c6e-ca454f7f32da"
		},
		{
			"deviceTime": "2014-08-07T04:35:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f1fbd8f-e654-4688-8545-b6da53a91e3e"
		},
		{
			"deviceTime": "2014-08-07T04:40:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61de07fb-56c8-4859-a0c6-9495f4b7b3a6"
		},
		{
			"deviceTime": "2014-08-07T04:45:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b30f0a3-1796-4195-914f-78f010765f99"
		},
		{
			"deviceTime": "2014-08-07T04:50:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff188262-cbc6-4369-8073-5992b7a4c0b4"
		},
		{
			"deviceTime": "2014-08-07T04:55:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fbf0a01-fe7d-4dc3-bc74-b2b82051f0a8"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-07T06:00:00",
			"start": "2014-08-07T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "5e49e973-02e8-4723-8a50-d9c905d0f268"
		},
		{
			"deviceTime": "2014-08-07T05:00:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15a4e2fb-8730-4bd4-b867-38564fd0e563"
		},
		{
			"deviceTime": "2014-08-07T05:05:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "183bc381-273a-4610-b6d2-389bf6096637"
		},
		{
			"deviceTime": "2014-08-07T05:10:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77cbed07-ca74-4f53-872a-8ab4d77f00fe"
		},
		{
			"deviceTime": "2014-08-07T05:15:22",
			"value": 218,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "714b391a-79cd-4fd4-84d8-49d9e7ac3229"
		},
		{
			"deviceTime": "2014-08-07T05:20:22",
			"value": 223,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "778280a1-7d22-4633-bd1c-43ddb04ff665"
		},
		{
			"deviceTime": "2014-08-07T05:25:22",
			"value": 218,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7df9e16a-a713-4559-88fc-92799a00702b"
		},
		{
			"deviceTime": "2014-08-07T05:30:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ded30878-5953-40c4-829c-f0bf24cba6c7"
		},
		{
			"deviceTime": "2014-08-07T05:35:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f343d15-06e1-4a4c-9d4e-ad8db40889a7"
		},
		{
			"deviceTime": "2014-08-07T05:40:22",
			"value": 232,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0898ffb4-e4f5-48eb-99af-fd943437c134"
		},
		{
			"deviceTime": "2014-08-07T05:45:22",
			"value": 242,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bf3ca95-d479-4da0-9c55-273ddfb7141f"
		},
		{
			"deviceTime": "2014-08-07T05:50:22",
			"value": 248,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "781efc5a-ec3e-46c9-82a7-a08c2fa90cec"
		},
		{
			"deviceTime": "2014-08-07T05:55:22",
			"value": 241,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4863e494-298c-42fe-843d-f65a4c6107c5"
		},
		{
			"delivered": 1,
			"end": "2014-08-07T09:00:00",
			"start": "2014-08-07T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "0a5d15cf-d22f-4560-b520-169eb67e9019"
		},
		{
			"deviceTime": "2014-08-07T06:00:22",
			"value": 218,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56481b28-6c1b-4304-bb4a-c547e40057b5"
		},
		{
			"deviceTime": "2014-08-07T06:05:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26f71757-1352-43bc-a23d-c645ff7cb491"
		},
		{
			"deviceTime": "2014-08-07T06:10:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b9a5cd3-59e7-43b5-b757-26bdb42e4722"
		},
		{
			"deviceTime": "2014-08-07T06:15:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf71c807-a033-4a09-93b6-77f46c85db89"
		},
		{
			"deviceTime": "2014-08-07T06:20:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aaeabf3b-8b31-438f-b818-7d07a12f2e9b"
		},
		{
			"deviceTime": "2014-08-07T06:25:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db520462-c032-4852-b0ea-ad8efc77e123"
		},
		{
			"deviceTime": "2014-08-07T06:30:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad2a8116-a36b-4b02-ba7b-8d03b51df2b7"
		},
		{
			"deviceTime": "2014-08-07T06:35:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "081bbc0b-9e7e-43f3-9f9a-c16496fa774a"
		},
		{
			"deviceTime": "2014-08-07T06:40:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a5d8ca6-d10f-4cf6-8e2e-2bc489d69df0"
		},
		{
			"deviceTime": "2014-08-07T06:45:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80d300b6-f7b7-4cba-a5f5-10085258ba9f"
		},
		{
			"deviceTime": "2014-08-07T06:50:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfd1dbf0-0250-487d-a6ab-3fe1b43d2759"
		},
		{
			"deviceTime": "2014-08-07T06:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc3fc860-7f36-4c2e-8164-0027fd28c68d"
		},
		{
			"deviceTime": "2014-08-07T07:00:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bf57cd9-ddc2-4c66-ba2e-06528c7e60cc"
		},
		{
			"deviceTime": "2014-08-07T07:05:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3b7cccb-05c1-4181-b412-66d0b3793c37"
		},
		{
			"deviceTime": "2014-08-07T07:08:33",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "dd446eda-d320-4aff-8a22-8df15a146e2c"
		},
		{
			"deviceTime": "2014-08-07T07:10:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6786c759-b95c-4795-9b43-1eca3accc352"
		},
		{
			"deviceTime": "2014-08-07T07:15:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21a16020-2a76-46a7-9b1f-6b6a820a936d"
		},
		{
			"deviceTime": "2014-08-07T07:20:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a0b3088-6dff-480b-8c37-158c88913cc1"
		},
		{
			"deviceTime": "2014-08-07T07:23:02",
			"value": 226,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "91192b94-8b43-4c14-92a3-b537b9615e33"
		},
		{
			"deviceTime": "2014-08-07T07:23:02",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a26dae23-f1fb-4a1e-ae28-18846b18ffbc"
		},
		{
			"deviceTime": "2014-08-07T07:23:02",
			"id": "a26dae23-f1fb-4a1e-ae28-18846b18ffbc",
			"source": "demo",
			"joinKey": "802111ea-4a45-4e48-8297-a1bbcf13113a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 47
			}
		},
		{
			"deviceTime": "2014-08-07T07:23:02",
			"programmed": 3.1,
			"joinKey": "802111ea-4a45-4e48-8297-a1bbcf13113a",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "a39da599-dfa5-45f4-95bf-d318382416b3"
		},
		{
			"deviceTime": "2014-08-07T07:25:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33daa5cb-eedb-4628-8b29-1d18b84378b8"
		},
		{
			"deviceTime": "2014-08-07T07:30:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93ba20ee-f5b6-4500-8890-7d944e01be1e"
		},
		{
			"deviceTime": "2014-08-07T07:35:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "571957b6-a55e-429e-87f2-c27b8be8747f"
		},
		{
			"deviceTime": "2014-08-07T07:40:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfb5fa58-fb27-4909-ace9-885864aaf99a"
		},
		{
			"deviceTime": "2014-08-07T07:45:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c428df44-815a-48cb-a7e2-0352db510edb"
		},
		{
			"deviceTime": "2014-08-07T07:50:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b24f851-481a-4050-b92d-366aa06fa8d5"
		},
		{
			"deviceTime": "2014-08-07T07:55:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6dba9d62-55ad-439d-980f-4e3c7665cb95"
		},
		{
			"deviceTime": "2014-08-07T08:00:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44414333-9112-433e-a67e-a0771729ce4c"
		},
		{
			"deviceTime": "2014-08-07T08:05:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b8cb048-4d1a-45dd-8759-c3971567efb5"
		},
		{
			"deviceTime": "2014-08-07T08:10:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e58a60ba-7de6-4e46-85de-373bfa3f8011"
		},
		{
			"deviceTime": "2014-08-07T08:15:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0150b131-7df2-4931-8bcd-111ac80ca3de"
		},
		{
			"deviceTime": "2014-08-07T08:20:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f1d12b8-a1df-4e53-ba78-d0a1ef3dafda"
		},
		{
			"deviceTime": "2014-08-07T08:25:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca00754d-16ab-4cde-b6aa-321b6ca450a0"
		},
		{
			"deviceTime": "2014-08-07T08:30:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66be0568-bccb-4b51-91b8-2fffdebed65e"
		},
		{
			"deviceTime": "2014-08-07T08:33:52",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "9f8710dc-e644-4aa2-9c10-079fa36ecb5a"
		},
		{
			"deviceTime": "2014-08-07T08:33:52",
			"value": 10,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "acf6d4df-20de-4078-b2c6-89a7ef1cfeea"
		},
		{
			"deviceTime": "2014-08-07T08:33:52",
			"id": "acf6d4df-20de-4078-b2c6-89a7ef1cfeea",
			"source": "demo",
			"joinKey": "3f00bf37-b83e-4db0-9a31-efdb620680a8",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 10
			}
		},
		{
			"deviceTime": "2014-08-07T08:33:52",
			"programmed": 0.7,
			"joinKey": "3f00bf37-b83e-4db0-9a31-efdb620680a8",
			"value": 0.7,
			"source": "demo",
			"recommended": 0.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "f2880fa3-13ac-4357-99a6-6af20f7cd9ca"
		},
		{
			"deviceTime": "2014-08-07T08:35:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bdab15c-a1a8-491f-ad37-e328b7b174e6"
		},
		{
			"deviceTime": "2014-08-07T08:40:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f98a4464-d92c-449d-8178-4efe12566d12"
		},
		{
			"deviceTime": "2014-08-07T08:45:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c875b113-3e5b-4926-a49e-bf35179eace1"
		},
		{
			"deviceTime": "2014-08-07T08:50:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90e5e728-98f4-413b-8641-33df8d908ea1"
		},
		{
			"deviceTime": "2014-08-07T08:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e97c8dff-0dae-464e-8e31-f5cbb6faf9a8"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-07T15:00:00",
			"start": "2014-08-07T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "c21b8cd3-0d60-403f-8a9e-1bed02d52c15"
		},
		{
			"deviceTime": "2014-08-07T09:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c1a617e-04f1-4008-ac5f-faf0a0d658a3"
		},
		{
			"deviceTime": "2014-08-07T09:05:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a238a8d-35f9-4ab3-ab5f-c756f70b3df0"
		},
		{
			"deviceTime": "2014-08-07T09:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89034dd6-4e74-4121-8e3f-e41cf3f3b3ee"
		},
		{
			"deviceTime": "2014-08-07T09:15:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd87462b-0441-4ee3-9b8f-b3b2fd7e0e9f"
		},
		{
			"deviceTime": "2014-08-07T09:15:24",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "7bb18d73-dc09-4d9b-9b08-5bb8601f5f5d"
		},
		{
			"deviceTime": "2014-08-07T09:15:24",
			"value": 22,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "3d9fdaeb-2703-4135-aa59-f57f1f221a88"
		},
		{
			"deviceTime": "2014-08-07T09:15:24",
			"id": "3d9fdaeb-2703-4135-aa59-f57f1f221a88",
			"source": "demo",
			"joinKey": "83eb150e-56b4-42b0-8e46-8ee352c606e7",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 22
			}
		},
		{
			"deviceTime": "2014-08-07T09:15:24",
			"programmed": 1.5,
			"joinKey": "83eb150e-56b4-42b0-8e46-8ee352c606e7",
			"value": 1.5,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "bfc06c00-0a17-409f-863e-f615d9601efc"
		},
		{
			"deviceTime": "2014-08-07T09:20:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47f16ddf-dd17-4053-89d2-a1d2b0a755d5"
		},
		{
			"deviceTime": "2014-08-07T09:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc04c2bb-e82c-4170-8d99-fb3cb67086a9"
		},
		{
			"deviceTime": "2014-08-07T09:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbf5f996-26bd-4735-92d2-f62858543ef0"
		},
		{
			"deviceTime": "2014-08-07T09:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a1eedbf-5aff-4f65-8415-584736492b5b"
		},
		{
			"deviceTime": "2014-08-07T09:40:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "275847e0-1277-4b06-8c96-b5b535ae4b91"
		},
		{
			"deviceTime": "2014-08-07T09:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "958f1fd4-3092-4e6e-9b38-6e442e612449"
		},
		{
			"deviceTime": "2014-08-07T09:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eb9f644-3e1a-46f1-b184-e82ea02913a6"
		},
		{
			"deviceTime": "2014-08-07T09:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4af5117e-37d6-495b-86fe-0105e6d03266"
		},
		{
			"deviceTime": "2014-08-07T10:00:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ca5d7ef-4264-433d-ad41-0daa369f32cb"
		},
		{
			"deviceTime": "2014-08-07T10:05:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4097a152-87da-4637-b3cd-be56843f2387"
		},
		{
			"deviceTime": "2014-08-07T10:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "323a5548-54c5-4ab6-bebc-a676eca9ff8c"
		},
		{
			"deviceTime": "2014-08-07T10:15:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebe23849-927d-4917-a3e8-c0db4d9b174b"
		},
		{
			"deviceTime": "2014-08-07T10:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38749a36-5d15-4b96-b907-f6ce30cec504"
		},
		{
			"messageText": "Do dolor quis aliqua commodo. Kielbasa boudin id, est eiusmod tri-tip shankle strip steak ground round pork. Hamburger veniam commodo adipisicing.",
			"parentMessage": "",
			"utcTime": "2014-08-07T10:22:33Z",
			"type": "message",
			"id": "54217ee3-191b-4ee7-bf35-97fa576aeea7"
		},
		{
			"messageText": "Kevin in deserunt pig nulla, ut pork loin.",
			"parentMessage": "54217ee3-191b-4ee7-bf35-97fa576aeea7",
			"utcTime": "2014-08-07T10:24:33Z",
			"type": "message",
			"id": "06dc7a45-49eb-4bfd-bace-4e361f677ab0"
		},
		{
			"deviceTime": "2014-08-07T10:25:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96f43391-81da-48da-a7b4-b1f24bc39b06"
		},
		{
			"deviceTime": "2014-08-07T10:30:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "931dc211-d698-469b-b457-08e4023e2802"
		},
		{
			"deviceTime": "2014-08-07T10:35:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e7b20a2-2c67-428a-bf6f-b40ba4a27f74"
		},
		{
			"deviceTime": "2014-08-07T10:40:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3e8e219-df52-4ccf-a6d3-46f96a600f20"
		},
		{
			"deviceTime": "2014-08-07T10:45:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac18187a-3379-4c6a-b667-4d1dff0efbd9"
		},
		{
			"messageText": "Irure tri-tip anim shoulder sed. Pork chop pork loin minim, velit ribeye meatball reprehenderit dolor sirloin corned beef landjaeger pancetta. Pork chop commodo pastrami laboris in.",
			"parentMessage": "54217ee3-191b-4ee7-bf35-97fa576aeea7",
			"utcTime": "2014-08-07T10:48:33Z",
			"type": "message",
			"id": "80c0ff85-d83b-4775-9730-a3b854373192"
		},
		{
			"deviceTime": "2014-08-07T10:50:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1df9b775-d661-4eb7-b7d3-0583e2d5088d"
		},
		{
			"messageText": "Ham reprehenderit aliquip brisket enim. Mollit aliquip turducken ham hock, venison frankfurter meatball irure chicken. Turducken sunt sed boudin pork loin ex id.",
			"parentMessage": "54217ee3-191b-4ee7-bf35-97fa576aeea7",
			"utcTime": "2014-08-07T10:50:33Z",
			"type": "message",
			"id": "9b57b94c-7b42-4689-b1fb-9749e7c4e5ce"
		},
		{
			"deviceTime": "2014-08-07T10:55:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67f212d4-9b31-4e87-9ac9-c5c1b380d7b4"
		},
		{
			"deviceTime": "2014-08-07T11:00:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5dd8b7d-f662-4a79-a377-ecbd4a0d4f84"
		},
		{
			"messageText": "Occaecat minim proident tongue.",
			"parentMessage": "54217ee3-191b-4ee7-bf35-97fa576aeea7",
			"utcTime": "2014-08-07T11:04:33Z",
			"type": "message",
			"id": "d7b559ef-740f-4bce-beab-0f8cad6f941f"
		},
		{
			"deviceTime": "2014-08-07T11:05:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a89bfbaf-38c8-46a5-98cd-1f64486acde1"
		},
		{
			"deviceTime": "2014-08-07T11:10:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "281d2153-364e-493a-89be-f9527dbb5a06"
		},
		{
			"deviceTime": "2014-08-07T11:15:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02d5950d-3eec-4c45-8e84-f57fde6f5d1b"
		},
		{
			"deviceTime": "2014-08-07T11:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32b80995-b33b-492e-b0ac-3f60ab6609f0"
		},
		{
			"deviceTime": "2014-08-07T11:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e76046d-6452-4eb5-8659-460cbfc4b79c"
		},
		{
			"deviceTime": "2014-08-07T11:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aea6c275-206c-48c8-97e3-6d09a3995e43"
		},
		{
			"deviceTime": "2014-08-07T11:35:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "122e5060-6831-432e-9fb5-cc81505061b6"
		},
		{
			"deviceTime": "2014-08-07T11:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df4c3d1b-95f8-45d7-935c-dbd2df3928db"
		},
		{
			"deviceTime": "2014-08-07T11:45:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71a027d1-b1cf-4297-aad6-494f17146a3a"
		},
		{
			"deviceTime": "2014-08-07T11:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aad5192a-0519-4f01-acad-fd4ceaaac16f"
		},
		{
			"deviceTime": "2014-08-07T11:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a919b50-bf86-47d8-8eca-dc2a0bcebe39"
		},
		{
			"deviceTime": "2014-08-07T12:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80cd316e-aa6c-4af0-a484-0d2d4f8cd439"
		},
		{
			"deviceTime": "2014-08-07T12:05:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db945a3c-8a0a-4dad-a877-b807fb5e695f"
		},
		{
			"deviceTime": "2014-08-07T12:10:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14fcf8c1-1657-424f-8160-005fe2f3c3c2"
		},
		{
			"deviceTime": "2014-08-07T12:15:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82e9aa4e-8e49-4235-9c30-0354974da825"
		},
		{
			"deviceTime": "2014-08-07T12:20:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2975dfc3-7b3a-4b93-9afb-c085d5b6975e"
		},
		{
			"end": "2014-08-07T17:52:01",
			"start": "2014-08-07T12:22:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"id": "b7c63e66-8f73-4512-85cd-eb0240b38317",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 19800000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-07T12:25:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa3d7749-5cdd-447a-aa2f-2e6947a5e08e"
		},
		{
			"deviceTime": "2014-08-07T12:30:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "119cde2d-9610-4df9-81e0-697d912718e7"
		},
		{
			"deviceTime": "2014-08-07T12:30:49",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "1af51fcf-7c6c-46d3-83d6-17a166a3fd00"
		},
		{
			"deviceTime": "2014-08-07T12:30:49",
			"value": 32,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "498aaf2c-a363-4f38-a4fb-cf3b88229c80"
		},
		{
			"deviceTime": "2014-08-07T12:30:49",
			"id": "498aaf2c-a363-4f38-a4fb-cf3b88229c80",
			"source": "demo",
			"joinKey": "50150d25-d562-4f4d-887d-da3dfd04e9c4",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 32
			}
		},
		{
			"deviceTime": "2014-08-07T12:30:49",
			"programmed": 2.1,
			"joinKey": "50150d25-d562-4f4d-887d-da3dfd04e9c4",
			"value": 2.1,
			"source": "demo",
			"recommended": 2.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "ee5dff7e-40ac-40f8-aad4-f17b3ae236ab"
		},
		{
			"deviceTime": "2014-08-07T12:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e1fa9ab-0913-4533-8b4a-bd99123bb72f"
		},
		{
			"deviceTime": "2014-08-07T12:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4f9cbc2-221c-422e-836e-8d2bc17da391"
		},
		{
			"deviceTime": "2014-08-07T12:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ebdfad0-2e9a-43a7-a0ab-124770bee923"
		},
		{
			"deviceTime": "2014-08-07T12:50:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ab84bd3-45aa-4bbe-bcd1-5f7ba2ec2466"
		},
		{
			"deviceTime": "2014-08-07T12:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c443e29-b677-4853-9c37-c7f8bfbca2cd"
		},
		{
			"deviceTime": "2014-08-07T13:00:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "476547e2-0f36-4be5-9bdd-72f9d3852bfc"
		},
		{
			"deviceTime": "2014-08-07T13:05:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf7f22eb-811c-4c01-aaab-18d52caafe79"
		},
		{
			"deviceTime": "2014-08-07T13:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b05584ef-4d67-4abe-9a23-f2eb58823c38"
		},
		{
			"deviceTime": "2014-08-07T13:12:29",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b76a8751-a553-451d-a5b5-36578cb5c321"
		},
		{
			"deviceTime": "2014-08-07T13:15:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bd101c2-f69c-454b-b336-36daa2fc933e"
		},
		{
			"deviceTime": "2014-08-07T13:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f373a10-1814-4724-8e92-4de9d05cb768"
		},
		{
			"deviceTime": "2014-08-07T13:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb882cfb-9313-46e6-a5f8-f95096218a63"
		},
		{
			"deviceTime": "2014-08-07T13:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd08859f-c02c-4baa-bf61-37841e663bc9"
		},
		{
			"deviceTime": "2014-08-07T13:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f222030-747c-4b61-b4ce-49c1b22bf35d"
		},
		{
			"deviceTime": "2014-08-07T13:40:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "342bb9d5-1031-4ef1-97be-0ae95ccd9477"
		},
		{
			"deviceTime": "2014-08-07T13:45:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbe2b9a6-0d0c-4ce6-86ea-28d220e7cb55"
		},
		{
			"deviceTime": "2014-08-07T13:50:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66102751-4441-4746-9c6d-c82fa6ea9e3b"
		},
		{
			"deviceTime": "2014-08-07T13:55:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0eaad404-7c5f-4f18-b9dd-a76b36ae6511"
		},
		{
			"deviceTime": "2014-08-07T14:00:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f51032e-2571-455c-9d27-ccd7435526e0"
		},
		{
			"deviceTime": "2014-08-07T14:05:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c626edf8-3bea-48c3-a254-a07d58b505bf"
		},
		{
			"deviceTime": "2014-08-07T14:25:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3eb3e5cb-83eb-4ce5-82e5-bca6ca67253d"
		},
		{
			"deviceTime": "2014-08-07T14:30:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c58bfba0-22b9-4c52-8db9-02cc181a3737"
		},
		{
			"deviceTime": "2014-08-07T14:35:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5bd31f4-1955-4ea8-91de-aa5d7c1ce4a2"
		},
		{
			"deviceTime": "2014-08-07T14:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65082237-07f0-44cf-918e-8d2f45a17278"
		},
		{
			"deviceTime": "2014-08-07T14:45:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0618d4cd-7e26-433f-81d1-46cee0658704"
		},
		{
			"deviceTime": "2014-08-07T14:50:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d33cde0e-167b-43ba-ba85-b40a11a1fa40"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-07T20:00:00",
			"start": "2014-08-07T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "a469d6cd-0925-4554-93ec-d57cf9a17b3e"
		},
		{
			"deviceTime": "2014-08-07T15:00:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffd6057e-d0b2-405a-bafa-b1357604cb14"
		},
		{
			"deviceTime": "2014-08-07T15:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99e70f7a-3adb-4d82-88c9-77e503fd81be"
		},
		{
			"deviceTime": "2014-08-07T15:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e00770b-cde4-40c9-bbe4-340473dfc96f"
		},
		{
			"deviceTime": "2014-08-07T15:25:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca7020ab-4700-4158-b302-74bf65805f96"
		},
		{
			"deviceTime": "2014-08-07T15:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ed672d5-bbd7-4b48-880f-2196a5c122c0"
		},
		{
			"deviceTime": "2014-08-07T15:35:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "316ef179-8550-4ee6-93db-825aae2c7df6"
		},
		{
			"deviceTime": "2014-08-07T15:40:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7219fbe7-ef25-4db9-a0a3-96e0323ae456"
		},
		{
			"deviceTime": "2014-08-07T15:45:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2821c833-42b5-4433-96d5-d1de83feb490"
		},
		{
			"deviceTime": "2014-08-07T15:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cc67f7e-afc9-407a-bf6b-c93109fab590"
		},
		{
			"deviceTime": "2014-08-07T15:55:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ac43e79-0f02-43dd-bd0c-b1daaa39fd92"
		},
		{
			"deviceTime": "2014-08-07T16:00:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "586977cc-e7b3-4d74-b096-7318c3849335"
		},
		{
			"deviceTime": "2014-08-07T16:05:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12b727dc-3370-48c0-afc7-bca083fabbd7"
		},
		{
			"deviceTime": "2014-08-07T16:10:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc943ac0-3bbe-41ff-9803-9098475a8504"
		},
		{
			"deviceTime": "2014-08-07T16:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55f0fefa-5493-4809-9676-95527653bc98"
		},
		{
			"deviceTime": "2014-08-07T16:20:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca4994be-0554-4cbd-be63-60709960b96d"
		},
		{
			"deviceTime": "2014-08-07T16:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f898de17-60ab-4eb9-8bad-e3acb614f77b"
		},
		{
			"deviceTime": "2014-08-07T16:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f69c7b81-37c2-48f8-8d64-0d0526ec4c3b"
		},
		{
			"deviceTime": "2014-08-07T16:35:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "666abbcc-efac-4b0f-a10d-64d6a53493ef"
		},
		{
			"deviceTime": "2014-08-07T16:40:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83abb2f1-db3c-4cf6-aa82-1f819fad9be4"
		},
		{
			"deviceTime": "2014-08-07T16:45:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e742b0c9-9d49-4c5d-a68f-7994557706d1"
		},
		{
			"deviceTime": "2014-08-07T16:50:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39591138-50c2-4b2d-abe7-1417890b75c8"
		},
		{
			"deviceTime": "2014-08-07T16:55:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c1aea65-5996-44a0-a1c5-de59da173ad6"
		},
		{
			"deviceTime": "2014-08-07T17:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a01b335d-c0e5-422d-9554-597c23ae9668"
		},
		{
			"deviceTime": "2014-08-07T17:05:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d860eeda-2a7d-4b1c-9d1e-45871e7aac5d"
		},
		{
			"deviceTime": "2014-08-07T17:10:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "208ed4b1-695a-4e69-912f-8275b0c2f628"
		},
		{
			"deviceTime": "2014-08-07T17:15:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2780927-0e98-46ae-9fdc-3a2809e81618"
		},
		{
			"deviceTime": "2014-08-07T17:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1caa7ebe-fc32-4301-bbd8-c2e307e6484c"
		},
		{
			"deviceTime": "2014-08-07T17:21:01",
			"value": 2.9,
			"source": "demo",
			"recommended": 2.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c43490cf-9c96-4d6b-8fb1-7373521a22ce"
		},
		{
			"deviceTime": "2014-08-07T17:25:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3381701-82a8-4098-bbed-cc463d64ed5f"
		},
		{
			"deviceTime": "2014-08-07T17:30:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ed62e87-86e2-4b59-baae-0d6ef26ccff0"
		},
		{
			"deviceTime": "2014-08-07T17:35:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64f72da7-ee24-4084-9f3d-6a1a70e7630d"
		},
		{
			"deviceTime": "2014-08-07T17:40:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8512d502-8a6c-4971-b659-13e8c9c449e4"
		},
		{
			"deviceTime": "2014-08-07T17:45:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f9275d7-8324-4768-b9b1-54eb2eddbb29"
		},
		{
			"deviceTime": "2014-08-07T17:50:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0205b66-810f-4400-b9c2-cf585f37482c"
		},
		{
			"deviceTime": "2014-08-07T17:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33336c1a-2ce6-4a44-a6ec-f30fc81ba937"
		},
		{
			"deviceTime": "2014-08-07T18:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c13572dd-810a-430c-af2c-8860e1b10642"
		},
		{
			"deviceTime": "2014-08-07T18:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5790be8-1044-4556-8cf8-b71a5b0e1310"
		},
		{
			"deviceTime": "2014-08-07T18:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbfcb155-9082-4808-8b96-ae77472bc0fe"
		},
		{
			"deviceTime": "2014-08-07T18:15:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa6eb63c-cdae-44eb-ba47-2b54fb52103a"
		},
		{
			"deviceTime": "2014-08-07T18:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a01029e-94a5-4229-b2eb-b5e482b96066"
		},
		{
			"deviceTime": "2014-08-07T18:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "528b994f-bd21-41ee-9bc2-e9dc362f763b"
		},
		{
			"deviceTime": "2014-08-07T18:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a967973-8ecd-47aa-9e2a-fe1a4e3a9575"
		},
		{
			"deviceTime": "2014-08-07T18:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d246fbf7-e433-4741-b262-1f9a1a3d4f7a"
		},
		{
			"deviceTime": "2014-08-07T18:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d92024e6-d7db-4b15-992d-c48aad17a60d"
		},
		{
			"deviceTime": "2014-08-07T18:45:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64e6a805-aad8-44b7-8afd-09aa8cd17b75"
		},
		{
			"deviceTime": "2014-08-07T18:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecd9b604-6649-404a-8fad-51457b4cb6e4"
		},
		{
			"deviceTime": "2014-08-07T18:55:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd86e9fa-defb-4e52-b09c-692c654ad4c6"
		},
		{
			"deviceTime": "2014-08-07T19:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4551c45-fc24-4748-a005-8719980ec54d"
		},
		{
			"deviceTime": "2014-08-07T19:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4392ff9c-af50-4a2a-9c1b-06fa01193862"
		},
		{
			"deviceTime": "2014-08-07T19:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b8166a8-8d95-4175-88cc-d55463b3d691"
		},
		{
			"deviceTime": "2014-08-07T19:15:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10bed4b3-4010-4763-a147-4e5e17b6698c"
		},
		{
			"deviceTime": "2014-08-07T19:20:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54fe15c1-3268-4c78-bfe9-f1472f2dfd96"
		},
		{
			"deviceTime": "2014-08-07T19:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adc80f2d-9fcf-4fe7-aa96-273c17488cdb"
		},
		{
			"deviceTime": "2014-08-07T19:30:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74fa4669-dc9d-4ca1-a26d-c35fbe42c717"
		},
		{
			"deviceTime": "2014-08-07T19:35:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46e8d109-0cf2-4d02-8f5b-9bd6e97fd064"
		},
		{
			"deviceTime": "2014-08-07T19:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5a61b7b-9d68-4c16-b625-b55c995df8f1"
		},
		{
			"deviceTime": "2014-08-07T19:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03fdef0e-8741-44f6-a9fe-d63a9fd94dda"
		},
		{
			"deviceTime": "2014-08-07T19:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8e6a794-e7cc-4a91-bded-f5b5f5b5d7bb"
		},
		{
			"deviceTime": "2014-08-07T19:55:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "784ae442-1da9-4edb-a71a-e5e7254924bf"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-08T00:00:00",
			"start": "2014-08-07T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "afb574b3-feec-42bd-a920-2947dece22d9"
		},
		{
			"deviceTime": "2014-08-07T20:00:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47de363a-dad7-4357-8a5f-aa47f47809ba"
		},
		{
			"deviceTime": "2014-08-07T20:05:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8dca7e2e-2115-4ae2-b045-3aa00834853d"
		},
		{
			"deviceTime": "2014-08-07T20:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "619601e0-950b-4136-a23a-06b994e0e2b8"
		},
		{
			"deviceTime": "2014-08-07T20:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "917b2fb4-d520-4683-ad88-7c6dd3b82bff"
		},
		{
			"deviceTime": "2014-08-07T20:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2f3b519-eb45-4f8e-928b-9432e9ff0309"
		},
		{
			"deviceTime": "2014-08-07T20:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f7f146c-3392-460b-a989-4d0808a4d584"
		},
		{
			"deviceTime": "2014-08-07T20:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bd96ced-8f27-4149-a6b9-6fcdc94136e1"
		},
		{
			"deviceTime": "2014-08-07T20:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a706036-c0e9-4b22-b178-d4b4e244f570"
		},
		{
			"deviceTime": "2014-08-07T20:40:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "339de864-3fef-4274-b37f-00daf165cb93"
		},
		{
			"deviceTime": "2014-08-07T20:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e4fd600-5e17-4ab1-8ff0-89087510b2a5"
		},
		{
			"deviceTime": "2014-08-07T20:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e62d91a2-2560-44d6-ae54-52dacb12264c"
		},
		{
			"deviceTime": "2014-08-07T20:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6d86c76-3103-44d2-a0e6-f7d6df1b89dc"
		},
		{
			"deviceTime": "2014-08-07T21:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a70c9e77-fe40-404f-9d62-374783268c3a"
		},
		{
			"deviceTime": "2014-08-07T21:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcf30898-3941-489a-8133-0e296b3f5f2d"
		},
		{
			"deviceTime": "2014-08-07T21:10:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "052670c4-d9fa-46bb-a0ba-3107ba83d71f"
		},
		{
			"deviceTime": "2014-08-07T21:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ccd07417-f541-4139-a82d-222a6af5b9e0"
		},
		{
			"deviceTime": "2014-08-07T21:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2005f951-cd07-4502-af88-f661b73e771e"
		},
		{
			"deviceTime": "2014-08-07T21:25:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4420a945-9865-423f-aafd-8f60af8fc909"
		},
		{
			"deviceTime": "2014-08-07T21:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee21d788-84f7-4698-b3b9-957869810440"
		},
		{
			"deviceTime": "2014-08-07T21:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3416da3-de5f-4c24-9fa2-bff16c3c5d34"
		},
		{
			"deviceTime": "2014-08-07T21:40:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e41db1ad-d7cb-4c40-b576-e15dedb55331"
		},
		{
			"deviceTime": "2014-08-07T21:45:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19a1d623-4706-4999-a66a-af92f7ad2fc3"
		},
		{
			"deviceTime": "2014-08-07T21:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18835e39-5545-4982-bd4e-a09591c63cd2"
		},
		{
			"deviceTime": "2014-08-07T21:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e66ba96f-2d77-40e0-9135-0b6ec1558957"
		},
		{
			"deviceTime": "2014-08-07T22:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "777918bd-37da-4c59-a376-018297d3f675"
		},
		{
			"deviceTime": "2014-08-07T22:05:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "090f7c04-95c0-44af-af72-392e34e4a559"
		},
		{
			"deviceTime": "2014-08-07T22:10:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67ad8135-e9b7-4554-a568-9e566a24368c"
		},
		{
			"deviceTime": "2014-08-07T22:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0b25db0-fd10-4862-af50-4ec0f183c8c9"
		},
		{
			"deviceTime": "2014-08-07T22:20:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f7c1a1c-5f07-44f8-a90d-507694133cba"
		},
		{
			"deviceTime": "2014-08-07T22:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d31dcb2-6c70-49cf-bead-c2947e5ad025"
		},
		{
			"deviceTime": "2014-08-07T22:30:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4523ffe6-95c3-409a-9f90-0f76e6c56b8f"
		},
		{
			"deviceTime": "2014-08-07T22:35:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75a1c235-7425-43d0-ade3-5e91c59dc8f4"
		},
		{
			"deviceTime": "2014-08-07T22:40:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4565d498-f234-4638-83f3-265647d64cea"
		},
		{
			"deviceTime": "2014-08-07T22:45:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c194ed2-3d7b-40e3-a4f8-268361583724"
		},
		{
			"deviceTime": "2014-08-07T22:50:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dafecf9-f1aa-4ec4-8d70-95cebd350bbc"
		},
		{
			"deviceTime": "2014-08-07T22:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "157933e0-7924-4de9-a330-cf12a4036bce"
		},
		{
			"deviceTime": "2014-08-07T23:00:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25d9aace-00f6-4908-8095-4aac3483f413"
		},
		{
			"deviceTime": "2014-08-07T23:05:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b601eed-4a44-471e-a0ed-cfeb6d6eda5d"
		},
		{
			"deviceTime": "2014-08-07T23:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae250ece-f208-4a74-86e9-0fc9aa06b7f8"
		},
		{
			"deviceTime": "2014-08-07T23:15:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "556475ec-f25f-4707-9062-b2585959d4d7"
		},
		{
			"deviceTime": "2014-08-07T23:20:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05d59bf9-0c32-4594-8c5a-c8524173c2ee"
		},
		{
			"deviceTime": "2014-08-07T23:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "962c5546-154b-4642-b1bd-f65f1da03ef7"
		},
		{
			"deviceTime": "2014-08-07T23:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ce947b3-71a8-4393-98ba-d6e9bffc391c"
		},
		{
			"deviceTime": "2014-08-07T23:40:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e892971-79b2-403d-92cc-f55e056aa310"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-08T02:00:00",
			"start": "2014-08-08T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "83c67640-c233-4f51-a70d-cf8d8485d4b8"
		},
		{
			"deviceTime": "2014-08-08T00:00:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f53cc685-c06f-486c-890e-db229ce9d581"
		},
		{
			"deviceTime": "2014-08-08T00:05:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f7cbe56-caf0-4bac-8212-b9c1aba00032"
		},
		{
			"deviceTime": "2014-08-08T00:10:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5dda5c9c-fa65-41b0-a365-3f88c8c43216"
		},
		{
			"deviceTime": "2014-08-08T00:15:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78bfed36-6682-4416-9373-6e792f45cd04"
		},
		{
			"deviceTime": "2014-08-08T00:20:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77323c79-0f60-40fa-941c-4439856f0f67"
		},
		{
			"deviceTime": "2014-08-08T00:25:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2df9d44d-00bf-4606-8a5e-5b9812cb385b"
		},
		{
			"deviceTime": "2014-08-08T00:55:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70961818-c555-4a0f-9d1a-aa90a1381acc"
		},
		{
			"deviceTime": "2014-08-08T01:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da9b653b-7b83-4c3a-bc38-9987720b39ec"
		},
		{
			"deviceTime": "2014-08-08T01:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b4c03fc-04ac-4b8e-9865-9714239ddf47"
		},
		{
			"deviceTime": "2014-08-08T01:10:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d067279-23da-4ba1-aeb1-242e5a24686d"
		},
		{
			"deviceTime": "2014-08-08T01:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2d5b449-f8ee-4c43-a0a2-e06c5f03c37f"
		},
		{
			"deviceTime": "2014-08-08T01:20:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "238fe801-0a49-42f7-997d-272ad4af8ebe"
		},
		{
			"deviceTime": "2014-08-08T01:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c713536-92ad-4e6f-a8dd-8ce3cb9e72d0"
		},
		{
			"deviceTime": "2014-08-08T01:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97cbb4bb-c6a8-4814-8873-21f1d919d579"
		},
		{
			"deviceTime": "2014-08-08T01:34:42",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "1168d7bf-e04d-4c29-85bd-eb27a7c06a36"
		},
		{
			"deviceTime": "2014-08-08T01:34:42",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "7eb0b7e8-f820-45e9-899b-635f4387f1df"
		},
		{
			"deviceTime": "2014-08-08T01:34:42",
			"id": "7eb0b7e8-f820-45e9-899b-635f4387f1df",
			"source": "demo",
			"joinKey": "999addfc-d0fb-4548-b1df-764cb082c28f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 69
			}
		},
		{
			"deviceTime": "2014-08-08T01:34:42",
			"programmed": 4.6,
			"joinKey": "999addfc-d0fb-4548-b1df-764cb082c28f",
			"value": 4.6,
			"source": "demo",
			"recommended": 4.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "091bf44e-5df7-4e95-8ac6-b0abb897ee33"
		},
		{
			"deviceTime": "2014-08-08T01:35:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dde7663e-238c-4a25-bcd8-c162f5e55ab7"
		},
		{
			"deviceTime": "2014-08-08T01:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "595e27f6-e555-411e-a96b-aac2ae633c1c"
		},
		{
			"deviceTime": "2014-08-08T01:45:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1825ed90-08be-4eaa-ae16-765484275665"
		},
		{
			"deviceTime": "2014-08-08T01:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0daa763-743b-4f38-898c-57147ba0e62c"
		},
		{
			"deviceTime": "2014-08-08T01:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21bd2197-e9d4-43e8-bc00-f8a42ed318b5"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-08T04:00:00",
			"start": "2014-08-08T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "45732cdd-a45b-498d-a43c-7f30623a0888"
		},
		{
			"deviceTime": "2014-08-08T02:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70fa545f-76f5-476c-af01-c13543527c74"
		},
		{
			"deviceTime": "2014-08-08T02:05:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a991cbe1-40e0-4054-a7cc-9aa808b0d400"
		},
		{
			"deviceTime": "2014-08-08T02:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14b8170e-2b7c-46b9-a219-bff80be4f8bc"
		},
		{
			"deviceTime": "2014-08-08T02:15:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fde8b688-1e5a-4b92-9b3c-46fbc92c07a8"
		},
		{
			"deviceTime": "2014-08-08T02:20:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed50517c-6f01-40af-96ce-c18d349c9e32"
		},
		{
			"deviceTime": "2014-08-08T02:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b472fee-a3e3-4cd8-b51e-ee155a812e72"
		},
		{
			"deviceTime": "2014-08-08T02:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd3915e5-8a34-42ba-8983-78cf8de2c841"
		},
		{
			"deviceTime": "2014-08-08T02:35:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5775da3a-90ae-441d-9d6d-7e34f2e64ca6"
		},
		{
			"deviceTime": "2014-08-08T02:40:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49ba7a3a-8417-4422-8142-f7f3b5610346"
		},
		{
			"deviceTime": "2014-08-08T02:45:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fa4f873-c576-4f46-8ef4-f297a69a872b"
		},
		{
			"deviceTime": "2014-08-08T02:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79ec7b24-33ce-4b78-92de-1d500b95aa2f"
		},
		{
			"deviceTime": "2014-08-08T02:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a8d4d82-6e34-4bec-aed9-ff96e7082973"
		},
		{
			"deviceTime": "2014-08-08T03:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c26a3548-3a90-40cc-9cd2-15c376c5b664"
		},
		{
			"deviceTime": "2014-08-08T03:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7589c47b-0a9f-4ce4-b772-3d610e2e7574"
		},
		{
			"deviceTime": "2014-08-08T03:10:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c807dff-cd1f-42a5-8f1b-f685855b1f35"
		},
		{
			"deviceTime": "2014-08-08T03:15:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b0f15bd-e7e6-4205-a3ef-48b3a95caee2"
		},
		{
			"deviceTime": "2014-08-08T03:20:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b72fad4e-f2bf-4d75-a594-0cf2b230e140"
		},
		{
			"deviceTime": "2014-08-08T03:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42dc5e5a-88f6-4478-b9aa-451e486f9e36"
		},
		{
			"end": "2014-08-08T11:30:01",
			"start": "2014-08-08T03:30:01",
			"percent": 1.1,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 28800000,
			"type": "basal-rate-segment",
			"id": "0c3dd141-80d0-4692-96f1-7bdd088b2166"
		},
		{
			"deviceTime": "2014-08-08T03:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9610419f-51f0-447a-a216-afb6b5dd02ae"
		},
		{
			"deviceTime": "2014-08-08T03:35:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aadb48b7-63e8-4051-96ee-3585ffdcf205"
		},
		{
			"deviceTime": "2014-08-08T03:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "688ae176-522f-4a14-9ba7-9a2f9d77a688"
		},
		{
			"deviceTime": "2014-08-08T03:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93c0320d-7553-4b1b-a3eb-79abd0a6c55d"
		},
		{
			"deviceTime": "2014-08-08T03:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5080e3d3-5cf8-4901-9770-946ee496d79e"
		},
		{
			"deviceTime": "2014-08-08T03:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3ae1fef-2673-44be-9b4b-cc4af3644327"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-08T05:00:00",
			"start": "2014-08-08T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "8367f671-b8f9-4453-8b0d-429731eb9362"
		},
		{
			"deviceTime": "2014-08-08T04:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5380cbf6-fbf0-4d8c-ab42-07904290de9d"
		},
		{
			"deviceTime": "2014-08-08T04:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5c842c6-c279-456c-8b9b-b6c85507ee8e"
		},
		{
			"deviceTime": "2014-08-08T04:10:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a8780f9-bef0-4aff-bc87-998d18a3586c"
		},
		{
			"deviceTime": "2014-08-08T04:15:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8ea380c-4db9-484c-9031-7855a76add30"
		},
		{
			"deviceTime": "2014-08-08T04:20:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d6186d8-d44f-4019-be72-5bf040d5773e"
		},
		{
			"deviceTime": "2014-08-08T04:25:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16399087-0441-4d07-a1a1-ae09e5d6debd"
		},
		{
			"deviceTime": "2014-08-08T04:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d2f70d6-3ce7-4512-a42b-e302eac729a0"
		},
		{
			"deviceTime": "2014-08-08T04:35:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11e5a5a4-3265-41c3-b684-a018050935fa"
		},
		{
			"deviceTime": "2014-08-08T04:55:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "217931eb-ac48-44c0-a63f-eddc12b6cca2"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-08T06:00:00",
			"start": "2014-08-08T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "33fa954f-9955-4ce9-94d4-2aecd50ff997"
		},
		{
			"deviceTime": "2014-08-08T05:00:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a246367d-832b-4647-9fd6-45631fb428c0"
		},
		{
			"deviceTime": "2014-08-08T05:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3670334-3f54-45ed-b8e1-934b2d6cd22a"
		},
		{
			"deviceTime": "2014-08-08T05:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf5bc4a8-04a9-4654-9592-c951ac027056"
		},
		{
			"deviceTime": "2014-08-08T05:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c06020bb-5382-420e-a4a0-3d7c8dcfce0b"
		},
		{
			"deviceTime": "2014-08-08T05:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40d3e31e-1933-4b80-851c-9957ad9e85fd"
		},
		{
			"deviceTime": "2014-08-08T05:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "584c27be-62b7-438a-9210-0c61475df6cf"
		},
		{
			"deviceTime": "2014-08-08T05:55:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c3ec588-62e4-4755-bded-5c5a31c44f7a"
		},
		{
			"delivered": 1,
			"end": "2014-08-08T09:00:00",
			"start": "2014-08-08T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "ca84c7fb-24d6-42bd-a4d2-14b4bc12eb61"
		},
		{
			"deviceTime": "2014-08-08T06:00:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19025e9b-4765-4bc7-87e6-040a50161f13"
		},
		{
			"deviceTime": "2014-08-08T06:05:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b593fc8b-777c-43eb-8a22-b713db630171"
		},
		{
			"deviceTime": "2014-08-08T06:10:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a821897a-5de6-4739-a519-e11cee26cf8d"
		},
		{
			"deviceTime": "2014-08-08T06:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0af529c2-954a-44ae-a47a-456147a6ce7e"
		},
		{
			"deviceTime": "2014-08-08T06:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ee43d62-f425-44e1-8215-46b499d113af"
		},
		{
			"deviceTime": "2014-08-08T06:25:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f47d3ac-9ee4-4f5f-8592-fd18df379a4a"
		},
		{
			"deviceTime": "2014-08-08T06:30:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d18b5771-4828-4da6-a64e-8d7efcbb9900"
		},
		{
			"deviceTime": "2014-08-08T06:35:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d13982f-1271-4b86-ab3f-e1fe7932f10f"
		},
		{
			"deviceTime": "2014-08-08T06:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd22cb80-64b5-4699-ab56-b9bf3ae0ef9b"
		},
		{
			"deviceTime": "2014-08-08T06:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7924af1b-312e-4096-95ad-0e3705cd860a"
		},
		{
			"deviceTime": "2014-08-08T06:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9af652ff-77a7-42ea-b2f7-8a85f7858014"
		},
		{
			"deviceTime": "2014-08-08T06:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c531136b-a4c1-4392-af82-5444d26ef76f"
		},
		{
			"deviceTime": "2014-08-08T06:56:55",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "f951ce87-a43a-47ca-b669-03ea6f505d03"
		},
		{
			"deviceTime": "2014-08-08T06:56:55",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "6a0db920-116c-4d17-aacb-f94b62d0ab6a"
		},
		{
			"deviceTime": "2014-08-08T06:56:55",
			"id": "6a0db920-116c-4d17-aacb-f94b62d0ab6a",
			"source": "demo",
			"joinKey": "b26080e3-66d2-4c5e-94c0-8f53194da0ac",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 63
			}
		},
		{
			"deviceTime": "2014-08-08T06:56:55",
			"suspendedAt": "2014-08-08T07:04:25",
			"programmed": 4.2,
			"joinKey": "b26080e3-66d2-4c5e-94c0-8f53194da0ac",
			"value": 0.4,
			"source": "demo",
			"recommended": 4.2,
			"extendedDelivery": 4.2,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "9072fec7-8799-4f00-97a2-bd5d44616531"
		},
		{
			"deviceTime": "2014-08-08T07:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fa106b4-5f95-4ade-af21-aa19828f6493"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-08T07:04:25",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "8047c2ef-11cc-477a-8257-59ecf0ab1b95"
		},
		{
			"deviceTime": "2014-08-08T07:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea86427b-7eb4-47ee-bcef-897c7b4d023b"
		},
		{
			"deviceTime": "2014-08-08T07:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe9eb8be-acf4-45de-88c1-a551b5fb7609"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-08T07:11:55",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "f3a03af8-4a4e-4cb8-b334-a99ac7740696",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-08T07:04:25",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "8047c2ef-11cc-477a-8257-59ecf0ab1b95"
			}
		},
		{
			"deviceTime": "2014-08-08T07:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c093c3ac-793c-4eac-8766-cbf72a0cba07"
		},
		{
			"deviceTime": "2014-08-08T07:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de1b31bc-a699-4e0f-a004-db54b0d3ebc2"
		},
		{
			"deviceTime": "2014-08-08T07:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e7a71a3-a594-440e-aa4d-f1fd526205c8"
		},
		{
			"deviceTime": "2014-08-08T07:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93b6baf3-d094-4ab7-a2b5-895e497c36b7"
		},
		{
			"deviceTime": "2014-08-08T07:35:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0bc6b22-2793-4838-b943-544b9d5569ca"
		},
		{
			"deviceTime": "2014-08-08T07:40:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b6a553c-0b00-42f0-aa9d-95be295bbb93"
		},
		{
			"deviceTime": "2014-08-08T07:45:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5c8987b-65f1-4e17-8fca-8198d17c9351"
		},
		{
			"deviceTime": "2014-08-08T07:50:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b52160e-0817-40b2-ac0a-4f1d7ac59869"
		},
		{
			"deviceTime": "2014-08-08T07:55:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d192e75-2139-4475-988c-027ddd9e7e44"
		},
		{
			"deviceTime": "2014-08-08T08:00:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c711ab0-2332-4c6c-904d-f907aa825629"
		},
		{
			"deviceTime": "2014-08-08T08:05:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2522a78-c12a-4e59-95a9-2c21aa7dd6dc"
		},
		{
			"deviceTime": "2014-08-08T08:10:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "551b9580-2f9e-4a87-ac02-58e3fc881d02"
		},
		{
			"deviceTime": "2014-08-08T08:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d9ac42b-09d9-46d7-a6ab-2da5a123e255"
		},
		{
			"deviceTime": "2014-08-08T08:20:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1f02c11-6be5-47fb-83e7-36d497b3f09f"
		},
		{
			"deviceTime": "2014-08-08T08:25:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba538f13-45a6-4e95-a6c0-d8d91ad8bda9"
		},
		{
			"deviceTime": "2014-08-08T08:30:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ec92056-ae40-467e-b984-2bfa33e42927"
		},
		{
			"deviceTime": "2014-08-08T08:35:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f83b1bc2-ce4a-4c20-a4d3-d75b753598a8"
		},
		{
			"deviceTime": "2014-08-08T08:40:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a223376-3ee8-4719-b77f-d287dc80cdd6"
		},
		{
			"deviceTime": "2014-08-08T08:44:52",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "a254bdbf-94ea-490c-8033-5646f5647de4"
		},
		{
			"deviceTime": "2014-08-08T08:44:52",
			"value": 12,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "3ea9d00d-eaee-4250-98b8-1401cc1eae61"
		},
		{
			"deviceTime": "2014-08-08T08:44:52",
			"id": "3ea9d00d-eaee-4250-98b8-1401cc1eae61",
			"source": "demo",
			"joinKey": "b712b3f9-fb89-4ef7-be32-a6b6e01d5122",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 12
			}
		},
		{
			"deviceTime": "2014-08-08T08:44:52",
			"programmed": 0.8,
			"joinKey": "b712b3f9-fb89-4ef7-be32-a6b6e01d5122",
			"value": 0.8,
			"source": "demo",
			"recommended": 0.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "171658f8-d082-441a-9723-3e04789262df"
		},
		{
			"deviceTime": "2014-08-08T08:45:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb52e161-6997-4dab-b8da-9054b39066d7"
		},
		{
			"deviceTime": "2014-08-08T08:50:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59635203-3b0d-4b1b-8450-f2a4e7965c76"
		},
		{
			"deviceTime": "2014-08-08T08:55:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b7eeaf8-ed35-4f72-9ed4-95a7b7e64b86"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-08T15:00:00",
			"start": "2014-08-08T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"id": "18e42e81-0999-41fb-bc99-c2efe433766c",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-08T09:00:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7cfc52e-29ce-43cd-b188-c2623121a30c"
		},
		{
			"deviceTime": "2014-08-08T09:05:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74399bd3-22f4-4489-88c8-ce71d5d90748"
		},
		{
			"deviceTime": "2014-08-08T09:10:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1aa97c6f-b346-4932-9267-2147c69cbaae"
		},
		{
			"deviceTime": "2014-08-08T09:15:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89286d7c-d489-4628-8de3-415b38a1e025"
		},
		{
			"deviceTime": "2014-08-08T09:20:07",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b2fef931-b1a4-4e6b-aafc-d3f2e0359989"
		},
		{
			"deviceTime": "2014-08-08T09:20:07",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e6d01a2d-a81a-4d37-a538-9e192ada5a9a"
		},
		{
			"deviceTime": "2014-08-08T09:20:07",
			"id": "e6d01a2d-a81a-4d37-a538-9e192ada5a9a",
			"source": "demo",
			"joinKey": "33d954ef-27ab-49a8-814d-1203b778d79d",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 96
			}
		},
		{
			"deviceTime": "2014-08-08T09:20:07",
			"programmed": 6.4,
			"joinKey": "33d954ef-27ab-49a8-814d-1203b778d79d",
			"value": 6.4,
			"source": "demo",
			"recommended": 6.4,
			"extendedDelivery": 1.3,
			"initialDelivery": 5.1,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "f0c96e7a-200d-4fb5-b4db-805d4d7fa88a",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-08T09:20:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bffeaa2-f9bb-4ff2-87b9-29a9e3b9b1d9"
		},
		{
			"deviceTime": "2014-08-08T09:25:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "065d8d54-dfae-4a12-bcbf-3060988a6c5a"
		},
		{
			"deviceTime": "2014-08-08T09:30:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ba5b14e-4829-4169-b416-f033afd66029"
		},
		{
			"deviceTime": "2014-08-08T09:35:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f50ce651-df6c-41b7-9d25-00171afec14b"
		},
		{
			"deviceTime": "2014-08-08T09:40:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2abec1d-6fe3-4203-8f37-cfb456917beb"
		},
		{
			"deviceTime": "2014-08-08T09:45:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cda8159-e19f-4f11-bcfa-584e3dcff91a"
		},
		{
			"deviceTime": "2014-08-08T09:50:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b10d5746-c2a8-4f1e-8ce1-445cbdf494e2"
		},
		{
			"deviceTime": "2014-08-08T09:55:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ff67a2a-f57d-4a76-99f6-aed25d629d24"
		},
		{
			"deviceTime": "2014-08-08T10:00:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1694a9d-88c6-4a83-8410-a043c4fa6560"
		},
		{
			"deviceTime": "2014-08-08T10:05:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "861aa7fd-997c-41c2-9d60-3d224952f5d5"
		},
		{
			"deviceTime": "2014-08-08T10:10:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8da3ef42-8a2b-4c47-8061-db199e804334"
		},
		{
			"deviceTime": "2014-08-08T10:15:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29016b22-cdf4-44d3-8f17-f633db1e416c"
		},
		{
			"deviceTime": "2014-08-08T10:20:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6626eca-180f-4c7b-b2c0-c8520f29c2af"
		},
		{
			"deviceTime": "2014-08-08T10:25:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "614c78c1-fb03-41d7-8623-dc1ffcb92041"
		},
		{
			"deviceTime": "2014-08-08T10:30:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27daa175-a75c-4e46-ad0f-e03ce656b319"
		},
		{
			"deviceTime": "2014-08-08T10:35:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cd3a1bf-f69b-49f1-abb8-4606ceb2dee9"
		},
		{
			"deviceTime": "2014-08-08T10:40:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c99fc964-aeba-471a-814c-c83bc7167cc6"
		},
		{
			"deviceTime": "2014-08-08T10:45:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4045192a-fe6a-446c-9e68-b44339f91ddf"
		},
		{
			"deviceTime": "2014-08-08T10:50:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22f4e27d-7074-40aa-ac81-197a735f4628"
		},
		{
			"deviceTime": "2014-08-08T10:55:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe6701c2-5782-4c94-b63b-43f14b3e3ab0"
		},
		{
			"deviceTime": "2014-08-08T10:58:19",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "268b5c62-39fc-40b6-bc90-29d00b79bc05"
		},
		{
			"deviceTime": "2014-08-08T10:58:19",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "61b723bd-f368-4dba-a1ee-e366d95f3c0b"
		},
		{
			"deviceTime": "2014-08-08T10:58:19",
			"id": "61b723bd-f368-4dba-a1ee-e366d95f3c0b",
			"source": "demo",
			"joinKey": "3b84fedf-2c11-42a3-a668-fb11f2460d23",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 55
			}
		},
		{
			"deviceTime": "2014-08-08T10:58:19",
			"suspendedAt": "2014-08-08T11:13:19",
			"programmed": 3.7,
			"joinKey": "3b84fedf-2c11-42a3-a668-fb11f2460d23",
			"value": 3.7,
			"source": "demo",
			"recommended": 3.7,
			"extendedDelivery": 1.5,
			"initialDelivery": 2.2,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "4ce927a0-0ada-4413-ac97-b74be57cc5be",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-08T11:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08d22f3b-787a-4767-850c-d7d5cf3f3f97"
		},
		{
			"deviceTime": "2014-08-08T11:05:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32f21857-c853-4d69-bc1d-2cc0f7dcded3"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-08T11:13:19",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "2f7cbe3a-f571-4555-8dd9-c0f39b5415e8"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-08T11:24:19",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "12d75a07-d873-4ccc-9c77-ebe63dc5073a",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-08T11:13:19",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "2f7cbe3a-f571-4555-8dd9-c0f39b5415e8"
			}
		},
		{
			"messageText": "Deserunt leberkas tongue labore tempor eiusmod.",
			"parentMessage": "",
			"utcTime": "2014-08-08T11:34:22Z",
			"type": "message",
			"id": "ff8cf859-f858-4966-a525-897dc909c740"
		},
		{
			"deviceTime": "2014-08-08T11:40:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51fa629d-05fd-4d94-82e4-1c91f88e429d"
		},
		{
			"deviceTime": "2014-08-08T11:45:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a691bd6-c57c-483f-9f93-0ff3608d3a35"
		},
		{
			"deviceTime": "2014-08-08T11:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93c6b1cf-8b5e-40ca-a23a-69b80be5586f"
		},
		{
			"deviceTime": "2014-08-08T11:55:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cb35abb-2f29-4063-8530-4e7c83e0696a"
		},
		{
			"deviceTime": "2014-08-08T11:57:49",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "83ff42bf-d65d-4cf0-9866-953481d0e30c"
		},
		{
			"deviceTime": "2014-08-08T11:57:49",
			"value": 29,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "51c463ae-50f5-44e8-98a3-4458da707ccf"
		},
		{
			"deviceTime": "2014-08-08T11:57:49",
			"id": "51c463ae-50f5-44e8-98a3-4458da707ccf",
			"source": "demo",
			"joinKey": "fc8cae7c-6c3d-4f95-a4cb-e0b06fa33fb0",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 29
			}
		},
		{
			"deviceTime": "2014-08-08T11:57:49",
			"programmed": 1.9,
			"joinKey": "fc8cae7c-6c3d-4f95-a4cb-e0b06fa33fb0",
			"value": 0.4,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "70b7f143-6c68-44fd-8af9-6aa046b82adf"
		},
		{
			"deviceTime": "2014-08-08T12:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9e9c255-3dc9-40dc-8e30-44c69e1a7c81"
		},
		{
			"deviceTime": "2014-08-08T12:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "042c5151-85c1-455e-b463-03e97c7c665a"
		},
		{
			"deviceTime": "2014-08-08T12:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca94303c-8d8f-4913-ae86-2c0f245b26d7"
		},
		{
			"deviceTime": "2014-08-08T12:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07d9a71a-6c80-4201-9f8d-5e5b6570b6f2"
		},
		{
			"deviceTime": "2014-08-08T12:20:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e47d0666-1cc7-49ca-8ed1-61d12dd85471"
		},
		{
			"deviceTime": "2014-08-08T12:25:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1630e4d5-8765-4f36-9573-ae50cf76d991"
		},
		{
			"deviceTime": "2014-08-08T12:30:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d09b1ed4-0bfc-4f52-be14-07b63af225a7"
		},
		{
			"deviceTime": "2014-08-08T12:35:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb5b201f-d6d3-4253-9b2f-e8e90cb4b230"
		},
		{
			"deviceTime": "2014-08-08T12:40:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d26a67ad-3963-4515-8cd9-9e31972c01ea"
		},
		{
			"deviceTime": "2014-08-08T12:45:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ae395e0-c3d1-4888-b817-4e30772c425f"
		},
		{
			"deviceTime": "2014-08-08T12:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2e3cbac-6fcf-4315-8ce4-ae04e2306131"
		},
		{
			"deviceTime": "2014-08-08T12:55:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b76a510-fa85-474c-8b57-25c2a04c7137"
		},
		{
			"deviceTime": "2014-08-08T13:00:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a8b3dc6-f5ba-47f5-8813-7b435d9d30be"
		},
		{
			"deviceTime": "2014-08-08T13:05:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc16ae7c-c04c-4c10-a5e1-71ff50a38000"
		},
		{
			"deviceTime": "2014-08-08T13:10:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbd0a320-0960-4d18-9cef-bdbc96d3b1f3"
		},
		{
			"end": "2014-08-08T16:42:01",
			"start": "2014-08-08T13:12:01",
			"percent": 1.15,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 12600000,
			"type": "basal-rate-segment",
			"id": "ad497df8-abd1-43be-aee0-fd28a6c75f92"
		},
		{
			"deviceTime": "2014-08-08T13:15:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "246e35cd-c3c9-4d2c-a1f2-4dfce2cb05c2"
		},
		{
			"deviceTime": "2014-08-08T13:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1cabfbe-05d8-4dd7-bafe-b6fd5dabda24"
		},
		{
			"deviceTime": "2014-08-08T13:25:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95e7b626-d2a5-49aa-8d30-12c880e46a73"
		},
		{
			"deviceTime": "2014-08-08T13:30:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff01b2eb-b323-4e9d-8020-30d08ae60058"
		},
		{
			"deviceTime": "2014-08-08T13:35:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05b6441e-fde0-4dde-af7e-24b78f2088d4"
		},
		{
			"deviceTime": "2014-08-08T13:40:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76961287-8473-4360-ae17-0374668a32b3"
		},
		{
			"deviceTime": "2014-08-08T13:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8429213-31d5-4d75-aa8b-ec96b8ccdfd4"
		},
		{
			"deviceTime": "2014-08-08T13:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44b77597-0de2-4ef5-9238-6e8fc0034414"
		},
		{
			"deviceTime": "2014-08-08T13:55:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94587d3c-0850-4608-aadf-6313d9b06b98"
		},
		{
			"deviceTime": "2014-08-08T14:00:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a40242d-c96f-44df-abbf-8d78271a281f"
		},
		{
			"deviceTime": "2014-08-08T14:05:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3bbb260-f231-4e31-b540-bd6b9e63c9d8"
		},
		{
			"deviceTime": "2014-08-08T14:10:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad35df97-051a-47b4-8e49-7062d1afa7c0"
		},
		{
			"deviceTime": "2014-08-08T14:15:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ea3d4c8-c146-401c-96bb-35fbec122acc"
		},
		{
			"deviceTime": "2014-08-08T14:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32afbd77-640b-49f2-b057-57988c8b87b3"
		},
		{
			"deviceTime": "2014-08-08T14:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb477ab5-03e5-4a66-b90b-678e9263a919"
		},
		{
			"deviceTime": "2014-08-08T14:30:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8f9114e-9cca-453d-8c8c-932a54a7dd5a"
		},
		{
			"deviceTime": "2014-08-08T14:35:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8ba5759-ded1-4559-a66b-2f003cfdaa23"
		},
		{
			"deviceTime": "2014-08-08T14:40:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1308b565-d563-471c-a2b8-8dc6a6faf00b"
		},
		{
			"deviceTime": "2014-08-08T14:45:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "514a7323-db1f-433d-b315-7baf1ec9aa20"
		},
		{
			"deviceTime": "2014-08-08T14:50:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98cf085a-33fb-4182-9826-986eaf6082fb"
		},
		{
			"deviceTime": "2014-08-08T14:55:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1f74c35-43d8-4061-bb10-651f4c532821"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-08T20:00:00",
			"start": "2014-08-08T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "a471f75b-fb7c-4cc2-a6e1-1f8b5adb9a7d"
		},
		{
			"deviceTime": "2014-08-08T15:05:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4188756-d32d-4d78-a566-7efc84211999"
		},
		{
			"deviceTime": "2014-08-08T15:10:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6d71510-786e-4497-a5e5-fd076f46d248"
		},
		{
			"deviceTime": "2014-08-08T15:15:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02d105ae-9888-4c23-8185-d54d6d258220"
		},
		{
			"deviceTime": "2014-08-08T15:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6ebfb9c-011c-4353-b39a-bd383dc5005d"
		},
		{
			"deviceTime": "2014-08-08T15:25:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03f96504-5ed8-4207-b5dd-2db1455c6677"
		},
		{
			"deviceTime": "2014-08-08T15:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63d41706-d555-43a9-907b-0f2f1cbd9d00"
		},
		{
			"deviceTime": "2014-08-08T15:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a44f7ffa-1089-47eb-9d47-8ef8897f6bbc"
		},
		{
			"deviceTime": "2014-08-08T15:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a01be883-7f31-43ef-90b9-58b3543b5044"
		},
		{
			"deviceTime": "2014-08-08T15:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a505f22-87f1-4669-bd38-b6c212f6efc2"
		},
		{
			"deviceTime": "2014-08-08T15:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3fd9c91-5d1c-4fbb-b095-389b7b9ea1ff"
		},
		{
			"deviceTime": "2014-08-08T15:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef7e2427-534a-419d-9a56-819bb93ea677"
		},
		{
			"deviceTime": "2014-08-08T16:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a20fa2dc-a342-4ca0-8318-4a70f169754b"
		},
		{
			"deviceTime": "2014-08-08T16:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed6cdd69-6a8a-4785-bc68-196f51d0a271"
		},
		{
			"deviceTime": "2014-08-08T16:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48f409a1-be10-4048-bd6e-44bfe3e7a42c"
		},
		{
			"deviceTime": "2014-08-08T16:30:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8372bbda-3214-4120-af5e-92d658c3b34e"
		},
		{
			"deviceTime": "2014-08-08T16:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bebc6a4b-3b61-4294-a560-fc06ebcbb6c1"
		},
		{
			"deviceTime": "2014-08-08T16:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c141b6e-fb86-4851-a63b-b3e9c3b65ac1"
		},
		{
			"deviceTime": "2014-08-08T16:45:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73cfaa71-5714-4fb1-add2-1b6de195afd0"
		},
		{
			"deviceTime": "2014-08-08T16:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce5eca86-af83-481f-9c8a-b9c86a269c8e"
		},
		{
			"deviceTime": "2014-08-08T16:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50f1f08a-8fea-48f0-b585-d55d1b89cdfd"
		},
		{
			"deviceTime": "2014-08-08T17:00:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "728f1574-6a47-460e-9582-1c0284483510"
		},
		{
			"deviceTime": "2014-08-08T17:18:01",
			"value": 0.6,
			"source": "demo",
			"recommended": 0.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "760b405d-3803-4a3e-8a4b-eb9dedfb94ba"
		},
		{
			"deviceTime": "2014-08-08T17:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1529905f-1acf-4ecf-9be6-f163fb7cc5d2"
		},
		{
			"deviceTime": "2014-08-08T17:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3829c3a9-5728-40dd-9162-e7cf602ba478"
		},
		{
			"deviceTime": "2014-08-08T17:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc2449e0-51ed-4d1b-9a79-f30ee787455d"
		},
		{
			"deviceTime": "2014-08-08T17:35:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03140368-c5d1-413b-9613-bd444b0d47e5"
		},
		{
			"deviceTime": "2014-08-08T17:40:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92e22d59-eb4d-4d50-a398-3fc9fdbdf449"
		},
		{
			"end": "2014-08-08T19:11:01",
			"start": "2014-08-08T17:41:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "0569b683-68d8-4003-82d4-b44cda35397f"
		},
		{
			"deviceTime": "2014-08-08T17:45:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0924bc25-9b8f-4128-8302-f61d494dbee8"
		},
		{
			"deviceTime": "2014-08-08T17:50:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f780645-93ca-4f1d-ba8a-61a833ebbf68"
		},
		{
			"deviceTime": "2014-08-08T17:55:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba3ab73c-1f21-4ff3-9a87-2a3d871970eb"
		},
		{
			"deviceTime": "2014-08-08T18:00:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c650409-8065-4a2c-8fdf-1beb10c05c36"
		},
		{
			"deviceTime": "2014-08-08T18:05:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f784057-97a3-4845-abd8-6d5e76c639cc"
		},
		{
			"deviceTime": "2014-08-08T18:10:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a56f8c16-c9c0-44b0-918a-da05687c20a5"
		},
		{
			"deviceTime": "2014-08-08T18:15:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbf0d074-3481-4849-85dd-64c964df3dec"
		},
		{
			"deviceTime": "2014-08-08T18:20:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd9cafe5-733d-486b-b47b-bbd998fac422"
		},
		{
			"deviceTime": "2014-08-08T18:30:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb119a0b-15cc-448f-9c6a-b7ee8621c323"
		},
		{
			"deviceTime": "2014-08-08T18:35:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20f856e8-8433-4444-b647-09646ed4e336"
		},
		{
			"deviceTime": "2014-08-08T18:40:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1c21c0e-8f0e-4ec0-a76d-0cd42413ecda"
		},
		{
			"deviceTime": "2014-08-08T18:45:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b6e8015-907a-430a-a191-0917fdd8dad2"
		},
		{
			"deviceTime": "2014-08-08T18:50:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b11a13da-fc02-4f7f-a18d-1d3cfeb0ae6a"
		},
		{
			"deviceTime": "2014-08-08T18:55:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f5d426b-91a4-4bbc-b142-6a09397fdb8c"
		},
		{
			"deviceTime": "2014-08-08T19:00:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de099326-9356-47f3-8ec7-c7352fda1185"
		},
		{
			"deviceTime": "2014-08-08T19:05:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "131aed67-56a6-4828-9d0f-c163c51569d4"
		},
		{
			"deviceTime": "2014-08-08T19:20:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d777e5f2-9631-46e2-a581-ef386cb947a0"
		},
		{
			"deviceTime": "2014-08-08T19:25:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df8e1c43-c0b5-4dd4-808e-1815d9034b5a"
		},
		{
			"deviceTime": "2014-08-08T19:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0742dde-d301-4b92-9e93-4a42a856c31c"
		},
		{
			"deviceTime": "2014-08-08T19:35:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "702eadb6-8192-4d49-bfb1-872b0a04543a"
		},
		{
			"deviceTime": "2014-08-08T19:40:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfac1906-8975-447a-bf50-1a7ffc980dce"
		},
		{
			"deviceTime": "2014-08-08T19:45:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76624fdf-7032-4723-828c-3e4049231cb9"
		},
		{
			"deviceTime": "2014-08-08T19:50:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca069161-4dcd-4f82-af94-59a0f68d8313"
		},
		{
			"deviceTime": "2014-08-08T19:55:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6d62aa5-ea57-4a9c-995b-b7a55e6c3812"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-09T00:00:00",
			"start": "2014-08-08T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "3a840d65-a264-43bc-9ed4-60f7e6bb7047"
		},
		{
			"deviceTime": "2014-08-08T20:00:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c57b9c30-1c2b-496d-a430-185ea5712cd0"
		},
		{
			"deviceTime": "2014-08-08T20:05:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3337740c-5694-4347-aaba-2eb3b76b0eee"
		},
		{
			"deviceTime": "2014-08-08T20:10:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b3dc14d-e530-4098-a4b9-9243ecd31f7b"
		},
		{
			"deviceTime": "2014-08-08T20:15:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81ecd719-fbf5-48b9-93c2-267d91d38c88"
		},
		{
			"deviceTime": "2014-08-08T20:20:22",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7e5d702-b4b7-43f1-bc2a-4400792bd734"
		},
		{
			"deviceTime": "2014-08-08T20:25:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac7be2aa-1223-483f-9142-08319027cb28"
		},
		{
			"deviceTime": "2014-08-08T20:30:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8405ef78-72dd-4ee4-8ae1-befc5392cb8f"
		},
		{
			"deviceTime": "2014-08-08T20:35:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "201bccb3-00d3-48ce-a099-98bb46ce033c"
		},
		{
			"deviceTime": "2014-08-08T20:40:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e835e9c-2e2b-4f36-9716-c0cf25f9fab0"
		},
		{
			"deviceTime": "2014-08-08T20:42:43",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "dbfb3d55-22fe-497f-af84-12d9ec9d7bdd"
		},
		{
			"deviceTime": "2014-08-08T20:42:43",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e2d97327-b1b1-4837-923e-4f39be7219e2"
		},
		{
			"deviceTime": "2014-08-08T20:42:43",
			"id": "e2d97327-b1b1-4837-923e-4f39be7219e2",
			"source": "demo",
			"joinKey": "63b2265b-7851-45f3-80bc-e673c7cb5293",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 59
			}
		},
		{
			"deviceTime": "2014-08-08T20:42:43",
			"programmed": 3.9,
			"joinKey": "63b2265b-7851-45f3-80bc-e673c7cb5293",
			"value": 3.9,
			"source": "demo",
			"recommended": 3.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "9f34a73f-d118-4b6a-8588-f2127aa55d40"
		},
		{
			"deviceTime": "2014-08-08T20:45:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4433f21c-7b7a-4813-a3ac-6c89cbfbc7f0"
		},
		{
			"deviceTime": "2014-08-08T20:50:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85bd1cb9-c7b4-478f-a66f-c9d492ffb4a9"
		},
		{
			"deviceTime": "2014-08-08T20:55:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a50f937-6c03-4413-a9b0-cbed467cbf3e"
		},
		{
			"deviceTime": "2014-08-08T21:00:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08de26ae-2d87-45c8-ada8-4e9abeceead7"
		},
		{
			"deviceTime": "2014-08-08T21:05:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b442b10b-ab9c-4188-a78d-8b8d8d97343c"
		},
		{
			"deviceTime": "2014-08-08T21:10:22",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "086a7658-e6cc-49d9-9272-2ce3f1cb4602"
		},
		{
			"deviceTime": "2014-08-08T21:15:22",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed9d51fd-edbb-4092-a3cc-5f910e262920"
		},
		{
			"deviceTime": "2014-08-08T21:20:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "587fefd8-8816-40a4-8b9a-427fc8149639"
		},
		{
			"deviceTime": "2014-08-08T21:25:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "404da5b2-8ea7-43ef-b570-6a289ec9b093"
		},
		{
			"deviceTime": "2014-08-08T21:30:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6c73a41-7739-4603-a993-b8436bc48acf"
		},
		{
			"deviceTime": "2014-08-08T21:35:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d78fe1ea-3e92-4901-9c42-20b6db25b5ed"
		},
		{
			"deviceTime": "2014-08-08T21:40:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acbf0842-bf86-47da-816b-e10e1cca6197"
		},
		{
			"deviceTime": "2014-08-08T21:45:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "426993c7-061d-4c96-9cf5-b964d7819db4"
		},
		{
			"deviceTime": "2014-08-08T21:50:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ae02d49-3480-4189-ad12-9e15457cd5be"
		},
		{
			"deviceTime": "2014-08-08T21:55:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2218cb2-c1fd-49fa-8c37-30e40e160b70"
		},
		{
			"deviceTime": "2014-08-08T22:00:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "891fde44-abb2-4784-86cd-736f3f379c5b"
		},
		{
			"deviceTime": "2014-08-08T22:05:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92e8defe-50ef-4e92-a14b-a1eb0de23400"
		},
		{
			"deviceTime": "2014-08-08T22:10:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf3719c2-547a-472b-80aa-4dfba0591a44"
		},
		{
			"deviceTime": "2014-08-08T22:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e973a649-c290-4f43-933a-46f3a5e5ab98"
		},
		{
			"deviceTime": "2014-08-08T22:20:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e4bc2f1-86c6-4445-bffc-c825880989a3"
		},
		{
			"deviceTime": "2014-08-08T22:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04009d87-ce79-4758-ad26-1d9cb89d04c9"
		},
		{
			"deviceTime": "2014-08-08T22:30:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43d7fa77-b8a3-4dd7-b14f-6113f01e4d41"
		},
		{
			"deviceTime": "2014-08-08T22:35:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08644e6a-710a-4d8f-8a98-603134876658"
		},
		{
			"deviceTime": "2014-08-08T22:40:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2d40afe-21c7-4a20-ac45-6e5f5e1e1053"
		},
		{
			"deviceTime": "2014-08-08T22:45:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09e39c31-5a88-404b-a335-4d9f43500ebe"
		},
		{
			"deviceTime": "2014-08-08T22:50:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1dda787-7026-403c-8bc5-04693642fe89"
		},
		{
			"deviceTime": "2014-08-08T22:55:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbfd2be4-63f9-48b2-833d-4537630989d0"
		},
		{
			"deviceTime": "2014-08-08T23:00:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb53ebb9-6966-4e6f-bf0a-2ed5e4f7bcdf"
		},
		{
			"deviceTime": "2014-08-08T23:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d19ea121-ab55-461e-83d9-93cc56ee6254"
		},
		{
			"deviceTime": "2014-08-08T23:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f01bb3b-fd33-4488-b4fa-fd8628a8551c"
		},
		{
			"deviceTime": "2014-08-08T23:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18d0cdf3-9d3e-4482-ad36-44ff10e2ed7b"
		},
		{
			"deviceTime": "2014-08-08T23:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e673b5f7-d7e2-4a88-aa58-4e9d2a290f16"
		},
		{
			"deviceTime": "2014-08-08T23:25:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1c5c462-694a-41df-a80e-cf47ee19f2ea"
		},
		{
			"deviceTime": "2014-08-08T23:30:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3eca560-1f41-414e-b196-23cb17c8293e"
		},
		{
			"deviceTime": "2014-08-08T23:35:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8fde1f5-e738-4cc1-9ad6-29f6e12427b4"
		},
		{
			"deviceTime": "2014-08-08T23:40:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14bb2dcb-a021-44b9-a928-9a541382ab4e"
		},
		{
			"deviceTime": "2014-08-08T23:45:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab1b661b-f75d-47f6-860d-d89a561a6b69"
		},
		{
			"deviceTime": "2014-08-08T23:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97425df1-358a-4924-9330-0be8429b6e53"
		},
		{
			"deviceTime": "2014-08-08T23:55:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7303ff7f-b003-4f8d-a4fe-18fed7f3c076"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-09T02:00:00",
			"start": "2014-08-09T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "d30eff3f-6666-41f7-975b-d2d91ef8bf08"
		},
		{
			"deviceTime": "2014-08-09T00:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8b53a72-ffb7-41a1-9313-d344c18ed316"
		},
		{
			"deviceTime": "2014-08-09T00:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbddf221-312e-4c5c-8a88-761a8dd5410d"
		},
		{
			"deviceTime": "2014-08-09T00:10:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2538e700-3a10-4755-ad42-ecad4444c598"
		},
		{
			"deviceTime": "2014-08-09T00:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb48f3f9-54ca-4023-b997-163476499350"
		},
		{
			"deviceTime": "2014-08-09T00:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "903090d1-52c8-4b0f-bd06-021a58a7d5e2"
		},
		{
			"deviceTime": "2014-08-09T00:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d2de2e2-7c4b-44b4-8290-e8a04842525f"
		},
		{
			"deviceTime": "2014-08-09T00:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d2c212e-04fb-4729-8385-23a02ba398bd"
		},
		{
			"deviceTime": "2014-08-09T00:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1949e800-0cdb-403f-b078-a6b969eb7a07"
		},
		{
			"deviceTime": "2014-08-09T00:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce64ce74-23df-4771-86ad-f432ed949684"
		},
		{
			"deviceTime": "2014-08-09T00:45:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "116e1ab5-76b7-45f9-96a6-8480833cc98c"
		},
		{
			"deviceTime": "2014-08-09T00:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c6c05a6-e292-4ddb-aef7-53f2829ce528"
		},
		{
			"deviceTime": "2014-08-09T00:55:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1721bbdb-c43d-4fae-a64f-6b4c3a7f768b"
		},
		{
			"deviceTime": "2014-08-09T01:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "437891cd-7386-4c87-927d-c6dcbe969953"
		},
		{
			"deviceTime": "2014-08-09T01:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41716148-5e6d-495f-8585-6719f3028c1f"
		},
		{
			"deviceTime": "2014-08-09T01:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1bcdf1d0-f8b1-487d-8887-a95c371f76bb"
		},
		{
			"deviceTime": "2014-08-09T01:15:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c74516dc-4b77-4833-9939-7f812fe038b3"
		},
		{
			"deviceTime": "2014-08-09T01:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c674def6-2e89-48d2-b072-6e7ba6382b7e"
		},
		{
			"deviceTime": "2014-08-09T01:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d58efca7-d7f3-4f96-83e1-b13753031e3b"
		},
		{
			"deviceTime": "2014-08-09T01:30:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76a5c8b2-c711-47c1-8c35-d83d58273602"
		},
		{
			"deviceTime": "2014-08-09T01:35:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c50b7908-db2e-4309-b284-0591ae5b06bc"
		},
		{
			"deviceTime": "2014-08-09T01:40:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "497be211-3f16-4cad-9417-ebfda199aa15"
		},
		{
			"deviceTime": "2014-08-09T01:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "805a43ba-3dab-4c8d-92b4-86b6bfe01079"
		},
		{
			"deviceTime": "2014-08-09T01:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b31a41a2-34d0-48bb-9b44-c033174bee36"
		},
		{
			"deviceTime": "2014-08-09T01:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00afbb60-fb92-4692-a506-f7326a632db2"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-09T04:00:00",
			"start": "2014-08-09T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "3e915195-dede-40ac-91ea-4de486780f67"
		},
		{
			"deviceTime": "2014-08-09T02:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb6ea0af-34bf-4b59-b7cf-f0b3c9063141"
		},
		{
			"deviceTime": "2014-08-09T02:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7456452-95aa-4d27-af57-62ca93f3f707"
		},
		{
			"deviceTime": "2014-08-09T02:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ef0a989-b4e4-4c08-9b09-7279d1f04d10"
		},
		{
			"deviceTime": "2014-08-09T02:15:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73b0d4f0-a7b8-4905-8459-26e1d543aacb"
		},
		{
			"deviceTime": "2014-08-09T02:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcab2f6b-b631-4ca6-b892-d16688d76bc1"
		},
		{
			"deviceTime": "2014-08-09T03:00:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c226d862-08d9-4584-9fde-65cac59233e4"
		},
		{
			"deviceTime": "2014-08-09T03:05:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbf5a088-2a22-4a24-99e8-04eecb729f45"
		},
		{
			"deviceTime": "2014-08-09T03:10:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29e587ba-7652-4cfe-9bc3-d754e06afa25"
		},
		{
			"deviceTime": "2014-08-09T03:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e298ff8-dfbb-47df-87a4-ef9b356242f6"
		},
		{
			"deviceTime": "2014-08-09T03:20:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "106ff851-0d42-40d5-b3ff-5beb61eb6b13"
		},
		{
			"deviceTime": "2014-08-09T03:25:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f4572b9-218a-4c96-ac1d-6aa28322fe42"
		},
		{
			"deviceTime": "2014-08-09T03:30:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c837afca-b3c9-4277-b161-80c39845679c"
		},
		{
			"deviceTime": "2014-08-09T03:35:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ef807b1-3f70-458a-84aa-0f4844c2c61d"
		},
		{
			"deviceTime": "2014-08-09T03:40:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b330afb-3563-4941-9277-1c46e8254ec5"
		},
		{
			"deviceTime": "2014-08-09T03:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa70a350-3212-4e54-8798-b299a063bd77"
		},
		{
			"deviceTime": "2014-08-09T03:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79a995f2-0275-4a2b-a0b9-9c858458d44c"
		},
		{
			"deviceTime": "2014-08-09T03:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8f38b3e-d11e-4cfd-9fe2-d03ec6719271"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-09T05:00:00",
			"start": "2014-08-09T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "310ca8d8-cbdf-4c4d-acd4-32f266be9758"
		},
		{
			"deviceTime": "2014-08-09T04:00:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6bb3811-8f39-4557-9c52-afd172fed45f"
		},
		{
			"deviceTime": "2014-08-09T04:02:31",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0f314dcc-52e4-488e-8245-cdcd06c461dd"
		},
		{
			"deviceTime": "2014-08-09T04:02:31",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a4ed41c4-c0e3-4c6d-bf05-a11147e0e44c"
		},
		{
			"deviceTime": "2014-08-09T04:02:31",
			"id": "a4ed41c4-c0e3-4c6d-bf05-a11147e0e44c",
			"source": "demo",
			"joinKey": "404c60a2-a31f-44d5-a751-1c29c5a84564",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 44
			}
		},
		{
			"deviceTime": "2014-08-09T04:02:31",
			"programmed": 2.9,
			"joinKey": "404c60a2-a31f-44d5-a751-1c29c5a84564",
			"value": 0.2,
			"source": "demo",
			"recommended": 2.9,
			"extendedDelivery": 1.7,
			"initialDelivery": 1.2,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "eb83dbab-1874-4ccc-aa4f-2a78e171b9a7",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-09T04:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f78fb9a-6f4c-46dd-b163-e685dd3aa932"
		},
		{
			"deviceTime": "2014-08-09T04:10:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8505436-43e4-47a9-8eb5-8a8dd1d0cb2e"
		},
		{
			"deviceTime": "2014-08-09T04:15:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ecf95fd-9dd7-4dd7-b251-fbb543d74939"
		},
		{
			"deviceTime": "2014-08-09T04:20:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c97ae157-5369-4d85-b1c7-e07a3b13a244"
		},
		{
			"deviceTime": "2014-08-09T04:25:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67a46008-ca26-4542-9a4c-ac6e150335d6"
		},
		{
			"deviceTime": "2014-08-09T04:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0797e313-1c66-45a4-8f1d-14a13967b841"
		},
		{
			"deviceTime": "2014-08-09T04:35:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1053f3f-6f79-4e03-aeda-ac6365c53da2"
		},
		{
			"deviceTime": "2014-08-09T04:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c4aed84-c864-4319-b737-8e75b3093d83"
		},
		{
			"deviceTime": "2014-08-09T04:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01a2fdb7-b0a2-49ec-9119-64f40c4612e7"
		},
		{
			"deviceTime": "2014-08-09T04:50:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "540603d3-7ac6-4543-af32-d2688037c9e5"
		},
		{
			"deviceTime": "2014-08-09T04:55:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf0061db-5584-4399-ac62-dc63439aef2f"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-09T06:00:00",
			"start": "2014-08-09T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "690148ec-7aa4-4d27-a130-303a25128fdc"
		},
		{
			"deviceTime": "2014-08-09T05:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4e6acdf-536b-4a06-9eb4-172b99a40d65"
		},
		{
			"deviceTime": "2014-08-09T05:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9d40fb3-ecd4-490a-bceb-38057c687364"
		},
		{
			"deviceTime": "2014-08-09T05:10:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9682e773-d9a9-405e-be10-1a73f79f88bb"
		},
		{
			"deviceTime": "2014-08-09T05:15:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d05a1f2d-5217-4345-90ee-c8b232763b41"
		},
		{
			"deviceTime": "2014-08-09T05:20:01",
			"value": 2.6,
			"source": "demo",
			"recommended": 4.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "9baeb799-d99b-401e-90d4-ccfeea99f8fd"
		},
		{
			"deviceTime": "2014-08-09T05:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "555e6422-950a-4774-9f16-ab70b1da5f91"
		},
		{
			"deviceTime": "2014-08-09T05:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ff76a1e-38c5-4a4e-91f5-dcc0abe0ee14"
		},
		{
			"deviceTime": "2014-08-09T05:30:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "754eef3e-bb1e-4478-b81a-257a218f5bdc"
		},
		{
			"deviceTime": "2014-08-09T05:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25948d53-5431-4600-bd78-a3014c5efbb5"
		},
		{
			"deviceTime": "2014-08-09T05:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33ca4725-e8ba-47a3-b3a0-500670a9b92d"
		},
		{
			"deviceTime": "2014-08-09T05:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb51bdad-a86b-4917-8f79-498e651ddb6a"
		},
		{
			"deviceTime": "2014-08-09T05:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e4ab110-47fa-464a-9371-de543cc9f228"
		},
		{
			"deviceTime": "2014-08-09T05:55:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42c2c48b-07e2-4d65-b9ae-6a7c4237a42c"
		},
		{
			"delivered": 1,
			"end": "2014-08-09T09:00:00",
			"start": "2014-08-09T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "1ed8c45d-dafd-4efb-b880-d751e640d7df"
		},
		{
			"deviceTime": "2014-08-09T06:00:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b7e2f42-8d1c-4d38-b76e-42e24fd2663f"
		},
		{
			"deviceTime": "2014-08-09T06:05:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b26f008-96a7-4924-9c79-51445d5a5a37"
		},
		{
			"deviceTime": "2014-08-09T06:10:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "570c6c32-84a1-42e1-921e-3a02baf39e94"
		},
		{
			"deviceTime": "2014-08-09T06:14:05",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "17b9c632-58f7-4581-8fc0-501faacb0e53"
		},
		{
			"deviceTime": "2014-08-09T06:14:05",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "c0771b39-f4b6-42fd-8e7a-5c7e89f4d8b7"
		},
		{
			"deviceTime": "2014-08-09T06:14:05",
			"id": "c0771b39-f4b6-42fd-8e7a-5c7e89f4d8b7",
			"source": "demo",
			"joinKey": "a257ca60-c259-4840-a3a8-f1acd8a6701a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 63
			}
		},
		{
			"deviceTime": "2014-08-09T06:14:05",
			"programmed": 4.2,
			"joinKey": "a257ca60-c259-4840-a3a8-f1acd8a6701a",
			"value": 0.8,
			"source": "demo",
			"recommended": 4.2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "19a72a34-1e54-46ff-a304-f39cba4c1808"
		},
		{
			"deviceTime": "2014-08-09T06:15:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71730390-45a0-4a60-96d5-8256eeb4d223"
		},
		{
			"deviceTime": "2014-08-09T06:20:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "414bb12d-7bbd-481b-953d-2ef8a080e4fc"
		},
		{
			"deviceTime": "2014-08-09T06:20:45",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "f4bb52d9-7e24-4659-9def-ecc2d63eb708"
		},
		{
			"deviceTime": "2014-08-09T06:20:45",
			"value": 21,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fcfa29e2-01ca-4086-ad78-5c3e2bb966f7"
		},
		{
			"deviceTime": "2014-08-09T06:20:45",
			"id": "fcfa29e2-01ca-4086-ad78-5c3e2bb966f7",
			"source": "demo",
			"joinKey": "2f26b58b-8532-491d-9d43-5a99fff7df24",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 21
			}
		},
		{
			"deviceTime": "2014-08-09T06:20:45",
			"programmed": 1.4,
			"joinKey": "2f26b58b-8532-491d-9d43-5a99fff7df24",
			"value": 1.4,
			"source": "demo",
			"recommended": 1.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "8334c6ac-9cf4-485e-aeae-74aae355d144"
		},
		{
			"deviceTime": "2014-08-09T06:25:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "298af1c4-332a-42dc-ae97-9827f43ed8d3"
		},
		{
			"deviceTime": "2014-08-09T06:30:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5bfaf514-bf8d-4611-8e25-bafba97b197f"
		},
		{
			"deviceTime": "2014-08-09T06:35:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68907222-3055-4ccc-9930-bf10d1a3a338"
		},
		{
			"deviceTime": "2014-08-09T06:40:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4402a58-428f-467c-8efc-49b9ed079b2d"
		},
		{
			"deviceTime": "2014-08-09T06:45:22",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4f26ea8-25dc-4c43-a122-0897c35e6a8a"
		},
		{
			"deviceTime": "2014-08-09T06:50:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0ab7df9-b813-4b3d-aae6-e604a7d0363f"
		},
		{
			"deviceTime": "2014-08-09T06:55:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2dee3cda-b297-476d-8e22-8fdced85d7b3"
		},
		{
			"deviceTime": "2014-08-09T07:00:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e901f0d-e033-4811-be5b-5526fb5ccb3f"
		},
		{
			"deviceTime": "2014-08-09T07:05:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc4ecda6-0739-41bc-b07f-7001cffdf725"
		},
		{
			"deviceTime": "2014-08-09T07:10:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89c8238e-1078-44d3-8f65-5cdb1aee93dd"
		},
		{
			"deviceTime": "2014-08-09T07:15:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff5d6775-456e-4e3c-a399-0ef9b604ea4b"
		},
		{
			"deviceTime": "2014-08-09T07:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "556da923-a2dd-41b8-a4cc-14472dec8382"
		},
		{
			"deviceTime": "2014-08-09T07:25:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "741c6ed8-f6f6-49ab-a254-8d61c1117c2d"
		},
		{
			"deviceTime": "2014-08-09T07:30:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e816397b-c68a-412a-a26f-6d9e4a2766f4"
		},
		{
			"deviceTime": "2014-08-09T07:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27048f42-5ed4-4182-9216-8a943b3ba8f6"
		},
		{
			"deviceTime": "2014-08-09T07:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bec328c1-b46c-4df3-bda9-892f1d370746"
		},
		{
			"deviceTime": "2014-08-09T07:45:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af5ff340-bd7a-4a04-9267-8a6248bf905e"
		},
		{
			"deviceTime": "2014-08-09T07:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b2ac53c-b3e2-4976-9940-f429336037c5"
		},
		{
			"deviceTime": "2014-08-09T07:55:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3440d40-6da1-4e1b-a024-e1b45473c882"
		},
		{
			"deviceTime": "2014-08-09T08:00:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15955edd-b8db-422e-9d7e-8727ce3b0dbe"
		},
		{
			"deviceTime": "2014-08-09T08:05:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bac7ec15-aefa-4779-96c4-6cf387c44d1d"
		},
		{
			"deviceTime": "2014-08-09T08:10:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "384828e9-7c19-49ed-9479-2f49d2f23b1c"
		},
		{
			"deviceTime": "2014-08-09T08:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a6b5f81-0833-4cca-85f9-4c8ace1be70d"
		},
		{
			"deviceTime": "2014-08-09T08:20:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6c9b2c0-f7d0-411c-9473-98292d3bcf7d"
		},
		{
			"deviceTime": "2014-08-09T08:25:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b60e447e-3b62-49fe-8907-c629c5a2a759"
		},
		{
			"deviceTime": "2014-08-09T08:30:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "070941e7-9652-46a5-9d30-6597386971e3"
		},
		{
			"deviceTime": "2014-08-09T08:35:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "451fbecf-81c7-4016-b073-7d3558a20cf5"
		},
		{
			"deviceTime": "2014-08-09T08:40:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f73c4627-75e6-478f-bcb0-6d95ba08c242"
		},
		{
			"deviceTime": "2014-08-09T08:45:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9ad8f5d-fa47-4850-94e3-6ef8a238c6f2"
		},
		{
			"deviceTime": "2014-08-09T08:50:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef91848e-24d8-4bf3-be3c-c4eaab671493"
		},
		{
			"deviceTime": "2014-08-09T08:55:22",
			"value": 230,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "301726a9-eba7-489f-8b7e-69cc0e1e29ac"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-09T15:00:00",
			"start": "2014-08-09T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "3029bf02-a045-4ae2-b0fe-37aaa8314617"
		},
		{
			"deviceTime": "2014-08-09T09:00:22",
			"value": 248,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fa5e8d9-be33-4cee-bfa7-963ba055cdac"
		},
		{
			"deviceTime": "2014-08-09T09:03:07",
			"value": 345,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e5088e84-a46a-41df-8fad-d4be5899d554"
		},
		{
			"deviceTime": "2014-08-09T09:03:07",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "52ad7872-2b7c-4a04-b97d-4878ce66f346"
		},
		{
			"deviceTime": "2014-08-09T09:03:07",
			"id": "52ad7872-2b7c-4a04-b97d-4878ce66f346",
			"source": "demo",
			"joinKey": "e8266fac-58e3-460d-ab90-bc7cda1a50ce",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 59
			}
		},
		{
			"deviceTime": "2014-08-09T09:03:07",
			"programmed": 3.9,
			"joinKey": "e8266fac-58e3-460d-ab90-bc7cda1a50ce",
			"value": 3.9,
			"source": "demo",
			"recommended": 3.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "ae10b78a-3002-4ba0-95c9-235e8eb0d7eb"
		},
		{
			"deviceTime": "2014-08-09T09:05:22",
			"value": 268,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e983415-6d54-4be7-b80b-b80a34e7e6c0"
		},
		{
			"deviceTime": "2014-08-09T09:10:18",
			"value": 349,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0e11fb32-b2fb-422a-a5af-204381d0db53"
		},
		{
			"deviceTime": "2014-08-09T09:10:18",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "dfe9437e-5239-46ed-ae6d-bd0380daafee"
		},
		{
			"deviceTime": "2014-08-09T09:10:18",
			"id": "dfe9437e-5239-46ed-ae6d-bd0380daafee",
			"source": "demo",
			"joinKey": "f3ed63b8-a9b8-4403-a80c-439cd8c65bc8",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 89
			}
		},
		{
			"deviceTime": "2014-08-09T09:10:18",
			"programmed": 5.9,
			"joinKey": "f3ed63b8-a9b8-4403-a80c-439cd8c65bc8",
			"value": 5.9,
			"source": "demo",
			"recommended": 5.9,
			"extendedDelivery": 5.3,
			"initialDelivery": 0.6,
			"duration": 5400000,
			"extended": true,
			"type": "bolus",
			"id": "b502a54a-2608-46ba-a682-b015a700ec9d",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-09T09:10:22",
			"value": 282,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d28d3d5b-3e55-4293-9c8b-6363e03c8d1d"
		},
		{
			"deviceTime": "2014-08-09T09:15:22",
			"value": 291,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c948f850-f3c5-4057-847a-68ebe535253f"
		},
		{
			"deviceTime": "2014-08-09T09:20:22",
			"value": 299,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b8c5d0c-a430-4bb7-adc7-8ee6207ecbe9"
		},
		{
			"deviceTime": "2014-08-09T09:25:22",
			"value": 307,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d476caf8-6615-4c17-a49b-8953b8eeccfb"
		},
		{
			"deviceTime": "2014-08-09T09:30:22",
			"value": 317,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8c1d7b5-8a38-4944-893d-e3cd1990588d"
		},
		{
			"deviceTime": "2014-08-09T09:35:22",
			"value": 339,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f338946-e34e-4fc6-86a1-0b4a13925a97"
		},
		{
			"deviceTime": "2014-08-09T09:40:22",
			"value": 336,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21dedc07-e34c-4a9d-b763-a7a659b67689"
		},
		{
			"deviceTime": "2014-08-09T09:45:22",
			"value": 340,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ae2ae30-f453-45bd-bb8f-f9607dea859e"
		},
		{
			"deviceTime": "2014-08-09T09:50:22",
			"value": 353,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e31aa24-2037-4802-b412-ca1406ec0d52"
		},
		{
			"deviceTime": "2014-08-09T09:55:22",
			"value": 351,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7277189b-04b1-4091-80b5-3d26fbe0e79c"
		},
		{
			"deviceTime": "2014-08-09T10:00:22",
			"value": 348,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b480e05-cd33-4a6a-a6b3-466791759cd7"
		},
		{
			"deviceTime": "2014-08-09T10:05:22",
			"value": 348,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7437099c-10d5-41b4-99ce-ed38d17c4669"
		},
		{
			"deviceTime": "2014-08-09T10:10:22",
			"value": 343,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "109e05b2-e182-4c55-a225-5b7326e77aef"
		},
		{
			"deviceTime": "2014-08-09T10:15:22",
			"value": 337,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc8f3a0e-530c-4688-9ba0-16868277a304"
		},
		{
			"deviceTime": "2014-08-09T10:20:22",
			"value": 337,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8355f116-9b87-4b66-b69a-d429e1ed11ef"
		},
		{
			"deviceTime": "2014-08-09T10:25:22",
			"value": 346,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf7e8f6b-b4fb-4e05-844a-a8aaf75a2aa0"
		},
		{
			"deviceTime": "2014-08-09T10:30:22",
			"value": 359,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bd82fff-5021-4256-ba9a-5fcbf0096651"
		},
		{
			"deviceTime": "2014-08-09T10:35:22",
			"value": 371,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4047e30-5d82-43af-8a17-82ec1eb73cf4"
		},
		{
			"deviceTime": "2014-08-09T10:40:22",
			"value": 379,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c3ac9d2-e02f-49b2-8584-dc6beccd0f90"
		},
		{
			"deviceTime": "2014-08-09T10:45:22",
			"value": 383,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f3d60c8-a61b-4537-9e26-6f4a26e6ea16"
		},
		{
			"deviceTime": "2014-08-09T10:50:22",
			"value": 372,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b889d06c-3321-4841-a8da-779b63e01609"
		},
		{
			"deviceTime": "2014-08-09T10:55:22",
			"value": 364,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e63cdbf-ccf1-4779-a53e-5002e9b9a5ed"
		},
		{
			"deviceTime": "2014-08-09T11:00:22",
			"value": 360,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6dcc1ea1-2fd6-4a89-ac0e-34bbe2a44287"
		},
		{
			"deviceTime": "2014-08-09T11:05:22",
			"value": 356,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a361b1d-88fe-4338-9f76-821e2d3ee978"
		},
		{
			"messageText": "Pork chop in ea fatback, aute ex irure enim ut hamburger nostrud exercitation cillum duis sausage. Exercitation do mollit incididunt drumstick swine irure. Ground round ut ut ham hock kevin, fugiat pork loin ea elit prosciutto pork chop eiusmod.",
			"parentMessage": "",
			"utcTime": "2014-08-09T11:09:35Z",
			"type": "message",
			"id": "a9c4a5c7-bb5d-4d5e-90f0-01cc065ccc58"
		},
		{
			"deviceTime": "2014-08-09T11:10:22",
			"value": 352,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01835a41-4e85-4ec9-a993-1e53fb397c0a"
		},
		{
			"deviceTime": "2014-08-09T11:15:22",
			"value": 342,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d41ced9-a31e-4279-9a29-00d0c46c0a20"
		},
		{
			"deviceTime": "2014-08-09T11:20:22",
			"value": 332,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "462054ad-0e26-4324-9d27-b06e2acf90e2"
		},
		{
			"deviceTime": "2014-08-09T11:25:22",
			"value": 329,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "429b037d-bf1b-4de3-bdae-bb139c0336f8"
		},
		{
			"deviceTime": "2014-08-09T11:30:22",
			"value": 329,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cebb58d6-cb88-4a1d-81dd-f9150d8cfb65"
		},
		{
			"deviceTime": "2014-08-09T11:35:22",
			"value": 313,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d031d9a3-7cf5-4149-81bd-2be059c18606"
		},
		{
			"deviceTime": "2014-08-09T11:40:22",
			"value": 295,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3e292c5-5129-4955-9fed-d9dba264c7e4"
		},
		{
			"deviceTime": "2014-08-09T11:45:22",
			"value": 280,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4c78edb-28ec-4dbb-884b-5a84899e035a"
		},
		{
			"deviceTime": "2014-08-09T11:50:22",
			"value": 276,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75f7016f-78ee-4c90-8eac-2560570de28c"
		},
		{
			"deviceTime": "2014-08-09T11:55:22",
			"value": 279,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5905658b-d61f-4397-a2c3-da83f1db318d"
		},
		{
			"deviceTime": "2014-08-09T12:00:22",
			"value": 281,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d57d9a0-f420-4243-b372-1cf1c8c9304f"
		},
		{
			"deviceTime": "2014-08-09T12:05:22",
			"value": 276,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd33cfb1-c35d-4229-a953-5645b76690f5"
		},
		{
			"deviceTime": "2014-08-09T12:10:22",
			"value": 266,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd73898d-aa89-496c-b56e-829bbd0a43fe"
		},
		{
			"deviceTime": "2014-08-09T12:15:22",
			"value": 255,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9df38f0-9078-48a6-ade5-27e232e7e0ac"
		},
		{
			"deviceTime": "2014-08-09T12:20:22",
			"value": 247,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e5b42fc-5dea-4b1c-8bd6-7cc24274a1cf"
		},
		{
			"deviceTime": "2014-08-09T12:25:22",
			"value": 242,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a229312e-014f-4dd7-a258-61e0346e32a8"
		},
		{
			"deviceTime": "2014-08-09T12:30:22",
			"value": 236,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af5f16a1-36fa-4c58-881e-76dd8ba24ae0"
		},
		{
			"deviceTime": "2014-08-09T12:35:22",
			"value": 237,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34087d54-a35e-4211-9367-57de4070ad22"
		},
		{
			"deviceTime": "2014-08-09T12:40:22",
			"value": 238,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9bff6e1-191e-4824-9290-b0ac2752a8d6"
		},
		{
			"deviceTime": "2014-08-09T12:45:22",
			"value": 239,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72348bd8-c2ba-47c0-baca-389d53fb5470"
		},
		{
			"deviceTime": "2014-08-09T12:50:22",
			"value": 241,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a8f7240-9eec-4867-95e2-864bf2cebebe"
		},
		{
			"deviceTime": "2014-08-09T12:55:22",
			"value": 242,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbe4df71-4940-457a-990c-26dbab8eeb4a"
		},
		{
			"deviceTime": "2014-08-09T13:00:22",
			"value": 236,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8cd46c4-f29c-44eb-996c-7225fb8157ee"
		},
		{
			"deviceTime": "2014-08-09T13:05:22",
			"value": 230,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cd1ac38-b3c4-46ff-aaa8-42d25d80405b"
		},
		{
			"deviceTime": "2014-08-09T13:10:22",
			"value": 225,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe3d670f-9ef2-40ff-ba89-66db7c4f95b6"
		},
		{
			"deviceTime": "2014-08-09T13:15:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11eb2b5e-8c5f-4535-98a7-194ae26694a8"
		},
		{
			"deviceTime": "2014-08-09T13:20:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27a0af15-1bc8-427a-9b37-ac7130e5d988"
		},
		{
			"deviceTime": "2014-08-09T13:25:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a75ed6ed-e925-421f-8653-136a275a9db8"
		},
		{
			"deviceTime": "2014-08-09T13:30:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2144e88-48ed-4044-a978-239e28101bf6"
		},
		{
			"deviceTime": "2014-08-09T13:35:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7885830-0d91-4fec-a987-bccfd359639d"
		},
		{
			"deviceTime": "2014-08-09T13:36:30",
			"value": 215,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "05ea7e3c-c88e-4cde-848c-b142259c1e4b"
		},
		{
			"deviceTime": "2014-08-09T13:36:30",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "0b69c4bc-2e0a-429a-8b1d-3e0789a1de12"
		},
		{
			"deviceTime": "2014-08-09T13:36:30",
			"id": "0b69c4bc-2e0a-429a-8b1d-3e0789a1de12",
			"source": "demo",
			"joinKey": "d2f7ff24-85b4-498d-b32e-13c3a2f8b700",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 53
			}
		},
		{
			"deviceTime": "2014-08-09T13:36:30",
			"programmed": 3.5,
			"joinKey": "d2f7ff24-85b4-498d-b32e-13c3a2f8b700",
			"value": 3.5,
			"source": "demo",
			"recommended": 3.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b19bdae7-d0f7-42ca-945a-88e00e027ca6"
		},
		{
			"deviceTime": "2014-08-09T13:40:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3bdcbfbc-b518-4ebb-b834-6fd6cddbb40a"
		},
		{
			"deviceTime": "2014-08-09T13:45:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7130ba4-b87c-4db7-ae8b-eb0a37257ec9"
		},
		{
			"deviceTime": "2014-08-09T13:50:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cce8875-46d3-470a-95fb-f020010e7156"
		},
		{
			"deviceTime": "2014-08-09T13:50:36",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "87dad75b-3c4c-4db6-9e57-85c5d9daee7a"
		},
		{
			"deviceTime": "2014-08-09T13:50:36",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "29d2ad94-d89c-4fab-933b-7e5fd692ca0e"
		},
		{
			"deviceTime": "2014-08-09T13:50:36",
			"id": "29d2ad94-d89c-4fab-933b-7e5fd692ca0e",
			"source": "demo",
			"joinKey": "c2abf65a-8480-43d2-90b4-324231bbc51d",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 44
			}
		},
		{
			"deviceTime": "2014-08-09T13:50:36",
			"programmed": 2.6,
			"joinKey": "c2abf65a-8480-43d2-90b4-324231bbc51d",
			"value": 2.6,
			"source": "demo",
			"recommended": 2.9,
			"extendedDelivery": 2.6,
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"extended": true,
			"type": "bolus",
			"id": "4eeabf5e-fe65-4081-ad30-6d566d8d4544"
		},
		{
			"deviceTime": "2014-08-09T13:55:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc03f6fc-6686-4458-bffc-c6ca16bcbfc5"
		},
		{
			"deviceTime": "2014-08-09T14:00:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "728d636a-1c66-4eef-a48c-b7f16b9cc48d"
		},
		{
			"deviceTime": "2014-08-09T14:05:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17e01025-b5b2-4011-b801-a96017d563e7"
		},
		{
			"deviceTime": "2014-08-09T14:10:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84cd25c5-d873-4862-91ae-640a1a2808a5"
		},
		{
			"deviceTime": "2014-08-09T14:15:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4bc11e3-c311-4b7c-a835-f7f1ac287d8c"
		},
		{
			"deviceTime": "2014-08-09T14:20:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b30f110-07cd-4aaf-85fb-788e12b76534"
		},
		{
			"deviceTime": "2014-08-09T14:25:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ebd58b6-51f8-417f-9784-a134b20c11ed"
		},
		{
			"deviceTime": "2014-08-09T14:30:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2970446f-1513-40c3-be48-c9dd9e3bc967"
		},
		{
			"deviceTime": "2014-08-09T14:35:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d81b215a-04f2-42bd-bbd1-18edd07c7b6c"
		},
		{
			"deviceTime": "2014-08-09T14:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52535eb3-d730-4a5d-97ae-0ce1eed41c82"
		},
		{
			"deviceTime": "2014-08-09T14:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6dd4e6a4-0211-48e6-af7f-984123c00ec9"
		},
		{
			"deviceTime": "2014-08-09T14:50:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bddede6-aa42-41bf-9ad8-45175fc06d8d"
		},
		{
			"deviceTime": "2014-08-09T14:55:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47017bbc-6687-422e-9230-a23c4319b0a5"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-09T20:00:00",
			"start": "2014-08-09T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "d2c8df5e-c36d-4b88-98d2-26cb0030139e"
		},
		{
			"deviceTime": "2014-08-09T15:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4987b653-477b-440e-8b24-1c685b65aec1"
		},
		{
			"deviceTime": "2014-08-09T15:05:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb26c90f-d377-4480-84e1-5640c50a0862"
		},
		{
			"deviceTime": "2014-08-09T15:10:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b35d7e12-3be0-46f6-87ef-1b0b0ffe0109"
		},
		{
			"deviceTime": "2014-08-09T15:15:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3037548-6e64-48b0-b78d-cff185a5d176"
		},
		{
			"deviceTime": "2014-08-09T15:20:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77ef9d88-7860-4b0b-80f1-967d0dc679af"
		},
		{
			"deviceTime": "2014-08-09T15:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc7428ac-f990-4391-b273-aac5c3860acb"
		},
		{
			"deviceTime": "2014-08-09T15:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b50ccdbe-5038-43a8-b8e3-33054dbb0517"
		},
		{
			"deviceTime": "2014-08-09T15:35:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3cae3bb-8b4d-4c7c-a339-34b61d086b24"
		},
		{
			"deviceTime": "2014-08-09T15:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82d4757f-d699-447c-a090-75e8e07c765f"
		},
		{
			"deviceTime": "2014-08-09T15:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d728b4d-cca5-4513-abfa-6c9b3d04379b"
		},
		{
			"deviceTime": "2014-08-09T15:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee436cb3-0cd7-4bb6-920f-e450bd403ff8"
		},
		{
			"deviceTime": "2014-08-09T15:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26dfa190-7a7a-4271-90e9-8be32f70debd"
		},
		{
			"deviceTime": "2014-08-09T16:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c59f65f1-57dd-45a0-bb98-5f1f557be162"
		},
		{
			"deviceTime": "2014-08-09T16:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4adf910-6c35-4656-a06b-cffe5ec7edfd"
		},
		{
			"deviceTime": "2014-08-09T16:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b179f9de-6d7e-46bf-8098-2fac139c65f6"
		},
		{
			"deviceTime": "2014-08-09T16:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3225ef56-64ad-43b3-a511-8813f59cff22"
		},
		{
			"deviceTime": "2014-08-09T16:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "662b554e-3a5d-44ac-b881-2f54f27e26b5"
		},
		{
			"deviceTime": "2014-08-09T16:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "235b0810-2492-47e2-8d37-30fe95c73396"
		},
		{
			"deviceTime": "2014-08-09T16:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "730dd45b-9b92-4d4b-acd8-c13524f34318"
		},
		{
			"deviceTime": "2014-08-09T16:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de912239-428e-42d1-a601-4bccfa229f0b"
		},
		{
			"deviceTime": "2014-08-09T16:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52737e1c-69e5-4cbd-832d-0a8c15a6fabb"
		},
		{
			"deviceTime": "2014-08-09T16:45:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85da4a3a-b51b-49fe-a568-b3166653b6c2"
		},
		{
			"deviceTime": "2014-08-09T16:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0398eb10-a6de-462a-8814-de46c8ccf392"
		},
		{
			"deviceTime": "2014-08-09T16:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68841c5f-23cd-4070-839b-64b56615db06"
		},
		{
			"deviceTime": "2014-08-09T17:00:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f99be045-fe01-493d-9b11-d15b443cfca6"
		},
		{
			"deviceTime": "2014-08-09T17:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b5d3366-21d9-4777-b855-c3bdb47e38f2"
		},
		{
			"end": "2014-08-09T21:40:01",
			"start": "2014-08-09T17:10:01",
			"percent": 1.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 16200000,
			"type": "basal-rate-segment",
			"id": "ee2ef016-ff55-4cd4-b2b1-ce78241c66ce"
		},
		{
			"deviceTime": "2014-08-09T17:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cdba8e0-8e2a-48e0-89b0-63f0c63e87c8"
		},
		{
			"deviceTime": "2014-08-09T17:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "deb885d0-a1b3-4a3a-b1f1-a24ccfa63097"
		},
		{
			"deviceTime": "2014-08-09T17:16:01",
			"value": 0.3,
			"source": "demo",
			"recommended": 0.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c15759ab-5831-4dc7-8062-51342923551e"
		},
		{
			"deviceTime": "2014-08-09T17:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cf65973-c4c9-4f3e-9e8b-a5b855ac5c7d"
		},
		{
			"deviceTime": "2014-08-09T17:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b17031c7-3764-4b1f-9f98-ae6fae6b5a2d"
		},
		{
			"deviceTime": "2014-08-09T17:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a3019de-3955-4d88-8505-9dbb5a4b91f9"
		},
		{
			"deviceTime": "2014-08-09T17:35:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e27385f2-cd6c-4b9a-8f01-e1c90ef1badc"
		},
		{
			"deviceTime": "2014-08-09T17:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f7adb8f-a5b1-48d6-ae8a-8e5cd3cb1dff"
		},
		{
			"deviceTime": "2014-08-09T17:45:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4582cb52-aa15-46b1-a3b1-072a4a553794"
		},
		{
			"deviceTime": "2014-08-09T17:50:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f4512d4-442b-463d-87d4-ae0cfb1ec9b4"
		},
		{
			"deviceTime": "2014-08-09T17:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "feb7728c-a529-44b2-97e3-c30d36380fc3"
		},
		{
			"deviceTime": "2014-08-09T18:00:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e89a7f65-aefc-4752-8220-6c054e6813b0"
		},
		{
			"deviceTime": "2014-08-09T18:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e38e61a5-6b27-4149-8d1e-55a3885203d2"
		},
		{
			"deviceTime": "2014-08-09T18:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c55e8e8-7833-4a8b-8094-8b618f9068ab"
		},
		{
			"deviceTime": "2014-08-09T18:15:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40691dd2-4a17-4899-9bac-c08eb5961bc9"
		},
		{
			"deviceTime": "2014-08-09T18:20:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39cd59cc-59e2-4eb9-82d4-dc56ffaa93f2"
		},
		{
			"deviceTime": "2014-08-09T18:25:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3dfde026-3988-4cd4-85a8-1f733be5cc8c"
		},
		{
			"deviceTime": "2014-08-09T18:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "256c70c8-e633-4e71-a674-35d1f68c3582"
		},
		{
			"deviceTime": "2014-08-09T18:35:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6732628-80bf-49d8-9632-6e945bf4d891"
		},
		{
			"deviceTime": "2014-08-09T18:40:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a570c8ba-7299-4a7e-9d0b-e2f831554e3b"
		},
		{
			"deviceTime": "2014-08-09T18:45:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dff72a2c-5a01-4d07-ade9-8998ce22f027"
		},
		{
			"deviceTime": "2014-08-09T18:50:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cb7a247-e929-4ea2-8d3d-ce1cc84f363d"
		},
		{
			"deviceTime": "2014-08-09T18:55:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8628e59-8759-4cca-bebd-7a0878ad76ef"
		},
		{
			"deviceTime": "2014-08-09T19:00:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4557ce2c-7a68-4c47-8d1f-2ceb74f06675"
		},
		{
			"deviceTime": "2014-08-09T19:05:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6aa9c0cc-ad43-45cc-9017-c419fa6618dc"
		},
		{
			"deviceTime": "2014-08-09T19:10:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5881c9dd-e2b4-4aa9-be69-f17f8e492749"
		},
		{
			"deviceTime": "2014-08-09T19:15:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f319dc3-aed6-4d0b-b08e-4df24b7fc63d"
		},
		{
			"deviceTime": "2014-08-09T19:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "820d828b-40b3-43c7-8e39-f9cda3852132"
		},
		{
			"deviceTime": "2014-08-09T19:25:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52aee1d5-2266-452b-9e28-f402b01e2baf"
		},
		{
			"deviceTime": "2014-08-09T19:30:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fb4f204-6afa-4060-becb-549370773ca6"
		},
		{
			"deviceTime": "2014-08-09T19:35:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c728672-443c-4e86-a9b4-01250fbc4709"
		},
		{
			"deviceTime": "2014-08-09T19:40:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a80af17-c974-4255-9ef1-53fdef255462"
		},
		{
			"deviceTime": "2014-08-09T19:45:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbea4e26-9ae1-4c99-b26c-d916d3fd948a"
		},
		{
			"deviceTime": "2014-08-09T19:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f61a24cb-c6a4-4e3a-b07c-baa3d89f863f"
		},
		{
			"deviceTime": "2014-08-09T19:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc7f63ec-a16b-4758-9438-af2f5fc06366"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-10T00:00:00",
			"start": "2014-08-09T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"id": "0117733a-dcd9-4306-aa6d-b0b36aa47890",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-09T20:00:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce18d49c-21eb-4925-b30c-b1162e35ce25"
		},
		{
			"deviceTime": "2014-08-09T20:05:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bacba1ec-f798-454e-96aa-c3b34499c413"
		},
		{
			"deviceTime": "2014-08-09T20:10:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1abc6e13-91e0-4b27-b4ad-e80d22a8def9"
		},
		{
			"deviceTime": "2014-08-09T20:15:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d8abac7-0170-4cb4-9271-a37a69922e89"
		},
		{
			"deviceTime": "2014-08-09T20:20:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ac92e67-2dd2-46c9-a853-bd82532d0680"
		},
		{
			"deviceTime": "2014-08-09T20:25:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f80c4e5b-ef9a-4430-a1ca-105dfc7ce2b9"
		},
		{
			"deviceTime": "2014-08-09T20:30:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98eafeed-b0c1-428f-a6db-874e53e633a1"
		},
		{
			"deviceTime": "2014-08-09T20:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81e37571-d5f0-4420-a181-04ac1584a5db"
		},
		{
			"deviceTime": "2014-08-09T20:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28f5d815-e014-4f94-86d5-c794fdaa5719"
		},
		{
			"deviceTime": "2014-08-09T20:45:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f205df9f-ad87-4202-a9bf-10fd7cf097c7"
		},
		{
			"deviceTime": "2014-08-09T20:50:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f14d3b67-33c4-4119-a130-01fe1f77fe88"
		},
		{
			"deviceTime": "2014-08-09T20:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0ef071f-f36a-4c80-8f82-c988d3038b7e"
		},
		{
			"deviceTime": "2014-08-09T21:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "defcd3e6-a081-4dac-9ec0-858609c3824c"
		},
		{
			"deviceTime": "2014-08-09T21:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1471cbc0-a659-4c5f-8878-6a061d00404a"
		},
		{
			"deviceTime": "2014-08-09T21:10:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67bbdb2e-cf2d-47cd-b76a-35a6caf37fee"
		},
		{
			"deviceTime": "2014-08-09T21:15:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a77d75a-4c56-4c5e-9e14-f863232533ef"
		},
		{
			"deviceTime": "2014-08-09T21:20:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92a45aec-7786-4e88-a123-3725f348ace4"
		},
		{
			"deviceTime": "2014-08-09T21:25:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d4027cf-6162-47ea-a01e-79f45f2918c0"
		},
		{
			"deviceTime": "2014-08-09T21:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "587a764a-b314-415b-a38b-79622d14e1fd"
		},
		{
			"deviceTime": "2014-08-09T21:35:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57d58981-39c6-4578-9660-5b2535ad8518"
		},
		{
			"deviceTime": "2014-08-09T21:40:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45e224fa-c146-4d13-86d0-28e7914ba82b"
		},
		{
			"deviceTime": "2014-08-09T21:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0830ca6c-b642-4971-a145-d6dffcf2c590"
		},
		{
			"deviceTime": "2014-08-09T21:50:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61dfa911-2deb-475d-ace8-a3de015b2c20"
		},
		{
			"deviceTime": "2014-08-09T21:55:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c76b9e42-a87d-4812-b429-0832bf073c9c"
		},
		{
			"deviceTime": "2014-08-09T22:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8648868-e3cb-4490-aa1a-50eb7efd856b"
		},
		{
			"deviceTime": "2014-08-09T22:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4377588-71f5-478e-a426-dd146ff0f0f4"
		},
		{
			"deviceTime": "2014-08-09T22:10:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a31ac5bd-6e0b-4271-9f40-c9f0981f2044"
		},
		{
			"deviceTime": "2014-08-09T22:15:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7fe3a1b-cd88-41d8-88de-6af7085356dc"
		},
		{
			"deviceTime": "2014-08-09T22:20:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f182e861-3814-491a-89e7-3f219e0511e7"
		},
		{
			"deviceTime": "2014-08-09T22:35:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3b53911-542e-4b7c-8601-b78d1cff8eb3"
		},
		{
			"deviceTime": "2014-08-09T22:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f547aa99-1349-474d-9b0b-f19afa3d468b"
		},
		{
			"deviceTime": "2014-08-09T22:45:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86a4901a-4aca-4026-ac61-9d64b8037b00"
		},
		{
			"deviceTime": "2014-08-09T22:50:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c22b31fe-cd94-4465-91ed-f454b55e7e41"
		},
		{
			"deviceTime": "2014-08-09T22:55:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33afc7e4-9556-4019-8f72-8b2bc7ff121a"
		},
		{
			"deviceTime": "2014-08-09T23:00:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7fb4707-0400-4938-b6a5-4ed83f131f65"
		},
		{
			"deviceTime": "2014-08-09T23:05:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85d9d7e0-8c93-4247-89e2-d1dc74c377fe"
		},
		{
			"deviceTime": "2014-08-09T23:10:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea48479d-e239-4699-8eed-f2673e19a8a4"
		},
		{
			"deviceTime": "2014-08-09T23:15:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "129886a5-f083-4b2a-be8c-fc28823043c4"
		},
		{
			"deviceTime": "2014-08-09T23:20:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af2968d0-22be-4dbc-8de1-fcfce22159a3"
		},
		{
			"deviceTime": "2014-08-09T23:25:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94755d7a-936b-46d5-b793-f1892c489c40"
		},
		{
			"deviceTime": "2014-08-09T23:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c18e4b94-fda4-4a66-90ff-171117b7bcad"
		},
		{
			"deviceTime": "2014-08-09T23:35:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4af5c68-80ec-4498-bc0e-324515603d86"
		},
		{
			"deviceTime": "2014-08-09T23:40:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e00ad430-5b30-4044-904f-95046baf9260"
		},
		{
			"deviceTime": "2014-08-09T23:45:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9640992f-52aa-46d3-b6bc-c0201fc2cb8d"
		},
		{
			"deviceTime": "2014-08-09T23:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b2113a6-b111-4d5e-9fe1-62014c4cc7b7"
		},
		{
			"deviceTime": "2014-08-09T23:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bbd3499-d02c-4631-bbf0-e8e9039c7b19"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-10T02:00:00",
			"start": "2014-08-10T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "8a4b1000-54ee-47a0-87c5-9e97f28672f8"
		},
		{
			"deviceTime": "2014-08-10T00:00:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d6c86a3-9e06-4cc1-b8a6-720a8ab57b1d"
		},
		{
			"deviceTime": "2014-08-10T00:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb15d35d-faa4-41b7-8cf3-4ccbf9e2620a"
		},
		{
			"deviceTime": "2014-08-10T00:10:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdac6399-5bd4-4627-96d7-93c3415aa30c"
		},
		{
			"deviceTime": "2014-08-10T00:15:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58540970-95cb-420f-a2d5-efa3b166a9ff"
		},
		{
			"deviceTime": "2014-08-10T00:20:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6068cfad-2acb-4249-ad15-15e91baf207b"
		},
		{
			"deviceTime": "2014-08-10T00:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fcc62dd-dd8f-40ab-aeb4-d16d5e4e73f8"
		},
		{
			"deviceTime": "2014-08-10T00:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c35e9f7-83d9-4243-b700-57e967527010"
		},
		{
			"deviceTime": "2014-08-10T00:35:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08e22f05-7488-46bd-92da-aee1485f9283"
		},
		{
			"deviceTime": "2014-08-10T00:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8767c5f9-2b4a-4dde-964f-5a7fd5141f24"
		},
		{
			"deviceTime": "2014-08-10T00:45:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97ef7e7c-21a3-4692-a920-1f4ecdda2b06"
		},
		{
			"deviceTime": "2014-08-10T00:50:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a12bdaf-e0a5-42d5-b415-b7cf18113a50"
		},
		{
			"deviceTime": "2014-08-10T00:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfc15ca9-f4cd-4103-9056-c0f5e54a4922"
		},
		{
			"deviceTime": "2014-08-10T01:00:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24e78c3c-4477-44a5-ae81-e821f2ca5b0f"
		},
		{
			"deviceTime": "2014-08-10T01:05:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ae6b1e4-fe7b-4096-b042-7e94be688f01"
		},
		{
			"deviceTime": "2014-08-10T01:10:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f163d5a-0083-4d5f-9019-01a251a286ea"
		},
		{
			"deviceTime": "2014-08-10T01:15:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ffdd730-1cd2-42eb-8f3f-34e19264fef0"
		},
		{
			"deviceTime": "2014-08-10T01:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12bac4cf-33bc-4ffc-8e41-cd977125e7b1"
		},
		{
			"deviceTime": "2014-08-10T01:25:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f358fad-d066-4a7e-b375-4e408ed958e7"
		},
		{
			"deviceTime": "2014-08-10T01:30:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f98f04db-d122-45d9-ada6-a1138d6e9881"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-10T04:00:00",
			"start": "2014-08-10T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"id": "9a31b9fb-3ebb-4fcb-bb31-67a7f90a3b03",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-10T02:05:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d39d4b06-c7c5-4ad2-b48a-36f05b35c863"
		},
		{
			"deviceTime": "2014-08-10T02:20:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf6266f2-0b1a-486e-bb26-d9cfe38f9b46"
		},
		{
			"deviceTime": "2014-08-10T02:25:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8168833-ac66-49d7-8655-b1b8eba8aa4a"
		},
		{
			"deviceTime": "2014-08-10T02:30:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97d44a7b-3740-4e3d-bd4b-a62738261fa4"
		},
		{
			"deviceTime": "2014-08-10T02:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86b83924-c4b5-4812-94fc-f6f8dfc76d7a"
		},
		{
			"deviceTime": "2014-08-10T02:40:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6aa92438-85f2-408b-ae88-0ea811c409e2"
		},
		{
			"deviceTime": "2014-08-10T02:45:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11a46eb1-c532-4547-8a5e-a68b5fb423b8"
		},
		{
			"deviceTime": "2014-08-10T02:50:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4cce5d7-6df7-4d97-8272-31fe6159f492"
		},
		{
			"deviceTime": "2014-08-10T02:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d60fd8ba-8b16-4274-bc12-973d940ebc59"
		},
		{
			"deviceTime": "2014-08-10T03:00:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f76a480e-9bed-4140-a575-de3b05500bef"
		},
		{
			"deviceTime": "2014-08-10T03:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3789fee7-8f30-4aff-8456-f08394c809b5"
		},
		{
			"deviceTime": "2014-08-10T03:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "609e2ebb-b562-430e-a79b-a250a3d1aa2d"
		},
		{
			"deviceTime": "2014-08-10T03:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa717504-207a-4be9-9d00-e509b486861f"
		},
		{
			"deviceTime": "2014-08-10T03:20:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c62d6770-9ef4-47b1-ac3f-bad69ac61016"
		},
		{
			"deviceTime": "2014-08-10T03:25:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89f61bd7-6428-4918-8dc3-6cbfb7be3462"
		},
		{
			"deviceTime": "2014-08-10T03:30:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "247e339d-f2c3-4ec5-a272-332a6a03e29c"
		},
		{
			"deviceTime": "2014-08-10T03:35:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "410ff002-8386-4a49-982d-21a9f723eff6"
		},
		{
			"deviceTime": "2014-08-10T03:40:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "250e16ed-e353-4f94-9ab6-961ce1eae27f"
		},
		{
			"deviceTime": "2014-08-10T03:45:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d18b8987-7acd-47fd-a547-2dab1c2f8961"
		},
		{
			"deviceTime": "2014-08-10T03:50:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15cbeba8-0d8d-4bba-ac5d-10aa6ef60605"
		},
		{
			"deviceTime": "2014-08-10T03:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c219abb6-c744-4ec7-b346-9c4190e51a70"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-10T05:00:00",
			"start": "2014-08-10T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "9ad03524-4aac-4c87-89fe-c40b931eb99f"
		},
		{
			"deviceTime": "2014-08-10T04:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97b9d90f-6212-475c-a7e2-0820475264af"
		},
		{
			"deviceTime": "2014-08-10T04:05:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a069bb75-cac3-4f1a-b4c3-122d7fa0704a"
		},
		{
			"deviceTime": "2014-08-10T04:10:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec5a07ba-2fc3-4774-876d-b530a18ec76f"
		},
		{
			"deviceTime": "2014-08-10T04:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cee82b30-a9a5-4a98-9536-c18273a0c603"
		},
		{
			"deviceTime": "2014-08-10T04:20:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b688486-dec9-4815-9b2b-8a5236028cd1"
		},
		{
			"deviceTime": "2014-08-10T04:25:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7468cf9c-de32-4a77-b90e-b5df2409f7a5"
		},
		{
			"deviceTime": "2014-08-10T04:30:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c07d1460-c3f0-41e8-ac7f-d74ec6731635"
		},
		{
			"deviceTime": "2014-08-10T04:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e0dd06d-1904-4770-97c9-a2d329e9a853"
		},
		{
			"deviceTime": "2014-08-10T04:40:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23d1330c-a291-4f87-8eb8-62da99dbb224"
		},
		{
			"deviceTime": "2014-08-10T04:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e1b9429-7724-41d3-ac44-0c86bf48a3dc"
		},
		{
			"deviceTime": "2014-08-10T04:50:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98fed200-cd6d-4679-a8d6-c120a4eb1821"
		},
		{
			"deviceTime": "2014-08-10T04:55:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d4f60a3-1a8b-4376-8d5e-6611a918c62f"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-10T06:00:00",
			"start": "2014-08-10T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "cd01aff3-315a-4965-afc0-e3caa47f1de4"
		},
		{
			"deviceTime": "2014-08-10T05:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd64dc9a-63f0-4a4b-8b1f-e078fa1d68e5"
		},
		{
			"deviceTime": "2014-08-10T05:05:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "841df4ea-0e54-49ae-90cf-e1ae66a1289f"
		},
		{
			"deviceTime": "2014-08-10T05:10:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abdb58d3-1e8c-418e-8fad-859267e81af7"
		},
		{
			"deviceTime": "2014-08-10T05:15:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d897427-e04f-4dfe-8ba6-7f0b0c93108a"
		},
		{
			"deviceTime": "2014-08-10T05:16:01",
			"value": 0.6,
			"source": "demo",
			"recommended": 0.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "ec8b30d7-871d-4e08-aebb-3ea7268f8f09"
		},
		{
			"deviceTime": "2014-08-10T05:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0be6efc-5371-422e-9d50-37e916b481eb"
		},
		{
			"deviceTime": "2014-08-10T05:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac526bcb-8622-4cd1-97df-191344643d96"
		},
		{
			"deviceTime": "2014-08-10T05:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81149b0a-03d1-465f-a529-4754f7a4df46"
		},
		{
			"deviceTime": "2014-08-10T05:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdf19315-a01c-4600-9531-4af544b2d592"
		},
		{
			"deviceTime": "2014-08-10T05:40:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5ff9416-7ef6-4306-8996-278a5c75356b"
		},
		{
			"deviceTime": "2014-08-10T05:45:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d9f2fcb-aa3b-45b5-b2dc-720059bbbfb0"
		},
		{
			"deviceTime": "2014-08-10T05:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e40c352-7764-45e7-8d55-b42740dd9951"
		},
		{
			"deviceTime": "2014-08-10T05:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "189207ac-31de-4948-93a3-d1ff058c9145"
		},
		{
			"delivered": 1,
			"end": "2014-08-10T09:00:00",
			"start": "2014-08-10T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "2828375f-5e16-4452-8f78-d9f35a820693"
		},
		{
			"deviceTime": "2014-08-10T06:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b289cb0-7cc0-4dfa-887f-140d038bc403"
		},
		{
			"end": "2014-08-10T08:02:01",
			"start": "2014-08-10T06:02:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "9fc83e2d-2080-44b0-9a7c-082b53982899"
		},
		{
			"deviceTime": "2014-08-10T06:05:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f6ef59d-005e-43f4-a227-6bc4e6112b94"
		},
		{
			"deviceTime": "2014-08-10T06:10:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "904030da-c2da-4cfb-ade7-ea6536acf473"
		},
		{
			"deviceTime": "2014-08-10T06:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb060a0a-31ac-4b0f-a4e7-c84051a6d790"
		},
		{
			"deviceTime": "2014-08-10T06:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "620f6afe-07e0-43d0-b1c0-92d566603085"
		},
		{
			"deviceTime": "2014-08-10T06:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44dd9f43-7858-4ea2-a626-ad98cae32d2f"
		},
		{
			"deviceTime": "2014-08-10T06:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e9baae9-e862-4f9c-9b2a-d9db9d97427f"
		},
		{
			"deviceTime": "2014-08-10T06:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6210ec8-483a-4aaf-943f-0d8fab8fba32"
		},
		{
			"deviceTime": "2014-08-10T06:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38af24c4-b2be-4703-be8f-37f5aae506ee"
		},
		{
			"deviceTime": "2014-08-10T06:45:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3550d5ea-ce9f-4bbe-ab38-8963208707a2"
		},
		{
			"deviceTime": "2014-08-10T06:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87b1d5ff-b73b-4cc1-be13-7dcc86ccdc13"
		},
		{
			"deviceTime": "2014-08-10T06:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad840f18-8d1d-4538-a9ff-8be577774f7b"
		},
		{
			"deviceTime": "2014-08-10T07:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "222b8094-d759-46f9-ab65-f4c3e68b3061"
		},
		{
			"deviceTime": "2014-08-10T07:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b04c6e52-fb37-42b1-ab29-41495874acb9"
		},
		{
			"deviceTime": "2014-08-10T07:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19a1994f-6160-4696-ab8c-b532b6e5af6b"
		},
		{
			"deviceTime": "2014-08-10T07:13:46",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "94787557-83db-45cc-bb4f-f262816a819f"
		},
		{
			"deviceTime": "2014-08-10T07:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70e0ef70-e0f9-491d-b01d-f4cecf11db4c"
		},
		{
			"deviceTime": "2014-08-10T07:20:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2752fce3-8155-463c-a9f9-fecbc8670113"
		},
		{
			"deviceTime": "2014-08-10T07:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8eb87326-ad7e-4710-afcd-d886d2473d11"
		},
		{
			"deviceTime": "2014-08-10T07:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49fad489-7560-4b71-b415-39d7f06361c5"
		},
		{
			"deviceTime": "2014-08-10T07:35:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8aaaffd-fe78-452c-b07b-b35c89d4b35a"
		},
		{
			"deviceTime": "2014-08-10T07:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec24fe50-a12f-4b93-ae03-87a6d89bea8e"
		},
		{
			"deviceTime": "2014-08-10T07:45:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76b3e34f-cb46-4731-8dd5-6c0c1f8fbfda"
		},
		{
			"deviceTime": "2014-08-10T07:50:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a8390f8-ac53-4c2d-8239-3ef5187c0e1e"
		},
		{
			"deviceTime": "2014-08-10T07:52:52",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "97e0fa14-8056-477a-9505-a20d142c9ada"
		},
		{
			"deviceTime": "2014-08-10T07:52:52",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "64e0512e-f5ba-4ebd-b43c-cfd64efc3236"
		},
		{
			"deviceTime": "2014-08-10T07:52:52",
			"id": "64e0512e-f5ba-4ebd-b43c-cfd64efc3236",
			"source": "demo",
			"joinKey": "0144a819-87a0-4376-b80c-2ee7d873bcf9",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 49
			}
		},
		{
			"deviceTime": "2014-08-10T07:52:52",
			"programmed": 3.3,
			"joinKey": "0144a819-87a0-4376-b80c-2ee7d873bcf9",
			"value": 0.8,
			"source": "demo",
			"recommended": 3.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "cc7471f5-d3e5-4710-9f68-550425f10729"
		},
		{
			"deviceTime": "2014-08-10T07:55:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "152654ea-4d37-491e-a60b-c0c077fa4034"
		},
		{
			"deviceTime": "2014-08-10T08:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f07ebb00-b767-44d4-89d3-f0ba8f7db83b"
		},
		{
			"deviceTime": "2014-08-10T08:05:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c24eb5c0-9702-467e-8476-d6307ec4fe5f"
		},
		{
			"deviceTime": "2014-08-10T08:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c70a11af-ec7a-45ac-8d61-05b2a0e2ee91"
		},
		{
			"deviceTime": "2014-08-10T08:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "710c18eb-88ea-43f1-b188-ad4811b5b8f2"
		},
		{
			"deviceTime": "2014-08-10T08:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3eccaf8-6d8a-46bd-aa77-56bc02d5812d"
		},
		{
			"deviceTime": "2014-08-10T08:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23775d0a-c6fe-4a01-9dcb-2ed2b50ee681"
		},
		{
			"deviceTime": "2014-08-10T08:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "789a24a2-6b4f-4f94-825c-66473b81cd5c"
		},
		{
			"deviceTime": "2014-08-10T08:35:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d08a0be-ce45-4566-b3aa-3f038effa57b"
		},
		{
			"deviceTime": "2014-08-10T08:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b43fc4c3-a806-4055-b57a-2c3659462ec4"
		},
		{
			"deviceTime": "2014-08-10T08:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd1327bf-494d-4a05-9a23-79ba82c95571"
		},
		{
			"deviceTime": "2014-08-10T08:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a2ebb5d-202f-42f1-89a3-2a0e0af1a35f"
		},
		{
			"deviceTime": "2014-08-10T08:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b478f59-8ab0-4b55-96c1-993a1cd24ec7"
		},
		{
			"deviceTime": "2014-08-10T08:56:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "19b8477b-4ea0-422a-a38f-9117f08eb594"
		},
		{
			"deviceTime": "2014-08-10T08:56:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "615b331f-9bbb-4613-a50c-d01585a4d7c3"
		},
		{
			"deviceTime": "2014-08-10T08:56:22",
			"id": "615b331f-9bbb-4613-a50c-d01585a4d7c3",
			"source": "demo",
			"joinKey": "22f38716-4eb7-48f3-b761-68106269ef00",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 48
			}
		},
		{
			"deviceTime": "2014-08-10T08:56:22",
			"programmed": 3.2,
			"joinKey": "22f38716-4eb7-48f3-b761-68106269ef00",
			"value": 3.2,
			"source": "demo",
			"recommended": 3.2,
			"extendedDelivery": 2.6,
			"initialDelivery": 0.6,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "27fcd59e-5a21-4285-9e08-a71815af5c3f",
			"deviceId": "Demo - 123"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-10T15:00:00",
			"start": "2014-08-10T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "1134a1b3-4fb0-4aa2-8f95-1eefb87277ce"
		},
		{
			"deviceTime": "2014-08-10T09:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2064ef2-d764-4ca2-8b8d-274566b79528"
		},
		{
			"deviceTime": "2014-08-10T09:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3679efba-1213-4c96-a538-8d9196d5bdb6"
		},
		{
			"deviceTime": "2014-08-10T09:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0b9aeca-8b70-4e31-93d6-222ea9aabfdf"
		},
		{
			"deviceTime": "2014-08-10T09:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93870ee8-f296-4d1b-ba73-c965ca465f98"
		},
		{
			"deviceTime": "2014-08-10T09:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e25d99f-4514-4d2b-9e8a-074e8da5167b"
		},
		{
			"deviceTime": "2014-08-10T09:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02d65ba2-f299-443c-b390-32e08e6ccf0a"
		},
		{
			"deviceTime": "2014-08-10T09:30:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bce60e7e-ff11-4179-927d-3c1ef31fc2b6"
		},
		{
			"deviceTime": "2014-08-10T09:35:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d5bc6b7-9227-4f5a-ac88-b5a3f5a25b05"
		},
		{
			"deviceTime": "2014-08-10T09:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "926fff9d-f2e0-4f0b-904e-3d609744c867"
		},
		{
			"deviceTime": "2014-08-10T09:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fc28aae-3e65-43b6-a322-9537195eead3"
		},
		{
			"deviceTime": "2014-08-10T09:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "696520fb-e6af-4dca-995d-b6c8a5ad50d4"
		},
		{
			"deviceTime": "2014-08-10T09:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1a20dc7-a864-44d9-a804-9e97e098b988"
		},
		{
			"deviceTime": "2014-08-10T10:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06e71a76-5527-41a4-85d1-26a948c152be"
		},
		{
			"deviceTime": "2014-08-10T10:05:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "229400ff-644f-4068-9b73-fbac62bcea0b"
		},
		{
			"deviceTime": "2014-08-10T10:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8685f553-47b2-4792-a37c-f5a189d6145b"
		},
		{
			"deviceTime": "2014-08-10T10:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79e3562f-9d69-471b-837b-7c9f6d295a06"
		},
		{
			"deviceTime": "2014-08-10T10:20:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1d1e954-ec9b-4d90-af78-59781afad4cd"
		},
		{
			"deviceTime": "2014-08-10T10:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c46bc730-2f48-451d-82e2-0d9791a2b36e"
		},
		{
			"deviceTime": "2014-08-10T10:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e2518ee-fcb1-44ec-a496-c1e1e0ad9131"
		},
		{
			"deviceTime": "2014-08-10T10:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63895176-8232-4135-9418-db9959163b5b"
		},
		{
			"deviceTime": "2014-08-10T10:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53b763b2-00bf-4696-9bd9-ce16f0fcdadc"
		},
		{
			"deviceTime": "2014-08-10T10:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7fb4978-f263-4ad2-8177-bddd525ca985"
		},
		{
			"deviceTime": "2014-08-10T10:50:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e44dfc38-4124-49d6-bc49-364a7d26da9d"
		},
		{
			"deviceTime": "2014-08-10T10:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94196926-1224-496e-ae3d-b251c5c1a7e1"
		},
		{
			"deviceTime": "2014-08-10T11:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e2c8193-bd42-4120-87b9-655ffa36c708"
		},
		{
			"deviceTime": "2014-08-10T11:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea51c1a7-d255-4fe2-a374-b434cdaa106d"
		},
		{
			"deviceTime": "2014-08-10T11:10:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "767c3b09-d4ce-412c-9ce7-b3cb09072483"
		},
		{
			"messageText": "Id enim elit biltong, turkey officia consequat ground round sed pancetta.",
			"parentMessage": "",
			"utcTime": "2014-08-10T11:15:20Z",
			"type": "message",
			"id": "643febf2-c705-4f86-b885-1658e36351bf"
		},
		{
			"deviceTime": "2014-08-10T11:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c8e793b-d5ae-4561-bf7d-895a83c51987"
		},
		{
			"deviceTime": "2014-08-10T11:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4677f1a8-7c1f-4d18-a080-aff23f204173"
		},
		{
			"deviceTime": "2014-08-10T11:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "628a41d0-f5d0-48fb-b376-daef20fb772b"
		},
		{
			"deviceTime": "2014-08-10T11:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fdd8770-6288-4c79-83ee-df9480681d8f"
		},
		{
			"deviceTime": "2014-08-10T11:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4826cae-7c92-4d06-bdb9-06e6d04a05b5"
		},
		{
			"deviceTime": "2014-08-10T11:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "116b712f-7c33-4551-97f5-90ee7c135f95"
		},
		{
			"deviceTime": "2014-08-10T11:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d35c84ff-9e9a-4dbc-b96c-0f867dac5830"
		},
		{
			"deviceTime": "2014-08-10T11:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50651fe4-a3e6-498a-82df-549ac3869bc3"
		},
		{
			"deviceTime": "2014-08-10T11:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2b290e9-8542-47c2-b50a-4dcaa3fcf5db"
		},
		{
			"deviceTime": "2014-08-10T11:57:45",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "57275103-cbfd-4643-98b6-4715ac9725fb"
		},
		{
			"deviceTime": "2014-08-10T12:00:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7799e29e-54f9-41ce-a469-3cf63e0b978d"
		},
		{
			"deviceTime": "2014-08-10T12:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8eac824-cff6-48bb-8c38-a74a1796c449"
		},
		{
			"deviceTime": "2014-08-10T12:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1beca059-a1ee-4982-92ca-7e09cd6f5220"
		},
		{
			"deviceTime": "2014-08-10T12:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3a6c8e6-362f-4599-90b4-94aeac503094"
		},
		{
			"deviceTime": "2014-08-10T12:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "577a8f44-0ea3-4479-870a-2d7c9cae0226"
		},
		{
			"deviceTime": "2014-08-10T12:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abae1928-c8a7-41ec-9ec1-d8654061aa32"
		},
		{
			"deviceTime": "2014-08-10T12:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82219e2b-677a-454f-ac9e-571074fcfcd8"
		},
		{
			"deviceTime": "2014-08-10T12:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e006ccf1-2620-4565-8484-237372982a5e"
		},
		{
			"deviceTime": "2014-08-10T12:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b395d730-f4f2-4de4-b100-db3e4f4c1bd0"
		},
		{
			"deviceTime": "2014-08-10T12:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22bc923a-895b-44f7-9ba6-973255877057"
		},
		{
			"deviceTime": "2014-08-10T12:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "457e7a66-f65e-47d6-909b-50a3936703ac"
		},
		{
			"deviceTime": "2014-08-10T12:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0c38862-b549-4bd9-b8c8-b5c0085d6e5f"
		},
		{
			"deviceTime": "2014-08-10T12:57:47",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "fe6210b1-4cfa-4b30-9de6-f55a913142a2"
		},
		{
			"deviceTime": "2014-08-10T12:57:47",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fa596528-d009-4ac9-a67d-277389748555"
		},
		{
			"deviceTime": "2014-08-10T12:57:47",
			"id": "fa596528-d009-4ac9-a67d-277389748555",
			"source": "demo",
			"joinKey": "2f6764e7-162d-4dcd-862d-c630d2ac4ca2",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 40
			}
		},
		{
			"deviceTime": "2014-08-10T12:57:47",
			"programmed": 2.7,
			"joinKey": "2f6764e7-162d-4dcd-862d-c630d2ac4ca2",
			"value": 0.4,
			"source": "demo",
			"recommended": 2.7,
			"extendedDelivery": 1.3,
			"initialDelivery": 1.4,
			"duration": 5400000,
			"extended": true,
			"type": "bolus",
			"id": "c5fd3151-473b-4b91-93fb-41c6271b6836",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-10T13:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88982d2b-f04f-450d-bcd9-8de76ee89d26"
		},
		{
			"deviceTime": "2014-08-10T13:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9d75350-b55c-48c0-9a8d-5858eba41b89"
		},
		{
			"deviceTime": "2014-08-10T13:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a11fc48-8df3-4f07-9c8a-eb79622a06f6"
		},
		{
			"deviceTime": "2014-08-10T13:15:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc886089-6701-479e-a5a8-721c0bc03fae"
		},
		{
			"deviceTime": "2014-08-10T13:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80e0fa37-7361-449b-85bf-dcb1a6c11c79"
		},
		{
			"deviceTime": "2014-08-10T13:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe5b4d56-19ee-4d56-92eb-64b3359e4ba5"
		},
		{
			"deviceTime": "2014-08-10T13:30:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f77443c-3b79-4fcc-a5fa-0de39bdf4bca"
		},
		{
			"deviceTime": "2014-08-10T13:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8c9b94c-cbcf-4da6-8846-1ad9052035aa"
		},
		{
			"deviceTime": "2014-08-10T13:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89b4b029-b0b1-4349-99bf-5a280c753bde"
		},
		{
			"deviceTime": "2014-08-10T13:41:59",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "089567b0-ce14-430f-862b-adfa880be37b"
		},
		{
			"deviceTime": "2014-08-10T13:41:59",
			"value": 26,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1080842d-abe4-460a-9bac-439993d963ad"
		},
		{
			"deviceTime": "2014-08-10T13:41:59",
			"id": "1080842d-abe4-460a-9bac-439993d963ad",
			"source": "demo",
			"joinKey": "b3e650dc-88a0-4136-88ca-e9dba4b3f60e",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 26
			}
		},
		{
			"deviceTime": "2014-08-10T13:41:59",
			"programmed": 1.7,
			"joinKey": "b3e650dc-88a0-4136-88ca-e9dba4b3f60e",
			"value": 1.7,
			"source": "demo",
			"recommended": 1.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c773fcb2-2e2a-41c9-bd7f-a3d13bf7b326"
		},
		{
			"deviceTime": "2014-08-10T14:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acbd542d-b34b-4dae-a296-94fb06dcaeb0"
		},
		{
			"deviceTime": "2014-08-10T14:15:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1eb99fe-4479-472a-bf85-c40fc9499ce3"
		},
		{
			"deviceTime": "2014-08-10T14:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20db1f23-35b7-47d7-95f6-bac8794c7f0c"
		},
		{
			"deviceTime": "2014-08-10T14:25:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5352addc-c120-443c-9a61-936b7f206bf2"
		},
		{
			"deviceTime": "2014-08-10T14:30:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9997ed7d-1b62-4dee-a3d1-209563eba0ef"
		},
		{
			"deviceTime": "2014-08-10T14:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a65b6fd0-9f0e-42f0-aa67-66a5f0fe3ad6"
		},
		{
			"deviceTime": "2014-08-10T14:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de8f8273-bb3f-41a5-8971-c9fa342ac2d7"
		},
		{
			"deviceTime": "2014-08-10T14:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ef2f839-cb53-4f05-947f-4ab179e7f4bd"
		},
		{
			"deviceTime": "2014-08-10T14:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96184af9-818f-4e9f-9848-89310ee78a82"
		},
		{
			"deviceTime": "2014-08-10T14:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eaa8831-94d4-4378-a9df-03c7b57354a7"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-10T20:00:00",
			"start": "2014-08-10T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "559f418e-154e-4a9f-98a5-42cdb6cf977c"
		},
		{
			"deviceTime": "2014-08-10T15:00:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4c42a2a-6003-49a4-976d-4dd59198da06"
		},
		{
			"deviceTime": "2014-08-10T15:05:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7538354-bab2-4884-8300-91dcb61dd1be"
		},
		{
			"deviceTime": "2014-08-10T15:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1eba806-f0ad-4926-a8e9-10e994bda1e0"
		},
		{
			"end": "2014-08-10T16:45:01",
			"start": "2014-08-10T15:15:01",
			"percent": 0.65,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "cd88b10d-6213-460b-8898-c22d4a21765a"
		},
		{
			"deviceTime": "2014-08-10T15:15:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b4e88c2-8f85-4476-b34a-ab9f2a682324"
		},
		{
			"deviceTime": "2014-08-10T15:20:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b23ac6b5-a008-4839-9a8d-6e55973026e1"
		},
		{
			"deviceTime": "2014-08-10T15:25:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea690d5f-99f7-4f5b-838b-0465ad798623"
		},
		{
			"deviceTime": "2014-08-10T15:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bcc853c-b8b6-4a9f-8031-600b28798e65"
		},
		{
			"deviceTime": "2014-08-10T15:35:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00ac004b-ae79-4280-9ba6-773d6e207ed6"
		},
		{
			"deviceTime": "2014-08-10T15:40:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94c90519-4c98-4965-a031-7eb9f7e5ad0a"
		},
		{
			"deviceTime": "2014-08-10T15:45:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c8d1865-899d-402c-8245-35a2b755043c"
		},
		{
			"deviceTime": "2014-08-10T15:50:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5eb683d2-c72b-4f29-97fc-f73793933ace"
		},
		{
			"deviceTime": "2014-08-10T15:55:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89773a2e-bf2c-4078-9e2a-0c90c0c2fb0b"
		},
		{
			"deviceTime": "2014-08-10T16:00:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b712320c-e5cc-4400-b51b-46b1ecded5f9"
		},
		{
			"deviceTime": "2014-08-10T16:05:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2d2a31a-6ddd-4421-9a03-0bef7b32df86"
		},
		{
			"deviceTime": "2014-08-10T16:10:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d79390a9-8645-4dcb-a190-faf7e49b5bca"
		},
		{
			"deviceTime": "2014-08-10T16:15:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7abe7867-52a4-42da-828b-588439ba63e4"
		},
		{
			"deviceTime": "2014-08-10T16:20:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e8dd828-ddfe-49fa-9868-8fa9c18e22a6"
		},
		{
			"deviceTime": "2014-08-10T16:25:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8c0360d-cb70-4c4a-9bf4-515edd38a08f"
		},
		{
			"deviceTime": "2014-08-10T16:30:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36786a6d-5bc0-466a-bfeb-7ef888cced13"
		},
		{
			"deviceTime": "2014-08-10T16:35:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e96909f-17f1-43f8-a168-25d27ed5d0ef"
		},
		{
			"deviceTime": "2014-08-10T16:40:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "300aa707-38be-447c-8a5e-9ea11c04c179"
		},
		{
			"deviceTime": "2014-08-10T16:45:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de3b547b-b2ce-40b6-993f-8f6be4e89f69"
		},
		{
			"deviceTime": "2014-08-10T16:50:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3903a490-3400-4170-97f8-b7b2a9e58936"
		},
		{
			"deviceTime": "2014-08-10T16:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "769642e0-05f7-489c-b6c5-6a5276a52435"
		},
		{
			"deviceTime": "2014-08-10T17:00:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3921c2dd-9b40-4a81-a549-d0d59462b24b"
		},
		{
			"deviceTime": "2014-08-10T17:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f33f73a-0a62-4aaf-b9cf-4a58a02256d6"
		},
		{
			"deviceTime": "2014-08-10T17:10:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6509cb3f-808d-4a78-b823-839fe2d9cba9"
		},
		{
			"deviceTime": "2014-08-10T17:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3d7923e-bfca-4c18-b6f3-c837409e8b4c"
		},
		{
			"deviceTime": "2014-08-10T17:19:01",
			"value": 2.3,
			"source": "demo",
			"recommended": 2.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "955eb3dd-dd4c-4ffa-9cb1-bc591c2a6b73"
		},
		{
			"deviceTime": "2014-08-10T17:20:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dafab270-0bf0-43db-a09d-2a6374951939"
		},
		{
			"deviceTime": "2014-08-10T17:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c609421-d972-4f15-8d69-a97357c82471"
		},
		{
			"deviceTime": "2014-08-10T17:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec11e528-bdfe-4fe6-89f4-c545c6cb66a3"
		},
		{
			"deviceTime": "2014-08-10T17:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b108d19-1b80-48ba-8024-422660cafa74"
		},
		{
			"deviceTime": "2014-08-10T17:40:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba2edff4-1296-4e22-af38-a27836bd1b08"
		},
		{
			"deviceTime": "2014-08-10T17:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14fa700d-7572-4ca3-be4f-e5b78d215b92"
		},
		{
			"deviceTime": "2014-08-10T17:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15a45542-7e74-4fc3-bb4a-5a0645bf74a8"
		},
		{
			"deviceTime": "2014-08-10T17:55:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6535fc9e-6ee5-43fd-bd10-e013215e76be"
		},
		{
			"deviceTime": "2014-08-10T18:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78c4a9a1-5c1b-4ee7-ba6d-bfed081e96eb"
		},
		{
			"deviceTime": "2014-08-10T18:05:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5cbb583-200c-4bb1-a53c-9e03cd0a9c95"
		},
		{
			"deviceTime": "2014-08-10T18:10:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c2f1bc6-ff08-4975-ac25-5c1430cb65a1"
		},
		{
			"deviceTime": "2014-08-10T18:15:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37315c9c-875c-4d42-8441-7803a5bb36f4"
		},
		{
			"deviceTime": "2014-08-10T18:20:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aeab1a74-350a-4513-b228-7117bb371c03"
		},
		{
			"deviceTime": "2014-08-10T18:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f85c4f7-e6ae-4d98-a909-302e9531bb13"
		},
		{
			"deviceTime": "2014-08-10T18:30:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b97eefd-24a7-43d4-853a-c91a736d6415"
		},
		{
			"deviceTime": "2014-08-10T18:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a27108b-b555-4f59-973b-64f78a6394b0"
		},
		{
			"deviceTime": "2014-08-10T18:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb00a377-3a3c-44f1-98c9-2b6ce9b0384e"
		},
		{
			"deviceTime": "2014-08-10T18:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad27731a-0c8a-4718-b1b7-ebb0824a9231"
		},
		{
			"deviceTime": "2014-08-10T18:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b2c7ceb-f6d6-442b-bc88-30517ff3173b"
		},
		{
			"deviceTime": "2014-08-10T18:55:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b03a383-09ab-421d-8df1-4e162543e1f1"
		},
		{
			"deviceTime": "2014-08-10T19:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ebb8b7f-8cb7-436e-adad-1e3561c9f2ae"
		},
		{
			"deviceTime": "2014-08-10T19:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ba9924d-55cb-4208-ad4c-909c5eec7387"
		},
		{
			"deviceTime": "2014-08-10T19:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7293d94e-a818-460d-b925-39c92b16efa3"
		},
		{
			"deviceTime": "2014-08-10T19:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "866b3f85-c12e-41f1-9303-8df8ac5a530b"
		},
		{
			"deviceTime": "2014-08-10T19:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "382d1fe4-b4ac-4cf5-9d6c-6a2dc9a66e62"
		},
		{
			"deviceTime": "2014-08-10T19:25:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50818eef-cb08-4ff3-be19-d7614aac469a"
		},
		{
			"deviceTime": "2014-08-10T19:30:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "208cfbe4-4163-47e3-8d69-9497e8e31919"
		},
		{
			"deviceTime": "2014-08-10T19:35:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c3aea76-089f-4578-9142-ef843d0f970c"
		},
		{
			"deviceTime": "2014-08-10T19:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "111a7735-c425-4ff3-983f-0d1d8e6265c8"
		},
		{
			"deviceTime": "2014-08-10T19:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "145e7850-059f-4d02-b248-9ac645d86981"
		},
		{
			"deviceTime": "2014-08-10T19:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ef198e2-4ebc-400a-aa22-af71caf26e90"
		},
		{
			"deviceTime": "2014-08-10T19:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98ffceac-bdab-414c-9880-75b2f2d3cca6"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-11T00:00:00",
			"start": "2014-08-10T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "ec6960db-87c4-4372-a61d-a12794674a66"
		},
		{
			"deviceTime": "2014-08-10T20:00:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22a7bbab-959c-4da0-b01b-98e4eccdc055"
		},
		{
			"deviceTime": "2014-08-10T20:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84ea4136-1a67-443f-a8ba-f5065f113a65"
		},
		{
			"deviceTime": "2014-08-10T20:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da960b49-f978-44b3-b454-49e58b9bd6c2"
		},
		{
			"deviceTime": "2014-08-10T20:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43b66a3c-db4c-4e0f-a90c-b5771799999d"
		},
		{
			"deviceTime": "2014-08-10T20:20:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef481f81-9c01-41bc-8ddb-a1eb95a79afe"
		},
		{
			"deviceTime": "2014-08-10T20:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "877bea15-6dc3-4cd3-b3e0-30d36e147ca6"
		},
		{
			"deviceTime": "2014-08-10T20:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ff5a35e-396b-4f1f-b5d6-ff3775b7e60b"
		},
		{
			"deviceTime": "2014-08-10T20:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "563838b4-c9e8-4216-a44c-8f99576f00c4"
		},
		{
			"deviceTime": "2014-08-10T20:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38d1e23f-ab04-4c54-a81a-e3a41e0bd845"
		},
		{
			"deviceTime": "2014-08-10T20:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3311f099-2c6e-4dbd-a113-b3aa0ac121f4"
		},
		{
			"deviceTime": "2014-08-10T20:50:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb9348ad-69d8-40f7-8608-98b2a4ef3b36"
		},
		{
			"deviceTime": "2014-08-10T20:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75b969ed-6cd3-4f58-8fd4-6f68000e338a"
		},
		{
			"deviceTime": "2014-08-10T21:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efe907b8-68a4-466f-8410-6ec5ca44db3b"
		},
		{
			"deviceTime": "2014-08-10T21:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64cebd61-d318-4d4f-a388-f9768d50a597"
		},
		{
			"deviceTime": "2014-08-10T21:10:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5dc3f43e-e5a8-4603-aede-b7b22711e5a1"
		},
		{
			"deviceTime": "2014-08-10T21:15:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2778ac24-23ee-4a1f-8af6-ae2f3dc3d691"
		},
		{
			"deviceTime": "2014-08-10T21:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81c8e229-64b1-4f76-b211-a5aa4618326c"
		},
		{
			"deviceTime": "2014-08-10T21:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1668bc0a-1a0b-42a8-b537-fb00b4cb4dbe"
		},
		{
			"deviceTime": "2014-08-10T21:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a63451f-25a0-4fa8-815a-72e5200ac0fe"
		},
		{
			"deviceTime": "2014-08-10T21:31:10",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3b2d50e3-8f28-4399-a3b1-a0149f789047"
		},
		{
			"deviceTime": "2014-08-10T21:31:10",
			"value": 8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "8042d3b9-7a43-4e29-a3cc-27036941d8c4"
		},
		{
			"deviceTime": "2014-08-10T21:31:10",
			"id": "8042d3b9-7a43-4e29-a3cc-27036941d8c4",
			"source": "demo",
			"joinKey": "c9ae1c0f-38b3-4f63-9a11-cbbf1d99b94f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 8
			}
		},
		{
			"deviceTime": "2014-08-10T21:31:10",
			"programmed": 0.5,
			"joinKey": "c9ae1c0f-38b3-4f63-9a11-cbbf1d99b94f",
			"value": 0.5,
			"source": "demo",
			"recommended": 0.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "d179a9ac-92a0-4adc-95da-911763fee2b1"
		},
		{
			"deviceTime": "2014-08-10T21:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "476da62b-7297-4b2e-adb3-65bbfdf45c99"
		},
		{
			"deviceTime": "2014-08-10T21:50:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71b43107-84ed-4338-ad7e-fae2d487059e"
		},
		{
			"deviceTime": "2014-08-10T21:55:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "942e6da1-1702-406e-86ea-acab86dd5545"
		},
		{
			"deviceTime": "2014-08-10T22:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df9a57bb-d90c-4d76-b38a-aaf755228fcb"
		},
		{
			"deviceTime": "2014-08-10T22:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1b99f04-0b9d-49fc-bfce-33f5e12aaab6"
		},
		{
			"deviceTime": "2014-08-10T22:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0112380f-662f-41c0-a21f-3a0eac5cc59c"
		},
		{
			"deviceTime": "2014-08-10T22:15:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e550b5c1-6831-46c5-8d08-ca7155b65e64"
		},
		{
			"deviceTime": "2014-08-10T22:20:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "331e20ab-4655-4633-894a-ff08098e47c7"
		},
		{
			"deviceTime": "2014-08-10T22:25:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21ab70a9-af14-41ee-9804-0b9dd4d56f54"
		},
		{
			"deviceTime": "2014-08-10T22:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31141523-b5d6-4aa1-ae5a-8729f7e172cf"
		},
		{
			"deviceTime": "2014-08-10T22:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "634fc2b7-1d0b-41c3-a8d7-1c7e5e04015e"
		},
		{
			"deviceTime": "2014-08-10T22:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8866cb60-08a6-4909-8131-50764cdeb32d"
		},
		{
			"deviceTime": "2014-08-10T22:45:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05c9fef3-19cc-4ba9-9647-3694584b2f0c"
		},
		{
			"deviceTime": "2014-08-10T22:50:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fabc485-2198-4ad3-8aac-8dfe23bacc67"
		},
		{
			"deviceTime": "2014-08-10T22:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32e896ed-ef9e-4930-b29b-8f29caf02c6a"
		},
		{
			"deviceTime": "2014-08-10T23:00:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25a89693-332a-42cf-91af-dce6791ee5a0"
		},
		{
			"end": "2014-08-10T23:34:01",
			"start": "2014-08-10T23:04:01",
			"percent": 1.35,
			"deliveryType": "temp",
			"id": "d7e61f38-ec3f-441f-ab5f-e2840017f14f",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-10T23:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb8251b3-3e6b-468d-9750-0933de09d4ee"
		},
		{
			"deviceTime": "2014-08-10T23:10:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfde1b8e-0997-41db-9033-13aa9d2ded5d"
		},
		{
			"deviceTime": "2014-08-10T23:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f784b366-0328-4453-a100-e5db024c1558"
		},
		{
			"deviceTime": "2014-08-10T23:20:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b442b3af-19d2-4577-8117-61faa5d25bd6"
		},
		{
			"deviceTime": "2014-08-10T23:25:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "139a33b6-8b29-4c42-8ec6-7360ed983c34"
		},
		{
			"deviceTime": "2014-08-10T23:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7bd49c0-8ef0-4e64-9022-a1651c406e90"
		},
		{
			"deviceTime": "2014-08-10T23:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68c74849-0398-4ef8-9d94-fd832aa67301"
		},
		{
			"deviceTime": "2014-08-10T23:40:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d0f47fe-b7b6-4c9e-b6e8-37080c186020"
		},
		{
			"deviceTime": "2014-08-10T23:45:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5a7f1d8-87da-4c2f-9afc-722b72ff6420"
		},
		{
			"deviceTime": "2014-08-10T23:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "025ff664-f69a-4861-9cb5-988d5310d242"
		},
		{
			"deviceTime": "2014-08-10T23:55:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42a85c00-6649-4bd4-b172-4572afe9e9a5"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-11T02:00:00",
			"start": "2014-08-11T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "1c7828c8-8015-4543-8902-9250f16b1b50"
		},
		{
			"deviceTime": "2014-08-11T00:00:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34cf3557-c0cc-4ce6-a50f-6d36e89ce7c3"
		},
		{
			"deviceTime": "2014-08-11T00:05:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d799c58-c0c3-48d1-822a-c0cd6c7f9055"
		},
		{
			"deviceTime": "2014-08-11T00:10:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82f6019d-a531-4cbb-8f4b-9d1a5526f236"
		},
		{
			"deviceTime": "2014-08-11T00:15:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70b9e8ad-7fc5-4dbf-99bb-fa4857be2458"
		},
		{
			"deviceTime": "2014-08-11T00:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f5ece80-2823-40c1-84bb-76e7cb68a8a3"
		},
		{
			"deviceTime": "2014-08-11T00:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2f20688-fad2-4c82-9aa5-08c572328be5"
		},
		{
			"deviceTime": "2014-08-11T00:30:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63b6d531-f2ab-47af-a0c7-bd935f6662a1"
		},
		{
			"deviceTime": "2014-08-11T00:35:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30744a48-e672-407f-ae6d-df87ebebf356"
		},
		{
			"deviceTime": "2014-08-11T00:40:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "688b90ba-4776-427e-b97a-66794578cdf5"
		},
		{
			"deviceTime": "2014-08-11T00:45:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b00a4bb-fd12-4858-99c9-d9ea77ea6157"
		},
		{
			"deviceTime": "2014-08-11T00:50:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e206fc0f-7ee0-41c3-8557-896405b09e76"
		},
		{
			"deviceTime": "2014-08-11T00:55:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6637b0e3-3568-4c12-8987-582e931bad7c"
		},
		{
			"deviceTime": "2014-08-11T01:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b1d3932-66e8-4f01-a0db-705ea7cb062d"
		},
		{
			"deviceTime": "2014-08-11T01:35:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b24bcc19-6b40-4b1e-ac56-433e5aa9f9bc"
		},
		{
			"deviceTime": "2014-08-11T01:40:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e0d4945-6a8b-4697-a152-db7a46adb652"
		},
		{
			"deviceTime": "2014-08-11T01:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be953f3d-1e19-4ec3-b7ca-dd5703c3b561"
		},
		{
			"deviceTime": "2014-08-11T01:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86b53389-16c7-4348-9bf7-6e9878e0758a"
		},
		{
			"deviceTime": "2014-08-11T01:55:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fca5365-311d-4dda-8365-9dcd42b39f0f"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-11T04:00:00",
			"start": "2014-08-11T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "fdb4a277-3b93-423f-b7a8-7d63a5b8b0ad"
		},
		{
			"deviceTime": "2014-08-11T02:00:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f571491-2dda-44b3-a5f2-4a076275ff5e"
		},
		{
			"deviceTime": "2014-08-11T02:05:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "311d3a8f-675c-4b9d-a1d5-e76df4d48bdd"
		},
		{
			"deviceTime": "2014-08-11T02:10:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fa375ae-c6db-4f13-824e-03816796cf6e"
		},
		{
			"deviceTime": "2014-08-11T02:15:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9232db53-f34b-46de-9692-d71352b54e4b"
		},
		{
			"deviceTime": "2014-08-11T02:20:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7458c24e-5a4a-458e-a3f4-ef04e1e36563"
		},
		{
			"deviceTime": "2014-08-11T02:25:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "789be7f7-87aa-4ad7-8834-eba8c34b82a9"
		},
		{
			"deviceTime": "2014-08-11T02:30:21",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5852747f-1380-4102-8238-97ca950d4627"
		},
		{
			"deviceTime": "2014-08-11T02:30:21",
			"value": 35,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1a8c26ef-c687-4411-80cc-66d3794f38f5"
		},
		{
			"deviceTime": "2014-08-11T02:30:21",
			"id": "1a8c26ef-c687-4411-80cc-66d3794f38f5",
			"source": "demo",
			"joinKey": "db29066f-9e3f-4c3d-83e1-0fc758aae310",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 35
			}
		},
		{
			"deviceTime": "2014-08-11T02:30:21",
			"suspendedAt": "2014-08-11T02:41:36",
			"programmed": 2.7,
			"joinKey": "db29066f-9e3f-4c3d-83e1-0fc758aae310",
			"value": 0.1,
			"source": "demo",
			"recommended": 2.3,
			"extendedDelivery": 1.6,
			"initialDelivery": 1.1,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "8b43189d-049d-45cc-a4dc-5c8f4d5719be",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-11T02:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b3cec9b-1e12-4f0d-904d-5db1094f490c"
		},
		{
			"deviceTime": "2014-08-11T02:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81a38e34-e32c-409e-9412-3e1933293143"
		},
		{
			"deviceTime": "2014-08-11T02:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ab7c157-1d65-4fa8-b4b5-5018df813979"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-11T02:41:36",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "037fef15-d888-43f3-92d8-a17c66918c3e"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-11T02:48:51",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "f605bb84-64df-4b11-b945-31e345394195",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-11T02:41:36",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "037fef15-d888-43f3-92d8-a17c66918c3e"
			}
		},
		{
			"deviceTime": "2014-08-11T03:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bef5a12-e650-4a7f-ba09-640fc2dcf2f5"
		},
		{
			"deviceTime": "2014-08-11T03:10:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e734d79-6569-4f72-9199-8215e0cde11a"
		},
		{
			"deviceTime": "2014-08-11T03:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9f90dfa-ce27-4549-a4ad-ec93b7ed9777"
		},
		{
			"deviceTime": "2014-08-11T03:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1003e3a5-57eb-43e5-be42-fd7c4572c6cf"
		},
		{
			"deviceTime": "2014-08-11T03:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e90fff9-b6ae-48ed-8449-723254ae3f36"
		},
		{
			"deviceTime": "2014-08-11T03:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5338f03-557e-47e4-b47c-d343cf4595aa"
		},
		{
			"deviceTime": "2014-08-11T03:35:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67bf057a-af4b-4aba-81fb-7d67b6073a08"
		},
		{
			"deviceTime": "2014-08-11T03:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12ad03a5-9044-4487-9859-a983b517a1aa"
		},
		{
			"deviceTime": "2014-08-11T03:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22567eb4-6dc1-488b-809c-32d9df8bba94"
		},
		{
			"deviceTime": "2014-08-11T03:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57f2e442-6812-489e-bd46-129343eae47d"
		},
		{
			"deviceTime": "2014-08-11T03:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f5143a8-b54e-4403-8e55-0dc9f0211d46"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-11T05:00:00",
			"start": "2014-08-11T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "100eae67-95d1-4706-823b-3ca79b4679ab"
		},
		{
			"deviceTime": "2014-08-11T04:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "551e7fc5-c456-4c74-b3d5-9332ba06d2dc"
		},
		{
			"deviceTime": "2014-08-11T04:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21be4fd3-50c7-4a1e-9817-1de7d23b8a83"
		},
		{
			"deviceTime": "2014-08-11T04:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebca51e0-e0a6-4252-8eb1-03791ec0a71e"
		},
		{
			"deviceTime": "2014-08-11T04:15:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41f4f0f8-e788-41fe-a759-47e09e39602a"
		},
		{
			"deviceTime": "2014-08-11T04:20:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37d261b5-913f-4c27-9ea0-614119af61d4"
		},
		{
			"deviceTime": "2014-08-11T04:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90e2fc31-b9e0-4e44-b5d7-0868f4cc6f84"
		},
		{
			"deviceTime": "2014-08-11T04:30:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11ec5e79-9353-4d2c-92ef-e17c9a575783"
		},
		{
			"deviceTime": "2014-08-11T04:35:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa84c3b1-ac7a-4f29-933b-c2b5c908ae20"
		},
		{
			"deviceTime": "2014-08-11T04:40:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c01a943-690b-4dcc-96d4-489194248395"
		},
		{
			"deviceTime": "2014-08-11T04:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4576a6fd-b268-4c70-a2d1-2f78e8b51730"
		},
		{
			"deviceTime": "2014-08-11T04:50:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d10f368-109c-468e-8855-1da6eb58bb92"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-11T06:00:00",
			"start": "2014-08-11T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "104fdc15-688a-4f8b-a144-0b1991980fea"
		},
		{
			"deviceTime": "2014-08-11T05:10:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "897804e0-8071-4ec1-945f-4539180555b5"
		},
		{
			"deviceTime": "2014-08-11T05:20:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfc85c47-b3cb-43be-9ebd-186ffc4ff2fc"
		},
		{
			"deviceTime": "2014-08-11T05:24:01",
			"value": 4.3,
			"source": "demo",
			"recommended": 4.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "93090e66-b91f-4b10-99ba-2baf748a5ffc"
		},
		{
			"deviceTime": "2014-08-11T05:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "988638a7-d9e2-42c4-940c-c7649d9d4f0a"
		},
		{
			"deviceTime": "2014-08-11T05:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7261a272-0e19-489b-9519-f40d084d87ef"
		},
		{
			"deviceTime": "2014-08-11T05:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89fa2ef8-d814-4f3f-8c54-e9139d21ddf5"
		},
		{
			"deviceTime": "2014-08-11T05:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9152cf89-7850-471d-b6bc-aea1c3ad1593"
		},
		{
			"deviceTime": "2014-08-11T05:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad684847-a03f-4fd1-80df-28f8cb76d377"
		},
		{
			"deviceTime": "2014-08-11T05:50:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a368bc2e-7619-44ef-af31-1d62b4e5f848"
		},
		{
			"deviceTime": "2014-08-11T05:55:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cddbbef1-f8c1-441f-ae73-c697fd2f96a7"
		},
		{
			"delivered": 1,
			"end": "2014-08-11T09:00:00",
			"start": "2014-08-11T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "132c432e-3a3e-4a14-8cc3-78a1a5b197b7"
		},
		{
			"deviceTime": "2014-08-11T06:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08c3ba70-3ff4-46ed-bacc-37e7c75150eb"
		},
		{
			"deviceTime": "2014-08-11T06:05:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7e80d65-35d7-44a5-80e9-f7f73f0ab09c"
		},
		{
			"deviceTime": "2014-08-11T06:10:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bfe6465-1532-4584-a3d6-97ab84988e5d"
		},
		{
			"deviceTime": "2014-08-11T06:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe8de9be-74c0-463d-8844-3ac318bfcb45"
		},
		{
			"deviceTime": "2014-08-11T06:20:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79912260-8c07-408f-8dd5-265f02bafea9"
		},
		{
			"deviceTime": "2014-08-11T06:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76ce5ad2-1da4-4a4d-bab4-af383d834de3"
		},
		{
			"deviceTime": "2014-08-11T06:27:23",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "94216ea8-855d-4787-9c36-5386be7b3bdb"
		},
		{
			"deviceTime": "2014-08-11T06:27:23",
			"value": 36,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "c928de0f-eef2-43a9-8a00-3eee0a993fbb"
		},
		{
			"deviceTime": "2014-08-11T06:27:23",
			"id": "c928de0f-eef2-43a9-8a00-3eee0a993fbb",
			"source": "demo",
			"joinKey": "7bd4d44c-1811-4315-8c6c-aba8d6244b38",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 36
			}
		},
		{
			"deviceTime": "2014-08-11T06:27:23",
			"programmed": 2.4,
			"joinKey": "7bd4d44c-1811-4315-8c6c-aba8d6244b38",
			"value": 2.4,
			"source": "demo",
			"recommended": 2.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "efd72fb7-89f8-459f-b529-6e552a27fbda"
		},
		{
			"deviceTime": "2014-08-11T06:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22a2df5e-e26a-443a-8f43-570bc1f39d1c"
		},
		{
			"deviceTime": "2014-08-11T06:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eac2785d-fdfd-4a0f-ab4f-045379ba5d79"
		},
		{
			"deviceTime": "2014-08-11T06:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "060283b9-b364-435e-b398-20ed6972d36e"
		},
		{
			"deviceTime": "2014-08-11T06:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c07d813-c3bc-41aa-b5c1-1250c59c09e9"
		},
		{
			"deviceTime": "2014-08-11T06:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "451ec853-16ca-4dbb-81a9-ca446251af25"
		},
		{
			"deviceTime": "2014-08-11T06:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27c327d9-9103-4d92-862c-3be74280e60d"
		},
		{
			"deviceTime": "2014-08-11T07:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d197d173-8155-47f9-9090-1643775a118d"
		},
		{
			"deviceTime": "2014-08-11T07:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16072a91-e954-45fd-a8d8-572efb1391a4"
		},
		{
			"deviceTime": "2014-08-11T07:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "661638b2-9f31-4a5f-b481-ca86a45c1251"
		},
		{
			"deviceTime": "2014-08-11T07:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f13ab000-7d58-4b8f-8d7f-4318bf4cce88"
		},
		{
			"deviceTime": "2014-08-11T07:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c0728f2-2895-46fa-af0b-b3f43b9bcda6"
		},
		{
			"deviceTime": "2014-08-11T07:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9b8a417-bf1d-46cf-ae71-b543b4ec7b98"
		},
		{
			"deviceTime": "2014-08-11T07:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00154826-53c8-4d28-b8a8-467b8a2928d0"
		},
		{
			"deviceTime": "2014-08-11T08:15:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cec2034-11a0-42ec-a2c5-49747d464097"
		},
		{
			"deviceTime": "2014-08-11T08:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7922f8e-ce8c-4224-992f-b8c59feb0ddd"
		},
		{
			"deviceTime": "2014-08-11T08:29:42",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3c5a09c7-5534-4497-9d60-11bc58a933a2"
		},
		{
			"deviceTime": "2014-08-11T08:29:42",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "269b38d2-959b-4a75-bf5b-9787b082139c"
		},
		{
			"deviceTime": "2014-08-11T08:29:42",
			"id": "269b38d2-959b-4a75-bf5b-9787b082139c",
			"source": "demo",
			"joinKey": "b8ddd658-d66a-4604-afd2-4d35d818a1d9",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 40
			}
		},
		{
			"deviceTime": "2014-08-11T08:30:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "254bc819-41f3-444d-80fd-c92f6f5391fe"
		},
		{
			"deviceTime": "2014-08-11T08:35:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11168770-7405-4bec-8ff4-8b6616977fb2"
		},
		{
			"deviceTime": "2014-08-11T08:40:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5670ad65-216b-47e6-badd-8dea2f420efe"
		},
		{
			"deviceTime": "2014-08-11T08:45:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7c9d8ec-a649-4b64-9185-62872c6e579f"
		},
		{
			"deviceTime": "2014-08-11T08:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "696c6e88-8d40-4865-b193-c9476ac214b9"
		},
		{
			"deviceTime": "2014-08-11T08:55:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7008c16-b8f7-4233-a46d-30cfd3736ed6"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-11T15:00:00",
			"start": "2014-08-11T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "d4f5bdf7-2e03-49ea-8102-11e331c5bded"
		},
		{
			"deviceTime": "2014-08-11T09:00:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7517bf6-398b-4a22-b3a7-c76ca1ecc826"
		},
		{
			"deviceTime": "2014-08-11T09:05:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0de920a7-a9c0-4fce-aa51-0702ec310b75"
		},
		{
			"deviceTime": "2014-08-11T09:10:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5bd9e496-8d56-4aee-afd2-94c4730866ac"
		},
		{
			"deviceTime": "2014-08-11T09:15:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e569d62-c0de-4bbc-86f9-cb942905c536"
		},
		{
			"deviceTime": "2014-08-11T09:17:54",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0444324f-ecda-45fe-a691-d12b224bbd6c"
		},
		{
			"deviceTime": "2014-08-11T09:17:54",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1f8595bf-663c-4956-b410-d940b6454cc3"
		},
		{
			"deviceTime": "2014-08-11T09:17:54",
			"id": "1f8595bf-663c-4956-b410-d940b6454cc3",
			"source": "demo",
			"joinKey": "9c91ec01-5aa2-4d2c-9fda-3887e7ec2cf5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 78
			}
		},
		{
			"deviceTime": "2014-08-11T09:17:54",
			"programmed": 5.2,
			"joinKey": "9c91ec01-5aa2-4d2c-9fda-3887e7ec2cf5",
			"value": 0.2,
			"source": "demo",
			"recommended": 5.2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "eb48e82f-dcd7-42e4-ba85-55c05a18623a"
		},
		{
			"deviceTime": "2014-08-11T09:20:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "697b5f6b-0b53-48bc-be1a-a64a85c2ad87"
		},
		{
			"deviceTime": "2014-08-11T09:25:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7b964c5-9a91-4c0d-9a9e-a8c0ea742561"
		},
		{
			"deviceTime": "2014-08-11T09:30:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9ad6287-83e9-4a2e-abb6-9fda27c30bd9"
		},
		{
			"deviceTime": "2014-08-11T09:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4d6a9ff-ea0a-4923-a807-e49d631624dc"
		},
		{
			"deviceTime": "2014-08-11T09:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da45c29c-d02d-446b-86fa-e6c79e06640d"
		},
		{
			"deviceTime": "2014-08-11T09:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b212740-ccdf-4d63-8bd3-f6ca180248e6"
		},
		{
			"deviceTime": "2014-08-11T09:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5df1a83f-7ad4-4055-b8a6-20099755380f"
		},
		{
			"deviceTime": "2014-08-11T09:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "692178a4-4507-444a-879e-73297b718f28"
		},
		{
			"deviceTime": "2014-08-11T10:00:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e16b86f-5b07-4cb9-9617-0567cd88ec79"
		},
		{
			"deviceTime": "2014-08-11T10:05:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10a8cf5f-009f-4afa-aa1b-460012ccdd46"
		},
		{
			"deviceTime": "2014-08-11T10:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07456494-932c-42d8-8d98-1cea6e2eef79"
		},
		{
			"deviceTime": "2014-08-11T10:15:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7bbb402-d05d-4055-a984-5af2c3884298"
		},
		{
			"deviceTime": "2014-08-11T10:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd343a65-cc72-4601-a9f6-d40bb4387405"
		},
		{
			"deviceTime": "2014-08-11T10:20:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4c8975e5-2c12-4dcd-af04-814ea2278d94"
		},
		{
			"deviceTime": "2014-08-11T10:20:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "54474b8e-68c1-4fcc-8477-7fe2c12b1bcc"
		},
		{
			"deviceTime": "2014-08-11T10:20:22",
			"id": "54474b8e-68c1-4fcc-8477-7fe2c12b1bcc",
			"source": "demo",
			"joinKey": "cb0f52d0-414f-43da-bf51-494436071543",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 47
			}
		},
		{
			"deviceTime": "2014-08-11T10:20:22",
			"programmed": 3.1,
			"joinKey": "cb0f52d0-414f-43da-bf51-494436071543",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "7ea2fae1-d626-4b70-a6e7-e0c2ad11ddb7"
		},
		{
			"deviceTime": "2014-08-11T10:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "855a4677-7d89-40d3-a157-45368f52cef3"
		},
		{
			"deviceTime": "2014-08-11T10:30:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cabbb76-289c-4650-83b8-40b581e3b901"
		},
		{
			"deviceTime": "2014-08-11T10:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23b82f72-0068-43eb-a060-6bca929731b3"
		},
		{
			"deviceTime": "2014-08-11T10:37:39",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "703f0b1c-563a-4504-ab97-055ad3a53b4b"
		},
		{
			"deviceTime": "2014-08-11T10:37:39",
			"value": 38,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "d7fa4180-4f26-4cc6-95cf-5821a1501f09"
		},
		{
			"deviceTime": "2014-08-11T10:37:39",
			"id": "d7fa4180-4f26-4cc6-95cf-5821a1501f09",
			"source": "demo",
			"joinKey": "dec31086-7f4c-49ed-afce-49c85a187877",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 38
			}
		},
		{
			"deviceTime": "2014-08-11T10:37:39",
			"programmed": 2.5,
			"joinKey": "dec31086-7f4c-49ed-afce-49c85a187877",
			"value": 0.5,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "0756b835-a59a-41e2-801d-5eb3a675b4b8"
		},
		{
			"deviceTime": "2014-08-11T10:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38dd5d38-4331-43a0-9cbc-739fbb93c731"
		},
		{
			"deviceTime": "2014-08-11T11:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f51f981a-dcd6-4e43-a9d9-12cff3edeebb"
		},
		{
			"deviceTime": "2014-08-11T11:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a6ceb3c-35f5-4e2a-9c54-9227e2e3cd4b"
		},
		{
			"deviceTime": "2014-08-11T11:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "785a5d2f-8b0c-4d34-8ec0-bfe7757d013d"
		},
		{
			"deviceTime": "2014-08-11T11:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c14c5b12-84a3-474a-b97f-8898451efcda"
		},
		{
			"deviceTime": "2014-08-11T11:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9fb3e17-a641-41f7-89f8-1dc9bef66d60"
		},
		{
			"deviceTime": "2014-08-11T11:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c16c1fc-580c-400a-9742-47aafdf42201"
		},
		{
			"deviceTime": "2014-08-11T11:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99c6a99b-c3c9-4289-8cf2-55b792829076"
		},
		{
			"deviceTime": "2014-08-11T11:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "430c1932-e6d7-4dfd-bfc8-b70d800ec5b9"
		},
		{
			"deviceTime": "2014-08-11T11:50:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f31a50f-ba21-4889-a9fa-8558959e87a3"
		},
		{
			"deviceTime": "2014-08-11T11:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7999e43a-cf36-42ac-ac8f-42bf2ab749cf"
		},
		{
			"deviceTime": "2014-08-11T12:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c77c9aef-51bb-465a-89df-e13ccf88f413"
		},
		{
			"deviceTime": "2014-08-11T12:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2fd901f-c83b-4e1f-a1a1-7043f36913eb"
		},
		{
			"deviceTime": "2014-08-11T12:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78111413-4842-49c3-9863-3eb8017ab72c"
		},
		{
			"deviceTime": "2014-08-11T12:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0062c012-229a-4cff-8e37-7af1d3df1cf0"
		},
		{
			"deviceTime": "2014-08-11T12:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0caab6d6-f810-4d8d-8239-d1e84b2a359b"
		},
		{
			"deviceTime": "2014-08-11T12:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c68b1f58-a1e2-4e91-bc1d-bf8e85b0bcc1"
		},
		{
			"deviceTime": "2014-08-11T12:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa97949f-839d-48d1-b7d7-73193c6b1288"
		},
		{
			"deviceTime": "2014-08-11T12:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22a2005d-517f-4274-ad93-3e793df323b5"
		},
		{
			"deviceTime": "2014-08-11T12:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f12a95aa-ad66-4605-a73d-a0129f3cbaa4"
		},
		{
			"deviceTime": "2014-08-11T12:41:21",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d51134b7-37db-41f8-b801-0bd3375f5290"
		},
		{
			"end": "2014-08-11T17:23:01",
			"start": "2014-08-11T12:53:01",
			"percent": 1.7,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 16200000,
			"type": "basal-rate-segment",
			"id": "b3bb656a-a6b6-4117-9386-ee0875d551b8"
		},
		{
			"deviceTime": "2014-08-11T12:55:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc59c35a-8a39-430a-8061-24811b9d03e9"
		},
		{
			"deviceTime": "2014-08-11T13:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e36c436a-6558-48cc-9398-3101fd595cab"
		},
		{
			"deviceTime": "2014-08-11T13:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be9de531-2386-48ae-8833-1be6125992e2"
		},
		{
			"deviceTime": "2014-08-11T13:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cfd215d-8dca-4ec7-aed9-057b939e3aa6"
		},
		{
			"deviceTime": "2014-08-11T13:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d68088d-8ede-4a9e-b540-7b5e656d1624"
		},
		{
			"deviceTime": "2014-08-11T13:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4916499e-452a-41bb-976f-9e5886d33254"
		},
		{
			"deviceTime": "2014-08-11T13:35:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f4cafc9-00f3-4914-8039-f4f803d96665"
		},
		{
			"deviceTime": "2014-08-11T13:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48f413f5-433f-4f9f-ac74-5c91357fc723"
		},
		{
			"deviceTime": "2014-08-11T13:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a5a0eb5-1968-49cc-b126-189e72b3b422"
		},
		{
			"deviceTime": "2014-08-11T13:50:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7014aef5-287f-467d-814d-af576176da06"
		},
		{
			"deviceTime": "2014-08-11T13:55:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6518c234-abe1-4ee2-9c41-4538792a9b68"
		},
		{
			"deviceTime": "2014-08-11T14:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83de94f1-3328-4770-8333-6040a53ea397"
		},
		{
			"deviceTime": "2014-08-11T14:05:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14ebc4d8-17e7-405f-bfe2-ac479eb2f242"
		},
		{
			"deviceTime": "2014-08-11T14:10:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a41095dc-4a6d-4ee2-a4fc-41e16840c488"
		},
		{
			"deviceTime": "2014-08-11T14:15:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21f18c9b-12af-473e-afd5-b840ec9167c5"
		},
		{
			"deviceTime": "2014-08-11T14:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "888a8613-3ba4-4359-b3cf-16d70b071d13"
		},
		{
			"deviceTime": "2014-08-11T14:25:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c7d5c83-4651-4d80-bcde-347fa60b7d4d"
		},
		{
			"deviceTime": "2014-08-11T14:30:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4992a2cb-65b5-4a2f-8759-cfd0c34db91b"
		},
		{
			"deviceTime": "2014-08-11T14:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d14817c1-2277-4f81-a455-d5f6e06575ae"
		},
		{
			"deviceTime": "2014-08-11T14:40:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "997eaf14-b301-4132-b7b0-c40aaa61d633"
		},
		{
			"deviceTime": "2014-08-11T14:45:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "880789c5-e27f-445a-9a09-2b5d86f07d78"
		},
		{
			"deviceTime": "2014-08-11T14:45:22",
			"activeBasalSchedule": "Pattern B",
			"bgTarget": [
				{
					"high": 100,
					"start": 0,
					"low": 80
				}
			],
			"carbRatio": [
				{
					"start": 0,
					"amount": 18
				}
			],
			"insulinSensitivity": [
				{
					"start": 0,
					"amount": 85
				}
			],
			"source": "demo",
			"basalSchedules": {
				"Pattern B": [
					{
						"start": 0,
						"rate": 0.8
					},
					{
						"start": 7200000,
						"rate": 0.65
					},
					{
						"start": 14400000,
						"rate": 0.75
					},
					{
						"start": 18000000,
						"rate": 0.85
					},
					{
						"start": 23400000,
						"rate": 1.2
					},
					{
						"start": 32400000,
						"rate": 0.9
					},
					{
						"start": 54000000,
						"rate": 0.9
					},
					{
						"start": 72000000,
						"rate": 0.95
					}
				],
				"Pattern A": [
					{
						"start": 0,
						"rate": 0.8
					},
					{
						"start": 7200000,
						"rate": 0.5
					},
					{
						"start": 16200000,
						"rate": 0.6
					},
					{
						"start": 18000000,
						"rate": 0.85
					},
					{
						"start": 21600000,
						"rate": 1
					},
					{
						"start": 34200000,
						"rate": 0.7
					},
					{
						"start": 54000000,
						"rate": 0.9
					},
					{
						"start": 73800000,
						"rate": 0.95
					}
				],
				"Standard": [
					{
						"start": 0,
						"rate": 0.55
					},
					{
						"start": 9000000,
						"rate": 0.7
					},
					{
						"start": 14400000,
						"rate": 0.95
					},
					{
						"start": 19800000,
						"rate": 0.85
					},
					{
						"start": 23400000,
						"rate": 1
					},
					{
						"start": 32400000,
						"rate": 0.55
					},
					{
						"start": 54000000,
						"rate": 0.75
					},
					{
						"start": 72000000,
						"rate": 0.8
					}
				]
			},
			"deviceId": "Demo - 123",
			"type": "settings",
			"id": "cf551e2d-2f05-4a2a-b06f-d5793773783d"
		},
		{
			"deviceTime": "2014-08-11T14:50:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb106712-621b-47ef-8bed-24da113765a2"
		},
		{
			"deviceTime": "2014-08-11T14:55:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8433ff3-0160-40c0-a707-239dc2af496c"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-11T20:00:00",
			"start": "2014-08-11T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "8db60b93-ac0e-4ed7-80c9-d83e0402db6f"
		},
		{
			"deviceTime": "2014-08-11T15:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec5ed67d-4764-4e25-91e2-644fb9b1f40c"
		},
		{
			"deviceTime": "2014-08-11T15:05:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6225e782-0b99-432f-b35c-dd31b9613ca6"
		},
		{
			"deviceTime": "2014-08-11T15:10:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1011723-90c2-4761-bea1-1467b158126f"
		},
		{
			"deviceTime": "2014-08-11T15:15:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5e61b93-5f2a-4bf9-862f-f5eb1ab9eb61"
		},
		{
			"deviceTime": "2014-08-11T15:20:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9b75035-b6d0-4844-8ebf-04415d953d97"
		},
		{
			"deviceTime": "2014-08-11T15:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbdbdd34-cdbd-467f-8eb9-d29cabcced1d"
		},
		{
			"deviceTime": "2014-08-11T15:30:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "053e2e3a-5f6b-44f4-8319-a7b3995633a6"
		},
		{
			"deviceTime": "2014-08-11T15:35:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b163e561-b072-42f6-ad82-322536a3c509"
		},
		{
			"deviceTime": "2014-08-11T15:40:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7b3107b-e5f6-40cc-8114-6c3665b1f145"
		},
		{
			"messageText": "Aute ham ut et fatback bresaola pancetta deserunt corned beef velit.",
			"parentMessage": "",
			"utcTime": "2014-08-11T15:44:25Z",
			"type": "message",
			"id": "ec036e38-c42e-43d4-8154-4cb226607e65"
		},
		{
			"deviceTime": "2014-08-11T15:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08918513-877d-4982-ab90-9fdf928b361f"
		},
		{
			"deviceTime": "2014-08-11T15:50:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7847b2a2-e028-4420-800f-51a6d1221469"
		},
		{
			"deviceTime": "2014-08-11T15:55:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8343ad2b-f7dc-4113-a102-9ba93f63b55a"
		},
		{
			"deviceTime": "2014-08-11T16:00:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e114b93b-f5d4-4f94-bc7e-0056bbf3515c"
		},
		{
			"deviceTime": "2014-08-11T16:05:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "185f513d-a495-4f44-9bf8-88c24cf3ac34"
		},
		{
			"deviceTime": "2014-08-11T16:10:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea5c39d7-0b65-49ca-b6a0-da47b1aaa9d5"
		},
		{
			"deviceTime": "2014-08-11T16:15:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4491a02-8b82-428e-b29a-a54e6aa65c0c"
		},
		{
			"deviceTime": "2014-08-11T16:20:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e34d7c0e-9da9-433b-97eb-2e056eefbe82"
		},
		{
			"deviceTime": "2014-08-11T16:25:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "336d3c48-1a40-4a58-8c7d-0441999ca31f"
		},
		{
			"deviceTime": "2014-08-11T16:30:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dce338e5-64da-4b12-89f8-17c439bc3db1"
		},
		{
			"deviceTime": "2014-08-11T16:35:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4180297c-7b4b-41a5-bf8d-9bfe710ba55b"
		},
		{
			"deviceTime": "2014-08-11T17:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec6a262a-6952-4750-b517-59a1df7af7af"
		},
		{
			"deviceTime": "2014-08-11T17:15:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ae44139-1c54-4ca7-9e21-a7fa58fe70f3"
		},
		{
			"deviceTime": "2014-08-11T17:19:01",
			"value": 1.9,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "e8834271-f013-460a-b0fd-041775d5f68b"
		},
		{
			"deviceTime": "2014-08-11T17:20:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "371703d6-8783-444e-889c-d8637f52ca62"
		},
		{
			"deviceTime": "2014-08-11T17:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ba3e688-dca6-4e71-ba26-da9606c0e4b7"
		},
		{
			"deviceTime": "2014-08-11T17:30:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c4738ba-4841-4a79-befd-3db6af9757b3"
		},
		{
			"deviceTime": "2014-08-11T17:35:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03ac54ba-3a1d-42f2-a0f4-ac115ba8abf3"
		},
		{
			"deviceTime": "2014-08-11T17:40:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d772aeb1-ece3-4662-a53f-fe0c9d2dcc59"
		},
		{
			"deviceTime": "2014-08-11T17:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e06f9a8-863c-493e-ae58-e8018f9a8788"
		},
		{
			"deviceTime": "2014-08-11T17:50:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7cbd9c3-8854-4482-83d2-775014b06bbe"
		},
		{
			"deviceTime": "2014-08-11T17:55:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "368aaf5d-6472-4c9e-94c2-32db1d8b8b95"
		},
		{
			"deviceTime": "2014-08-11T18:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9ba9b77-16dc-44a0-8014-79b553b05fee"
		},
		{
			"deviceTime": "2014-08-11T18:05:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a77621d-c88b-4f84-8114-65c668914def"
		},
		{
			"deviceTime": "2014-08-11T18:10:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14fbe99a-9a01-4876-94c9-69535775b4fb"
		},
		{
			"deviceTime": "2014-08-11T18:15:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c5c4619-62aa-4bfc-a30e-7d29ba0a89c1"
		},
		{
			"deviceTime": "2014-08-11T18:20:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "510c9f89-8daf-4776-a2ff-22be4e433511"
		},
		{
			"deviceTime": "2014-08-11T18:25:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ef333cb-0be6-446f-b6e2-f536f06dfd37"
		},
		{
			"deviceTime": "2014-08-11T18:30:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d3273e2-2531-4062-b4e5-bcd9c0c7037f"
		},
		{
			"deviceTime": "2014-08-11T18:35:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e4cd567-066d-443a-9c0e-917dac55f855"
		},
		{
			"deviceTime": "2014-08-11T18:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5402945d-23c4-4bc8-94a2-cd5e5ca8aed0"
		},
		{
			"deviceTime": "2014-08-11T18:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef466a22-e7af-461b-a72c-7ceefa5492ba"
		},
		{
			"deviceTime": "2014-08-11T18:50:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef58e8b8-3eb9-4e85-a265-84bfe87b00a4"
		},
		{
			"deviceTime": "2014-08-11T18:55:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fe22151-7b4c-470c-ab8f-6ece39e949e5"
		},
		{
			"deviceTime": "2014-08-11T19:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc8394df-815b-4f59-9291-661c1c24c281"
		},
		{
			"deviceTime": "2014-08-11T19:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3527360-0110-450d-9fe8-741c801e5236"
		},
		{
			"deviceTime": "2014-08-11T19:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1b6dcdb-9f41-4833-8a8d-443343b057cc"
		},
		{
			"deviceTime": "2014-08-11T19:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abc20e6a-794e-464f-bacc-162b1a3d1735"
		},
		{
			"deviceTime": "2014-08-11T19:20:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebef50c1-e4de-4861-aba9-2d893b4a0467"
		},
		{
			"deviceTime": "2014-08-11T19:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "840e3c5d-f610-4727-b9df-6d191b5cbd13"
		},
		{
			"deviceTime": "2014-08-11T19:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3992b532-0bcd-41e4-aa19-8cac1cb38958"
		},
		{
			"deviceTime": "2014-08-11T19:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a35f5b47-9e91-4601-957d-6667b09413f4"
		},
		{
			"deviceTime": "2014-08-11T19:40:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3aaf9bf-4eeb-417e-beb5-7abeb160aa7a"
		},
		{
			"deviceTime": "2014-08-11T19:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d415e46-eff3-4bb7-8447-92aa49d82b80"
		},
		{
			"deviceTime": "2014-08-11T19:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "738943b1-65e6-4639-b784-115e9e624f1e"
		},
		{
			"deviceTime": "2014-08-11T19:55:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ef06a10-e3e9-48ce-8a57-fb9a05566670"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-12T00:00:00",
			"start": "2014-08-11T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "612d7348-b69d-47e2-a136-eabec02c2413"
		},
		{
			"deviceTime": "2014-08-11T20:00:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3a2a86b-bf6a-4ed6-a719-bfb388a6b9b7"
		},
		{
			"deviceTime": "2014-08-11T20:05:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2116b87e-9bc9-4662-b21d-7c2ea347a146"
		},
		{
			"deviceTime": "2014-08-11T20:10:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36c3e009-9be9-4461-8ee2-c6747f36df24"
		},
		{
			"deviceTime": "2014-08-11T20:15:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbc41533-8b5f-45a7-9144-dcac343db3da"
		},
		{
			"deviceTime": "2014-08-11T20:20:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed68ab56-7a50-4ffb-bfbb-169701aaa632"
		},
		{
			"deviceTime": "2014-08-11T20:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c241b50d-ed8b-40ca-8441-6b6fcf7e8997"
		},
		{
			"deviceTime": "2014-08-11T20:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d146cf3-b652-489e-84d5-acd220fefcc8"
		},
		{
			"deviceTime": "2014-08-11T20:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a96d724-078c-48a4-9962-d799b6a3ce09"
		},
		{
			"deviceTime": "2014-08-11T20:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18fde2ef-75af-426f-888e-bce7bf6531f4"
		},
		{
			"deviceTime": "2014-08-11T20:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb3f00fb-9ac1-4b38-a39d-4d72c1f2929f"
		},
		{
			"deviceTime": "2014-08-11T20:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51e136d9-80a1-4d09-b2e8-3456c693e406"
		},
		{
			"deviceTime": "2014-08-11T20:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60f84b08-27a8-4e34-8235-d512cba7613f"
		},
		{
			"deviceTime": "2014-08-11T21:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18ff2fdb-7ab5-4a69-8e67-edac1c0f3d6b"
		},
		{
			"deviceTime": "2014-08-11T21:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5a85f1c-f677-4be8-903d-dc7b96b7718c"
		},
		{
			"deviceTime": "2014-08-11T21:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "410921bc-653d-4e93-98ff-ba02d0cd8e46"
		},
		{
			"deviceTime": "2014-08-11T21:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20538f6d-30b8-4061-bb7e-3385bfcc79b0"
		},
		{
			"deviceTime": "2014-08-11T21:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2d786af-d079-4085-87c5-4f43016a3287"
		},
		{
			"deviceTime": "2014-08-11T21:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e40c413-aea9-4763-96c2-29477ddd767d"
		},
		{
			"deviceTime": "2014-08-11T21:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e054ba5-8ec5-4216-8df4-3846a3ea0b26"
		},
		{
			"deviceTime": "2014-08-11T21:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fea6460-db62-4214-bef6-23194d2ad287"
		},
		{
			"deviceTime": "2014-08-11T21:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21d2dacf-d415-4ae3-86c2-157762153bf0"
		},
		{
			"deviceTime": "2014-08-11T21:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "789842bc-9407-4854-bf0a-5ec908077cbb"
		},
		{
			"deviceTime": "2014-08-11T21:50:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcd322ed-354f-4bb0-a939-f6f8ef1e454c"
		},
		{
			"deviceTime": "2014-08-11T21:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00088f27-5d91-4848-8d91-d4913a7577bb"
		},
		{
			"deviceTime": "2014-08-11T22:00:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dacec247-94dc-41b0-89dc-07dc86306193"
		},
		{
			"deviceTime": "2014-08-11T22:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cea3b84b-9239-4308-b044-1aea019958d0"
		},
		{
			"deviceTime": "2014-08-11T22:10:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7886c3a6-6dff-4fb5-ab63-fac85920fed0"
		},
		{
			"deviceTime": "2014-08-11T22:15:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c5d17ea-aad2-4844-aec5-82a8a0645f8f"
		},
		{
			"deviceTime": "2014-08-11T22:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc86f317-67fd-4013-90fb-81655c7d07bd"
		},
		{
			"deviceTime": "2014-08-11T22:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "890a227a-49c4-4343-aa64-1d18f197e3e6"
		},
		{
			"deviceTime": "2014-08-11T22:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c15dd09-1fac-4535-b228-4a892507a380"
		},
		{
			"deviceTime": "2014-08-11T22:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2efb11cf-535b-48b9-8cea-b2df75219766"
		},
		{
			"deviceTime": "2014-08-11T22:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f5fb9d2-122d-429b-9e3a-b437dd69c7ec"
		},
		{
			"deviceTime": "2014-08-11T22:45:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d9bd2f6-1b50-477d-af05-572cb62f047c"
		},
		{
			"deviceTime": "2014-08-11T22:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "138f2d40-90de-4cdc-a116-1610a862eed3"
		},
		{
			"deviceTime": "2014-08-11T22:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d2795c1-3788-4d85-855b-f84a79c259b0"
		},
		{
			"deviceTime": "2014-08-11T23:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1761ceeb-44d7-46f8-a778-6d0256e5455c"
		},
		{
			"deviceTime": "2014-08-11T23:05:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f936881-455b-42b2-a5cb-eada730d37ba"
		},
		{
			"deviceTime": "2014-08-11T23:10:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae392c70-aa7f-470d-aa2a-3c5ab8a935dd"
		},
		{
			"deviceTime": "2014-08-11T23:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e24eaa67-6b18-4a1b-b5de-3a9bc7ebd4d5"
		},
		{
			"deviceTime": "2014-08-11T23:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb8a8893-b025-4f08-867b-9b72d83ed71f"
		},
		{
			"deviceTime": "2014-08-11T23:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0196c81-fa47-4f6c-9958-83cdb731fa3f"
		},
		{
			"deviceTime": "2014-08-11T23:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b00832b6-8e0b-4b56-a1cd-beb085370a87"
		},
		{
			"deviceTime": "2014-08-11T23:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a85feb6b-e645-4604-ae82-b943dde8adfc"
		},
		{
			"deviceTime": "2014-08-11T23:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cc37e0e-7ee1-4e9c-a92b-5ca4d2fcf328"
		},
		{
			"deviceTime": "2014-08-11T23:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5557c966-702a-4e7d-a183-5070e254c3e3"
		},
		{
			"deviceTime": "2014-08-11T23:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20f99d2f-18fb-4bc1-9905-392e9c45f0df"
		},
		{
			"deviceTime": "2014-08-11T23:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3f5f67f-0278-44bd-a946-d8cbf67d2879"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-12T02:00:00",
			"start": "2014-08-12T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "d42ead74-170c-4730-80b3-b9792466c66d"
		},
		{
			"deviceTime": "2014-08-12T00:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "250392f1-3a48-47f5-aa63-e68cee1535e9"
		},
		{
			"deviceTime": "2014-08-12T00:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b0dfc05-40db-4a62-b4dc-4b29372c4141"
		},
		{
			"deviceTime": "2014-08-12T00:10:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79d39284-c475-4887-bd99-1d55ffc79c9a"
		},
		{
			"deviceTime": "2014-08-12T00:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19cff017-10e7-4f1b-88bd-66a4ef8dd158"
		},
		{
			"deviceTime": "2014-08-12T00:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b08c0d4-ea8b-4f10-8e4c-eda33798fe21"
		},
		{
			"deviceTime": "2014-08-12T00:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0acef0ca-5564-458f-bcaa-3b7ab6ececc4"
		},
		{
			"deviceTime": "2014-08-12T00:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df5d7a62-de61-4f6a-a0b0-d59b6c3b1221"
		},
		{
			"deviceTime": "2014-08-12T00:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e9c4685-9bd0-4aec-bc77-c346df05b2dd"
		},
		{
			"deviceTime": "2014-08-12T00:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c50dc121-b158-46d5-9db8-c50991d56d6c"
		},
		{
			"deviceTime": "2014-08-12T00:45:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14f9f0ff-6e2e-417c-ac11-34a4e69a1e17"
		},
		{
			"deviceTime": "2014-08-12T00:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2df16fd7-44ac-420b-86ff-72bded956ee8"
		},
		{
			"deviceTime": "2014-08-12T00:55:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "329b5282-5930-4d37-a2bd-fb6e71411253"
		},
		{
			"deviceTime": "2014-08-12T01:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "605bedef-13de-42df-a1b2-0df6cc96a4d0"
		},
		{
			"deviceTime": "2014-08-12T01:05:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1184b181-7589-4174-9ccb-24f1db6f1b9b"
		},
		{
			"deviceTime": "2014-08-12T01:10:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1a78a17-9a0d-4c89-902e-b5a27d736a9a"
		},
		{
			"deviceTime": "2014-08-12T01:15:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a348869-af67-48b8-abd0-e9c34f7e98c3"
		},
		{
			"deviceTime": "2014-08-12T01:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f2f3cf1-0ec0-4ca9-8fb3-608a4af66e80"
		},
		{
			"deviceTime": "2014-08-12T01:25:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8971eb25-13af-4d3c-ad16-e45a2cd66f17"
		},
		{
			"deviceTime": "2014-08-12T01:30:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b3e45cc-a68d-43ed-a3fa-4057c4b5e145"
		},
		{
			"deviceTime": "2014-08-12T01:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7eee9269-0184-4ffb-b9ee-1c652a4e10c3"
		},
		{
			"deviceTime": "2014-08-12T01:40:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fdf2a404-e078-4571-930a-0714c266ad25"
		},
		{
			"deviceTime": "2014-08-12T01:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abf3a3ae-39f2-4f68-b6e7-b043f52d7f8f"
		},
		{
			"deviceTime": "2014-08-12T01:50:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22c6bdde-30f5-4f41-b99d-2dab4079977e"
		},
		{
			"end": "2014-08-12T03:24:01",
			"start": "2014-08-12T01:54:01",
			"percent": 1.3,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "9dddd8bc-3802-4e93-9bd3-8d97d411a5f8"
		},
		{
			"deviceTime": "2014-08-12T01:55:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5e01bc5-fc03-465d-ade4-cddb51dcf077"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-12T04:00:00",
			"start": "2014-08-12T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "4d470f94-1596-4a04-ad11-edc645adc49b"
		},
		{
			"deviceTime": "2014-08-12T02:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffd044f1-f573-4e94-a19e-d685eba6a612"
		},
		{
			"deviceTime": "2014-08-12T02:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea0ee68a-e549-46fa-b5f2-c649ef7e2b8f"
		},
		{
			"deviceTime": "2014-08-12T02:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82834545-2495-49d8-9ba0-fdc9f7d12c9c"
		},
		{
			"deviceTime": "2014-08-12T02:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54a52ce4-6a65-4973-9343-cfacd7adbf7d"
		},
		{
			"deviceTime": "2014-08-12T02:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "450403bc-8e6e-417d-932b-525809d22ac4"
		},
		{
			"deviceTime": "2014-08-12T02:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50b0d7a9-dd5e-4d40-87c1-df579e968ec6"
		},
		{
			"deviceTime": "2014-08-12T02:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c9bd304-2b6f-46a3-88b5-5edadb4424b1"
		},
		{
			"deviceTime": "2014-08-12T02:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44472141-23a4-4d50-94d3-13be3ce695a0"
		},
		{
			"deviceTime": "2014-08-12T02:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b06c2cd-8951-455f-a269-f5b2c2661281"
		},
		{
			"deviceTime": "2014-08-12T02:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94829c0f-cf15-497b-b553-9b25e3e15915"
		},
		{
			"deviceTime": "2014-08-12T02:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1b5f224-eaa6-480e-bba6-7fe129800818"
		},
		{
			"deviceTime": "2014-08-12T02:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2ed0726-b114-45a1-9021-4ce4d3c2e18a"
		},
		{
			"deviceTime": "2014-08-12T03:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83e6176e-6c09-435a-b1a8-6e5a6095a8cb"
		},
		{
			"deviceTime": "2014-08-12T03:05:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a30648d-dff7-4e09-ae53-be1a16beb58c"
		},
		{
			"deviceTime": "2014-08-12T03:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca1ef708-f6a6-42d9-962e-371caba6e953"
		},
		{
			"deviceTime": "2014-08-12T03:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90d782eb-9ad6-446a-8a76-9e7bcdca04c2"
		},
		{
			"deviceTime": "2014-08-12T03:20:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8dc96e5f-3b0f-4688-8633-c41bcc05e6a0"
		},
		{
			"deviceTime": "2014-08-12T03:25:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "280f690d-6d1f-4f0a-b23b-85aa290726c4"
		},
		{
			"deviceTime": "2014-08-12T03:30:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa5fb105-ef5d-45cf-9836-ab336dcba868"
		},
		{
			"deviceTime": "2014-08-12T03:35:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "583d0d93-5b9c-4d36-b094-1b7f8248fb32"
		},
		{
			"deviceTime": "2014-08-12T03:40:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5393fcda-63c3-4870-b2ee-9b13baa0f1d4"
		},
		{
			"deviceTime": "2014-08-12T03:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04fdc3a4-84bd-4377-b2cf-62253faa67d5"
		},
		{
			"deviceTime": "2014-08-12T03:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ea71249-f6c1-4039-b3e3-24bda49acaff"
		},
		{
			"deviceTime": "2014-08-12T03:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c937139-f789-4f4d-8d48-85dc38249cfb"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-12T05:00:00",
			"start": "2014-08-12T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "055b8e6c-bdbc-4ab2-939d-a573878da1f8"
		},
		{
			"deviceTime": "2014-08-12T04:00:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d66744e4-89f4-4b20-9e82-f9ab8f79d190"
		},
		{
			"deviceTime": "2014-08-12T04:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d38a508c-99e7-4fbb-a25b-bc104f7b06c2"
		},
		{
			"deviceTime": "2014-08-12T04:10:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d309c101-20d5-4a8a-8fb4-f8f1a6104cb0"
		},
		{
			"deviceTime": "2014-08-12T04:15:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d755fa3-bdb3-454c-b086-d859fde15d59"
		},
		{
			"deviceTime": "2014-08-12T04:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66923b30-a9d7-467b-a2d3-0ccae60d85f5"
		},
		{
			"deviceTime": "2014-08-12T04:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "930ae480-7f3a-465b-89e2-564873e450cb"
		},
		{
			"deviceTime": "2014-08-12T04:35:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08be3a58-b2b8-4b25-b2ec-e5e61c3792d4"
		},
		{
			"deviceTime": "2014-08-12T04:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc125090-58c6-4dbe-aa93-1867003650c9"
		},
		{
			"deviceTime": "2014-08-12T04:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85bcfe6e-167b-4aef-bd36-d758707f2531"
		},
		{
			"deviceTime": "2014-08-12T04:50:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c64b6ffd-4c5c-473c-8f9f-d497bcae3087"
		},
		{
			"deviceTime": "2014-08-12T04:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e31b2630-dac4-4106-8e88-e0cce6b42ffe"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-12T06:00:00",
			"start": "2014-08-12T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "e2dc1b88-9c5e-4f4c-894d-1b6bb1042970"
		},
		{
			"deviceTime": "2014-08-12T05:00:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7a3e714-7cd8-4c90-98dd-d9834951808a"
		},
		{
			"deviceTime": "2014-08-12T05:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "786b93bc-3b96-4b16-96e9-30bc039ee1fd"
		},
		{
			"deviceTime": "2014-08-12T05:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0765b46c-5b4d-4109-833b-7903223ee93a"
		},
		{
			"deviceTime": "2014-08-12T05:15:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c30e0cd2-2926-421c-a529-ca0ad3a50c56"
		},
		{
			"deviceTime": "2014-08-12T05:18:01",
			"value": 0.1,
			"source": "demo",
			"recommended": 0.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "04ee1a1e-bcc1-42cc-9042-7768be0fe791"
		},
		{
			"deviceTime": "2014-08-12T05:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2541169a-3d9e-42ec-85a7-5699b94a3b6b"
		},
		{
			"deviceTime": "2014-08-12T05:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4c83c6b-48e3-4909-8323-fa5c1cf628fe"
		},
		{
			"deviceTime": "2014-08-12T05:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4ce628f-9b1f-4d84-ae41-9085d096b032"
		},
		{
			"deviceTime": "2014-08-12T05:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa331862-f4e6-425b-9abf-61ee1d28701e"
		},
		{
			"deviceTime": "2014-08-12T05:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff3ca9a9-123f-4c4f-b552-f02ea44d3d4b"
		},
		{
			"deviceTime": "2014-08-12T05:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "402b5145-3c43-4ae1-ac49-5b7785a50985"
		},
		{
			"deviceTime": "2014-08-12T05:50:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "846b0601-b9cb-4fae-a4f8-fd5b13db04ed"
		},
		{
			"deviceTime": "2014-08-12T05:55:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc8ecbe0-00d1-493a-bfa9-49947d2351d6"
		},
		{
			"delivered": 1,
			"end": "2014-08-12T09:00:00",
			"start": "2014-08-12T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "70fe9015-374f-4263-943e-3b86b81214e5"
		},
		{
			"deviceTime": "2014-08-12T06:00:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d0e63e5-660c-4923-9c84-e0d96dc89afb"
		},
		{
			"deviceTime": "2014-08-12T06:05:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41b5170b-b01f-40ea-a233-b085c168a340"
		},
		{
			"deviceTime": "2014-08-12T06:10:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a45e086-f192-46ba-bc0d-5d502e5183fa"
		},
		{
			"deviceTime": "2014-08-12T06:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05b9fc1b-73f5-4671-9f7e-b9e1d45c91e5"
		},
		{
			"deviceTime": "2014-08-12T06:20:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "134dced9-3a8f-46d5-8faa-d421ec34e8e5"
		},
		{
			"deviceTime": "2014-08-12T06:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdaab118-7ea0-4d59-9722-773fe1f7b994"
		},
		{
			"deviceTime": "2014-08-12T06:30:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac2304a4-9ef1-463f-8cab-705188493e25"
		},
		{
			"deviceTime": "2014-08-12T06:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7128fbf-28bf-4252-98de-bfd51b3c7323"
		},
		{
			"deviceTime": "2014-08-12T06:36:51",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "f6839a15-e74f-4714-8b19-9404ae4c7806"
		},
		{
			"deviceTime": "2014-08-12T06:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5045985-107d-4d8a-aa39-f398bd6d8fc7"
		},
		{
			"deviceTime": "2014-08-12T06:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "940b22fe-9bfd-4e9c-aec5-2910a6a05bf9"
		},
		{
			"deviceTime": "2014-08-12T06:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "097ece08-40fe-45c0-b2c8-ef3cc14fff41"
		},
		{
			"deviceTime": "2014-08-12T06:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ccd0c273-d11d-4cbb-85c2-93538f59a99f"
		},
		{
			"deviceTime": "2014-08-12T07:00:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0dcf4400-9df9-4de5-b88f-8b3326a63f44"
		},
		{
			"deviceTime": "2014-08-12T07:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a78c5315-02d3-4cc0-8254-9ace7f0aafcf"
		},
		{
			"deviceTime": "2014-08-12T07:10:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2496c1f-85e0-4c0e-b334-10ea7c422b75"
		},
		{
			"deviceTime": "2014-08-12T07:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b028574-8fb4-46d9-ab8d-445dee4cdcd2"
		},
		{
			"deviceTime": "2014-08-12T07:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "939f999f-c964-4aaf-9e03-2826bf094013"
		},
		{
			"deviceTime": "2014-08-12T07:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c73faa0-f8ab-41fe-89cc-9f1e2114febc"
		},
		{
			"deviceTime": "2014-08-12T07:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b2f3ecf-0299-48e3-bd55-b3348c3f95c5"
		},
		{
			"deviceTime": "2014-08-12T07:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "651b9b5c-6d58-40ce-85f7-ea0d813cd461"
		},
		{
			"deviceTime": "2014-08-12T07:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f303ba8-2b34-433a-aca1-0c0bc7873245"
		},
		{
			"deviceTime": "2014-08-12T07:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c7ecd94-4acd-4e33-b96b-e0e577f74255"
		},
		{
			"deviceTime": "2014-08-12T07:50:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b102a5ef-c921-4673-bca5-853685407ac1"
		},
		{
			"deviceTime": "2014-08-12T07:55:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac944915-1409-45ab-a77e-db73d1e60052"
		},
		{
			"deviceTime": "2014-08-12T08:00:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4109176-79d0-4dc4-8b9c-ccfbf9c90d9d"
		},
		{
			"deviceTime": "2014-08-12T08:05:22",
			"value": 231,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a5b8376-5fda-463f-b4ec-afb25a2d7875"
		},
		{
			"deviceTime": "2014-08-12T08:06:42",
			"value": 318,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5c030d31-a6c4-4cbc-9d3d-bf714efb9963"
		},
		{
			"deviceTime": "2014-08-12T08:06:42",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "627c739a-7d2f-4df7-9946-54a953ced886"
		},
		{
			"deviceTime": "2014-08-12T08:06:42",
			"id": "627c739a-7d2f-4df7-9946-54a953ced886",
			"source": "demo",
			"joinKey": "0c9d698b-8aaf-41aa-a24d-5893a8090aea",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 79
			}
		},
		{
			"deviceTime": "2014-08-12T08:06:42",
			"suspendedAt": "2014-08-12T08:17:57",
			"programmed": 6.1,
			"joinKey": "0c9d698b-8aaf-41aa-a24d-5893a8090aea",
			"value": 6.1,
			"source": "demo",
			"recommended": 5.3,
			"extendedDelivery": 6.1,
			"deviceId": "Demo - 123",
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "d359b0f9-531d-4c75-9403-2a820b90b5ad"
		},
		{
			"deviceTime": "2014-08-12T08:10:22",
			"value": 264,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "313305ac-dff3-478b-9e2a-f9234bb29c70"
		},
		{
			"deviceTime": "2014-08-12T08:15:22",
			"value": 299,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a0de5b0-1492-402d-a5ab-cc72911ca49a"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-12T08:17:57",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "fa4d8de5-c3e8-414c-bdf3-591d7c927dd7"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-12T08:24:12",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "a048dbd4-9ee7-44a4-aedb-90258923240b",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-12T08:17:57",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "fa4d8de5-c3e8-414c-bdf3-591d7c927dd7"
			}
		},
		{
			"deviceTime": "2014-08-12T08:45:22",
			"value": 299,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20fd87ba-11b4-44c1-89b6-e73764b9a82a"
		},
		{
			"deviceTime": "2014-08-12T08:50:22",
			"value": 285,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d6f3ae9-3bf6-4a7b-b043-c6722dfc9801"
		},
		{
			"deviceTime": "2014-08-12T08:55:22",
			"value": 281,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca4073bc-c13a-4179-82f2-8a5f0b817acf"
		},
		{
			"deviceTime": "2014-08-12T08:57:52",
			"value": 251,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3853ef41-25df-4ceb-8291-cf41a961326a"
		},
		{
			"deviceTime": "2014-08-12T08:57:52",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "b9442749-472a-484f-b78e-f676754baa40"
		},
		{
			"deviceTime": "2014-08-12T08:57:52",
			"id": "b9442749-472a-484f-b78e-f676754baa40",
			"source": "demo",
			"joinKey": "680678d5-a095-4566-ba6c-741cb5051cf3",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 48
			}
		},
		{
			"delivered": 0.8,
			"end": "2014-08-12T15:00:00",
			"start": "2014-08-12T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "f85fb680-7acd-47a1-b2c7-693ca0616070"
		},
		{
			"deviceTime": "2014-08-12T09:00:22",
			"value": 280,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3553fef-8160-4c65-a314-d98e409497ee"
		},
		{
			"deviceTime": "2014-08-12T09:05:22",
			"value": 275,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3cbf9f6a-a38e-410b-9a17-fbab2e03e6bf"
		},
		{
			"deviceTime": "2014-08-12T09:10:22",
			"value": 281,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61d586ce-73a5-4a78-ac7a-630249a11eb5"
		},
		{
			"deviceTime": "2014-08-12T09:15:22",
			"value": 289,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74d95360-18d8-45db-88b0-e18ad7a82480"
		},
		{
			"deviceTime": "2014-08-12T09:20:22",
			"value": 307,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0af7c033-3311-44f3-9943-285d9ca46382"
		},
		{
			"deviceTime": "2014-08-12T09:23:26",
			"value": 305,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "6c63c870-b522-45a1-8773-014856ab0419"
		},
		{
			"deviceTime": "2014-08-12T09:25:22",
			"value": 328,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2c26c67-1d72-4841-b03a-5b72ab735e51"
		},
		{
			"deviceTime": "2014-08-12T09:30:22",
			"value": 343,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e63134be-1436-43d0-bb07-a6d9e229dd0c"
		},
		{
			"deviceTime": "2014-08-12T09:35:22",
			"value": 348,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a22dafd0-a502-49b1-8cd3-316003e0a9f1"
		},
		{
			"deviceTime": "2014-08-12T09:40:22",
			"value": 346,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0522ecd0-6082-49f4-8b32-70933cf8cde5"
		},
		{
			"deviceTime": "2014-08-12T09:45:22",
			"value": 336,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae303be2-d388-4752-8fa2-c3d1fdc25c25"
		},
		{
			"deviceTime": "2014-08-12T09:50:22",
			"value": 315,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b36f7c3d-95f0-4d72-be65-34292299168c"
		},
		{
			"deviceTime": "2014-08-12T09:55:22",
			"value": 286,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d41fcce4-c00b-44c5-a997-99dad359fc39"
		},
		{
			"deviceTime": "2014-08-12T10:00:22",
			"value": 258,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2219c41-7850-432f-8ce0-e666bff3c395"
		},
		{
			"deviceTime": "2014-08-12T10:05:22",
			"value": 241,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6aead2d4-377d-4a04-a294-cb5110026879"
		},
		{
			"deviceTime": "2014-08-12T10:10:22",
			"value": 235,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e9e76af-9f19-4e2a-acba-2e34e4d2091a"
		},
		{
			"deviceTime": "2014-08-12T10:15:22",
			"value": 233,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1ec22f6-d41d-4636-8b48-e16400d2b161"
		},
		{
			"deviceTime": "2014-08-12T10:20:22",
			"value": 227,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f75f569-d555-45c8-ac15-46cca6449190"
		},
		{
			"deviceTime": "2014-08-12T10:25:22",
			"value": 221,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81abce7e-1c84-4f60-88c5-45c3b35ee68a"
		},
		{
			"deviceTime": "2014-08-12T10:30:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8edce381-7342-493b-8541-315b4d206a6b"
		},
		{
			"deviceTime": "2014-08-12T10:35:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1feb7db-487f-4781-99fb-2ce0242a6769"
		},
		{
			"end": "2014-08-12T15:37:01",
			"start": "2014-08-12T10:37:01",
			"percent": 1.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "f0cfa8b6-b6fc-4fce-a4c5-08eac48e9b23"
		},
		{
			"deviceTime": "2014-08-12T10:40:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ac6f675-a421-4577-a5a3-a77551e8c59a"
		},
		{
			"deviceTime": "2014-08-12T11:05:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69d2d824-a633-4e7a-874e-e7604ee536d7"
		},
		{
			"deviceTime": "2014-08-12T11:10:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "055a5ef2-3104-4daa-9ab2-b3557879a8ae"
		},
		{
			"deviceTime": "2014-08-12T11:15:22",
			"value": 226,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33007614-a3ad-4879-a347-60d06ab6966e"
		},
		{
			"deviceTime": "2014-08-12T11:20:22",
			"value": 233,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48d46d8a-27dc-4e1b-a939-8624c7bbfdc2"
		},
		{
			"deviceTime": "2014-08-12T11:25:22",
			"value": 244,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a99d4460-5420-4ea6-ba05-d80a259a2d98"
		},
		{
			"deviceTime": "2014-08-12T11:30:22",
			"value": 253,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d77e9c1c-6e80-4cfa-bcd8-8ff2951c9209"
		},
		{
			"deviceTime": "2014-08-12T11:35:22",
			"value": 259,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ce83cb2-d432-4bdc-b7e3-92b6b6e60059"
		},
		{
			"deviceTime": "2014-08-12T11:40:22",
			"value": 265,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af9b71a3-9b7b-41bd-b985-acce9c4c9f02"
		},
		{
			"deviceTime": "2014-08-12T11:45:22",
			"value": 267,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "320fc98f-72f1-4a12-acf7-4fe32b1d436a"
		},
		{
			"deviceTime": "2014-08-12T11:50:22",
			"value": 273,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b640fe87-f6dd-4d05-84a0-41b52a269739"
		},
		{
			"deviceTime": "2014-08-12T11:55:22",
			"value": 278,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e4b2d9a-ba74-40d1-8e73-369e3e4bf569"
		},
		{
			"deviceTime": "2014-08-12T12:00:22",
			"value": 270,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03ea931a-fd21-4155-94ce-8409b1df4161"
		},
		{
			"deviceTime": "2014-08-12T12:05:22",
			"value": 270,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d7c2929-f36c-4340-8f21-8c0b265fb3f7"
		},
		{
			"deviceTime": "2014-08-12T12:10:22",
			"value": 262,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eec94c89-b3de-4b0d-8254-f518704e88c4"
		},
		{
			"deviceTime": "2014-08-12T12:15:22",
			"value": 250,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ee4079e-16e2-440e-b345-8534758eef43"
		},
		{
			"messageText": "Pig flank mollit cupidatat beef ribs pork est consequat leberkas bacon ullamco. Pariatur incididunt meatloaf pastrami aute turkey. Ullamco incididunt pork chop beef ribs tenderloin labore strip steak esse occaecat duis cow mollit adipisicing andouille.",
			"parentMessage": "",
			"utcTime": "2014-08-12T12:16:54Z",
			"type": "message",
			"id": "f4c19856-072c-40a7-aba2-3119be7eaa42"
		},
		{
			"deviceTime": "2014-08-12T12:20:22",
			"value": 240,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29b5298c-100a-40db-a8e0-e6f15a0c23e1"
		},
		{
			"deviceTime": "2014-08-12T12:25:22",
			"value": 234,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b786750e-2761-4165-89b0-b51b3a55af7f"
		},
		{
			"deviceTime": "2014-08-12T12:30:22",
			"value": 229,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b195946-956b-4439-9c75-830df73c91c3"
		},
		{
			"deviceTime": "2014-08-12T12:35:22",
			"value": 223,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "539e5832-38b4-4d91-9d30-7dbd59ad6b4a"
		},
		{
			"deviceTime": "2014-08-12T12:37:05",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ace3f6fb-1d82-4f97-82e7-726d30bd4edc"
		},
		{
			"deviceTime": "2014-08-12T12:40:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afeacb44-6e79-4b09-825c-943d58d5ee7a"
		},
		{
			"deviceTime": "2014-08-12T12:45:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebe65c65-6f06-4a06-a69b-4c7973a06e9b"
		},
		{
			"deviceTime": "2014-08-12T12:50:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65400964-28f6-4f8a-aaaa-2c6cfe82563d"
		},
		{
			"deviceTime": "2014-08-12T12:55:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d110253-a007-4c5d-a221-cd1362e62ee4"
		},
		{
			"deviceTime": "2014-08-12T13:00:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d578cbb-115e-4ea7-b278-170c8edee15f"
		},
		{
			"deviceTime": "2014-08-12T13:05:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74ab8990-664f-41cd-a304-8db5b6401ed3"
		},
		{
			"deviceTime": "2014-08-12T13:10:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ca685db-76c6-4386-b087-4ad839d915d1"
		},
		{
			"deviceTime": "2014-08-12T13:15:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76f202ff-8726-4b32-8163-90c859db2aca"
		},
		{
			"deviceTime": "2014-08-12T13:20:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52aa33fc-7b29-4d22-9b12-191195d21785"
		},
		{
			"deviceTime": "2014-08-12T13:25:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f53c6e7f-c094-44bf-a848-3e4d4694da74"
		},
		{
			"deviceTime": "2014-08-12T13:30:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7fe473c-96b7-41c5-ace9-697fe0a8f1ec"
		},
		{
			"deviceTime": "2014-08-12T13:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "619caeed-51ac-48b4-85cd-32915e04aa69"
		},
		{
			"deviceTime": "2014-08-12T13:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13c5246d-2392-4cf6-a507-744ae53953ef"
		},
		{
			"deviceTime": "2014-08-12T13:45:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a86d7ce-a267-4a5f-bb3e-41e30201a0ba"
		},
		{
			"deviceTime": "2014-08-12T13:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe1628b6-027f-40bf-bc5e-a97ae0a3debc"
		},
		{
			"deviceTime": "2014-08-12T13:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc58fb8a-fc55-4eb5-90b0-d66411aa45d4"
		},
		{
			"deviceTime": "2014-08-12T14:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e51a639-233e-4cf2-a5af-f08db32942ed"
		},
		{
			"deviceTime": "2014-08-12T14:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54b39c70-1812-4b5f-bdd3-68433f1b3bca"
		},
		{
			"deviceTime": "2014-08-12T14:10:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d415804a-1788-42a1-a99c-b5830adbe7a8"
		},
		{
			"deviceTime": "2014-08-12T14:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51cd71db-2f19-438e-b37f-3882c11b3afd"
		},
		{
			"deviceTime": "2014-08-12T14:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b537889c-9767-4892-a501-206027c6b3c0"
		},
		{
			"deviceTime": "2014-08-12T14:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39694ed7-1891-4e03-a76b-aa18683a4df9"
		},
		{
			"deviceTime": "2014-08-12T14:30:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46a4917c-224a-410b-bad6-01dfdb8fde44"
		},
		{
			"deviceTime": "2014-08-12T14:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54c8c9fe-1e23-4b7e-ba89-94468e9a7cfc"
		},
		{
			"deviceTime": "2014-08-12T14:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a17de368-6e42-4c59-96ad-416d53ba0173"
		},
		{
			"deviceTime": "2014-08-12T14:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e7c172b-cad0-4268-a7da-5249492e1159"
		},
		{
			"deviceTime": "2014-08-12T14:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d95460b-9e7e-47fa-908b-f3d5e2852428"
		},
		{
			"deviceTime": "2014-08-12T14:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a31ddaa1-52c8-44e5-a727-e21d9dce9647"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-12T20:00:00",
			"start": "2014-08-12T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "1961ad65-82be-4b32-bd0d-d22877bcc340"
		},
		{
			"deviceTime": "2014-08-12T15:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "298b7ae3-0668-4d4f-ba94-ddd1d812e243"
		},
		{
			"deviceTime": "2014-08-12T15:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1ae956d-b6bd-4e01-bb70-1a068043f0de"
		},
		{
			"deviceTime": "2014-08-12T15:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea5280d0-ef07-471d-ab64-7181012d867a"
		},
		{
			"deviceTime": "2014-08-12T15:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97074d5a-62d7-4d19-b88e-816cd322f38c"
		},
		{
			"deviceTime": "2014-08-12T15:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d48f6c33-1d38-49a1-8ccf-962608dd0797"
		},
		{
			"deviceTime": "2014-08-12T15:25:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8c2129b-10ca-4b07-9c70-1253826998c3"
		},
		{
			"deviceTime": "2014-08-12T15:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48089215-52d4-485a-aa4a-d7b7e9cc2bb2"
		},
		{
			"deviceTime": "2014-08-12T15:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29e31c28-f674-4b8b-a95a-9136b183fe53"
		},
		{
			"deviceTime": "2014-08-12T15:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d060e43d-cdaf-4408-a631-7ff8a657ec00"
		},
		{
			"deviceTime": "2014-08-12T15:45:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfe234b4-4339-4e8d-933b-15c61a66c6c8"
		},
		{
			"deviceTime": "2014-08-12T15:50:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbe90575-4e9f-4f4e-9d8a-9fcb73a7a518"
		},
		{
			"deviceTime": "2014-08-12T15:55:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c983f78-91c2-4ac6-91b8-4d487cf3dbba"
		},
		{
			"deviceTime": "2014-08-12T16:00:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "572f1d86-d656-49f1-b8e8-bbae74dbbc92"
		},
		{
			"deviceTime": "2014-08-12T16:05:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aed1f7c9-f389-4cab-9329-fc633d6767ff"
		},
		{
			"deviceTime": "2014-08-12T16:10:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db3d8235-852a-4753-8c78-eae1b983c411"
		},
		{
			"deviceTime": "2014-08-12T16:15:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "948a358c-9161-4a7a-be76-ee320cc3f74a"
		},
		{
			"deviceTime": "2014-08-12T16:20:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce2056d7-2a38-482b-99d4-0e7ab7620d9a"
		},
		{
			"deviceTime": "2014-08-12T16:25:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc62a316-67ad-4ddc-a15b-d9e533b1eb1e"
		},
		{
			"deviceTime": "2014-08-12T16:28:52",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4aaacc0f-de7d-4f4d-a7eb-afbadf9d4963"
		},
		{
			"deviceTime": "2014-08-12T16:28:52",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "c036c6b0-aa7c-46ae-aade-f258003c80a7"
		},
		{
			"deviceTime": "2014-08-12T16:28:52",
			"id": "c036c6b0-aa7c-46ae-aade-f258003c80a7",
			"source": "demo",
			"joinKey": "fcee434e-b16e-4765-8bd3-4a0fd9260f37",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 45
			}
		},
		{
			"deviceTime": "2014-08-12T16:28:52",
			"suspendedAt": "2014-08-12T16:43:52",
			"programmed": 3.5,
			"joinKey": "fcee434e-b16e-4765-8bd3-4a0fd9260f37",
			"value": 3.5,
			"source": "demo",
			"recommended": 3,
			"extendedDelivery": 3.1,
			"initialDelivery": 0.4,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "f20e59f7-db02-457d-9bdc-f26393749756",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-12T16:30:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c8b8f6e-c703-4b16-8de7-c271c093ae18"
		},
		{
			"deviceTime": "2014-08-12T16:35:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3abadda-9a97-46bd-bc3e-c728706e68a8"
		},
		{
			"deviceTime": "2014-08-12T16:40:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2b7decf-0ea3-4778-ad60-6a4f4ed0fb86"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-12T16:43:52",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "01ce2931-92db-4a83-b7e0-d099801a7d46"
		},
		{
			"deviceTime": "2014-08-12T16:45:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a41d734c-0444-4864-bf25-e72f92f017ca"
		},
		{
			"deviceTime": "2014-08-12T16:50:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ceb87029-32d7-40f2-8b27-7b4eabdcb8ab"
		},
		{
			"deviceTime": "2014-08-12T16:55:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b758a84-f083-4a77-bd78-5e4ea9b537ed"
		},
		{
			"deviceTime": "2014-08-12T17:00:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51f32784-ea8d-41b0-944c-e361a15d6e5e"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-12T17:03:52",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "eebd1f80-a63c-4584-84a0-5d78aa56c7ad",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-12T16:43:52",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "01ce2931-92db-4a83-b7e0-d099801a7d46"
			}
		},
		{
			"deviceTime": "2014-08-12T17:05:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1d4fd92-52b3-4fca-9de8-3c13af9c888b"
		},
		{
			"deviceTime": "2014-08-12T17:10:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "048de492-64bc-46ee-8eba-577096a26197"
		},
		{
			"deviceTime": "2014-08-12T17:15:01",
			"value": 1.1,
			"source": "demo",
			"recommended": 2.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "8dab45a8-81ba-479b-968c-a4272ee6c45e"
		},
		{
			"deviceTime": "2014-08-12T17:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a81f01bc-56a4-4978-9b9a-72ba550cc07b"
		},
		{
			"deviceTime": "2014-08-12T17:20:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2dcbdc91-2c16-40ff-9207-d40f36f3df85"
		},
		{
			"deviceTime": "2014-08-12T17:25:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50432a62-bff5-4153-88be-2bac062265a8"
		},
		{
			"deviceTime": "2014-08-12T17:30:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3922b22-e284-489d-b1c0-c3e9de262cd9"
		},
		{
			"deviceTime": "2014-08-12T17:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8251eaa-dc7d-477f-943a-0e5a0b140534"
		},
		{
			"deviceTime": "2014-08-12T17:55:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "352e4e1b-5d70-4753-afaa-d64cd51783fc"
		},
		{
			"deviceTime": "2014-08-12T18:00:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "538c4a24-bcd1-4fd1-ad38-79ee4e285bc0"
		},
		{
			"deviceTime": "2014-08-12T18:05:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c9b8d18-1cc6-4d36-a13d-1bfa8c499e96"
		},
		{
			"deviceTime": "2014-08-12T18:10:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d02c903f-629a-4973-8ccf-07443809bce1"
		},
		{
			"deviceTime": "2014-08-12T18:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c3f0cf7-1238-4f9e-97d3-ec3daa7da049"
		},
		{
			"deviceTime": "2014-08-12T18:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcbe2b6a-1e71-4397-bb9d-73792b059d7c"
		},
		{
			"deviceTime": "2014-08-12T18:25:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a809341f-10e3-4cf2-aaba-8e91f9277074"
		},
		{
			"deviceTime": "2014-08-12T18:30:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09aee2a9-6cf9-45e7-a6f8-18f06e2114f2"
		},
		{
			"deviceTime": "2014-08-12T18:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1713574-717b-4a9f-8204-ab4b01511f9a"
		},
		{
			"deviceTime": "2014-08-12T18:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65358fbe-3a7c-49c9-bc25-19b79c3aa4fe"
		},
		{
			"deviceTime": "2014-08-12T18:45:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e048873-190d-434c-9f38-af5d9bbe9052"
		},
		{
			"deviceTime": "2014-08-12T18:50:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d7bc1be-8716-4f23-9b60-3691efe7f0d5"
		},
		{
			"deviceTime": "2014-08-12T18:55:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b1022b9-107b-40a3-b098-806aa1bfe4ed"
		},
		{
			"deviceTime": "2014-08-12T19:00:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df350e51-5f84-49ff-af3d-11b70f15ad54"
		},
		{
			"deviceTime": "2014-08-12T19:05:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a03c993-1d3d-484a-8c8b-4904025c9680"
		},
		{
			"deviceTime": "2014-08-12T19:10:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e51adad-f62a-4a3d-93d2-8d6eee5a9fff"
		},
		{
			"deviceTime": "2014-08-12T19:15:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4186d5e-9f48-4a63-a1fe-71c086073e0d"
		},
		{
			"deviceTime": "2014-08-12T19:20:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e2c5482-0ba2-4161-bd94-02ddda3dd32e"
		},
		{
			"deviceTime": "2014-08-12T19:25:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e8e24df-f170-4830-9a14-0a7c46f20b9c"
		},
		{
			"deviceTime": "2014-08-12T19:30:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6e669f2-4e23-4a42-8258-81dde079a172"
		},
		{
			"deviceTime": "2014-08-12T19:35:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6f0c828-4eb9-43d8-b8b4-b35092b8997b"
		},
		{
			"deviceTime": "2014-08-12T19:40:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb9948b8-8548-4c63-bfca-2051b1d9cef2"
		},
		{
			"deviceTime": "2014-08-12T19:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f44b395d-68a2-4d33-845d-6a96595d1f3d"
		},
		{
			"deviceTime": "2014-08-12T19:50:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99473d5a-9256-4cb3-b4fb-e16949513b28"
		},
		{
			"deviceTime": "2014-08-12T19:55:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a75546d-13b6-4f56-afe8-294ee84448de"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-13T00:00:00",
			"start": "2014-08-12T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "d5756ddb-c1b2-4297-84b4-2c4d747bb54f"
		},
		{
			"deviceTime": "2014-08-12T20:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4615443-135a-4044-83f8-14ebabe398bd"
		},
		{
			"deviceTime": "2014-08-12T20:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1041699d-7112-4590-97ba-edde0176801a"
		},
		{
			"deviceTime": "2014-08-12T20:06:29",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "a9cec58c-6722-465b-8966-9584ae7d8757"
		},
		{
			"deviceTime": "2014-08-12T20:06:29",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "65b875d6-f17d-4160-9962-e2cd154f9ec3"
		},
		{
			"deviceTime": "2014-08-12T20:06:29",
			"id": "65b875d6-f17d-4160-9962-e2cd154f9ec3",
			"source": "demo",
			"joinKey": "918d1b30-0427-4e99-b203-d10d8a0e369d",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 87
			}
		},
		{
			"deviceTime": "2014-08-12T20:06:29",
			"programmed": 5.8,
			"joinKey": "918d1b30-0427-4e99-b203-d10d8a0e369d",
			"value": 5.8,
			"source": "demo",
			"recommended": 5.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "bb8bd5c0-03ba-4bad-aae5-a4390ada13bf"
		},
		{
			"deviceTime": "2014-08-12T20:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e2e6372-0317-4d95-9f78-725e57a7e8f8"
		},
		{
			"deviceTime": "2014-08-12T20:15:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64d26922-6e78-4430-9fb1-ca08597e37d7"
		},
		{
			"deviceTime": "2014-08-12T20:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "733f3a9a-d045-49dc-aefe-c348c956aca9"
		},
		{
			"deviceTime": "2014-08-12T20:25:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ebddb8d-edb9-4802-8fbc-df21c9a7bfbc"
		},
		{
			"deviceTime": "2014-08-12T20:30:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d573896-9217-4423-b40a-c54c5e2ec680"
		},
		{
			"deviceTime": "2014-08-12T20:35:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1d18053-9616-4337-bbfd-6a80f65a095f"
		},
		{
			"deviceTime": "2014-08-12T20:40:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61337fb2-6258-465b-99e3-1d22f76a6f7c"
		},
		{
			"deviceTime": "2014-08-12T20:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0420c73-49bb-4a41-bd32-32c49a9a9ece"
		},
		{
			"deviceTime": "2014-08-12T20:50:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1235b8d7-924d-4e6d-9d27-44a2b5dbca58"
		},
		{
			"deviceTime": "2014-08-12T20:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14ef7e66-ca30-435e-b62a-c1932f983e15"
		},
		{
			"deviceTime": "2014-08-12T21:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5bed5d8-ee01-472c-b3d8-91474c62f4ca"
		},
		{
			"deviceTime": "2014-08-12T21:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69365a6f-e851-427f-8305-6f24b4ed8f30"
		},
		{
			"deviceTime": "2014-08-12T21:10:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5c3a280-b663-4170-837d-1379a4a27897"
		},
		{
			"deviceTime": "2014-08-12T21:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67ea3f7f-b3ba-4b98-9c08-ab33918c9636"
		},
		{
			"deviceTime": "2014-08-12T21:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf83259f-6bdd-42dc-8cf9-3ff48260d61e"
		},
		{
			"deviceTime": "2014-08-12T21:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1630ff17-290a-471b-a277-b80552baf2d6"
		},
		{
			"deviceTime": "2014-08-12T21:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c264a51-a349-4b9b-bd4b-f0ce242b76f1"
		},
		{
			"deviceTime": "2014-08-12T21:35:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e01e7491-19ec-4367-8609-d2ad6c3ec093"
		},
		{
			"deviceTime": "2014-08-12T21:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49e4a752-25ac-4bd4-96c6-6eb8528a6210"
		},
		{
			"deviceTime": "2014-08-12T21:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff56bf3d-0df1-4cc4-9114-eca1aaf9c631"
		},
		{
			"deviceTime": "2014-08-12T21:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a0c7d5c-ad8d-4891-add3-0a564a0bf47f"
		},
		{
			"deviceTime": "2014-08-12T21:55:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb716db2-3b06-4ef3-b648-d389139155c1"
		},
		{
			"deviceTime": "2014-08-12T22:00:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac408eb3-c3c5-4c56-ae87-25f395a44d1a"
		},
		{
			"deviceTime": "2014-08-12T22:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "198edd8e-cc7b-4098-bb44-edb24279fbe0"
		},
		{
			"end": "2014-08-13T00:38:01",
			"start": "2014-08-12T22:08:01",
			"percent": 1.05,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 9000000,
			"type": "basal-rate-segment",
			"id": "923fb235-5956-4c56-a6b8-4c948d71c29d"
		},
		{
			"deviceTime": "2014-08-12T22:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52b76e98-97ca-4a01-b1f8-6fedad44a99b"
		},
		{
			"deviceTime": "2014-08-12T22:15:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57970e72-777f-4bf6-8ddb-977fad352c02"
		},
		{
			"deviceTime": "2014-08-12T22:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e533c1b0-18d5-4588-b5f5-4589e1a919f5"
		},
		{
			"deviceTime": "2014-08-12T22:25:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cca3598a-7082-4aa5-a6ab-b9c23eb2b74b"
		},
		{
			"deviceTime": "2014-08-12T22:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63710340-bc5e-4c4a-a2f8-8799832ec9fe"
		},
		{
			"deviceTime": "2014-08-12T22:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c47d31e5-c9a9-4627-b4b8-8b3653a8493f"
		},
		{
			"deviceTime": "2014-08-12T22:40:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37a018f5-6cd1-4931-927c-ecda601b9668"
		},
		{
			"deviceTime": "2014-08-12T22:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "269aa45f-e815-4322-a425-6e845782b48e"
		},
		{
			"deviceTime": "2014-08-12T22:50:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9d4df9f-83b5-4a8e-94f5-f65706eb9fa1"
		},
		{
			"deviceTime": "2014-08-12T22:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5b93717-8510-45fc-a115-ef2ce3ed524a"
		},
		{
			"deviceTime": "2014-08-12T23:00:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19b78f32-e81c-40c5-9a02-550bb01804a2"
		},
		{
			"deviceTime": "2014-08-12T23:05:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c18c25c4-d9b8-46bb-8f64-6db134358b84"
		},
		{
			"deviceTime": "2014-08-12T23:10:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cae96c3-f35b-45f9-a7a0-4395c9cc96c7"
		},
		{
			"deviceTime": "2014-08-12T23:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "690c4a7d-750f-4190-abcb-cbc94fd05d59"
		},
		{
			"deviceTime": "2014-08-12T23:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5862cba6-025c-40cf-b65e-5dda0a2a3931"
		},
		{
			"deviceTime": "2014-08-12T23:25:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db527277-9c72-458a-8534-a8e2ffb0a1bc"
		},
		{
			"deviceTime": "2014-08-12T23:30:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5955c427-691a-45a1-a495-027b25874516"
		},
		{
			"deviceTime": "2014-08-12T23:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "616d047f-e369-4e9d-9a23-0dec039f96ac"
		},
		{
			"deviceTime": "2014-08-12T23:40:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0be17ad0-52d6-4b93-810e-1d2b01ebc036"
		},
		{
			"deviceTime": "2014-08-12T23:45:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f3fbb2e-87c8-40b0-81af-590950ab1587"
		},
		{
			"deviceTime": "2014-08-12T23:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6be29e94-c5dc-4fc7-abea-c1ed110087b4"
		},
		{
			"deviceTime": "2014-08-12T23:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2daa99f-e1f3-41b3-8a70-b9c7bea4fd01"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-13T02:00:00",
			"start": "2014-08-13T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "659dc745-6ed2-4efd-a39b-c538c62c29a2"
		},
		{
			"deviceTime": "2014-08-13T00:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcdc50ef-9492-4b56-83df-b7fe2755b9e6"
		},
		{
			"deviceTime": "2014-08-13T00:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5a1e89c-de71-4b3a-b465-95e78fd6365b"
		},
		{
			"deviceTime": "2014-08-13T00:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21fd3049-afab-4851-bae3-9df224876c7c"
		},
		{
			"deviceTime": "2014-08-13T00:15:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66925d1f-182f-4654-8c8a-9829b8979ca5"
		},
		{
			"messageText": "Ham jowl cow bresaola commodo meatball. Enim minim qui, ball tip turkey chuck quis sint jerky incididunt ham hock et commodo.",
			"parentMessage": "",
			"utcTime": "2014-08-13T00:19:28Z",
			"type": "message",
			"id": "89992853-ff57-4e75-8d31-82e6c1acc9ff"
		},
		{
			"deviceTime": "2014-08-13T00:20:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8964c29-dcfc-48a2-8f6e-401fddccff61"
		},
		{
			"deviceTime": "2014-08-13T00:25:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f616af1-3446-4335-bde8-a540f5cd065c"
		},
		{
			"deviceTime": "2014-08-13T00:30:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2075b8d4-dce6-485f-8db9-924506e9a3e8"
		},
		{
			"deviceTime": "2014-08-13T00:35:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73f3de32-3e7a-4e03-880d-e81d869686b5"
		},
		{
			"deviceTime": "2014-08-13T00:40:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e509924f-9b8e-4791-b57f-7a96cdc5aaf0"
		},
		{
			"deviceTime": "2014-08-13T00:45:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "752d0cea-dc38-486c-a574-01c28608a436"
		},
		{
			"deviceTime": "2014-08-13T00:50:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2b48528-9902-4c61-962a-0b0dc79d4ce2"
		},
		{
			"deviceTime": "2014-08-13T00:55:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45317102-f7c2-4b23-9526-6b4a467ff083"
		},
		{
			"deviceTime": "2014-08-13T01:00:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4db3c9e4-f524-41cc-96dd-88af3e89b92b"
		},
		{
			"deviceTime": "2014-08-13T01:05:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17e7382b-07e6-4d27-89b5-ece75f8df89c"
		},
		{
			"deviceTime": "2014-08-13T01:10:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c009a6b2-613f-4999-bf82-adb984dd5881"
		},
		{
			"deviceTime": "2014-08-13T01:15:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "390a5295-1241-4313-b7f3-8392893bdfbb"
		},
		{
			"deviceTime": "2014-08-13T01:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0fdcd76-62ec-45ee-b88d-338d908bc847"
		},
		{
			"deviceTime": "2014-08-13T01:25:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8b6f8fe-f6c9-420c-98b9-2ef27e8a54af"
		},
		{
			"deviceTime": "2014-08-13T01:30:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7f0f887-ddd9-4326-baf8-fdd950576dbb"
		},
		{
			"deviceTime": "2014-08-13T01:35:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4622231-0f36-436a-9793-f36a9656f904"
		},
		{
			"deviceTime": "2014-08-13T01:40:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac9c1f74-0076-4cb8-8409-0308804f4ee3"
		},
		{
			"deviceTime": "2014-08-13T01:45:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebb6bd19-39fb-4191-98e7-003ccc56d46f"
		},
		{
			"deviceTime": "2014-08-13T01:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73a1cefa-ca33-44a3-98ce-786c8d859381"
		},
		{
			"deviceTime": "2014-08-13T01:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0135230d-a277-4150-acee-470010831d03"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-13T04:00:00",
			"start": "2014-08-13T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "b220677d-269a-45bc-ad70-1fc777826d1b"
		},
		{
			"deviceTime": "2014-08-13T02:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5331e4ed-33fd-4b55-86ff-9be8d21130cd"
		},
		{
			"deviceTime": "2014-08-13T02:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9f7590a-0541-41ee-807e-a8ab8bd3cc57"
		},
		{
			"deviceTime": "2014-08-13T02:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc4ea342-dbfc-4d10-b573-a19a4a88cdd8"
		},
		{
			"deviceTime": "2014-08-13T02:15:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6e10d8e-b29c-418f-a14d-a3ee7d8a86cd"
		},
		{
			"deviceTime": "2014-08-13T02:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6201ba16-a8c0-4dfa-aa46-1ae0d64c674c"
		},
		{
			"deviceTime": "2014-08-13T02:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23c97c49-3c5b-41ef-80e3-8c8d8b6704c2"
		},
		{
			"deviceTime": "2014-08-13T02:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b1dba4b-44a1-4aad-9935-20b82739b5af"
		},
		{
			"deviceTime": "2014-08-13T02:35:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1891edb4-e034-4b30-ae1e-2c76c24b44a3"
		},
		{
			"deviceTime": "2014-08-13T02:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60fbe196-1b19-4cd3-805d-251010f08b64"
		},
		{
			"deviceTime": "2014-08-13T02:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f1d74fd-b6b4-47e2-9a74-096f7aea3a9a"
		},
		{
			"deviceTime": "2014-08-13T02:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35e13841-9ea0-4f3f-b271-66733aa941d8"
		},
		{
			"deviceTime": "2014-08-13T02:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a548be3-5b77-4f84-9190-e6a6b27acd3d"
		},
		{
			"deviceTime": "2014-08-13T03:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a212a9e-afef-495e-84c0-56c5a88acf6f"
		},
		{
			"deviceTime": "2014-08-13T03:05:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b17b7ab-32e3-406e-a709-16c4dfd86601"
		},
		{
			"deviceTime": "2014-08-13T03:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c6173aa-4ca1-4418-adc3-2d266499a2d3"
		},
		{
			"deviceTime": "2014-08-13T03:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ef091c7-b2ef-4481-b48b-10c3a637b0e9"
		},
		{
			"deviceTime": "2014-08-13T03:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "882ae271-8cd0-40b5-8390-74347753c877"
		},
		{
			"deviceTime": "2014-08-13T03:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e018c85-8a19-4a51-ba24-35c2f4c6b679"
		},
		{
			"deviceTime": "2014-08-13T03:30:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1683bad-3c23-4cc8-a5fd-365709b69b9c"
		},
		{
			"deviceTime": "2014-08-13T03:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2732e20-75c4-441a-a81a-187e75c7079e"
		},
		{
			"deviceTime": "2014-08-13T03:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf9420dd-37f8-4aa1-8067-6676ccafcae6"
		},
		{
			"deviceTime": "2014-08-13T03:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f20fddae-ba83-44e5-a35b-24516186e6b6"
		},
		{
			"deviceTime": "2014-08-13T03:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "533113cc-3b16-4746-af17-4d40e9bf6825"
		},
		{
			"deviceTime": "2014-08-13T03:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4910433-977d-4628-aa5e-40f92b81c0f7"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-13T05:00:00",
			"start": "2014-08-13T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "9ae76225-a2f6-439e-8537-a79b984b54ea"
		},
		{
			"deviceTime": "2014-08-13T04:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "050effd2-2363-4751-af64-b58f500cae7c"
		},
		{
			"deviceTime": "2014-08-13T04:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a0b9747-c402-437e-963f-53ccb5526c3c"
		},
		{
			"deviceTime": "2014-08-13T04:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5811e173-a490-408a-a8c0-af6ea881308f"
		},
		{
			"deviceTime": "2014-08-13T04:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddb1fcc2-4a93-4135-b680-1c647ca156e8"
		},
		{
			"deviceTime": "2014-08-13T04:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5dcc9054-e5e9-4a7e-84eb-2be9c201a870"
		},
		{
			"deviceTime": "2014-08-13T04:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebef183c-c7e3-4b4e-aac7-7f3a15f004e5"
		},
		{
			"deviceTime": "2014-08-13T04:30:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2664647-c213-4890-96c5-d77ec3da9d59"
		},
		{
			"deviceTime": "2014-08-13T04:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "556bc09d-c4f7-41a1-89fc-4a086a83460a"
		},
		{
			"deviceTime": "2014-08-13T04:40:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5b51a8a-92a0-409c-987a-4980adc771a5"
		},
		{
			"deviceTime": "2014-08-13T04:45:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8238e118-368a-4613-b741-cfe7f1410d7e"
		},
		{
			"deviceTime": "2014-08-13T04:50:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16a5ec46-fece-4080-bc02-8f25a52b99b6"
		},
		{
			"deviceTime": "2014-08-13T04:55:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bc7c998-733e-4772-ac42-4d2014b0f845"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-13T06:00:00",
			"start": "2014-08-13T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "98dbbfb4-ca9e-4e5f-9807-bec7cb3aadff"
		},
		{
			"deviceTime": "2014-08-13T05:00:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c5e06ed-0a14-49be-8a33-65fecb53da61"
		},
		{
			"deviceTime": "2014-08-13T05:05:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04c0083a-2f17-461d-8adc-31031e754f2b"
		},
		{
			"deviceTime": "2014-08-13T05:10:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e620f28-c45c-41e8-94b2-910a4a0ed0cd"
		},
		{
			"deviceTime": "2014-08-13T05:13:01",
			"value": 2.5,
			"source": "demo",
			"recommended": 3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c50c8b78-6ccb-44c9-beb0-1ae432f80ecd"
		},
		{
			"deviceTime": "2014-08-13T05:15:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56915e5d-169f-4c22-9325-d35cca5241a8"
		},
		{
			"deviceTime": "2014-08-13T05:20:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7267974e-3da8-4e33-8ec4-dcde6807d7c5"
		},
		{
			"deviceTime": "2014-08-13T05:25:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "524412d0-7ba0-4b05-b05b-154ece204f10"
		},
		{
			"deviceTime": "2014-08-13T05:30:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "468c5a0f-4f30-4492-9081-923e3107a453"
		},
		{
			"deviceTime": "2014-08-13T05:35:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30b6f1f3-1dca-434d-b27d-54317c87c34e"
		},
		{
			"deviceTime": "2014-08-13T05:40:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c7e489b-119e-4b5f-a4f9-34f9a10ef545"
		},
		{
			"deviceTime": "2014-08-13T05:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d57ac242-16bd-448d-9e06-384a1df424f1"
		},
		{
			"deviceTime": "2014-08-13T05:50:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87612266-57da-4424-ab70-c1968c0288fb"
		},
		{
			"deviceTime": "2014-08-13T05:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f119d029-157f-4719-80aa-a9d04b8de617"
		},
		{
			"delivered": 1,
			"end": "2014-08-13T09:00:00",
			"start": "2014-08-13T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "df0b8de2-fd1a-4146-a664-62a8c26960e2"
		},
		{
			"deviceTime": "2014-08-13T06:00:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1bfcd5b6-63e6-4254-a155-ed764dacc7cb"
		},
		{
			"deviceTime": "2014-08-13T06:03:27",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "2a25949a-d209-4d5b-bed1-911b4f19006f"
		},
		{
			"deviceTime": "2014-08-13T06:05:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b187654d-eaa1-4a63-9bbb-8ee8fbf5eb7f"
		},
		{
			"deviceTime": "2014-08-13T06:10:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7062542b-2b42-4dea-8c54-ab3fe5cc84a7"
		},
		{
			"deviceTime": "2014-08-13T06:15:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16ab85f8-9f7b-468b-bb46-6aa7605e484f"
		},
		{
			"deviceTime": "2014-08-13T06:20:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90f3712d-ac23-40fd-aecc-7832a1d1f626"
		},
		{
			"deviceTime": "2014-08-13T06:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d07b0621-b1eb-420d-8bad-051a2dd66493"
		},
		{
			"deviceTime": "2014-08-13T06:30:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9f69c40-f6b2-4111-a61f-83fcba286773"
		},
		{
			"deviceTime": "2014-08-13T06:35:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7675f6ce-eaa6-4e97-9860-39586264beb3"
		},
		{
			"deviceTime": "2014-08-13T06:40:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c383b72-9632-47ba-80a9-2d7d8b2683f3"
		},
		{
			"deviceTime": "2014-08-13T06:45:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fac4ca9-1503-48d4-be3e-97bbb807ced6"
		},
		{
			"deviceTime": "2014-08-13T06:50:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f9d7635-3faf-4835-871f-4d5a25214814"
		},
		{
			"deviceTime": "2014-08-13T06:55:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a35bddb0-d973-49e3-8a9a-a5135023245c"
		},
		{
			"deviceTime": "2014-08-13T07:00:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3f305ca-bd58-4d70-8288-338c936da994"
		},
		{
			"deviceTime": "2014-08-13T07:05:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30afcf07-9fef-4157-af36-d595eee5e561"
		},
		{
			"deviceTime": "2014-08-13T07:10:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcd5ccfb-27b7-43a3-bc95-0e80ab612162"
		},
		{
			"deviceTime": "2014-08-13T07:15:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f305cbb3-991b-489f-beb9-b58d30bd5fc1"
		},
		{
			"deviceTime": "2014-08-13T07:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65f79aaf-9a00-4e77-9212-e305d64ea0b3"
		},
		{
			"deviceTime": "2014-08-13T07:25:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "054850f0-9cbb-4fac-8d39-ec6578b0adde"
		},
		{
			"deviceTime": "2014-08-13T07:30:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1c413f7-2b0c-4958-94b5-138107b6332f"
		},
		{
			"deviceTime": "2014-08-13T07:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0257501a-c076-42cf-8b81-e8903002b280"
		},
		{
			"deviceTime": "2014-08-13T07:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55a3af40-9888-4b13-b851-3cf14b5f414d"
		},
		{
			"deviceTime": "2014-08-13T07:45:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "211aaaf9-5bfe-4737-952b-8642052355d2"
		},
		{
			"deviceTime": "2014-08-13T07:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fe73b79-1776-493a-8019-2758a1aaa80f"
		},
		{
			"deviceTime": "2014-08-13T07:55:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b4eefa0-a446-4138-a7ac-07890d28c3c9"
		},
		{
			"deviceTime": "2014-08-13T08:00:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f7dea05-e073-4191-9d60-f85ef892229c"
		},
		{
			"deviceTime": "2014-08-13T08:05:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66e8a611-5731-446f-9c37-ac531b5b426e"
		},
		{
			"deviceTime": "2014-08-13T08:10:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aaff84f-86ab-41e1-b499-897c64b62983"
		},
		{
			"deviceTime": "2014-08-13T08:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "152fd3b0-75a3-49ef-a403-78d46540a692"
		},
		{
			"deviceTime": "2014-08-13T08:50:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a694a8e1-767d-4e25-a36a-b039c3508728"
		},
		{
			"deviceTime": "2014-08-13T08:55:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2e3b589-749e-4fab-bcb3-69f3a744e7fe"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-13T15:00:00",
			"start": "2014-08-13T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "1455bee9-6c10-4f83-b77c-d41678afafc8"
		},
		{
			"deviceTime": "2014-08-13T09:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a49cc76a-17da-4513-8318-1f1e1def0853"
		},
		{
			"deviceTime": "2014-08-13T09:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd6060dd-137a-4675-9ba6-b59c59090e3c"
		},
		{
			"deviceTime": "2014-08-13T09:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5ec0b40-22e5-4be0-82ae-279ce775f632"
		},
		{
			"deviceTime": "2014-08-13T09:15:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "458a52e4-e947-4484-a574-e522ef2dc880"
		},
		{
			"deviceTime": "2014-08-13T09:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c553fd34-cd8a-42ce-95c8-2cf06ce6d1b3"
		},
		{
			"deviceTime": "2014-08-13T09:25:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56775ebe-7034-4101-b0d4-bc3f2b6712d0"
		},
		{
			"deviceTime": "2014-08-13T09:30:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90232ef1-5f6e-4475-82cf-e04758e7763a"
		},
		{
			"deviceTime": "2014-08-13T09:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db723c0a-03e5-430e-8f10-4169901dbfd1"
		},
		{
			"deviceTime": "2014-08-13T09:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "492b6961-9cf1-4e7b-ac38-b57119627282"
		},
		{
			"deviceTime": "2014-08-13T09:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cc76bc9-e6a9-4146-940e-ca7a381769c7"
		},
		{
			"deviceTime": "2014-08-13T09:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32cb3a59-f278-467d-81aa-9238dd77dce8"
		},
		{
			"end": "2014-08-13T14:52:01",
			"start": "2014-08-13T09:52:01",
			"percent": 0,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "b6261661-f72d-43a8-a365-04886d85a88a"
		},
		{
			"deviceTime": "2014-08-13T09:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1f0a5b6-64cd-4754-9557-a0bc3e86035e"
		},
		{
			"deviceTime": "2014-08-13T10:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec118c0f-dfb3-4e38-adb9-18af7b549682"
		},
		{
			"deviceTime": "2014-08-13T10:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e921ff73-283a-48a4-8149-4bb7b70532c9"
		},
		{
			"deviceTime": "2014-08-13T10:10:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "461e0f8b-e13b-4272-be67-f0f61922c255"
		},
		{
			"deviceTime": "2014-08-13T10:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88957fcc-ab69-4c48-949b-a288e4558aa9"
		},
		{
			"deviceTime": "2014-08-13T10:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f2b4355-e5e4-4921-8aa7-7766c7e7c170"
		},
		{
			"deviceTime": "2014-08-13T10:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41e152f9-9ec8-4610-b96a-95c8341d3b30"
		},
		{
			"deviceTime": "2014-08-13T10:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6234d198-960b-4b1b-8832-b2ea40e2eda9"
		},
		{
			"deviceTime": "2014-08-13T10:35:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9bb01ec0-a934-4891-ad46-0a6a66a83843"
		},
		{
			"deviceTime": "2014-08-13T10:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b28b8ddf-5975-4110-9ae1-20fba2f8eecf"
		},
		{
			"deviceTime": "2014-08-13T10:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10898cdd-4d86-43b5-a2f2-2c14dc6a1d34"
		},
		{
			"deviceTime": "2014-08-13T10:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25e22719-4339-426b-88c3-8e4d8bee484a"
		},
		{
			"deviceTime": "2014-08-13T10:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af2ff52d-1150-487c-ac8a-09bf81d609a1"
		},
		{
			"deviceTime": "2014-08-13T11:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "caeead72-1731-4f4e-921c-0370547930df"
		},
		{
			"deviceTime": "2014-08-13T11:00:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b43624d5-dafc-4f18-aacb-b78b089dd39a"
		},
		{
			"deviceTime": "2014-08-13T11:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "91d374d4-836d-4452-a490-fe57351e4aa7"
		},
		{
			"deviceTime": "2014-08-13T11:00:22",
			"id": "91d374d4-836d-4452-a490-fe57351e4aa7",
			"source": "demo",
			"joinKey": "6b4bea6f-c600-4ffa-b793-953cacd462f4",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 92
			}
		},
		{
			"deviceTime": "2014-08-13T11:00:22",
			"programmed": 6.1,
			"joinKey": "6b4bea6f-c600-4ffa-b793-953cacd462f4",
			"value": 6.1,
			"source": "demo",
			"recommended": 6.1,
			"extendedDelivery": 6.1,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "f79af53b-27c6-49c0-9f07-297a9271baee"
		},
		{
			"deviceTime": "2014-08-13T11:05:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a341d250-20b8-451d-8971-05992c18a147"
		},
		{
			"deviceTime": "2014-08-13T11:10:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "326a2588-8215-4cd8-aa3d-2feca2d95429"
		},
		{
			"deviceTime": "2014-08-13T11:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22466692-daad-4adf-8ef3-e8cae85e6ace"
		},
		{
			"deviceTime": "2014-08-13T11:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "616e6abd-9d11-4074-a215-6c79519de730"
		},
		{
			"deviceTime": "2014-08-13T11:25:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f33ca3b-1bc4-42eb-8929-f652f9df2983"
		},
		{
			"deviceTime": "2014-08-13T11:30:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d424478-a3bb-48cd-9f4a-3b156fabdf57"
		},
		{
			"deviceTime": "2014-08-13T11:35:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fecaf27-5b79-44ee-b3b7-c7fa960bfadd"
		},
		{
			"deviceTime": "2014-08-13T11:40:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3cffc2b5-48ac-4609-8ab8-f41abedac681"
		},
		{
			"deviceTime": "2014-08-13T11:45:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3029a80c-718a-4107-b976-a20cc24262f6"
		},
		{
			"deviceTime": "2014-08-13T11:50:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9017b887-a435-4a9c-b399-839270b44b1e"
		},
		{
			"deviceTime": "2014-08-13T11:55:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12483749-e671-470d-966e-48ee3154632b"
		},
		{
			"deviceTime": "2014-08-13T12:00:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5455d0fe-eb74-4bf2-b1d8-44297d16057f"
		},
		{
			"deviceTime": "2014-08-13T12:05:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc338e50-69a8-40de-a3e9-dccb17213a9c"
		},
		{
			"deviceTime": "2014-08-13T12:06:35",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "73cadae0-5493-456a-b153-25136488c364"
		},
		{
			"deviceTime": "2014-08-13T12:06:35",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "2cecaaaf-1076-48f4-aead-ee1288f7fca0"
		},
		{
			"deviceTime": "2014-08-13T12:06:35",
			"id": "2cecaaaf-1076-48f4-aead-ee1288f7fca0",
			"source": "demo",
			"joinKey": "3befc1d9-e5f5-47e5-a182-8103d7f7c8a2",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 72
			}
		},
		{
			"deviceTime": "2014-08-13T12:06:35",
			"suspendedAt": "2014-08-13T12:16:35",
			"programmed": 4.8,
			"joinKey": "3befc1d9-e5f5-47e5-a182-8103d7f7c8a2",
			"value": 4.8,
			"source": "demo",
			"recommended": 4.8,
			"extendedDelivery": 2.4,
			"initialDelivery": 2.4,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "fd4b68c5-4f98-4276-bc02-006238aa2be7",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-13T12:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2e4b33a-0a18-4be5-9356-9d1c7b8c4de2"
		},
		{
			"deviceTime": "2014-08-13T12:15:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f7cf687-f3fd-484b-aead-9682a3d3ed05"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-13T12:16:35",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "55ee631e-a15a-4ac7-b71b-56a9a27d3621"
		},
		{
			"deviceTime": "2014-08-13T12:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b11ce386-d1ca-484e-83fd-6eb80ec3736b"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-13T12:24:35",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "2daf7f51-28ec-46a4-8d4b-6582bc10041b",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-13T12:16:35",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "55ee631e-a15a-4ac7-b71b-56a9a27d3621"
			}
		},
		{
			"deviceTime": "2014-08-13T12:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9114850-9542-40fa-84eb-227b95b98609"
		},
		{
			"deviceTime": "2014-08-13T12:30:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cce6a4b4-1088-4553-9ee4-5d80b2fcdb04"
		},
		{
			"deviceTime": "2014-08-13T12:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e4d56aa-e801-4cdf-be80-85000dfd5aa2"
		},
		{
			"deviceTime": "2014-08-13T12:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8af778b3-80c1-4707-960b-a4afd39180a8"
		},
		{
			"deviceTime": "2014-08-13T12:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0511a796-171f-4bc5-b587-2c7d68b831c1"
		},
		{
			"deviceTime": "2014-08-13T12:50:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb8fb7c2-89fc-4ac1-a487-66f1cb4a2962"
		},
		{
			"deviceTime": "2014-08-13T12:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2643f49d-e16b-40f0-9146-e842f8f0a630"
		},
		{
			"deviceTime": "2014-08-13T13:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c14e4886-d017-4037-80d8-a6973a9c347d"
		},
		{
			"deviceTime": "2014-08-13T13:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0abf059b-53e0-4c60-a6bc-ebd4fc01cfc4"
		},
		{
			"deviceTime": "2014-08-13T13:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe9faafa-64a0-437d-bbb4-591a26d42ea0"
		},
		{
			"deviceTime": "2014-08-13T13:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29c08fe4-6c19-4ab2-a33e-46d24e310ba4"
		},
		{
			"deviceTime": "2014-08-13T13:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db96c430-259f-4bd9-a93c-5bc1ef4139cb"
		},
		{
			"deviceTime": "2014-08-13T13:25:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0c9af68-0d69-461f-b821-f7338452b66f"
		},
		{
			"deviceTime": "2014-08-13T13:30:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cd394a9-d27b-4f22-83e5-1bb6b9e8d1e0"
		},
		{
			"deviceTime": "2014-08-13T13:31:13",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "933bd5ed-819f-43c4-bae3-e68ac27aec8b"
		},
		{
			"deviceTime": "2014-08-13T13:31:13",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "86016b23-a467-4045-877d-e1c0e19f6bdd"
		},
		{
			"deviceTime": "2014-08-13T13:31:13",
			"id": "86016b23-a467-4045-877d-e1c0e19f6bdd",
			"source": "demo",
			"joinKey": "29534262-ae8e-4a70-8675-1bef982e8c5a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 88
			}
		},
		{
			"deviceTime": "2014-08-13T13:31:13",
			"programmed": 5.9,
			"joinKey": "29534262-ae8e-4a70-8675-1bef982e8c5a",
			"value": 5.9,
			"source": "demo",
			"recommended": 5.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b415efad-e486-4ab3-8da8-069d4f3eae99"
		},
		{
			"deviceTime": "2014-08-13T13:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "307d041b-1f64-46a4-a408-73c0ebb3cd42"
		},
		{
			"deviceTime": "2014-08-13T13:40:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3939add9-1dfa-4054-a127-fc27e376117f"
		},
		{
			"deviceTime": "2014-08-13T13:45:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e0397f1-65e0-4056-9df9-52805ff736fb"
		},
		{
			"deviceTime": "2014-08-13T13:50:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0d1038d-98c0-435c-8848-ace6835030b3"
		},
		{
			"deviceTime": "2014-08-13T13:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "597b2221-412a-463e-8dc8-c8d1a8bf112d"
		},
		{
			"deviceTime": "2014-08-13T14:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2e249da-667e-42a7-bbba-69cac600bff8"
		},
		{
			"deviceTime": "2014-08-13T14:05:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab52c6bc-e4ac-4977-8b99-d73d382cc9f3"
		},
		{
			"deviceTime": "2014-08-13T14:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f05c3802-4d37-4269-8bdc-5ebc9b1d7dcc"
		},
		{
			"deviceTime": "2014-08-13T14:15:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbb5fc88-3b14-4a8d-bd0f-f8b533e34110"
		},
		{
			"deviceTime": "2014-08-13T14:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cf180c8-9cd2-4a6e-8bbd-69b976228298"
		},
		{
			"deviceTime": "2014-08-13T14:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0256c2d-5fdd-4c6d-bd02-7173ba0dbf05"
		},
		{
			"deviceTime": "2014-08-13T14:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1f267f2-fada-4fcf-8921-07cb4c0f7669"
		},
		{
			"deviceTime": "2014-08-13T14:35:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c5f64a2-afc9-46ee-8f39-a944969a93ad"
		},
		{
			"deviceTime": "2014-08-13T14:40:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e52130d4-f5d6-4db7-b11b-ce849bbd41e7"
		},
		{
			"deviceTime": "2014-08-13T14:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c95f425c-1781-4056-9791-83f8fa01d35d"
		},
		{
			"deviceTime": "2014-08-13T14:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a20c36bc-c0fb-439d-b634-656136f9b5f7"
		},
		{
			"deviceTime": "2014-08-13T14:55:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e82ee3f2-03a8-47e0-b095-73530e8d696b"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-13T20:00:00",
			"start": "2014-08-13T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "429339f0-f827-4686-b5e0-e439b7a107bb"
		},
		{
			"deviceTime": "2014-08-13T15:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30fe402b-9223-4b75-abdb-0f15e5fe95b7"
		},
		{
			"deviceTime": "2014-08-13T15:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a04b54b-b3c1-4ea4-847a-92c1c51ce46a"
		},
		{
			"deviceTime": "2014-08-13T15:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d87b03b-44bb-47b3-ab26-db24bdc61291"
		},
		{
			"deviceTime": "2014-08-13T15:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38eea896-fee5-4d72-8ffe-081898ab3036"
		},
		{
			"deviceTime": "2014-08-13T15:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6155df85-af33-4f07-9405-cc92cd1a4911"
		},
		{
			"deviceTime": "2014-08-13T15:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8111bdad-b86c-457c-a1f8-d24a3ab8cebe"
		},
		{
			"deviceTime": "2014-08-13T15:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "809861f2-a354-48a1-8e08-44d7d06cf731"
		},
		{
			"deviceTime": "2014-08-13T15:35:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f40120b-0d11-4bf3-925e-c484205f5a5f"
		},
		{
			"deviceTime": "2014-08-13T15:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72ada72b-eb5d-4483-8637-d8b1cf9d84c2"
		},
		{
			"deviceTime": "2014-08-13T15:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "069d7ec8-23d3-4ee0-a1d7-543589861291"
		},
		{
			"deviceTime": "2014-08-13T15:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0e30d6f-5d2b-4273-939b-3f2905ea819e"
		},
		{
			"deviceTime": "2014-08-13T15:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4ff2335-e3ff-4f1f-929c-e34044045658"
		},
		{
			"deviceTime": "2014-08-13T16:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b50f7288-bd5d-475b-8b47-e6378ca5e5f2"
		},
		{
			"deviceTime": "2014-08-13T16:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b39433e1-6617-4b83-a3c1-368d16b31039"
		},
		{
			"deviceTime": "2014-08-13T16:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e9f47ae-8379-462e-a6c3-2e17357247e1"
		},
		{
			"deviceTime": "2014-08-13T16:14:18",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "197ec978-9f9d-46c1-aff3-90f66e71d87e"
		},
		{
			"deviceTime": "2014-08-13T16:14:18",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "5863b0ac-dfc0-456f-88af-9fb13c9dd0a1"
		},
		{
			"deviceTime": "2014-08-13T16:14:18",
			"id": "5863b0ac-dfc0-456f-88af-9fb13c9dd0a1",
			"source": "demo",
			"joinKey": "89d181d5-c743-4254-8d7a-16570888aec6",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 82
			}
		},
		{
			"deviceTime": "2014-08-13T16:14:18",
			"programmed": 5.5,
			"joinKey": "89d181d5-c743-4254-8d7a-16570888aec6",
			"value": 0.5,
			"source": "demo",
			"recommended": 5.5,
			"extendedDelivery": 5.5,
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"extended": true,
			"type": "bolus",
			"id": "4477dc23-dbe8-4398-af7b-aa8c69429eaf"
		},
		{
			"deviceTime": "2014-08-13T16:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac413e2f-1879-4eb7-9ea4-a21194c72943"
		},
		{
			"deviceTime": "2014-08-13T16:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb2a5dcf-03ee-49e0-87ba-bc665cf3d111"
		},
		{
			"deviceTime": "2014-08-13T16:25:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bccce69b-6f7d-4f9a-8e5a-19466a469d4a"
		},
		{
			"deviceTime": "2014-08-13T16:30:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3323f204-4442-472a-b8d0-a4b081b2feb6"
		},
		{
			"deviceTime": "2014-08-13T16:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a882ed42-aa91-4160-91bd-3e2c65675030"
		},
		{
			"deviceTime": "2014-08-13T16:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a830442d-ff26-4802-92b9-7924767805f6"
		},
		{
			"deviceTime": "2014-08-13T16:45:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4608273-53dd-486b-b2f3-dcffe97d1d07"
		},
		{
			"deviceTime": "2014-08-13T16:50:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8cf5566-8746-4793-a4a8-4d39b56ff0e8"
		},
		{
			"deviceTime": "2014-08-13T16:55:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f2a77e8-73e9-4777-8c5d-30d7c4ed4a96"
		},
		{
			"deviceTime": "2014-08-13T17:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eefdbff5-2169-4dfe-ad11-63f9efead82e"
		},
		{
			"deviceTime": "2014-08-13T17:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3dd13b4f-17c1-4978-a9ac-6d94d595b3e3"
		},
		{
			"deviceTime": "2014-08-13T17:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d672b1a0-9272-480d-8432-3ea14f4ef4fc"
		},
		{
			"deviceTime": "2014-08-13T17:15:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c83c1a3e-a469-463e-92b3-104b58a2126b"
		},
		{
			"deviceTime": "2014-08-13T17:16:01",
			"value": 2.3,
			"source": "demo",
			"recommended": 2.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "87af4c6d-e975-4825-82cd-f54e79ba54e1"
		},
		{
			"deviceTime": "2014-08-13T17:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec50dfa7-0cf9-42cc-b679-8c4ce9133b6e"
		},
		{
			"deviceTime": "2014-08-13T17:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b417308-1146-4fce-b289-2a7b42e176fd"
		},
		{
			"deviceTime": "2014-08-13T17:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93231309-8fa4-4b57-9b27-97df671bab5b"
		},
		{
			"deviceTime": "2014-08-13T17:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e05bb42-b45d-4e83-bc20-bf3e2ba690db"
		},
		{
			"deviceTime": "2014-08-13T17:36:34",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "67edf98e-7d16-4e68-9ade-34d35b573efa"
		},
		{
			"deviceTime": "2014-08-13T17:36:34",
			"value": 32,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "9a0291d1-0767-466f-b4c2-36a73ac5bda0"
		},
		{
			"deviceTime": "2014-08-13T17:36:34",
			"id": "9a0291d1-0767-466f-b4c2-36a73ac5bda0",
			"source": "demo",
			"joinKey": "3cef68a9-c8c9-4438-a177-bb09c4814c71",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 32
			}
		},
		{
			"deviceTime": "2014-08-13T17:36:34",
			"programmed": 2.1,
			"joinKey": "3cef68a9-c8c9-4438-a177-bb09c4814c71",
			"value": 0.9,
			"source": "demo",
			"recommended": 2.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b295742d-8ee0-4872-87fd-aa450bd0a799"
		},
		{
			"deviceTime": "2014-08-13T17:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55767e87-3f5e-423e-b7d1-2eb6cd180f64"
		},
		{
			"deviceTime": "2014-08-13T17:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e8be279-7249-47ce-be35-d11615cc5d77"
		},
		{
			"deviceTime": "2014-08-13T17:50:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3cbe04f-7ca5-4af6-b93b-2d22d365965d"
		},
		{
			"deviceTime": "2014-08-13T17:55:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e87096d-ca36-4ffc-9b2b-601587dc0883"
		},
		{
			"deviceTime": "2014-08-13T18:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0f71f03-a776-4850-b0a8-02588f69c2ff"
		},
		{
			"deviceTime": "2014-08-13T18:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "056d0653-de52-4487-bcbb-0ac381d91fcd"
		},
		{
			"deviceTime": "2014-08-13T18:10:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f4c64e9-bb52-4a37-b012-a371f2c3176b"
		},
		{
			"deviceTime": "2014-08-13T18:10:29",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5e041489-e08b-4908-a6f2-3c3e50073edb"
		},
		{
			"deviceTime": "2014-08-13T18:10:29",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "d32fd592-9194-4c91-b061-e3c38d37d32f"
		},
		{
			"deviceTime": "2014-08-13T18:10:29",
			"id": "d32fd592-9194-4c91-b061-e3c38d37d32f",
			"source": "demo",
			"joinKey": "56d5ddab-1bce-44cc-933f-a5e62783200f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 41
			}
		},
		{
			"deviceTime": "2014-08-13T18:10:29",
			"programmed": 2.4,
			"joinKey": "56d5ddab-1bce-44cc-933f-a5e62783200f",
			"value": 2.4,
			"source": "demo",
			"recommended": 2.7,
			"extendedDelivery": 1.7,
			"initialDelivery": 0.7,
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "8c5f79d3-5d4a-4873-ad13-c62490f946f5",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-13T18:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3eb2371c-449f-4d4c-b0a6-0b192197985b"
		},
		{
			"deviceTime": "2014-08-13T18:20:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a498221a-6741-4b20-a51a-493437009a4e"
		},
		{
			"deviceTime": "2014-08-13T18:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4ad83f6-5bf9-434c-8d82-2f5b9523e6c7"
		},
		{
			"deviceTime": "2014-08-13T18:30:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fb02262-8dc6-4aa2-9262-ae8529cc649b"
		},
		{
			"deviceTime": "2014-08-13T18:35:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f736b8f-78d4-4782-b51e-9dd3c5a58604"
		},
		{
			"deviceTime": "2014-08-13T18:40:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37a64f67-a432-4480-bce2-1cc0a05440dc"
		},
		{
			"deviceTime": "2014-08-13T18:45:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b44f7916-8a3a-4a83-ad5b-d2d1153c0cd2"
		},
		{
			"deviceTime": "2014-08-13T19:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "143f10e3-2a4b-4503-a6f2-8756d7cc6ea0"
		},
		{
			"deviceTime": "2014-08-13T19:20:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e648609d-cd13-488b-b975-4b5ccd4d8775"
		},
		{
			"deviceTime": "2014-08-13T19:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b833ca10-ac09-414d-a871-eb4059ff1359"
		},
		{
			"deviceTime": "2014-08-13T19:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be546624-38de-4cf1-a217-2dbfc55ff6ad"
		},
		{
			"deviceTime": "2014-08-13T19:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "679a6a81-6121-4622-b711-1ef7ec49c8b7"
		},
		{
			"deviceTime": "2014-08-13T19:45:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cca17c14-125d-4b6a-9436-1d84c5765c3a"
		},
		{
			"deviceTime": "2014-08-13T19:50:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c0eaef6-e993-41f8-b0f4-cf79ab3d8850"
		},
		{
			"deviceTime": "2014-08-13T19:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39b7da57-47be-42fc-8ab6-059a23983b35"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-14T00:00:00",
			"start": "2014-08-13T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "3ddc551d-9b63-41e7-bdd9-9a214ef3aebb"
		},
		{
			"deviceTime": "2014-08-13T20:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6122641-a2c4-40f9-ac43-ae67ab531768"
		},
		{
			"deviceTime": "2014-08-13T20:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3b240f1-90ba-4235-ab52-a6e030834a87"
		},
		{
			"deviceTime": "2014-08-13T20:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62d0c7d4-21ab-427b-bf83-64ef5b8a7210"
		},
		{
			"deviceTime": "2014-08-13T20:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df7a0085-3d16-4e44-b797-63cce56669ab"
		},
		{
			"deviceTime": "2014-08-13T20:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa49fc7e-692e-41f6-8857-065345e8de54"
		},
		{
			"deviceTime": "2014-08-13T20:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4efa7611-4460-4c54-90ce-ec5ca29a8154"
		},
		{
			"deviceTime": "2014-08-13T20:30:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65eee2d2-3b12-41f2-afae-e593aeab6373"
		},
		{
			"deviceTime": "2014-08-13T20:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96456515-c702-4641-b463-835dd047b48e"
		},
		{
			"deviceTime": "2014-08-13T20:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "459c768a-95f2-45a0-b010-843c794b3305"
		},
		{
			"deviceTime": "2014-08-13T20:45:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8366fc96-8236-426e-9616-d9e4ec2b2128"
		},
		{
			"deviceTime": "2014-08-13T20:50:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22c0e019-4c2c-4ee8-ab82-8ede95975251"
		},
		{
			"deviceTime": "2014-08-13T20:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "997cc3e2-5d50-4ade-b798-d9ce0b414021"
		},
		{
			"deviceTime": "2014-08-13T21:00:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5f70c96-3486-4a84-bc36-1ed0be6210d3"
		},
		{
			"deviceTime": "2014-08-13T21:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "357326c1-faf9-4a03-9b0f-8a12b6d5151e"
		},
		{
			"deviceTime": "2014-08-13T21:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d25b2c79-a122-4d7c-9ff8-88f73661de1d"
		},
		{
			"deviceTime": "2014-08-13T21:40:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01a9049d-b3d8-4c9e-953d-6c043f2c45f6"
		},
		{
			"deviceTime": "2014-08-13T21:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61237903-fe02-45c2-852b-1ab3fdd4b7bc"
		},
		{
			"deviceTime": "2014-08-13T21:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57718523-98b3-49cd-9e18-72ca17fba46f"
		},
		{
			"deviceTime": "2014-08-13T21:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc55eeff-ce77-423c-98b4-abf648eeaf4a"
		},
		{
			"deviceTime": "2014-08-13T22:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db58d625-35cb-4364-8bf2-f457afac906b"
		},
		{
			"deviceTime": "2014-08-13T22:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66b7d024-af05-4128-96d7-94d688d19e7e"
		},
		{
			"deviceTime": "2014-08-13T22:10:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b183da1b-c70a-4828-8cd7-e4a91d5397d9"
		},
		{
			"deviceTime": "2014-08-13T22:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "862e0cf4-84b1-4c9d-a0ee-22f02f858940"
		},
		{
			"deviceTime": "2014-08-13T22:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3caf08e2-3eee-48df-8ea0-eb5589370a1a"
		},
		{
			"deviceTime": "2014-08-13T22:25:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dc6a66f-1c00-4e2e-b702-ae90d04af2c7"
		},
		{
			"deviceTime": "2014-08-13T22:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fd7df20-0cdc-499b-a721-91df7a7dbd37"
		},
		{
			"deviceTime": "2014-08-13T22:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9367e40f-ed8d-4883-a490-5b14f5e51e71"
		},
		{
			"deviceTime": "2014-08-13T22:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e4cc642-23a9-41cc-870b-36d528ddb8c9"
		},
		{
			"deviceTime": "2014-08-13T22:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a31a277-ab99-4118-b58f-d300d87eb7e8"
		},
		{
			"deviceTime": "2014-08-13T22:50:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "420e3dca-2dc5-4f54-a862-cd6b0a778b91"
		},
		{
			"deviceTime": "2014-08-13T22:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9ae157b-97ef-4492-b1c9-04aad52355dd"
		},
		{
			"deviceTime": "2014-08-13T23:00:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "922faf48-9ed9-4b1e-9aab-b115f67a94f5"
		},
		{
			"deviceTime": "2014-08-13T23:05:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1422b3c5-c2f7-4975-8bfd-a1f0d4007384"
		},
		{
			"deviceTime": "2014-08-13T23:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a3dd9b4-a2f5-4e7e-8da1-207319e61a7b"
		},
		{
			"deviceTime": "2014-08-13T23:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24beb57f-8243-4aae-8c6b-5714cf0b0474"
		},
		{
			"deviceTime": "2014-08-13T23:20:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d342c5fe-78be-4078-b613-34e9694e7bad"
		},
		{
			"deviceTime": "2014-08-13T23:25:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06fda8f3-fa57-48bb-92aa-5572948a1ed5"
		},
		{
			"deviceTime": "2014-08-13T23:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef3ae426-4bd9-4c34-98af-d8cdacfce2e6"
		},
		{
			"deviceTime": "2014-08-13T23:35:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1b80979-6067-44e4-ad91-009a23c9034c"
		},
		{
			"deviceTime": "2014-08-13T23:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfcab5de-3cab-40a3-b552-555931a30fb4"
		},
		{
			"deviceTime": "2014-08-13T23:45:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b7d04ff-1bdd-4c45-aeef-d7d99e3f02ac"
		},
		{
			"deviceTime": "2014-08-13T23:50:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eddc415-6a03-4f6f-a036-f2e4017cb46a"
		},
		{
			"deviceTime": "2014-08-13T23:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f36eb65-f9a4-4856-a63e-238643fe8320"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-14T02:00:00",
			"start": "2014-08-14T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "376e2305-19a9-493b-a73a-85e12f07e079"
		},
		{
			"deviceTime": "2014-08-14T00:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "475a3210-07e9-4399-ba5f-f536b39ca2a9"
		},
		{
			"deviceTime": "2014-08-14T00:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0a730e0-78b0-47e1-b896-0f4f9d24003e"
		},
		{
			"deviceTime": "2014-08-14T00:10:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67804d08-a933-4417-bfac-5185299117ce"
		},
		{
			"deviceTime": "2014-08-14T00:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a5c3ae5-aa42-4e4c-9c83-c32a2afd35d4"
		},
		{
			"deviceTime": "2014-08-14T00:20:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8b64124-f5e7-4da5-baab-c9e0f33c6e91"
		},
		{
			"deviceTime": "2014-08-14T00:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2773f73a-776e-4913-8c08-96554bf709cc"
		},
		{
			"deviceTime": "2014-08-14T00:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0e75c32-5dca-43e4-8c52-f59f9f869e26"
		},
		{
			"deviceTime": "2014-08-14T00:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "943ba1c6-47c8-40d0-bae7-0d45cef69723"
		},
		{
			"deviceTime": "2014-08-14T01:00:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bda2d050-207b-4f08-ac36-ce18f1f3f44a"
		},
		{
			"deviceTime": "2014-08-14T01:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71ba21a8-620d-4b85-bb22-6857871d712a"
		},
		{
			"deviceTime": "2014-08-14T01:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e775d04b-0cdb-4dbc-8ca2-9958646033e9"
		},
		{
			"deviceTime": "2014-08-14T01:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "caa7ff80-a7fd-44cb-b3d1-5bb0f19a3d8c"
		},
		{
			"deviceTime": "2014-08-14T01:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60548289-eee1-4e69-9e3a-d445d1e46f91"
		},
		{
			"deviceTime": "2014-08-14T01:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2efc5c9-ae1f-42a0-9e0b-f916bdf84907"
		},
		{
			"deviceTime": "2014-08-14T01:30:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4ecd403-66f3-42c0-bf6a-05315d0d3294"
		},
		{
			"deviceTime": "2014-08-14T01:35:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edbecce5-d965-4ac4-865c-62fc6bbd9652"
		},
		{
			"deviceTime": "2014-08-14T01:40:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "393d99ed-dfaf-4a33-b538-a5a124e0cae2"
		},
		{
			"deviceTime": "2014-08-14T01:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d30c2dda-9f80-4a33-8ebd-80a61b60e299"
		},
		{
			"deviceTime": "2014-08-14T01:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f4ec80f-4964-4663-9176-c86d81284f29"
		},
		{
			"deviceTime": "2014-08-14T01:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1892e43-8ac8-44ea-9b2a-8bfde8e5c30b"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-14T04:00:00",
			"start": "2014-08-14T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "d657461a-5eda-471a-9637-92c7be3ec13d"
		},
		{
			"deviceTime": "2014-08-14T02:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41f9a081-faee-4e9d-a339-0e8d4b50130b"
		},
		{
			"deviceTime": "2014-08-14T02:05:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06cfc649-8a65-449d-99c6-a8c3c619794b"
		},
		{
			"deviceTime": "2014-08-14T02:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37ad7665-5201-45a2-8858-9ff11ea452c2"
		},
		{
			"deviceTime": "2014-08-14T02:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e406d381-4c10-4e8c-a198-a0a9c1f2c3c8"
		},
		{
			"deviceTime": "2014-08-14T02:20:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a20094ff-7c5d-425a-b075-d752d16b4efa"
		},
		{
			"deviceTime": "2014-08-14T02:25:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b1d3722-f7e7-4098-8c40-3eee2197b5f6"
		},
		{
			"deviceTime": "2014-08-14T02:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48a7bfb5-5f53-4e28-acaf-b9b3fe21dfd0"
		},
		{
			"deviceTime": "2014-08-14T02:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c2bbc7b-6d72-49ff-b508-c8fb39f7f0dd"
		},
		{
			"deviceTime": "2014-08-14T02:40:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4252ac6e-32a4-44b4-ad24-ca20067ff96a"
		},
		{
			"deviceTime": "2014-08-14T02:45:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ce3996d-763a-4ba5-843c-96128c256021"
		},
		{
			"deviceTime": "2014-08-14T02:50:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65971332-f8ac-49cf-8b75-2df09508aaca"
		},
		{
			"deviceTime": "2014-08-14T02:55:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb7b6408-875c-4e1e-b0ea-24211cb9d876"
		},
		{
			"deviceTime": "2014-08-14T03:00:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db8b6071-b0e9-43ad-a9e3-d7cbb1e21bc1"
		},
		{
			"deviceTime": "2014-08-14T03:05:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fee655a5-2dd9-4106-991a-3e34cc40218a"
		},
		{
			"deviceTime": "2014-08-14T03:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dae48539-be53-46e7-af39-b0dff92286a8"
		},
		{
			"deviceTime": "2014-08-14T03:35:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e77b5ad8-d0d8-42cf-b8d4-4d0a64004d5c"
		},
		{
			"deviceTime": "2014-08-14T03:40:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3d9fde0-79a1-40c1-9471-861aa73aeedc"
		},
		{
			"deviceTime": "2014-08-14T03:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5704d72e-d9e7-4c1c-bc88-2303cf12ea9f"
		},
		{
			"deviceTime": "2014-08-14T03:50:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82301d28-c3d5-4a3f-a7a6-9d6518380be7"
		},
		{
			"deviceTime": "2014-08-14T03:55:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f4b6a3b-788a-4cf4-9130-64e09f5970aa"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-14T05:00:00",
			"start": "2014-08-14T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "6e5e1a06-f965-45d7-b739-8d3743ef9807"
		},
		{
			"deviceTime": "2014-08-14T04:00:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b8d7675-24c5-4ec3-a52a-a3086514ab3d"
		},
		{
			"deviceTime": "2014-08-14T04:05:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9064b2a3-2271-44ea-a85a-d14d49d4fc34"
		},
		{
			"deviceTime": "2014-08-14T04:10:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f876a58b-a3ca-49a7-8dc1-e61f3ed99d63"
		},
		{
			"deviceTime": "2014-08-14T04:14:53",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0279e813-0e47-41bd-a11b-00f65119cd58"
		},
		{
			"deviceTime": "2014-08-14T04:14:53",
			"value": 28,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "f52bbefd-16a6-4f04-8428-936c5075c5fb"
		},
		{
			"deviceTime": "2014-08-14T04:14:53",
			"id": "f52bbefd-16a6-4f04-8428-936c5075c5fb",
			"source": "demo",
			"joinKey": "1a3f0c28-d364-4bde-9e16-ba24bbeb405a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 28
			}
		},
		{
			"deviceTime": "2014-08-14T04:14:53",
			"programmed": 1.9,
			"joinKey": "1a3f0c28-d364-4bde-9e16-ba24bbeb405a",
			"value": 0.4,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "6167fcfe-9763-45cd-a281-d9b198877006"
		},
		{
			"deviceTime": "2014-08-14T04:15:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6891623a-558e-4694-95f2-c988aa93faaa"
		},
		{
			"deviceTime": "2014-08-14T04:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bd6a652-aef5-4876-af70-43d6d19e3a55"
		},
		{
			"deviceTime": "2014-08-14T04:25:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "463b0a43-29d3-48de-a176-32f491bff630"
		},
		{
			"deviceTime": "2014-08-14T04:30:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5c2c42d-fb68-4f9a-b84a-420abd3b5d2b"
		},
		{
			"deviceTime": "2014-08-14T04:35:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7ee6b9e-fe19-4c62-b968-fd9e76f81fd9"
		},
		{
			"deviceTime": "2014-08-14T04:40:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b555691-da35-49cf-b246-ee8d380aa15f"
		},
		{
			"deviceTime": "2014-08-14T04:58:10",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "280cd374-e73e-4220-abf9-ea6b8f1fc4c7"
		},
		{
			"deviceTime": "2014-08-14T04:58:10",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e62e39f3-14c7-4ccf-8bc8-9aa119a2df9a"
		},
		{
			"deviceTime": "2014-08-14T04:58:10",
			"id": "e62e39f3-14c7-4ccf-8bc8-9aa119a2df9a",
			"source": "demo",
			"joinKey": "bc39c0f5-affa-499d-823a-85e74b01d36c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 41
			}
		},
		{
			"deviceTime": "2014-08-14T04:58:10",
			"suspendedAt": "2014-08-14T05:05:40",
			"programmed": 2.7,
			"joinKey": "bc39c0f5-affa-499d-823a-85e74b01d36c",
			"value": 2.7,
			"source": "demo",
			"recommended": 2.7,
			"extendedDelivery": 1.1,
			"initialDelivery": 1.6,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "f4bdc948-e721-4eaf-b847-599554a75227",
			"deviceId": "Demo - 123"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-14T06:00:00",
			"start": "2014-08-14T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"id": "b6f0fee2-1369-41c2-8d35-6b7d4f9a9d13",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"end": "2014-08-14T09:00:01",
			"start": "2014-08-14T05:00:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "5f9b48cb-0669-4e36-a74a-558fc3590949"
		},
		{
			"deviceTime": "2014-08-14T05:05:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac804cb0-6ece-4f4b-9152-d96a83c052f4"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-14T05:05:40",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "b47bea1b-34d4-41ed-8d26-f53ad8bdbb98"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-14T05:10:10",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "b1a78dc3-5090-463d-9bf3-f4db189ea12f",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-14T05:05:40",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "b47bea1b-34d4-41ed-8d26-f53ad8bdbb98"
			}
		},
		{
			"deviceTime": "2014-08-14T05:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91d97126-940d-43e8-9168-d0ae75fc6dd6"
		},
		{
			"deviceTime": "2014-08-14T05:15:01",
			"value": 1.7,
			"source": "demo",
			"recommended": 0.2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "d607873b-de31-4322-9b49-09fd444822e7"
		},
		{
			"deviceTime": "2014-08-14T05:40:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fd80671-65cd-42f6-81fe-1edc5a216e82"
		},
		{
			"deviceTime": "2014-08-14T05:45:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aa24286-73d5-4589-9223-ce80bc86d597"
		},
		{
			"deviceTime": "2014-08-14T05:50:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd9f8916-6e9e-40e7-8f02-d5c9a94c4735"
		},
		{
			"delivered": 1,
			"end": "2014-08-14T09:00:00",
			"start": "2014-08-14T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "4dd0bccf-dfb8-4528-9d94-4901e3b09053"
		},
		{
			"deviceTime": "2014-08-14T06:20:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eedd124-b6db-4020-939c-9c6dc37ac3e8"
		},
		{
			"deviceTime": "2014-08-14T06:25:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebbd9d55-0112-46b4-b248-f34ddf47e704"
		},
		{
			"deviceTime": "2014-08-14T06:35:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2197287-5cef-44d7-91d0-451626b14767"
		},
		{
			"deviceTime": "2014-08-14T06:40:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8c29cbb-9a85-4e53-95ea-e9474e688ca3"
		},
		{
			"deviceTime": "2014-08-14T06:45:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f7922fc-6339-4667-b42a-9f98fa0993bb"
		},
		{
			"deviceTime": "2014-08-14T07:10:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1bc9e5a-454a-40c8-9cab-ed566e55cd6f"
		},
		{
			"deviceTime": "2014-08-14T07:15:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "363043f5-61c1-48d3-b2e4-a42cf615359b"
		},
		{
			"deviceTime": "2014-08-14T07:20:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "938e18db-3fa5-4296-8029-6f063cca52d0"
		},
		{
			"deviceTime": "2014-08-14T07:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef49eb2a-c335-4fb1-851a-8b95faecba26"
		},
		{
			"deviceTime": "2014-08-14T07:30:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a8ea144-93f1-41fb-9da5-da9d25b9c9f7"
		},
		{
			"deviceTime": "2014-08-14T07:35:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1333510-a764-4f1b-bf11-1a8c78a17def"
		},
		{
			"deviceTime": "2014-08-14T08:10:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9a5a211-f993-4849-8a56-3f18e9db4d10"
		},
		{
			"deviceTime": "2014-08-14T08:15:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd8fd712-6e05-4530-b209-33dda97827ea"
		},
		{
			"deviceTime": "2014-08-14T08:20:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "542787d2-9ec0-45ae-964b-60bbf665d530"
		},
		{
			"deviceTime": "2014-08-14T08:25:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d59221f-f2c1-4284-aae0-93c1a25e1a14"
		},
		{
			"deviceTime": "2014-08-14T08:30:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68323eba-8fb2-4af1-a3d0-3ccfa00707e5"
		},
		{
			"deviceTime": "2014-08-14T08:35:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1378409b-2f1a-41bc-9da4-469459cda3b0"
		},
		{
			"deviceTime": "2014-08-14T08:40:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1cbac91-91e9-434c-9122-f0513c419f43"
		},
		{
			"deviceTime": "2014-08-14T08:45:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28982b96-61fd-42ac-a172-f9ed9a1e70f5"
		},
		{
			"deviceTime": "2014-08-14T08:50:22",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bad4bb95-da31-4409-88f3-6c16d4ea446c"
		},
		{
			"deviceTime": "2014-08-14T08:55:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a286b62-e960-436f-b929-54b37dab5866"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-14T15:00:00",
			"start": "2014-08-14T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "014964ad-f7a1-421e-93a4-b7f5ed3599fc"
		},
		{
			"deviceTime": "2014-08-14T09:00:22",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "394e1a25-d03f-4270-995d-5ba1fb7239de"
		},
		{
			"deviceTime": "2014-08-14T09:00:44",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "26031fd7-2d1c-4618-8e8b-79fdbb8e205d"
		},
		{
			"deviceTime": "2014-08-14T09:00:44",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "017e007e-f155-4c4b-b616-c6a67376a39f"
		},
		{
			"deviceTime": "2014-08-14T09:00:44",
			"id": "017e007e-f155-4c4b-b616-c6a67376a39f",
			"source": "demo",
			"joinKey": "9f28fc56-da9e-4d9e-ae24-829043883e41",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 54
			}
		},
		{
			"deviceTime": "2014-08-14T09:00:44",
			"programmed": 3.6,
			"joinKey": "9f28fc56-da9e-4d9e-ae24-829043883e41",
			"value": 0.7,
			"source": "demo",
			"recommended": 3.6,
			"extendedDelivery": 3.6,
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"extended": true,
			"type": "bolus",
			"id": "6dea7401-6b1e-4da6-93f4-4c1e347b0907"
		},
		{
			"deviceTime": "2014-08-14T09:05:22",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9dfbde8b-70fb-41dc-92e7-dfc0d268e97f"
		},
		{
			"deviceTime": "2014-08-14T09:10:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78684bd6-6664-45bb-be0a-7ec2c6977bc8"
		},
		{
			"deviceTime": "2014-08-14T09:15:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1fc7b61-5d6e-4e79-9e03-d2368ab5781b"
		},
		{
			"deviceTime": "2014-08-14T09:20:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a3c493d-11c0-40e6-913f-4773a541869e"
		},
		{
			"deviceTime": "2014-08-14T09:25:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca8c9060-5858-4332-8cc4-056355877740"
		},
		{
			"deviceTime": "2014-08-14T09:30:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21b35a30-18ad-46a3-a228-779b79cfa647"
		},
		{
			"deviceTime": "2014-08-14T09:35:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "293bce1f-42fb-4a64-b06c-f6549c0b8879"
		},
		{
			"deviceTime": "2014-08-14T09:40:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02ae4e4b-5bf6-42b2-9788-a8bbbe1bd2c9"
		},
		{
			"deviceTime": "2014-08-14T09:45:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c112cb32-b02c-40f8-ae36-59d48ab2f9c9"
		},
		{
			"deviceTime": "2014-08-14T09:50:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e43a394-3f57-4f37-9b85-2e8ac9112a59"
		},
		{
			"deviceTime": "2014-08-14T09:55:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ef56610-14d4-4f34-a822-9e83edfed9e5"
		},
		{
			"deviceTime": "2014-08-14T10:00:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b411a24a-5d87-42db-9a0a-9635fa98d988"
		},
		{
			"deviceTime": "2014-08-14T10:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db8e1c6a-849c-472a-90bf-b4e3b5e2ec4c"
		},
		{
			"deviceTime": "2014-08-14T10:15:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6280aff1-4ef4-47da-a07f-94f26dbb9ee5"
		},
		{
			"deviceTime": "2014-08-14T10:20:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdb74b37-2805-4076-9e83-12981d5714fb"
		},
		{
			"deviceTime": "2014-08-14T10:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7de6a71-7f37-4cdf-8278-3e6b5be3a2b5"
		},
		{
			"deviceTime": "2014-08-14T10:30:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04c575c8-66b2-4167-b889-ce170a012a0a"
		},
		{
			"deviceTime": "2014-08-14T10:35:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed9b9796-5fd5-4739-8659-739e16b588b7"
		},
		{
			"deviceTime": "2014-08-14T10:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "074b6790-c1fa-442c-b63e-5f6ae58cd17b"
		},
		{
			"deviceTime": "2014-08-14T10:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14a57a88-3471-409d-929c-3db4741557dd"
		},
		{
			"deviceTime": "2014-08-14T10:50:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3296bfe5-bb1b-4cfb-acef-bdc78cb8c1cb"
		},
		{
			"deviceTime": "2014-08-14T10:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "755f1b8b-e8fe-491d-bcce-ebf1b5abead1"
		},
		{
			"deviceTime": "2014-08-14T11:00:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27b18b74-b496-4b21-8264-2d9d1a0e0c9a"
		},
		{
			"deviceTime": "2014-08-14T11:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a1cb293-aa25-4ce3-b18e-3604d9336c80"
		},
		{
			"deviceTime": "2014-08-14T11:10:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03dd6534-30b8-4592-909c-70289fcaec8a"
		},
		{
			"deviceTime": "2014-08-14T11:15:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50961619-f26d-4932-8e2b-036b4df9d122"
		},
		{
			"deviceTime": "2014-08-14T11:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14ad47be-ccee-4192-b313-8c95c95f89c0"
		},
		{
			"deviceTime": "2014-08-14T11:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c708f693-8231-4505-a43b-077826682aab"
		},
		{
			"deviceTime": "2014-08-14T11:30:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f92ad553-cb78-4e0a-b1f9-c59d584f0e23"
		},
		{
			"deviceTime": "2014-08-14T11:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d787ae9f-e600-44f6-b43e-3f8f0436bbf4"
		},
		{
			"deviceTime": "2014-08-14T11:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9473f977-f9cf-4f9e-9162-3379630457b3"
		},
		{
			"deviceTime": "2014-08-14T11:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31c619c3-d960-4807-b9be-0c85b96ce226"
		},
		{
			"deviceTime": "2014-08-14T11:50:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "074d554a-9095-4d55-93d6-5f0dd71efdf9"
		},
		{
			"deviceTime": "2014-08-14T11:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6b77aac-a398-4ae4-9cbe-307308574449"
		},
		{
			"deviceTime": "2014-08-14T12:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4f22300-a67a-448b-8544-3870bf255fb8"
		},
		{
			"deviceTime": "2014-08-14T12:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a331fad1-f6d1-403e-bc6d-03819c563ddb"
		},
		{
			"deviceTime": "2014-08-14T12:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de885d9e-8014-43a0-bc2d-1f670d46aa37"
		},
		{
			"deviceTime": "2014-08-14T12:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8601f11-8bea-45a1-9b5e-be4e10f7952b"
		},
		{
			"messageText": "Duis pork belly id, quis sausage laboris fatback proident prosciutto. Pork jowl meatloaf, consequat adipisicing mollit nisi magna biltong. Enim mollit biltong ham hock excepteur kevin in tongue nostrud.",
			"parentMessage": "",
			"utcTime": "2014-08-14T12:19:52Z",
			"type": "message",
			"id": "395cdf6a-4e30-427a-8204-d424c83a5a31"
		},
		{
			"deviceTime": "2014-08-14T12:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b92c757-f8fd-4af8-81b5-49d0940d4601"
		},
		{
			"end": "2014-08-14T19:56:01",
			"start": "2014-08-14T12:26:01",
			"percent": 1.55,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 27000000,
			"type": "basal-rate-segment",
			"id": "e0a09e2c-8fdd-4e00-9af1-2a626c41d5aa"
		},
		{
			"deviceTime": "2014-08-14T12:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7046181-7222-4ff5-9d03-d5f6a41778e4"
		},
		{
			"deviceTime": "2014-08-14T12:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff09a9e1-e770-4733-bf6e-553c2b39a34f"
		},
		{
			"deviceTime": "2014-08-14T13:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb81eb0b-905e-493f-853d-14aa656d8812"
		},
		{
			"deviceTime": "2014-08-14T13:05:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c91debd4-6ce3-4c57-ad1d-87580091b3ee"
		},
		{
			"deviceTime": "2014-08-14T13:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b21d151-44dd-4d76-92fe-2b99ff95fc0d"
		},
		{
			"deviceTime": "2014-08-14T13:12:13",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e5f79f6a-9521-4b37-920e-a2a017770ea3"
		},
		{
			"deviceTime": "2014-08-14T13:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e07a064e-5275-4b6b-9699-407abdddd457"
		},
		{
			"deviceTime": "2014-08-14T13:20:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "271cbda8-6c8d-422d-81f8-4ecd7efff352"
		},
		{
			"deviceTime": "2014-08-14T13:25:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d844403e-ce42-46ba-a63c-21e60afcf764"
		},
		{
			"deviceTime": "2014-08-14T13:30:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e2b2815-720a-40a3-84dc-17a4b0a13cfd"
		},
		{
			"deviceTime": "2014-08-14T13:35:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90be37a4-804d-4e24-bfa2-72f43622bab2"
		},
		{
			"deviceTime": "2014-08-14T13:40:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b63c23c-4089-49d8-bf13-16a318339de0"
		},
		{
			"deviceTime": "2014-08-14T13:45:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2fde30a7-6678-48e1-be31-0bd3cd189dbe"
		},
		{
			"deviceTime": "2014-08-14T13:50:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ae05f03-7cea-4984-bb25-d4c9fc85c01b"
		},
		{
			"deviceTime": "2014-08-14T13:55:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "662602ad-f077-47a0-8c7a-0194549bd330"
		},
		{
			"deviceTime": "2014-08-14T14:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1ed0cef-39ef-4e4b-b186-251775e27840"
		},
		{
			"deviceTime": "2014-08-14T14:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9b4c36c-8946-480a-9d4b-267f72a2aa92"
		},
		{
			"deviceTime": "2014-08-14T14:20:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74502368-5192-4ec4-a8a7-d4c40ac592f2"
		},
		{
			"deviceTime": "2014-08-14T14:25:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54b3a673-bec3-42e7-9206-7c2b4687ea69"
		},
		{
			"deviceTime": "2014-08-14T14:28:21",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "c47c2ff4-7719-4a1e-9c60-7714fbf5a2f0"
		},
		{
			"deviceTime": "2014-08-14T14:28:21",
			"value": 37,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "032b52f6-5b4d-42da-a688-6ece5c42264f"
		},
		{
			"deviceTime": "2014-08-14T14:28:21",
			"id": "032b52f6-5b4d-42da-a688-6ece5c42264f",
			"source": "demo",
			"joinKey": "94b8412c-a611-4f18-967a-1bb0aa213121",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 37
			}
		},
		{
			"deviceTime": "2014-08-14T14:28:21",
			"programmed": 2.5,
			"joinKey": "94b8412c-a611-4f18-967a-1bb0aa213121",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "7dcc0d70-d30a-4de9-90c7-706f4d8f9416"
		},
		{
			"deviceTime": "2014-08-14T14:30:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c28a7e60-66dd-43f6-8216-3ba683279b20"
		},
		{
			"deviceTime": "2014-08-14T14:35:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5353477-63f9-4e2b-b33d-6f4e1707810d"
		},
		{
			"deviceTime": "2014-08-14T14:40:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "996012db-00ae-40bf-bb84-8be66479e82b"
		},
		{
			"deviceTime": "2014-08-14T14:45:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ab8a2db-cc60-404f-8b39-690d74263129"
		},
		{
			"deviceTime": "2014-08-14T14:50:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34077ddb-35ac-43a3-9f01-71872a37cbd3"
		},
		{
			"deviceTime": "2014-08-14T14:55:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6a48c8d-8136-4afe-8ae1-e7e7096ae2c6"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-14T20:00:00",
			"start": "2014-08-14T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "a5575638-84e4-48dd-86c8-0a0495444a79"
		},
		{
			"deviceTime": "2014-08-14T15:00:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de395bde-4014-44ec-b8ed-429ca28643fd"
		},
		{
			"deviceTime": "2014-08-14T15:05:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c338a40d-5688-4f16-a414-f3a8ccb6e662"
		},
		{
			"deviceTime": "2014-08-14T15:10:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a06f97fc-3ece-4e54-a373-2fb09df1d352"
		},
		{
			"deviceTime": "2014-08-14T15:15:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e36aee4-0120-4f7f-8f29-b8c1eaeec55a"
		},
		{
			"deviceTime": "2014-08-14T15:20:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a499633-cedd-481d-a202-f72a1810d4e0"
		},
		{
			"deviceTime": "2014-08-14T15:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "faede140-2c57-4f4a-9ff1-2c401d13be15"
		},
		{
			"deviceTime": "2014-08-14T15:30:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95168360-1043-4028-81d3-7868bf2ab83a"
		},
		{
			"deviceTime": "2014-08-14T15:35:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e009a97f-177d-460d-ae98-a42db1c814b2"
		},
		{
			"deviceTime": "2014-08-14T15:40:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "898e0ce2-7410-4882-a72c-8a4b04a1b183"
		},
		{
			"deviceTime": "2014-08-14T15:45:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59924459-5297-485e-a332-03aea9bea790"
		},
		{
			"deviceTime": "2014-08-14T15:50:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dec34d11-6ea6-45f6-8ee7-b4d3aa1cd581"
		},
		{
			"deviceTime": "2014-08-14T15:55:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0e893de-053c-49a6-8d6d-91e73c1fc269"
		},
		{
			"deviceTime": "2014-08-14T16:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b886dda-8873-4e7a-8b5f-c58982e1a921"
		},
		{
			"deviceTime": "2014-08-14T16:05:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad8684d2-0484-44a4-8fb5-76738ce72724"
		},
		{
			"deviceTime": "2014-08-14T16:10:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbd6cabf-af74-4450-96f1-43d8d1aa58ab"
		},
		{
			"deviceTime": "2014-08-14T16:15:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1743f85-7ea8-4985-bf5f-95ed47dcd2d4"
		},
		{
			"deviceTime": "2014-08-14T16:20:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a558969-2719-4d4d-ad9e-82d520ac64f3"
		},
		{
			"deviceTime": "2014-08-14T16:25:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec767ab3-af73-42d4-a85f-9d4d4fd965ca"
		},
		{
			"deviceTime": "2014-08-14T16:28:06",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "fafe808e-9c92-46df-93fa-d2613db3e2b4"
		},
		{
			"deviceTime": "2014-08-14T16:28:06",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "04c86f2b-7da2-477c-8d16-41a219e09627"
		},
		{
			"deviceTime": "2014-08-14T16:28:06",
			"id": "04c86f2b-7da2-477c-8d16-41a219e09627",
			"source": "demo",
			"joinKey": "42f35d54-337b-4b80-aa83-c8f9a56f392f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 64
			}
		},
		{
			"deviceTime": "2014-08-14T16:28:06",
			"programmed": 4.3,
			"joinKey": "42f35d54-337b-4b80-aa83-c8f9a56f392f",
			"value": 4.3,
			"source": "demo",
			"recommended": 4.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "876fcc0a-bb81-4f8d-9960-f4f7accd00e2"
		},
		{
			"deviceTime": "2014-08-14T16:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6c6cc7d-d1fe-4b23-a83b-a24bfc089835"
		},
		{
			"deviceTime": "2014-08-14T16:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "797615e7-e7d2-4ba0-b3af-3552e431cddf"
		},
		{
			"deviceTime": "2014-08-14T16:55:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "199e0c7f-66d0-411d-961d-c5f8cf614eb8"
		},
		{
			"deviceTime": "2014-08-14T17:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab45ca99-663f-46b7-a560-3228477c3ff6"
		},
		{
			"deviceTime": "2014-08-14T17:05:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb87adf9-e637-4815-8c96-cc60d1e4eaf8"
		},
		{
			"deviceTime": "2014-08-14T17:10:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69d78c5f-c27a-4ae7-93cb-6be50e39f2f1"
		},
		{
			"deviceTime": "2014-08-14T17:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b402ba0-3b33-4b2e-81ed-9190086fad45"
		},
		{
			"deviceTime": "2014-08-14T17:19:01",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b754d8f0-0e96-4419-b67a-8fe198be4577"
		},
		{
			"deviceTime": "2014-08-14T17:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "629f956a-50fa-4f38-9287-52e805793328"
		},
		{
			"end": "2014-08-14T18:53:01",
			"start": "2014-08-14T17:23:01",
			"percent": 0.55,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "d6a755ae-9966-4c3c-bbd2-64b3ebf4a2be"
		},
		{
			"deviceTime": "2014-08-14T17:25:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6df2774-dd81-421f-8acf-8a44a5f3d02c"
		},
		{
			"deviceTime": "2014-08-14T17:30:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "546fbee3-16b8-47de-a4e5-03a9646fe205"
		},
		{
			"deviceTime": "2014-08-14T18:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2d9620d-2fce-4598-94fd-d91d817e3d27"
		},
		{
			"deviceTime": "2014-08-14T18:05:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3421fece-b93f-4349-9e35-8e2a47a16bee"
		},
		{
			"deviceTime": "2014-08-14T18:10:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49c6d6a1-c62e-44cc-87dc-83988d9b1b54"
		},
		{
			"deviceTime": "2014-08-14T18:15:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b79bdd0a-cdbc-4de6-8737-9383de78e3c3"
		},
		{
			"deviceTime": "2014-08-14T18:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e291609-a86f-4060-84ed-1bcf848fc689"
		},
		{
			"deviceTime": "2014-08-14T18:25:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a66d3bbd-8395-4819-a989-d8c579019a71"
		},
		{
			"deviceTime": "2014-08-14T18:30:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f974c918-29fd-41d0-bfb7-465e727f0633"
		},
		{
			"deviceTime": "2014-08-14T18:35:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88f5cd77-6813-4c24-85b3-07eb9d17248b"
		},
		{
			"deviceTime": "2014-08-14T18:40:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b58725b8-2860-4125-a56e-1b115b6c4d13"
		},
		{
			"deviceTime": "2014-08-14T18:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c477381-ccf8-428a-a1e2-e4ac611ed8bb"
		},
		{
			"deviceTime": "2014-08-14T18:50:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6f2a1b3-de91-4c32-a456-6716164ffb15"
		},
		{
			"deviceTime": "2014-08-14T18:55:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c152c63-ade2-432e-94be-584994482e2e"
		},
		{
			"deviceTime": "2014-08-14T19:00:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbca3381-5475-4283-a88d-47b728534037"
		},
		{
			"deviceTime": "2014-08-14T19:05:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "450947b2-b715-4f0c-bbec-0331dcb82347"
		},
		{
			"deviceTime": "2014-08-14T19:06:43",
			"value": 229,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d1c8f258-90dc-4faa-8842-1333565daca8"
		},
		{
			"deviceTime": "2014-08-14T19:06:43",
			"value": 23,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "2a9e602c-c2cd-4070-958f-87f59b393bdf"
		},
		{
			"deviceTime": "2014-08-14T19:06:43",
			"id": "2a9e602c-c2cd-4070-958f-87f59b393bdf",
			"source": "demo",
			"joinKey": "465bc8cb-9aa5-480e-b6cb-a0728bcaa789",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 23
			}
		},
		{
			"deviceTime": "2014-08-14T19:06:43",
			"programmed": 1.5,
			"joinKey": "465bc8cb-9aa5-480e-b6cb-a0728bcaa789",
			"value": 0.9,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "367515ec-34c5-4bf6-9778-4143386cfec8"
		},
		{
			"deviceTime": "2014-08-14T19:10:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d15ad450-8da8-4014-87ae-98a786abdd80"
		},
		{
			"deviceTime": "2014-08-14T19:15:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1408f049-054c-44a4-970e-e94f8576195a"
		},
		{
			"deviceTime": "2014-08-14T19:20:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5f746a3-0afe-4fa0-babe-9375f69f5c10"
		},
		{
			"deviceTime": "2014-08-14T19:25:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1fa99f9d-fa0a-43a4-b36e-332d2df5d5c6"
		},
		{
			"deviceTime": "2014-08-14T19:30:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7848e0cd-4c50-4f09-b5c3-76de1952fc0f"
		},
		{
			"deviceTime": "2014-08-14T19:35:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83b3024d-ca86-4804-8576-b38aa5bbf2fe"
		},
		{
			"deviceTime": "2014-08-14T19:40:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e696c310-c357-448e-a2ce-56b049d8a4b9"
		},
		{
			"deviceTime": "2014-08-14T19:45:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d981278b-02dd-4bb0-be02-5d3b27eeee28"
		},
		{
			"deviceTime": "2014-08-14T19:50:22",
			"value": 222,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "951328fb-652c-44ff-8dc5-d42a9596bf3a"
		},
		{
			"deviceTime": "2014-08-14T19:55:22",
			"value": 229,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dee2a716-2380-4dcf-9bda-90a777b1f6a8"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-15T00:00:00",
			"start": "2014-08-14T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "fcaa7438-7804-4eaa-9125-9c490a57e981"
		},
		{
			"deviceTime": "2014-08-14T20:00:22",
			"value": 233,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "722a925f-44f8-4fa7-9b4f-f84720efac78"
		},
		{
			"deviceTime": "2014-08-14T20:05:22",
			"value": 232,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61b65247-cb9d-43f1-8dde-efc8bb6f1322"
		},
		{
			"deviceTime": "2014-08-14T20:10:22",
			"value": 232,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fb741bb-cde9-406b-ad27-9676b8329b02"
		},
		{
			"deviceTime": "2014-08-14T20:15:22",
			"value": 234,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3be91dd2-b34f-4e85-9647-56c676e22c84"
		},
		{
			"deviceTime": "2014-08-14T20:20:22",
			"value": 240,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ab01986-ed9c-47e4-a4d7-c4cac6c339db"
		},
		{
			"deviceTime": "2014-08-14T20:25:22",
			"value": 240,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ea05ee7-2a77-4200-afb0-5fc7f7806215"
		},
		{
			"deviceTime": "2014-08-14T20:30:22",
			"value": 236,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "198ead34-2333-4ba8-98b1-731093be76f1"
		},
		{
			"deviceTime": "2014-08-14T20:35:22",
			"value": 236,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "945c8edb-344a-4764-afc8-9a0e0e7859b9"
		},
		{
			"deviceTime": "2014-08-14T20:40:22",
			"value": 234,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25460802-5208-4f2d-8c80-a48e2cb70351"
		},
		{
			"deviceTime": "2014-08-14T20:45:22",
			"value": 239,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90e721b2-3871-4f85-9761-85dd79dd7580"
		},
		{
			"deviceTime": "2014-08-14T21:05:22",
			"value": 238,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cd19b8b-6bb8-4b3b-8689-77d9e5f402e8"
		},
		{
			"deviceTime": "2014-08-14T21:10:22",
			"value": 228,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcbeac5c-0995-4b9c-b355-cd743f0d3d45"
		},
		{
			"deviceTime": "2014-08-14T21:15:22",
			"value": 223,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e35defc-bea8-4d21-9acc-b99eb03aaf7d"
		},
		{
			"deviceTime": "2014-08-14T21:20:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eea1d22-f05f-4832-99e4-285c97844f0d"
		},
		{
			"deviceTime": "2014-08-14T21:25:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74cad52e-6bba-4236-8b8f-f9a0615af2a3"
		},
		{
			"deviceTime": "2014-08-14T21:30:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1a89140-863e-4d4e-af8b-4a74e6bf8afd"
		},
		{
			"deviceTime": "2014-08-14T21:35:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4d1712b-b323-4f45-a340-07eb4077f76c"
		},
		{
			"deviceTime": "2014-08-14T21:40:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "679ed368-5780-43d5-8344-6604190a8e75"
		},
		{
			"deviceTime": "2014-08-14T21:45:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8882c6c-f99b-45c1-8de2-cdd07a27ce99"
		},
		{
			"deviceTime": "2014-08-14T21:50:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc518da1-9829-4b17-9648-ebc7dfc43632"
		},
		{
			"deviceTime": "2014-08-14T22:05:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7925e721-7c3e-4e56-a68e-3cde597ed383"
		},
		{
			"deviceTime": "2014-08-14T22:10:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0b8d680-dc16-4ae7-b78d-aed08d180ef4"
		},
		{
			"deviceTime": "2014-08-14T22:15:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29fa7a53-2d16-479c-aa51-299cf5abacf3"
		},
		{
			"deviceTime": "2014-08-14T22:20:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77b2a3b8-95fe-45de-8882-2fcf7737bf48"
		},
		{
			"deviceTime": "2014-08-14T22:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1756703-981f-40cd-92ee-d6bf849c15e2"
		},
		{
			"deviceTime": "2014-08-14T22:30:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c0c96c2-c3d8-4975-a059-e401ec86c729"
		},
		{
			"deviceTime": "2014-08-14T22:35:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fff13ca0-2600-4a38-bdd4-7422714fc7fa"
		},
		{
			"deviceTime": "2014-08-14T22:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2398c56-6d5e-49c5-8dca-0a48434dac4e"
		},
		{
			"deviceTime": "2014-08-14T22:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb045b23-ff4f-4002-b973-0686930a608a"
		},
		{
			"deviceTime": "2014-08-14T22:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47b8a8a2-9aa9-436d-af6c-6f289758c0ed"
		},
		{
			"deviceTime": "2014-08-14T22:55:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcd18ec6-95a2-4003-a883-8bd60e00ef17"
		},
		{
			"deviceTime": "2014-08-14T23:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "785a00ac-f0f1-42fa-afde-1109df3af52a"
		},
		{
			"deviceTime": "2014-08-14T23:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab924736-091c-4a90-b97c-a24667b5a3a9"
		},
		{
			"deviceTime": "2014-08-14T23:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "215d772c-f12e-4c0e-9731-ea3afb89754c"
		},
		{
			"deviceTime": "2014-08-14T23:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8eb7bd28-0086-40e2-88e6-c6e84981c1be"
		},
		{
			"deviceTime": "2014-08-14T23:20:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62befb4f-1a5d-48a5-ae92-6be66b926d65"
		},
		{
			"deviceTime": "2014-08-14T23:25:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a355d166-8e9f-4d4e-9074-1a56a44f1868"
		},
		{
			"deviceTime": "2014-08-14T23:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cdf4c71-1118-4f08-9bb2-cad379087ddc"
		},
		{
			"deviceTime": "2014-08-14T23:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9670f1d7-3374-4c42-8c5b-eeec60671282"
		},
		{
			"deviceTime": "2014-08-14T23:40:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7faa638f-7aeb-472d-94ff-637ef1edb3e0"
		},
		{
			"deviceTime": "2014-08-14T23:45:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a957d706-dc9e-4cbc-b006-1c1b3b90597f"
		},
		{
			"deviceTime": "2014-08-14T23:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d48baa1c-ca58-44f7-ada2-7b8a9221ed7f"
		},
		{
			"deviceTime": "2014-08-14T23:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11023dae-aec6-4c35-a8f4-5888ac007f97"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-15T02:00:00",
			"start": "2014-08-15T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "1b99ebd4-2fff-429a-bed8-7c6439e64cd8"
		},
		{
			"deviceTime": "2014-08-15T00:00:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66b1ab43-3fa7-4880-9313-5889da2bb6bf"
		},
		{
			"deviceTime": "2014-08-15T00:05:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ee171cb-1a5e-4c4d-b205-b39570ad9139"
		},
		{
			"deviceTime": "2014-08-15T00:10:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "632a1f00-789e-4c6a-a367-31f989f8b5c4"
		},
		{
			"deviceTime": "2014-08-15T00:15:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c39c971-3bbf-4090-ac14-756c057d03a7"
		},
		{
			"deviceTime": "2014-08-15T00:20:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7409bc5-c980-4e75-b23e-59661a247404"
		},
		{
			"deviceTime": "2014-08-15T00:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c819552-9666-4231-bf3b-7f928ab2508d"
		},
		{
			"deviceTime": "2014-08-15T00:30:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a0aa073-4cbe-4283-a4ad-ba89c011e238"
		},
		{
			"deviceTime": "2014-08-15T00:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee712842-326a-49b7-9a38-52613125b039"
		},
		{
			"deviceTime": "2014-08-15T00:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7104fdf-35d3-42f7-8eff-de6924f0370e"
		},
		{
			"deviceTime": "2014-08-15T00:45:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e8f4942-a8f1-4b88-9a7c-16860fec15c2"
		},
		{
			"deviceTime": "2014-08-15T00:50:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cd13fc7-691b-4501-a692-2baa6cb939a6"
		},
		{
			"deviceTime": "2014-08-15T00:55:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90207ca8-0362-4839-97b1-5cee72246110"
		},
		{
			"deviceTime": "2014-08-15T01:00:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2e312bb-4c65-4516-a9ff-75afa0390f4c"
		},
		{
			"deviceTime": "2014-08-15T01:05:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "081835c7-d525-48ea-a28d-73583d213da0"
		},
		{
			"deviceTime": "2014-08-15T01:10:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eee03c88-f4b5-4819-8016-6a083ce908f6"
		},
		{
			"deviceTime": "2014-08-15T01:15:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6aa0f2c-b29d-4125-9bfd-1c0020410a04"
		},
		{
			"deviceTime": "2014-08-15T01:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e62ba741-79e9-42e0-8c66-af5aa0b8bab7"
		},
		{
			"deviceTime": "2014-08-15T01:25:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a9ff361-81b3-4da9-b57c-51ec8ba13e07"
		},
		{
			"deviceTime": "2014-08-15T01:30:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e1e9163-dd5a-45b9-87a7-ef0aa67dbb22"
		},
		{
			"deviceTime": "2014-08-15T01:35:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9a891a3-53b9-482e-b98f-52414038e652"
		},
		{
			"deviceTime": "2014-08-15T01:40:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d23d520-2d2b-4e04-977a-8e501e51d86c"
		},
		{
			"deviceTime": "2014-08-15T01:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "171d0a52-50e8-45f1-8990-44fdf392c81a"
		},
		{
			"deviceTime": "2014-08-15T01:50:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25444a54-e7f0-460f-a216-de8306310cb1"
		},
		{
			"deviceTime": "2014-08-15T01:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71bc03ee-8647-4f17-8814-59d8b240060f"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-15T04:00:00",
			"start": "2014-08-15T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "29755aa7-9312-455a-b1c9-b7ae82cefda9"
		},
		{
			"deviceTime": "2014-08-15T02:00:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b824930f-79d6-4c18-856e-41e896b90198"
		},
		{
			"deviceTime": "2014-08-15T02:05:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32d6663b-ba55-454c-b9e4-631256f62058"
		},
		{
			"deviceTime": "2014-08-15T02:10:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1df108c-e3a7-4dbd-88f6-6b25b3791271"
		},
		{
			"deviceTime": "2014-08-15T02:14:26",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "6aea14b1-95c3-478f-9a6c-3b11d34fdc17"
		},
		{
			"deviceTime": "2014-08-15T02:14:26",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "cb778e2d-d2d9-4c3e-ba63-dcddde525f64"
		},
		{
			"deviceTime": "2014-08-15T02:14:26",
			"id": "cb778e2d-d2d9-4c3e-ba63-dcddde525f64",
			"source": "demo",
			"joinKey": "86b76fd5-2bf5-49bd-bdc1-5c5a300a7c9a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 62
			}
		},
		{
			"deviceTime": "2014-08-15T02:14:26",
			"programmed": 4.1,
			"joinKey": "86b76fd5-2bf5-49bd-bdc1-5c5a300a7c9a",
			"value": 4.1,
			"id": "6be1b7d0-42fd-4b61-a6c3-c28c11987a12",
			"source": "demo",
			"recommended": 4.1,
			"extendedDelivery": 4.1,
			"deviceId": "Demo - 123",
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-15T02:15:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27e1fd8c-61c1-4040-9196-1ff1289fef90"
		},
		{
			"deviceTime": "2014-08-15T02:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ebdc47b-34a3-4d35-87af-de98b35aadff"
		},
		{
			"deviceTime": "2014-08-15T02:25:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a884d5b1-53ed-4cfd-a95c-160c3c9e1766"
		},
		{
			"deviceTime": "2014-08-15T02:30:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2729724-7479-4ceb-b01e-876d2b1e13f9"
		},
		{
			"deviceTime": "2014-08-15T02:35:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b117ee53-5e93-40df-8052-4cb9e20c8509"
		},
		{
			"deviceTime": "2014-08-15T02:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38626150-6623-4455-821c-c65245f93357"
		},
		{
			"deviceTime": "2014-08-15T02:45:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17f7a8a5-983b-4a57-aa19-440ae5ac181d"
		},
		{
			"deviceTime": "2014-08-15T02:50:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "395502e8-d26c-4fd1-9c9c-54151cc46c90"
		},
		{
			"deviceTime": "2014-08-15T02:55:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c07a35e9-3bf1-4399-adf4-576ac50d930f"
		},
		{
			"deviceTime": "2014-08-15T03:00:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbd51d72-7ff2-4898-b14b-bfed2ae4e593"
		},
		{
			"deviceTime": "2014-08-15T03:05:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17ad8810-998a-4cf8-8d76-542abc7c68a0"
		},
		{
			"deviceTime": "2014-08-15T03:10:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eef27c5-c00e-4806-a4cd-7ab75886738f"
		},
		{
			"deviceTime": "2014-08-15T03:15:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f15cf28-317c-4a22-8b14-1a1c2a5e5f9b"
		},
		{
			"deviceTime": "2014-08-15T03:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eba3e76-845f-48cb-be90-97689ecc5777"
		},
		{
			"deviceTime": "2014-08-15T03:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91a11c2f-ac7a-4294-a3a3-e0baa1b7cff1"
		},
		{
			"deviceTime": "2014-08-15T03:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f0f00f0-42d3-4635-abf6-81e0c069469d"
		},
		{
			"deviceTime": "2014-08-15T03:35:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd30f339-6695-4caf-a9d5-003c875f12ae"
		},
		{
			"deviceTime": "2014-08-15T03:40:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f16ce02-1cbd-4952-b235-03054a82a4e5"
		},
		{
			"deviceTime": "2014-08-15T03:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2853e59-d85c-465d-8d85-5b48d02e5bdc"
		},
		{
			"deviceTime": "2014-08-15T03:50:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55a404b1-6aa4-4770-ae67-50b120863e4c"
		},
		{
			"deviceTime": "2014-08-15T03:55:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91ceb362-3a99-46ca-8e10-8a20bdcf698e"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-15T05:00:00",
			"start": "2014-08-15T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "a3c7fd00-b9b9-487c-ac3d-d7024aa96a99"
		},
		{
			"deviceTime": "2014-08-15T04:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0ed26ec-d87a-403d-ac0d-107bc2fee8a4"
		},
		{
			"deviceTime": "2014-08-15T04:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "824e6bfe-f892-46fe-b11f-8ac575141f4c"
		},
		{
			"deviceTime": "2014-08-15T04:10:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "868315fb-d118-4429-bf74-78e9b375bac9"
		},
		{
			"deviceTime": "2014-08-15T04:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5491aaf-e3a5-42c8-adc9-7beae0873cde"
		},
		{
			"deviceTime": "2014-08-15T04:20:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dacb6348-40c6-4fa7-8f88-c90af86e18d9"
		},
		{
			"deviceTime": "2014-08-15T04:25:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9be6ce4-5ffb-4e26-9310-773c361f58d2"
		},
		{
			"deviceTime": "2014-08-15T04:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4dd2a9ed-93ce-43fd-94d3-c6f7719ec805"
		},
		{
			"deviceTime": "2014-08-15T04:35:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "692e6225-fe8b-417c-8560-3db8c5f7ef10"
		},
		{
			"deviceTime": "2014-08-15T04:40:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "904ff3a7-a189-4bd4-88be-7fb3d96dba97"
		},
		{
			"deviceTime": "2014-08-15T04:45:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8e952cb-77da-4205-9b16-a9e8c1a55d4d"
		},
		{
			"deviceTime": "2014-08-15T04:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76fc67f3-f313-477a-a4bd-cdf9d2fa3824"
		},
		{
			"deviceTime": "2014-08-15T04:55:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6aa72698-8bc4-4485-b630-9bb9a2fbe91c"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-15T06:00:00",
			"start": "2014-08-15T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "0a7fd847-00ba-4ebc-b5da-090cc65627d0"
		},
		{
			"deviceTime": "2014-08-15T05:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0818d9de-d7fc-45b3-87b2-7e6e1e11fa3a"
		},
		{
			"deviceTime": "2014-08-15T05:05:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b13251a-aabe-4d6b-aec7-7cc620bfaf62"
		},
		{
			"deviceTime": "2014-08-15T05:10:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46a50571-b844-4c5e-9358-7ffa930cd68b"
		},
		{
			"deviceTime": "2014-08-15T05:12:19",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "7aa816bc-56f7-4691-af41-8fe2c2ea34b9"
		},
		{
			"deviceTime": "2014-08-15T05:12:19",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "4f085073-1cd0-4b84-96c6-60c850cb366d"
		},
		{
			"deviceTime": "2014-08-15T05:12:19",
			"id": "4f085073-1cd0-4b84-96c6-60c850cb366d",
			"source": "demo",
			"joinKey": "92aadf0f-b2b0-4e5b-8f06-e6d8822263df",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 40
			}
		},
		{
			"deviceTime": "2014-08-15T05:12:19",
			"suspendedAt": "2014-08-15T05:34:49",
			"programmed": 2.7,
			"joinKey": "92aadf0f-b2b0-4e5b-8f06-e6d8822263df",
			"value": 2.7,
			"source": "demo",
			"recommended": 2.7,
			"extendedDelivery": 2.7,
			"deviceId": "Demo - 123",
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "ae10218b-a618-4ee1-986c-0327cf7d8bf1"
		},
		{
			"deviceTime": "2014-08-15T05:15:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2edf7485-875f-4db2-9b27-0f6495954e7a"
		},
		{
			"deviceTime": "2014-08-15T05:16:01",
			"value": 1.7,
			"source": "demo",
			"recommended": 1.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "ecbf4e63-c8dc-482f-9b2e-5efabfb2cb2f"
		},
		{
			"deviceTime": "2014-08-15T05:20:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e5bf5b7-01af-4815-a17d-1b23013279c5"
		},
		{
			"deviceTime": "2014-08-15T05:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ff65d92-abef-47e4-b31d-cbf150c4963d"
		},
		{
			"deviceTime": "2014-08-15T05:30:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3940847c-8d58-4d74-9afd-2b8bbebc2646"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-15T05:34:49",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "4286f7ad-84ad-4bed-8aec-56afdfe0fff3"
		},
		{
			"deviceTime": "2014-08-15T05:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba2e0dd0-625b-4b5e-a6f7-8ff3806d917d"
		},
		{
			"deviceTime": "2014-08-15T05:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "075677b2-c6f9-4ab4-9a04-659faa0e1f32"
		},
		{
			"deviceTime": "2014-08-15T05:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54aad528-7e77-46d3-a5b2-1dff39777a77"
		},
		{
			"deviceTime": "2014-08-15T05:50:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1386d9a2-1331-433a-804b-c66020802648"
		},
		{
			"deviceTime": "2014-08-15T05:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00ee3ea9-7a0e-4b7b-80a7-78a84fa378ff"
		},
		{
			"delivered": 1,
			"end": "2014-08-15T09:00:00",
			"start": "2014-08-15T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "96f8671a-0c91-410a-8d88-9858fda7e575"
		},
		{
			"deviceTime": "2014-08-15T06:00:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcf25000-d010-4cd9-8da6-7b3ed95f4ce0"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-15T06:01:19",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "d54ac738-1ff6-4f3d-ac99-7161cce41e4d",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-15T05:34:49",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "4286f7ad-84ad-4bed-8aec-56afdfe0fff3"
			}
		},
		{
			"deviceTime": "2014-08-15T06:05:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18f53841-5a96-4a3c-a7cd-331c0f9c1cbf"
		},
		{
			"deviceTime": "2014-08-15T06:10:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c83b862-f36a-48fb-b040-af5144109cef"
		},
		{
			"deviceTime": "2014-08-15T06:15:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15e53683-86c2-4ada-a140-27af07e7dc18"
		},
		{
			"deviceTime": "2014-08-15T06:20:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "444b8ac4-998b-46e2-84a0-f14e9145882b"
		},
		{
			"deviceTime": "2014-08-15T06:25:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34640a0b-6c9e-415e-8990-9dab41face36"
		},
		{
			"deviceTime": "2014-08-15T06:30:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20bff802-47c1-4b50-a3e1-b1dfb37ebd5b"
		},
		{
			"deviceTime": "2014-08-15T06:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a79e04ba-865a-46d7-a03f-c7ec2528daff"
		},
		{
			"deviceTime": "2014-08-15T06:40:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6082bd7a-216a-4f35-9d57-2b22b42872cc"
		},
		{
			"deviceTime": "2014-08-15T06:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e1f1271-a901-449c-a7b8-4a5f612c64f8"
		},
		{
			"deviceTime": "2014-08-15T06:50:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad4b9f42-8d54-461c-90c5-04ccf9893167"
		},
		{
			"deviceTime": "2014-08-15T06:55:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68124bef-f0c0-4987-9958-c37d7be8b592"
		},
		{
			"deviceTime": "2014-08-15T07:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5179d0da-94ea-42eb-91f7-317e47b385c8"
		},
		{
			"deviceTime": "2014-08-15T07:03:12",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e9025ff3-5842-4351-8333-15b16650827c"
		},
		{
			"deviceTime": "2014-08-15T07:03:12",
			"value": 19,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "31996f23-643e-4ae0-a773-494af9e2b5df"
		},
		{
			"deviceTime": "2014-08-15T07:03:12",
			"id": "31996f23-643e-4ae0-a773-494af9e2b5df",
			"source": "demo",
			"joinKey": "68d92ebd-dfd4-4415-90e4-20803a558959",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 19
			}
		},
		{
			"deviceTime": "2014-08-15T07:03:12",
			"programmed": 1.3,
			"joinKey": "68d92ebd-dfd4-4415-90e4-20803a558959",
			"value": 1.3,
			"source": "demo",
			"recommended": 1.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "bcbb0876-4852-4b0d-88bb-67fd7b24908e"
		},
		{
			"deviceTime": "2014-08-15T07:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5caaee2d-142e-4e71-9463-6d12a47ddb71"
		},
		{
			"deviceTime": "2014-08-15T07:10:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ada684fb-3300-42f8-9cc3-724cd479d402"
		},
		{
			"deviceTime": "2014-08-15T07:15:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7aa39729-3ac9-4054-b58a-583c4d046b1f"
		},
		{
			"deviceTime": "2014-08-15T07:20:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ceec01f5-1ddf-4b7d-94fe-8c5c22943ad8"
		},
		{
			"messageText": "Ball tip sirloin elit qui pork fugiat do chuck nulla et. Shank meatloaf proident doner eu, salami deserunt. Turkey dolor qui shoulder pig adipisicing bacon short loin kevin deserunt in flank culpa andouille ea.",
			"parentMessage": "",
			"utcTime": "2014-08-15T07:30:16Z",
			"type": "message",
			"id": "76665803-8bea-4ab5-b691-3c7d9a579573"
		},
		{
			"deviceTime": "2014-08-15T07:35:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c5b1329-4b32-4f43-8523-d7117264154b"
		},
		{
			"deviceTime": "2014-08-15T07:40:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc37132e-e7a5-48df-87db-29824cc48525"
		},
		{
			"deviceTime": "2014-08-15T07:45:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10d90f6a-462c-4b6b-9798-a0de76ac0918"
		},
		{
			"deviceTime": "2014-08-15T07:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f9157ea-9875-4a02-9d3a-6e1e5bc7ef89"
		},
		{
			"messageText": "Dolor quis proident culpa capicola porchetta bacon andouille ball tip.",
			"parentMessage": "76665803-8bea-4ab5-b691-3c7d9a579573",
			"utcTime": "2014-08-15T07:53:16Z",
			"type": "message",
			"id": "9074a63d-67a3-42dc-b36f-566bb02582b0"
		},
		{
			"deviceTime": "2014-08-15T07:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b0701d9-a6e8-4a81-a5ad-1d204e53102e"
		},
		{
			"messageText": "Aliqua t-bone jowl consectetur. Ex short ribs biltong fugiat. Kielbasa salami minim, pork qui ground round swine venison occaecat tri-tip bacon nostrud.",
			"parentMessage": "76665803-8bea-4ab5-b691-3c7d9a579573",
			"utcTime": "2014-08-15T07:56:16Z",
			"type": "message",
			"id": "b907887c-6487-4bd7-a312-8a3d06816bb5"
		},
		{
			"messageText": "Beef aliquip sed tenderloin ullamco. Pork belly pig laborum prosciutto porchetta. Exercitation meatloaf ground round id tongue, nostrud consectetur jerky shank swine short ribs shankle corned beef spare ribs venison.",
			"parentMessage": "76665803-8bea-4ab5-b691-3c7d9a579573",
			"utcTime": "2014-08-15T07:57:16Z",
			"type": "message",
			"id": "244dccbf-bab4-4abb-8a6c-b0f5d62cdb74"
		},
		{
			"messageText": "Jerky eu tri-tip non, esse filet mignon swine short ribs laborum shank et. Salami duis eiusmod aliqua id.",
			"parentMessage": "76665803-8bea-4ab5-b691-3c7d9a579573",
			"utcTime": "2014-08-15T07:57:16Z",
			"type": "message",
			"id": "d648b818-5588-4bc9-9e88-d4301c5a4d66"
		},
		{
			"deviceTime": "2014-08-15T08:00:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7ed5970-b343-478c-ab89-603431727f69"
		},
		{
			"deviceTime": "2014-08-15T08:05:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8253040d-c93d-44b7-9d60-4e0d80da3c1b"
		},
		{
			"deviceTime": "2014-08-15T08:10:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33ec41e9-3bab-41a0-9533-56f2fa557bb7"
		},
		{
			"deviceTime": "2014-08-15T08:15:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44d5622e-7b9b-4f55-aee1-b0335fa252f3"
		},
		{
			"messageText": "Pork ut venison, dolore voluptate fatback capicola anim spare ribs jowl boudin. Short loin beef reprehenderit officia cow, tri-tip corned beef aliqua.",
			"parentMessage": "76665803-8bea-4ab5-b691-3c7d9a579573",
			"utcTime": "2014-08-15T08:16:16Z",
			"type": "message",
			"id": "303fd2b0-0c54-49a6-81b2-59c3a836106a"
		},
		{
			"deviceTime": "2014-08-15T08:20:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1eac3e6-905b-4997-bb6f-ac947a4a9517"
		},
		{
			"deviceTime": "2014-08-15T08:25:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0475d4d2-40a6-43fd-809e-e686a0f1c8c5"
		},
		{
			"deviceTime": "2014-08-15T08:30:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b419496-74ef-4f50-8ff9-f527ef60d18f"
		},
		{
			"deviceTime": "2014-08-15T08:35:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f88740b8-134e-4218-9c92-4498f8810b2e"
		},
		{
			"deviceTime": "2014-08-15T08:40:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c6eafd4-9dc5-4b1e-8674-9590c8080af9"
		},
		{
			"deviceTime": "2014-08-15T08:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b456a59e-b59e-4201-a3bb-430456e87115"
		},
		{
			"deviceTime": "2014-08-15T08:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b36e67f-ba26-41aa-b212-d84e31d7081b"
		},
		{
			"deviceTime": "2014-08-15T08:55:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d4a0e82-72a4-41d7-bbff-036be94499dc"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-15T15:00:00",
			"start": "2014-08-15T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "53dc0489-74d5-45ef-81e4-e9d3b92af8bb"
		},
		{
			"deviceTime": "2014-08-15T09:00:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13949344-d0a3-4647-b3a5-3e9d52e1874d"
		},
		{
			"deviceTime": "2014-08-15T09:05:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0dab627d-4aff-4eab-b59b-8e1532cde29b"
		},
		{
			"deviceTime": "2014-08-15T09:10:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4d6f87b-9cc9-4153-862e-4370ede2b750"
		},
		{
			"deviceTime": "2014-08-15T09:15:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7ff643b-b952-4442-bf25-68a23aacc48f"
		},
		{
			"deviceTime": "2014-08-15T09:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3017ae18-0965-4ddd-a1a2-503f31fa2b16"
		},
		{
			"deviceTime": "2014-08-15T09:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7cc29f4-1f68-4e52-96be-9894c5c13aa0"
		},
		{
			"deviceTime": "2014-08-15T09:27:35",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d6e52188-7ba7-4906-b425-bc2bc07c4de4"
		},
		{
			"deviceTime": "2014-08-15T09:30:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5521ad5c-ed71-4f78-aff1-d4f822ff0850"
		},
		{
			"deviceTime": "2014-08-15T09:35:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29b6d050-cdbc-4532-b2e4-29c9374caa2e"
		},
		{
			"deviceTime": "2014-08-15T09:40:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d4cdd2f-acee-41c0-9fec-5b33e6eb920b"
		},
		{
			"deviceTime": "2014-08-15T09:45:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9ccaf6e-4f44-48e8-b297-9e6c8a00d401"
		},
		{
			"deviceTime": "2014-08-15T09:50:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67db2f9a-1090-44f5-8811-0e311b6430f6"
		},
		{
			"deviceTime": "2014-08-15T09:55:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22286f34-a9ae-4fa5-b631-c16fdb792c3c"
		},
		{
			"deviceTime": "2014-08-15T10:00:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adcf1a2f-00e9-4486-b986-9567583e3b6e"
		},
		{
			"end": "2014-08-15T12:04:01",
			"start": "2014-08-15T10:04:01",
			"percent": 1.45,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "d2ee987f-afb9-48f1-811d-5740b39f4140"
		},
		{
			"deviceTime": "2014-08-15T10:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f632915a-bbfb-44b3-a2d6-eaf925817396"
		},
		{
			"deviceTime": "2014-08-15T10:10:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d123882d-5d16-476a-b8d7-58a3458c851a"
		},
		{
			"deviceTime": "2014-08-15T10:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10abd836-5a1b-4c92-8a4e-12165083341d"
		},
		{
			"deviceTime": "2014-08-15T10:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc8c411f-275f-44af-909e-323de3864b6d"
		},
		{
			"deviceTime": "2014-08-15T10:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0ee7fff-5e2e-447c-b8a2-cc0e4f5ea271"
		},
		{
			"deviceTime": "2014-08-15T10:30:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ae2381b-95f9-4f88-a776-11dad66b34e6"
		},
		{
			"deviceTime": "2014-08-15T10:35:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a9bb40c-4413-4c30-97f1-8bf6301b9dd8"
		},
		{
			"deviceTime": "2014-08-15T10:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "faf15e3b-5323-41ce-8dce-41a0df399a58"
		},
		{
			"deviceTime": "2014-08-15T10:45:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8016288-90c9-4f5f-a333-254d196cf338"
		},
		{
			"deviceTime": "2014-08-15T10:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87b8ecb4-961e-47af-af9f-9040db6f8318"
		},
		{
			"deviceTime": "2014-08-15T10:55:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59304bf3-89ee-4b48-bc46-616018e55490"
		},
		{
			"deviceTime": "2014-08-15T11:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d65ba03-aa0b-48ab-8d1c-f596ae970659"
		},
		{
			"deviceTime": "2014-08-15T11:05:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ab536a5-8fb7-4a52-8a48-67d01539c527"
		},
		{
			"deviceTime": "2014-08-15T11:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33b68de3-5d78-4255-972a-fce823b816f3"
		},
		{
			"deviceTime": "2014-08-15T11:15:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bee8192-8c31-4ce4-8dc4-962ca6f93ef8"
		},
		{
			"deviceTime": "2014-08-15T11:19:14",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "aa100c85-f656-43f0-aab9-4d4abdfdc1c2"
		},
		{
			"deviceTime": "2014-08-15T11:19:14",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "6b8ddd9e-4705-41fe-b27f-2c4779378425"
		},
		{
			"deviceTime": "2014-08-15T11:19:14",
			"id": "6b8ddd9e-4705-41fe-b27f-2c4779378425",
			"source": "demo",
			"joinKey": "a7eac622-d180-4f02-87e6-9ca2abbb71d3",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 58
			}
		},
		{
			"deviceTime": "2014-08-15T11:19:14",
			"programmed": 4.1,
			"joinKey": "a7eac622-d180-4f02-87e6-9ca2abbb71d3",
			"value": 0.4,
			"source": "demo",
			"recommended": 3.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b6556e70-6d90-4a1a-9974-d55f69b1c6dd"
		},
		{
			"deviceTime": "2014-08-15T11:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6114e25-b5ed-48db-80ae-108a6a36a900"
		},
		{
			"deviceTime": "2014-08-15T11:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f337edbd-e0e1-475d-b690-f709501360d5"
		},
		{
			"deviceTime": "2014-08-15T11:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa33a387-68b5-4ae4-8894-07643228abd1"
		},
		{
			"deviceTime": "2014-08-15T11:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db6e3d78-4be3-46c4-8400-726eaf1e56c7"
		},
		{
			"deviceTime": "2014-08-15T11:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cbf7a93-aa9e-4d00-a09c-3c143a4bc083"
		},
		{
			"deviceTime": "2014-08-15T11:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b171dead-4124-4f78-a11a-5dd80171c5ae"
		},
		{
			"deviceTime": "2014-08-15T11:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ee62959-3053-4fd2-b44f-cb3755a14bb2"
		},
		{
			"deviceTime": "2014-08-15T11:55:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d620678-484c-4e30-8cd5-1aa5152389ec"
		},
		{
			"deviceTime": "2014-08-15T12:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd3ba37e-5385-41d2-aeca-0187fcedd6ef"
		},
		{
			"deviceTime": "2014-08-15T12:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c712c40e-2874-44ba-b2b2-b6bcb95c2117"
		},
		{
			"deviceTime": "2014-08-15T12:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70bc30ef-21af-4773-b029-2abbf404f092"
		},
		{
			"deviceTime": "2014-08-15T12:15:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25b13a2a-3c1b-4362-b39d-ea40be4e8ac5"
		},
		{
			"deviceTime": "2014-08-15T12:20:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd394ae8-a5cb-4ac9-a054-ab90412f06c7"
		},
		{
			"deviceTime": "2014-08-15T12:25:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b0bc92d-7db1-496c-bff8-468b8c7e6a0c"
		},
		{
			"deviceTime": "2014-08-15T12:30:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "caa95e38-4858-469e-a99e-1aa8a63d982c"
		},
		{
			"deviceTime": "2014-08-15T12:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ce243c5-2eba-4ccb-867a-13d7ff689002"
		},
		{
			"deviceTime": "2014-08-15T12:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69f31eae-5183-47d0-bbb6-2b63e4bb5642"
		},
		{
			"deviceTime": "2014-08-15T12:45:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5bfbcb0e-e909-4157-a1f0-cbca61c6b4a8"
		},
		{
			"deviceTime": "2014-08-15T12:50:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2e0ede4-312a-43db-a040-87f18c9f289c"
		},
		{
			"deviceTime": "2014-08-15T12:55:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96e7fd19-5f5f-4315-b3ae-e03f7d72f073"
		},
		{
			"deviceTime": "2014-08-15T13:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e27b317-0455-4ed7-99d3-c62bb1243309"
		},
		{
			"deviceTime": "2014-08-15T13:05:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38f02645-22f0-4f10-8baa-7f1e4ee7c171"
		},
		{
			"deviceTime": "2014-08-15T13:10:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "811c38aa-5995-4138-9b83-0fa6db46865a"
		},
		{
			"deviceTime": "2014-08-15T13:15:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1701e520-9890-4841-8d36-5da2bc6f070c"
		},
		{
			"deviceTime": "2014-08-15T13:20:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afa2000e-ae8f-47f9-94eb-36fc6bfaa50f"
		},
		{
			"deviceTime": "2014-08-15T13:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b517c1af-060b-4aa9-b630-9a1168c6d4eb"
		},
		{
			"deviceTime": "2014-08-15T13:30:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbc0476b-cd3e-4152-aff0-b22c8819875a"
		},
		{
			"deviceTime": "2014-08-15T13:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f03a53f4-051e-4344-a5df-8824b042c46f"
		},
		{
			"deviceTime": "2014-08-15T13:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3112bddf-e70c-4c85-9a8a-c35b1cc3a43d"
		},
		{
			"deviceTime": "2014-08-15T13:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05a9d5fe-dc7a-4108-8eca-a983094cedfd"
		},
		{
			"deviceTime": "2014-08-15T13:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a902c8a-747b-41d2-be3c-2e646dd0bd16"
		},
		{
			"deviceTime": "2014-08-15T13:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e85ad164-f7b6-420d-9e5c-e28b295ea83f"
		},
		{
			"deviceTime": "2014-08-15T14:00:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81360782-a3f4-405c-a2a3-fef45d4bd71f"
		},
		{
			"deviceTime": "2014-08-15T14:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d22f395-735e-460d-8a78-c4972d99d0f5"
		},
		{
			"deviceTime": "2014-08-15T14:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e741288e-6ce8-45ec-a469-d8f8258ec34c"
		},
		{
			"deviceTime": "2014-08-15T14:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "265db993-fbb5-46dc-8d43-9405b2d80093"
		},
		{
			"deviceTime": "2014-08-15T14:15:23",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "000a3e9b-7d21-4110-a0dc-f80925b05348"
		},
		{
			"deviceTime": "2014-08-15T14:20:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9f2d2fa-e506-48fe-a9e5-9c7f4facbbe4"
		},
		{
			"deviceTime": "2014-08-15T14:25:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ecc6224-a59a-4531-ae36-44c630405840"
		},
		{
			"deviceTime": "2014-08-15T14:30:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab4666e0-ef8c-4d47-9868-0e72e2c4e2c7"
		},
		{
			"deviceTime": "2014-08-15T14:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1912363a-4f0b-43f6-83c3-669dea10fe5a"
		},
		{
			"deviceTime": "2014-08-15T14:40:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4273f14-c53f-4c8d-be39-8da8cc3bea7c"
		},
		{
			"deviceTime": "2014-08-15T14:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "352022f7-3268-44bf-83aa-57936c233ea8"
		},
		{
			"deviceTime": "2014-08-15T14:50:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61bf5ff6-b743-41e7-b102-f59fb86715ea"
		},
		{
			"deviceTime": "2014-08-15T14:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65ff726e-4a39-48d7-8a3c-f6a4915502db"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-15T20:00:00",
			"start": "2014-08-15T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "6362df6d-5554-4a81-8ae1-b3056038bb70"
		},
		{
			"deviceTime": "2014-08-15T15:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f721e14-4625-4c73-9e00-0f5bbbc60dd8"
		},
		{
			"deviceTime": "2014-08-15T15:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a57a3bb-480f-4920-9c59-b1d607d2fa85"
		},
		{
			"deviceTime": "2014-08-15T15:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5309be9-8ecd-45bb-b1aa-29ae36a9e98b"
		},
		{
			"deviceTime": "2014-08-15T15:15:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6cd1f79-9a48-44f7-a70a-f86c7357718f"
		},
		{
			"deviceTime": "2014-08-15T15:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9afb57b3-b6c2-4afc-b973-33f20dc2ae20"
		},
		{
			"deviceTime": "2014-08-15T15:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75e1e4bf-fb94-493a-8cb1-ee0545634adc"
		},
		{
			"deviceTime": "2014-08-15T15:30:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f4a2d4a-0eb5-47b0-8603-013e0171eb49"
		},
		{
			"deviceTime": "2014-08-15T15:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff585598-55c5-4796-9f88-9adaf8fa4a54"
		},
		{
			"deviceTime": "2014-08-15T15:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2e20c8e-c9ec-4399-9456-1a547608997f"
		},
		{
			"deviceTime": "2014-08-15T15:45:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "360d8f54-00e9-465f-b852-601ab5c28549"
		},
		{
			"deviceTime": "2014-08-15T16:15:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57dd94cc-898a-4439-97a1-cc3415d78401"
		},
		{
			"deviceTime": "2014-08-15T16:20:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c412b6c-846c-4fee-ba60-dd64e0e963da"
		},
		{
			"deviceTime": "2014-08-15T16:25:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb55492c-640c-4919-99f2-f927ef05ec6a"
		},
		{
			"deviceTime": "2014-08-15T16:30:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6d45eb1-4816-47f6-8105-3a964a694f15"
		},
		{
			"deviceTime": "2014-08-15T16:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e318b2c-ab68-44f9-8ebb-49e157d832fa"
		},
		{
			"deviceTime": "2014-08-15T17:10:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21db67bb-d53c-4c69-99f2-fca0b88c718e"
		},
		{
			"deviceTime": "2014-08-15T17:15:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e37159a1-4d71-47d1-aa6b-e3051539fb4f"
		},
		{
			"deviceTime": "2014-08-15T17:19:01",
			"value": 5.9,
			"source": "demo",
			"recommended": 5.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b2833a2d-6a23-4071-a2bb-def63552d019"
		},
		{
			"deviceTime": "2014-08-15T17:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e937517-505c-40d3-8ee3-fdc2672407b7"
		},
		{
			"deviceTime": "2014-08-15T17:25:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "495cf0c3-3899-46c2-a920-128815516bdf"
		},
		{
			"deviceTime": "2014-08-15T17:30:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d432949-aedd-41a4-8470-c709c7763547"
		},
		{
			"deviceTime": "2014-08-15T17:35:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "918e3c70-d18a-413b-aa63-c70500d4bae1"
		},
		{
			"deviceTime": "2014-08-15T17:40:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "956e6b08-8307-4eda-bfd0-e7d6cfebfef1"
		},
		{
			"deviceTime": "2014-08-15T17:45:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9039459-f583-403c-a7f8-46934f8b798b"
		},
		{
			"deviceTime": "2014-08-15T17:49:59",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "bcb9d946-0187-4cc4-ac74-c0c402c50836"
		},
		{
			"deviceTime": "2014-08-15T17:49:59",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "87e19fa8-107d-4869-82b7-3145cbcf950f"
		},
		{
			"deviceTime": "2014-08-15T17:49:59",
			"id": "87e19fa8-107d-4869-82b7-3145cbcf950f",
			"source": "demo",
			"joinKey": "4cc290ee-1629-4609-923a-8214c65a5312",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 42
			}
		},
		{
			"deviceTime": "2014-08-15T17:49:59",
			"programmed": 2.5,
			"joinKey": "4cc290ee-1629-4609-923a-8214c65a5312",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "4b0de650-925e-41be-8569-dcda9d5dc60c"
		},
		{
			"deviceTime": "2014-08-15T17:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dccd18d2-7ac6-4344-8f44-7de9eef81bae"
		},
		{
			"deviceTime": "2014-08-15T17:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70ce235a-ed9d-4432-a16d-5d2fb03f2c1d"
		},
		{
			"deviceTime": "2014-08-15T18:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65a41b2a-8d8d-4bf0-be9a-3f7eb24c9a72"
		},
		{
			"deviceTime": "2014-08-15T18:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6658fc00-d386-45bd-8bc9-6640d6af7ace"
		},
		{
			"deviceTime": "2014-08-15T18:10:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54589438-29d9-4e97-901a-b9fcb08dbb40"
		},
		{
			"deviceTime": "2014-08-15T18:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d4aacd0-ae43-4018-b502-92c167ca91cf"
		},
		{
			"deviceTime": "2014-08-15T18:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea00da1f-5df6-42d0-a425-de8845e31e58"
		},
		{
			"deviceTime": "2014-08-15T18:25:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "897b139d-24a3-4fb9-9f5e-ebe8cc4d1296"
		},
		{
			"deviceTime": "2014-08-15T18:30:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a87153d-6325-45ee-8a66-be97c2a32160"
		},
		{
			"deviceTime": "2014-08-15T18:35:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90067839-92ef-40f8-a669-d1a3e308d409"
		},
		{
			"deviceTime": "2014-08-15T18:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93e243cc-0563-431c-806a-14ae756d11e6"
		},
		{
			"deviceTime": "2014-08-15T18:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1924f7e-1c04-4dce-8f16-87b56e663a66"
		},
		{
			"deviceTime": "2014-08-15T18:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62ddb5cb-443b-4af1-b7f0-1a9d2e441df8"
		},
		{
			"deviceTime": "2014-08-15T18:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4534c546-7b8e-4456-ab10-ba793117dcdf"
		},
		{
			"deviceTime": "2014-08-15T19:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4e40a99-0be4-4eb3-9a91-a16564eb6c4d"
		},
		{
			"deviceTime": "2014-08-15T19:05:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9baa9d4d-3c02-42c2-aa1c-299aaaf149e5"
		},
		{
			"deviceTime": "2014-08-15T19:10:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf22b1fc-308b-4fac-9d7a-0231db36b841"
		},
		{
			"deviceTime": "2014-08-15T19:15:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21cf0369-3161-4f75-8ff2-e790a4117bf4"
		},
		{
			"deviceTime": "2014-08-15T19:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a901b3c0-7b9e-43bf-9a16-65a361e14423"
		},
		{
			"deviceTime": "2014-08-15T19:25:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ca859b5-6eab-4821-9f1a-a5afb1418d83"
		},
		{
			"deviceTime": "2014-08-15T19:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c90f35fc-638a-475c-997e-ef35eadbfa68"
		},
		{
			"deviceTime": "2014-08-15T19:35:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ef6fe77-8704-4c63-976b-7a06f0071946"
		},
		{
			"deviceTime": "2014-08-15T19:40:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38f619fe-ab90-4cb2-a385-eee2489d615e"
		},
		{
			"deviceTime": "2014-08-15T19:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c7d791d-77f7-47a1-b4b2-a51dc89af891"
		},
		{
			"deviceTime": "2014-08-15T19:50:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1617fdde-9e1f-4328-a167-4b1d99da81e8"
		},
		{
			"deviceTime": "2014-08-15T19:55:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c480e29a-e097-4889-8fea-0d32b35ef2b9"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-16T00:00:00",
			"start": "2014-08-15T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "e2fe74ff-44ea-4a71-8e47-df493ca84420"
		},
		{
			"deviceTime": "2014-08-15T20:00:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f93260c0-75c9-457a-a9a6-85e3d76b067a"
		},
		{
			"deviceTime": "2014-08-15T20:05:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcbb3506-9500-4483-ba41-f6453be35370"
		},
		{
			"deviceTime": "2014-08-15T20:10:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdc04b91-ac83-4d5c-85ec-341f3daa26bd"
		},
		{
			"deviceTime": "2014-08-15T20:15:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e5e61a4-bdf1-4a11-9127-cfe23f024dba"
		},
		{
			"deviceTime": "2014-08-15T20:20:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f86a6990-c34d-4cbd-866e-d87ae6dc788e"
		},
		{
			"deviceTime": "2014-08-15T20:25:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b478e837-9c99-4754-a9ef-2e5fc5245861"
		},
		{
			"deviceTime": "2014-08-15T20:30:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d797b68-40f2-45be-95b6-aed9ffdd54ca"
		},
		{
			"deviceTime": "2014-08-15T20:35:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6ce4d1c-f20b-40d5-8926-d5434fa36202"
		},
		{
			"deviceTime": "2014-08-15T20:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31ce683a-cf84-4381-a4f0-dd8e2d762ae9"
		},
		{
			"deviceTime": "2014-08-15T20:45:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44789151-7f92-4169-9a52-b6bb8559d040"
		},
		{
			"deviceTime": "2014-08-15T20:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d76698d-5e55-489f-996d-4a669ac71a14"
		},
		{
			"deviceTime": "2014-08-15T20:55:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ab3d06e-90a2-4f51-bd94-0699a3b867dc"
		},
		{
			"deviceTime": "2014-08-15T21:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "999cecf8-2a1b-42a2-929a-e1a7d9c5eb06"
		},
		{
			"deviceTime": "2014-08-15T21:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6b205d7-0401-466c-806f-9d06a7de894d"
		},
		{
			"deviceTime": "2014-08-15T21:10:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e04eb46-e124-45d0-9db9-9ede28a33b7a"
		},
		{
			"deviceTime": "2014-08-15T21:15:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01ab5d71-91e6-4991-b05a-44f385cb1250"
		},
		{
			"deviceTime": "2014-08-15T21:20:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0002aa6e-5562-408e-b6b5-b5146eedf3d9"
		},
		{
			"deviceTime": "2014-08-15T21:25:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23b4d62b-d3c8-41bb-8d2e-4b77615b3f09"
		},
		{
			"deviceTime": "2014-08-15T21:30:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f3b1f29-5210-4350-80da-a7b480476ff5"
		},
		{
			"deviceTime": "2014-08-15T21:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8cdeae4-8671-47d4-8d92-3e70e5699210"
		},
		{
			"deviceTime": "2014-08-15T21:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b8c92e3-af6b-4f1a-b3b3-2caf73522c68"
		},
		{
			"deviceTime": "2014-08-15T21:45:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "659dc792-0a43-43a6-8a6d-2649ae5c2838"
		},
		{
			"deviceTime": "2014-08-15T21:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef077f8a-7ed8-4e79-a157-94a266a2532d"
		},
		{
			"deviceTime": "2014-08-15T21:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef203cbd-c671-404d-827b-2af21ab7351d"
		},
		{
			"deviceTime": "2014-08-15T22:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1412dd2c-03cb-40c8-b348-a9d3438440b2"
		},
		{
			"deviceTime": "2014-08-15T22:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c6fe28c-ecd4-41e6-8061-acdd7070085f"
		},
		{
			"deviceTime": "2014-08-15T22:10:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d212f5f1-38f8-4866-bf02-08765034e701"
		},
		{
			"deviceTime": "2014-08-15T22:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fbc8020-728d-402d-afa3-f945dcd324d5"
		},
		{
			"deviceTime": "2014-08-15T22:20:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5991c4d-fb63-4d16-bd24-d61aa68ae4a5"
		},
		{
			"deviceTime": "2014-08-15T22:25:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "169d489b-7821-41bc-bb81-f976eaf13379"
		},
		{
			"deviceTime": "2014-08-15T22:30:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6e328a9-4031-4ca6-9cef-756ee29a57b0"
		},
		{
			"deviceTime": "2014-08-15T22:35:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f126ac8-a8d0-4e44-afb1-9063d6f09cb6"
		},
		{
			"deviceTime": "2014-08-15T22:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1df6649-ad7a-4a32-8b85-2d11d120f21c"
		},
		{
			"deviceTime": "2014-08-15T22:45:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a87be73-8f69-42fa-aeb3-c075f0b473c0"
		},
		{
			"deviceTime": "2014-08-15T22:50:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8176b5d-fd56-4f06-a43f-eaf560d21dea"
		},
		{
			"end": "2014-08-16T05:51:01",
			"start": "2014-08-15T22:51:01",
			"percent": 0.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 25200000,
			"type": "basal-rate-segment",
			"id": "dc5645ad-7559-4c16-9a94-1c90fc2e1fb3"
		},
		{
			"deviceTime": "2014-08-15T22:55:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08fd75b7-dd38-4a0d-b65f-ba32de85b428"
		},
		{
			"deviceTime": "2014-08-15T23:00:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4db28c2b-2407-4231-9e07-fb8e30d2d320"
		},
		{
			"deviceTime": "2014-08-15T23:05:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07653c91-da3d-4f6b-9a14-8bc780083350"
		},
		{
			"deviceTime": "2014-08-15T23:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa084a1c-d0fd-4d8f-bf6f-59ffdbf6092c"
		},
		{
			"deviceTime": "2014-08-15T23:15:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0d4a6e3-6302-4626-88ee-fd4ee8e541af"
		},
		{
			"deviceTime": "2014-08-15T23:20:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22770fa8-dde3-45ad-9a7b-9cc0cba703cc"
		},
		{
			"deviceTime": "2014-08-15T23:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3bc984db-f6de-4607-a2d9-8edee187d302"
		},
		{
			"deviceTime": "2014-08-15T23:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7119184e-9334-44d8-8980-3f9ac4393386"
		},
		{
			"deviceTime": "2014-08-15T23:35:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6c1c75c-0ce6-48fa-b3ba-5613c2386c5b"
		},
		{
			"deviceTime": "2014-08-15T23:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e67cf8ff-0b67-49dc-87a2-76fc90c4d4eb"
		},
		{
			"deviceTime": "2014-08-15T23:45:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff2934db-6a98-4309-bf4a-04709435b038"
		},
		{
			"deviceTime": "2014-08-15T23:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b18a7f68-223c-4d73-9291-c82929dd925b"
		},
		{
			"deviceTime": "2014-08-15T23:55:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c4fd097-b48c-4dd1-bf3f-e0cdf1ad5628"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-16T02:00:00",
			"start": "2014-08-16T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "768cca44-4b43-48f7-88bf-d18270ce501c"
		},
		{
			"deviceTime": "2014-08-16T00:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f62d127f-e64a-4fa9-8a3e-7ca9e57a4af0"
		},
		{
			"deviceTime": "2014-08-16T00:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74b8bc07-f44a-4991-86c5-44ebe17e7a53"
		},
		{
			"deviceTime": "2014-08-16T00:10:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9076847-da5f-43b8-be8e-b1933ebe2ee6"
		},
		{
			"deviceTime": "2014-08-16T00:15:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f401eff8-3496-426d-95c2-423d7b99dcef"
		},
		{
			"deviceTime": "2014-08-16T00:20:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32a2ac35-91b4-40d9-9081-664765d20207"
		},
		{
			"deviceTime": "2014-08-16T00:25:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85885ec0-879d-48b0-887b-7bca11f0ad6b"
		},
		{
			"deviceTime": "2014-08-16T00:30:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8c4ff4d-6a85-43aa-8429-045a2dcb39f9"
		},
		{
			"deviceTime": "2014-08-16T00:35:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b996c014-01e5-4c14-ba07-c11b09614db1"
		},
		{
			"deviceTime": "2014-08-16T00:40:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "345f0d4e-f4e5-43f3-adcd-b641bc495c7e"
		},
		{
			"deviceTime": "2014-08-16T00:45:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f12ab0f2-3dd3-4a4c-ad5c-9057e3a19429"
		},
		{
			"deviceTime": "2014-08-16T00:50:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a914ad10-2efe-4fbf-84c1-e1dc37f507a3"
		},
		{
			"deviceTime": "2014-08-16T00:55:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69ac9439-37c6-4cc5-8be7-8bfa06c1b1d8"
		},
		{
			"deviceTime": "2014-08-16T01:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad0dec8f-4edc-42ab-9217-d67e2cef152f"
		},
		{
			"deviceTime": "2014-08-16T01:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf47dcaa-bd30-46f5-8e79-e90848558ebb"
		},
		{
			"deviceTime": "2014-08-16T01:10:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70d1015e-e740-43a3-944c-50a74b28c515"
		},
		{
			"deviceTime": "2014-08-16T01:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70dedfaf-2a83-4772-8a81-5ea838711bf6"
		},
		{
			"deviceTime": "2014-08-16T01:20:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5fa4868-87f0-40f3-8a81-7b58de51403c"
		},
		{
			"deviceTime": "2014-08-16T01:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0890f0a3-0c95-4768-9b83-475ae0c5a317"
		},
		{
			"deviceTime": "2014-08-16T01:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be211d6b-f102-484c-b3c2-5f4cc4f968e8"
		},
		{
			"deviceTime": "2014-08-16T01:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c6d307b-62bf-431d-ac12-9443f959280d"
		},
		{
			"deviceTime": "2014-08-16T01:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c216241-abd1-4fc3-9d9b-bc6f591be130"
		},
		{
			"deviceTime": "2014-08-16T01:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "142bf7f5-2063-40bd-a8ed-d5d6946ea4f4"
		},
		{
			"deviceTime": "2014-08-16T01:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "231b4e6a-4423-444f-9b5c-82a55dff9177"
		},
		{
			"deviceTime": "2014-08-16T01:55:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a78203b-f64d-462c-96ee-002f634141cf"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-16T04:00:00",
			"start": "2014-08-16T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "9d421652-b965-4044-9c87-f2d1d68cd64d"
		},
		{
			"deviceTime": "2014-08-16T02:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31e1b23a-a21f-43a3-a67a-069823280ad5"
		},
		{
			"deviceTime": "2014-08-16T02:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6c491a4-d7ee-48c5-8443-9362ab303066"
		},
		{
			"deviceTime": "2014-08-16T02:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4d126d0-1a3f-4e7d-bce6-1242848cf7ec"
		},
		{
			"deviceTime": "2014-08-16T02:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1c7cdaf-ff69-43e7-9b56-77590f3119fe"
		},
		{
			"deviceTime": "2014-08-16T02:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f905c9ad-039c-4687-92e0-1832b75e924d"
		},
		{
			"deviceTime": "2014-08-16T02:25:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79841ea8-a784-436d-bd82-39909332d7b5"
		},
		{
			"deviceTime": "2014-08-16T02:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "937cbf4b-b193-43dc-9f78-77dd44adf000"
		},
		{
			"deviceTime": "2014-08-16T02:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "287b0181-82fd-4ca0-a8e8-24680786ee88"
		},
		{
			"deviceTime": "2014-08-16T02:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc576fb9-6942-489e-b6e1-e837181b3496"
		},
		{
			"deviceTime": "2014-08-16T02:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ab3e21a-4a86-4d4b-baf1-b303afb5f909"
		},
		{
			"deviceTime": "2014-08-16T02:50:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5028c8cb-6cfa-4a42-bd44-1e5c3fc7ca8b"
		},
		{
			"deviceTime": "2014-08-16T02:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f48c73bf-1615-43b2-aea3-ab11087a5735"
		},
		{
			"deviceTime": "2014-08-16T03:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d42eebf-7716-4c61-a10a-35fd0f887ac2"
		},
		{
			"deviceTime": "2014-08-16T03:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9f878ba-1963-490f-b17d-da44e99023eb"
		},
		{
			"deviceTime": "2014-08-16T03:10:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83c05949-ed75-48c6-a3ce-6de8e5f78a31"
		},
		{
			"deviceTime": "2014-08-16T03:15:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "457e075d-e0f3-4da7-82a5-3c211962a16a"
		},
		{
			"deviceTime": "2014-08-16T03:20:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9325e277-0756-4277-bced-ddfb1b2e5289"
		},
		{
			"deviceTime": "2014-08-16T03:25:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8978283-b27e-4089-bd01-8b2338e95aca"
		},
		{
			"deviceTime": "2014-08-16T03:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ecde93d-f8a6-4b2a-b69c-6d2588486b54"
		},
		{
			"deviceTime": "2014-08-16T03:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0f00bd5-f1a2-47b2-8556-5470ffc779fc"
		},
		{
			"deviceTime": "2014-08-16T03:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c866aac-15ff-4d1b-854e-c2e0a4a3ddc5"
		},
		{
			"deviceTime": "2014-08-16T03:45:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7e7f64b-8669-4a79-a669-07643ba6ade2"
		},
		{
			"deviceTime": "2014-08-16T03:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49c23e70-5294-4d70-aa28-c460a11b1a23"
		},
		{
			"deviceTime": "2014-08-16T03:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9e540fd-df08-4221-93d6-3ba992625778"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-16T05:00:00",
			"start": "2014-08-16T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "32401d46-933b-4cf8-8b18-025f6f7aee9b"
		},
		{
			"deviceTime": "2014-08-16T04:00:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c12d475-8903-4dbc-9af2-4ee2bec77bc7"
		},
		{
			"deviceTime": "2014-08-16T04:02:41",
			"value": 231,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "14db1eb2-58bf-443d-8cc0-107d4c5ebbd4"
		},
		{
			"deviceTime": "2014-08-16T04:02:41",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "478fa918-cf27-4d17-b907-f57349f47c55"
		},
		{
			"deviceTime": "2014-08-16T04:02:41",
			"id": "478fa918-cf27-4d17-b907-f57349f47c55",
			"source": "demo",
			"joinKey": "0afc43b1-419a-460a-80b9-e310771c70e7",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 91
			}
		},
		{
			"deviceTime": "2014-08-16T04:02:41",
			"programmed": 6.1,
			"joinKey": "0afc43b1-419a-460a-80b9-e310771c70e7",
			"value": 6.1,
			"source": "demo",
			"recommended": 6.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "de11dece-042d-4f6a-9d92-bc3432417d3d"
		},
		{
			"deviceTime": "2014-08-16T04:05:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56588f42-24fc-4aa6-b52d-14fb37f6c0b9"
		},
		{
			"deviceTime": "2014-08-16T04:10:22",
			"value": 223,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e6361d8-a9bb-41d6-9488-da60af652189"
		},
		{
			"deviceTime": "2014-08-16T04:15:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b78962f-daf6-4362-918c-b22066f61304"
		},
		{
			"deviceTime": "2014-08-16T04:30:22",
			"value": 221,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cbe5881-44d1-4019-bb71-a2f862e89331"
		},
		{
			"messageText": "Est non pastrami dolor cupidatat, corned beef shank shankle ball tip biltong landjaeger adipisicing.",
			"parentMessage": "",
			"utcTime": "2014-08-16T04:46:56Z",
			"type": "message",
			"id": "78aae15d-e0cc-4946-aafe-5c9918d5530a"
		},
		{
			"messageText": "Cillum occaecat in sunt excepteur venison meatloaf t-bone sirloin dolore. Ham in dolore jerky.",
			"parentMessage": "78aae15d-e0cc-4946-aafe-5c9918d5530a",
			"utcTime": "2014-08-16T04:50:56Z",
			"type": "message",
			"id": "20029ffc-6f72-4247-95d9-e6869ed47a03"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-16T06:00:00",
			"start": "2014-08-16T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"id": "75a063b6-d713-4c5a-afc6-f33ceb4c9044",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-16T05:05:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b940d9c-8235-4527-a21a-196f80711519"
		},
		{
			"deviceTime": "2014-08-16T05:10:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9326b9a0-8a77-430a-a029-cfabd19a4b5e"
		},
		{
			"deviceTime": "2014-08-16T05:15:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efdc39f2-e5c0-4dff-818e-684d6652bc65"
		},
		{
			"deviceTime": "2014-08-16T05:19:01",
			"value": 3.2,
			"source": "demo",
			"recommended": 3.2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "9a78e684-7c0a-4ac9-a988-8b3005a471c6"
		},
		{
			"deviceTime": "2014-08-16T05:20:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b94dd18-781b-4138-9aea-e1493da5c081"
		},
		{
			"messageText": "Tail rump ut consequat velit. Bresaola aliquip pastrami meatball jerky tempor, short loin hamburger landjaeger sausage meatloaf culpa nulla. Chicken bresaola short ribs, quis ea adipisicing commodo swine.",
			"parentMessage": "78aae15d-e0cc-4946-aafe-5c9918d5530a",
			"utcTime": "2014-08-16T05:29:56Z",
			"type": "message",
			"id": "1c4e6d1c-21e7-494a-8052-5cd973a39da4"
		},
		{
			"deviceTime": "2014-08-16T05:40:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b281f6d8-40df-4b7b-b180-e71dc4bc3348"
		},
		{
			"deviceTime": "2014-08-16T05:45:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5c25cfd-407a-4bf7-a7da-4cc22415c1a5"
		},
		{
			"deviceTime": "2014-08-16T05:50:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bfba206d-895c-4936-adf4-b20d6688f6e2"
		},
		{
			"deviceTime": "2014-08-16T05:55:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d585d878-4dc0-4530-a8aa-fff9bf7c3eb7"
		},
		{
			"delivered": 1,
			"end": "2014-08-16T09:00:00",
			"start": "2014-08-16T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "9089dacb-bb7c-4e83-b7de-36b14d53d2e5"
		},
		{
			"deviceTime": "2014-08-16T06:15:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d7fb2f1-bb74-4c77-a527-58a8ed211cfb"
		},
		{
			"deviceTime": "2014-08-16T06:20:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92047d48-1cfe-4f88-8f82-9993ef519892"
		},
		{
			"deviceTime": "2014-08-16T06:25:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "957cd632-8bb9-4e4e-922a-885e4ff7b245"
		},
		{
			"deviceTime": "2014-08-16T06:30:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f3c51ab-7516-473f-8f32-f7d3b47657e0"
		},
		{
			"deviceTime": "2014-08-16T06:35:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "855a2750-c834-4dd1-a513-aea46773a703"
		},
		{
			"deviceTime": "2014-08-16T06:40:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3451ae71-329d-48b8-95e0-eef41abeea9b"
		},
		{
			"deviceTime": "2014-08-16T06:45:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db9d7946-553f-4c86-91e1-73d70b11a89f"
		},
		{
			"deviceTime": "2014-08-16T06:50:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e05e68d-18d5-431b-a3f8-e44cec29aa51"
		},
		{
			"deviceTime": "2014-08-16T06:55:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45b14ad5-e21f-4512-ba27-b9c9625a457d"
		},
		{
			"deviceTime": "2014-08-16T07:00:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f564cb7-a727-42fb-92ab-d8c067a261fe"
		},
		{
			"deviceTime": "2014-08-16T07:05:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e437d5f-2238-4d33-8b88-21f3bf3e60f5"
		},
		{
			"deviceTime": "2014-08-16T07:10:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da8b9965-513f-4dcb-9c46-0dea70c0e58d"
		},
		{
			"deviceTime": "2014-08-16T07:15:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a68e9157-ed5a-4ade-afb5-e30f312e84cb"
		},
		{
			"deviceTime": "2014-08-16T07:20:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b795060b-6950-4d74-b4af-5caa962e234b"
		},
		{
			"deviceTime": "2014-08-16T07:24:56",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "917894f7-0fa6-498d-ac74-9a7e25812c05"
		},
		{
			"deviceTime": "2014-08-16T07:24:56",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "5e794fea-a24a-4ed4-a40e-5b90e0601677"
		},
		{
			"deviceTime": "2014-08-16T07:24:56",
			"id": "5e794fea-a24a-4ed4-a40e-5b90e0601677",
			"source": "demo",
			"joinKey": "27966006-a1d3-41b7-84e5-fad63cfced58",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 56
			}
		},
		{
			"deviceTime": "2014-08-16T07:24:56",
			"programmed": 3.7,
			"joinKey": "27966006-a1d3-41b7-84e5-fad63cfced58",
			"value": 3.7,
			"source": "demo",
			"recommended": 3.7,
			"extendedDelivery": 2.2,
			"initialDelivery": 1.5,
			"duration": 3600000,
			"extended": true,
			"type": "bolus",
			"id": "9d3d0dc5-ee02-464a-aca3-74d9b5156e36",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-16T07:25:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59d01157-747d-4606-9f98-d68057a729fd"
		},
		{
			"deviceTime": "2014-08-16T07:30:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fb4f9ac-61d8-4bab-8a0b-a4ed2761f894"
		},
		{
			"deviceTime": "2014-08-16T07:35:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b51441c5-89f5-4747-b2a0-222d5345a57d"
		},
		{
			"deviceTime": "2014-08-16T07:40:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a226fc3c-c318-4089-85ac-5cd81cd751be"
		},
		{
			"deviceTime": "2014-08-16T07:45:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0660ca1-c0fd-40e5-be69-84d0ae3021f3"
		},
		{
			"deviceTime": "2014-08-16T08:10:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a472e8d7-9332-4f7c-9c80-8efca3039e26"
		},
		{
			"deviceTime": "2014-08-16T08:15:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9463723e-63b2-4dae-b3b6-817f87e3853a"
		},
		{
			"deviceTime": "2014-08-16T08:20:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdc2eaca-9b29-4fb1-ab4b-dbb69b933deb"
		},
		{
			"deviceTime": "2014-08-16T08:25:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dea853d8-7128-4066-ba1a-0193132dc1dc"
		},
		{
			"deviceTime": "2014-08-16T08:30:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b796d0c9-aea9-44a8-b59e-91df1eb41f08"
		},
		{
			"deviceTime": "2014-08-16T08:55:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bfaac149-10b9-45b8-8b45-c510db5e8f59"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-16T15:00:00",
			"start": "2014-08-16T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "a2a5fedc-c7a6-4093-954a-ce56b843b4c1"
		},
		{
			"deviceTime": "2014-08-16T09:10:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1176cc4-528d-4fe4-9c92-bad3f82d682a"
		},
		{
			"deviceTime": "2014-08-16T09:15:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb1adc9a-4239-4263-a6d7-49f73e6a5a2b"
		},
		{
			"deviceTime": "2014-08-16T09:20:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13207cb6-c85f-4e7e-90d2-2297020d62e0"
		},
		{
			"deviceTime": "2014-08-16T09:25:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b844d4df-b219-48d2-9c73-c000f9a68c12"
		},
		{
			"deviceTime": "2014-08-16T09:30:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5469f47-aed8-499e-b3cf-246d5b2123e7"
		},
		{
			"deviceTime": "2014-08-16T09:31:31",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "80702183-c501-40a8-8d20-d76f477fa458"
		},
		{
			"deviceTime": "2014-08-16T09:35:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82d7cbbf-f3ad-49ef-b4d5-4da60a91b48d"
		},
		{
			"deviceTime": "2014-08-16T09:40:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5926422d-b9fa-4ca7-a3e4-d32f68f33b16"
		},
		{
			"deviceTime": "2014-08-16T09:45:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5ab48ba-fc48-4bec-b77e-8d8af571132b"
		},
		{
			"deviceTime": "2014-08-16T09:50:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42866718-a540-4a09-927f-38a1a84be64b"
		},
		{
			"deviceTime": "2014-08-16T09:53:56",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "580fbc91-c742-4d47-9d76-f57dca593968"
		},
		{
			"deviceTime": "2014-08-16T09:53:56",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "385db97e-c516-4cd5-9891-ca353be19250"
		},
		{
			"deviceTime": "2014-08-16T09:53:56",
			"id": "385db97e-c516-4cd5-9891-ca353be19250",
			"source": "demo",
			"joinKey": "7d90140e-c4a0-4a71-a396-10d7c3efc726",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 68
			}
		},
		{
			"deviceTime": "2014-08-16T09:53:56",
			"programmed": 4.5,
			"joinKey": "7d90140e-c4a0-4a71-a396-10d7c3efc726",
			"value": 4.5,
			"id": "2e877136-5ea8-43e2-93be-38259264a712",
			"source": "demo",
			"recommended": 4.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-16T09:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ee73071-6cf5-4c01-8ef7-bcc32ed56a3a"
		},
		{
			"deviceTime": "2014-08-16T10:00:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ed1d87a-7d88-41e1-8c6f-4167b42bc506"
		},
		{
			"deviceTime": "2014-08-16T10:05:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d8a4ce6-43ca-4a2e-9f5c-649dede412a5"
		},
		{
			"deviceTime": "2014-08-16T10:33:52",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "542029a0-0048-4c69-9571-dec75705e72b"
		},
		{
			"deviceTime": "2014-08-16T10:33:52",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "11e760cb-baa4-489f-8fd6-41c995d2a39b"
		},
		{
			"deviceTime": "2014-08-16T10:33:52",
			"id": "11e760cb-baa4-489f-8fd6-41c995d2a39b",
			"source": "demo",
			"joinKey": "7ea720c4-877b-40ea-b936-72715c0c2715",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 49
			}
		},
		{
			"deviceTime": "2014-08-16T10:40:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e42e9903-083d-4dcd-ac46-d8f20a7a0ef4"
		},
		{
			"deviceTime": "2014-08-16T10:45:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47d1f985-0bb4-4cf7-855e-ef95f97ace0d"
		},
		{
			"deviceTime": "2014-08-16T10:50:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64969ca4-84b4-411d-9aea-c6c054fd71bb"
		},
		{
			"end": "2014-08-16T11:27:01",
			"start": "2014-08-16T10:57:01",
			"percent": 2,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"type": "basal-rate-segment",
			"id": "0ad2c614-c314-4255-ad07-90d69fa6bed3"
		},
		{
			"deviceTime": "2014-08-16T11:00:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5505e3c7-2cfe-4cae-9948-b9c1a62c39ec"
		},
		{
			"deviceTime": "2014-08-16T11:05:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e949f5d8-dad9-4e95-96d4-9d2fd2f92550"
		},
		{
			"deviceTime": "2014-08-16T11:10:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a2ac457-25ef-4a77-b3c5-9e57ad538df3"
		},
		{
			"deviceTime": "2014-08-16T11:15:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "495cfb2f-9c28-484c-ad46-10782fc4c387"
		},
		{
			"deviceTime": "2014-08-16T11:35:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be557094-b416-4a3e-be88-65dbdaadd716"
		},
		{
			"deviceTime": "2014-08-16T11:40:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db9f9978-ea26-4e18-9140-9a7fd7b03679"
		},
		{
			"deviceTime": "2014-08-16T11:45:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aea16b56-dfc5-4bf9-ae19-637accaacbb9"
		},
		{
			"deviceTime": "2014-08-16T12:05:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f2b4964-9832-4301-a966-666d07541d9e"
		},
		{
			"deviceTime": "2014-08-16T12:10:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf0c36cf-a42e-4b80-8deb-9ecbd241046f"
		},
		{
			"deviceTime": "2014-08-16T12:15:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9de0a2e1-b26b-4ce5-ba03-5ed17df5908c"
		},
		{
			"deviceTime": "2014-08-16T12:40:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a7bc9a7-93dc-4a99-a1e7-dfc9e0e48693"
		},
		{
			"deviceTime": "2014-08-16T12:45:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e08a232c-80d6-41df-a7a2-d2c0aac63dfd"
		},
		{
			"deviceTime": "2014-08-16T12:50:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e4b717e-7404-4622-8f3f-a97b84380bdc"
		},
		{
			"deviceTime": "2014-08-16T13:18:30",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "89fd467c-43df-429d-8111-1d23949e58c7"
		},
		{
			"deviceTime": "2014-08-16T13:25:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8dba869c-d9fe-4e06-8970-9b58b75fcf7e"
		},
		{
			"deviceTime": "2014-08-16T13:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b6e5d56-6776-4208-b257-a871fd2c089c"
		},
		{
			"deviceTime": "2014-08-16T13:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2385f7a2-89bb-4cba-8745-bce31eeaa915"
		},
		{
			"deviceTime": "2014-08-16T13:40:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eda09dc6-e7b5-4b28-828b-7606bc6a917d"
		},
		{
			"deviceTime": "2014-08-16T13:45:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0238b7ac-5b55-49f1-8472-76977ed9ef3b"
		},
		{
			"deviceTime": "2014-08-16T13:50:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d58a6bad-26be-4f68-aa42-8b87cd2a5a35"
		},
		{
			"deviceTime": "2014-08-16T13:55:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "550c941b-5921-45c8-ade9-157b35785ca2"
		},
		{
			"deviceTime": "2014-08-16T14:00:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "faf600a3-cf72-45f5-849c-25650b9026cc"
		},
		{
			"deviceTime": "2014-08-16T14:05:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cec09f95-32b3-469c-9756-d919780b5ca8"
		},
		{
			"deviceTime": "2014-08-16T14:10:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e6e434c-45c3-4138-bdb7-c3f993946e02"
		},
		{
			"deviceTime": "2014-08-16T14:15:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0810abe4-f757-4097-869e-f62e487c5319"
		},
		{
			"deviceTime": "2014-08-16T14:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "385d1445-15b0-435f-8d5e-8c4e20f0dabc"
		},
		{
			"deviceTime": "2014-08-16T14:25:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fed3d639-5a0f-48a7-aa5e-742474723113"
		},
		{
			"deviceTime": "2014-08-16T14:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e044d4cb-f76a-45ad-8665-24d90162ba9b"
		},
		{
			"deviceTime": "2014-08-16T14:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f35b3311-a411-4501-b3a0-0ba869906343"
		},
		{
			"deviceTime": "2014-08-16T14:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab3e2c0d-eec9-4944-b54b-a44dee3658f3"
		},
		{
			"deviceTime": "2014-08-16T14:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed639cd9-86b2-4945-adef-b48499997393"
		},
		{
			"deviceTime": "2014-08-16T14:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbe129fa-684a-43ee-b9c2-b070d4e3a004"
		},
		{
			"deviceTime": "2014-08-16T14:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58fc88b4-b886-463d-a3f1-aea68cfae106"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-16T20:00:00",
			"start": "2014-08-16T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"id": "846cb762-98a5-4334-8a5b-510e41b99059",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-16T15:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cb7db9f-ffb4-4703-bce3-b88a27b51cc1"
		},
		{
			"deviceTime": "2014-08-16T15:05:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01cb0e24-f4f0-4327-90fd-f543aff0d087"
		},
		{
			"deviceTime": "2014-08-16T15:10:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae6b40e2-33e0-4a79-9258-8af74c50930f"
		},
		{
			"deviceTime": "2014-08-16T15:15:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf073b4a-cfa2-4157-b5e4-40228c8b08b8"
		},
		{
			"deviceTime": "2014-08-16T15:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dade6c89-e90c-4ae1-b4de-60c267ae3ae4"
		},
		{
			"deviceTime": "2014-08-16T15:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "660152ed-6fa0-4da0-a796-dfee01ac5ac6"
		},
		{
			"deviceTime": "2014-08-16T15:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2307e59a-3fd9-4186-8d9f-db53e083661a"
		},
		{
			"deviceTime": "2014-08-16T15:35:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f776f0a-3605-4259-92f1-1062f5fb92c1"
		},
		{
			"deviceTime": "2014-08-16T15:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06401f62-2d4e-4b9c-b247-658c558aed92"
		},
		{
			"deviceTime": "2014-08-16T15:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "caf0c020-1757-45d8-ab16-d341bed7b887"
		},
		{
			"deviceTime": "2014-08-16T15:50:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f12b727c-a918-4a21-98cb-47a76cad915c"
		},
		{
			"deviceTime": "2014-08-16T15:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "341ab9b7-8842-4910-86a6-acc865904d6e"
		},
		{
			"deviceTime": "2014-08-16T16:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2abb3ef6-2230-414b-9c9c-d91656c95081"
		},
		{
			"deviceTime": "2014-08-16T16:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49f55dc4-e367-4e73-acdd-ada9d52be861"
		},
		{
			"deviceTime": "2014-08-16T16:10:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82bf9ce1-6254-4bb6-a0e8-5732a8c65309"
		},
		{
			"deviceTime": "2014-08-16T16:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d37bd0c-f05a-4fe6-97e2-31569bcf5a6b"
		},
		{
			"deviceTime": "2014-08-16T16:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abaa4e26-9014-4d8c-9d05-4b7eba09377b"
		},
		{
			"deviceTime": "2014-08-16T16:25:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3916745b-4bdf-4955-a6dd-d361849282ad"
		},
		{
			"deviceTime": "2014-08-16T16:30:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57b1e1b0-fd77-41f3-9cc4-7d5b154c7bc5"
		},
		{
			"deviceTime": "2014-08-16T16:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "166d0f2f-d02d-4a8c-9f03-45feede6bf7e"
		},
		{
			"deviceTime": "2014-08-16T16:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6751a38a-c371-4c9e-91a2-f7ec50f17739"
		},
		{
			"deviceTime": "2014-08-16T16:42:04",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "14b9a106-9184-4848-b412-e67fb6da6163"
		},
		{
			"deviceTime": "2014-08-16T16:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f65fb33-7b36-4796-91cc-757d67c1ed84"
		},
		{
			"deviceTime": "2014-08-16T16:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c74930f-3009-470f-87fd-9e9faf889306"
		},
		{
			"deviceTime": "2014-08-16T16:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63123eab-f800-4986-b34c-3f2d3b87635f"
		},
		{
			"deviceTime": "2014-08-16T17:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4541930e-b625-409b-b1b6-61161deb8388"
		},
		{
			"deviceTime": "2014-08-16T17:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6769956-f431-4851-85ec-8022690ccf4d"
		},
		{
			"deviceTime": "2014-08-16T17:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcd3643a-b886-480c-9bdb-88fd32688360"
		},
		{
			"deviceTime": "2014-08-16T17:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "677da42b-0f1b-47f9-a1fd-1b98efe17b86"
		},
		{
			"deviceTime": "2014-08-16T17:20:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c106382e-0b92-4208-9529-2285fee1400b"
		},
		{
			"deviceTime": "2014-08-16T17:24:01",
			"value": 1.7,
			"id": "0c10924d-aeea-42ec-9995-5da79f56617c",
			"source": "demo",
			"recommended": 1.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-16T17:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bd06886-5cd8-49b2-bf81-71e8d4c52f4a"
		},
		{
			"deviceTime": "2014-08-16T17:30:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57c0cf7e-1323-42c2-9fc5-029e66280055"
		},
		{
			"deviceTime": "2014-08-16T17:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb16057a-9aab-4106-9ea1-f3b1f4f5a43e"
		},
		{
			"deviceTime": "2014-08-16T17:40:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06ba1902-e9f2-451b-9992-c7dc71fb9c88"
		},
		{
			"deviceTime": "2014-08-16T17:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fd92a82-d942-4c96-a6f5-a8043ad0b273"
		},
		{
			"deviceTime": "2014-08-16T17:50:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d75554b9-99de-4b54-9ac9-8c6f15ac5860"
		},
		{
			"deviceTime": "2014-08-16T17:55:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c72f5b3e-7277-4ca9-93c9-26c4ba130c95"
		},
		{
			"deviceTime": "2014-08-16T18:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a53ada6b-b850-4362-9f4f-6270083729f6"
		},
		{
			"deviceTime": "2014-08-16T18:05:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b892ccfe-3898-40fa-b6e2-942d351aaa8c"
		},
		{
			"deviceTime": "2014-08-16T18:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "604ea375-de9d-4d0b-afdf-2c87e7ff068e"
		},
		{
			"deviceTime": "2014-08-16T18:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91f331e5-ffc7-4291-ab3b-8822a320e2c0"
		},
		{
			"deviceTime": "2014-08-16T18:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1da0988-768b-4f68-8230-d03a9b2a82dd"
		},
		{
			"deviceTime": "2014-08-16T18:25:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c63e0df-0b16-44f0-8bea-0fd6de6f6216"
		},
		{
			"deviceTime": "2014-08-16T18:30:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fd4145c-ff91-4ecc-a777-3f6f5fb06ca5"
		},
		{
			"deviceTime": "2014-08-16T18:35:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3b4ccd3-2ad4-4d23-9809-1e3851fe6c09"
		},
		{
			"deviceTime": "2014-08-16T18:40:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c34cd26-a11e-43e9-8293-47e41275dc7e"
		},
		{
			"deviceTime": "2014-08-16T18:45:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe8d7c5c-f0f7-4f16-b4e9-a5fc665a74c9"
		},
		{
			"deviceTime": "2014-08-16T18:50:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a7fe389-e1f4-4138-ac42-c3ef28064c69"
		},
		{
			"deviceTime": "2014-08-16T18:55:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "619372d9-0921-4de8-9a94-0ae635d301ba"
		},
		{
			"deviceTime": "2014-08-16T19:00:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24be42c1-4f52-4e21-872e-8e538f157ad4"
		},
		{
			"deviceTime": "2014-08-16T19:05:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4381fe2e-6eb8-4e6a-b854-2a987fd1bb7b"
		},
		{
			"deviceTime": "2014-08-16T19:10:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5130bd53-2b69-483a-9204-0ae50a85694c"
		},
		{
			"deviceTime": "2014-08-16T19:15:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e509cd8-6e12-4b29-a842-ede4faffbef1"
		},
		{
			"deviceTime": "2014-08-16T19:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12dca76d-6e29-4160-94ea-134a0fe30b87"
		},
		{
			"deviceTime": "2014-08-16T19:25:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50c5c0cd-259d-485d-ac50-e8e7aa516a1e"
		},
		{
			"deviceTime": "2014-08-16T19:30:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6786ecda-e602-4510-a9ed-49863edc409e"
		},
		{
			"deviceTime": "2014-08-16T19:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de053ae5-5f5d-45a0-baa6-97173574891b"
		},
		{
			"deviceTime": "2014-08-16T19:40:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a15a5783-d3da-40cc-af23-cbb4c2602740"
		},
		{
			"deviceTime": "2014-08-16T19:45:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea1b14e9-f174-485d-9a45-fc227c1c970b"
		},
		{
			"deviceTime": "2014-08-16T19:50:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5394a1ab-5102-4241-9403-2f8e502a3415"
		},
		{
			"deviceTime": "2014-08-16T19:55:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa956289-574a-44d5-8e1e-875173d6d2f1"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-17T00:00:00",
			"start": "2014-08-16T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "b9ca244b-20a3-4d61-92ac-b42c06538738"
		},
		{
			"deviceTime": "2014-08-16T20:00:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "474c337e-df41-457f-9066-12f6748f153f"
		},
		{
			"deviceTime": "2014-08-16T20:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ad9bb2d-85c2-4e46-97fb-061d2d033a72"
		},
		{
			"deviceTime": "2014-08-16T20:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6296c369-e973-4414-8c58-305345847cc5"
		},
		{
			"deviceTime": "2014-08-16T20:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff01731b-dc24-4353-ad65-21980db0c289"
		},
		{
			"deviceTime": "2014-08-16T20:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9dc02b5f-7bd6-4a38-a84c-827be16e2c86"
		},
		{
			"deviceTime": "2014-08-16T20:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1915b7e3-59ab-4dd3-9815-9815a932636a"
		},
		{
			"deviceTime": "2014-08-16T20:50:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2232eec2-385d-4298-b8b1-6bc809829c3d"
		},
		{
			"deviceTime": "2014-08-16T20:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "601b8671-1386-4479-9c52-8f36f8c2c281"
		},
		{
			"deviceTime": "2014-08-16T21:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5849c77c-b928-4769-a182-5807787e90db"
		},
		{
			"deviceTime": "2014-08-16T21:05:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6774fb2f-5e27-4043-9239-c47466e81ad8"
		},
		{
			"deviceTime": "2014-08-16T21:25:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f4d864f-76e3-4416-9825-e76eacbac20f"
		},
		{
			"deviceTime": "2014-08-16T21:30:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3fb8c99d-579a-4222-9fec-967abad2c2ae"
		},
		{
			"deviceTime": "2014-08-16T21:35:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f440dc26-33cd-4a6b-bc34-577a2a6beef2"
		},
		{
			"deviceTime": "2014-08-16T21:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "653f3a66-eabb-45b7-b467-6b26b6ef4bc6"
		},
		{
			"deviceTime": "2014-08-16T21:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d48d4eb8-136c-47f1-9a5a-597de07dba90"
		},
		{
			"deviceTime": "2014-08-16T21:50:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7f4389d-30d1-4aeb-8e18-5668216a537a"
		},
		{
			"deviceTime": "2014-08-16T21:55:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c659978a-3555-432c-92f3-6030a7468b26"
		},
		{
			"deviceTime": "2014-08-16T22:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65d227fd-f7d2-4e50-9e82-199a34a6096d"
		},
		{
			"deviceTime": "2014-08-16T22:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2615bccf-6ceb-4d62-95da-79283e88942f"
		},
		{
			"deviceTime": "2014-08-16T22:10:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1841def0-4833-4bf7-9b72-ff56ce5dfaab"
		},
		{
			"end": "2014-08-16T23:11:01",
			"start": "2014-08-16T22:11:01",
			"percent": 0.6,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "8ab849e7-4323-4ec5-85e4-1779cceff819"
		},
		{
			"deviceTime": "2014-08-16T22:15:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2024b94d-dad6-4d64-bc77-75a9b3b6e6fa"
		},
		{
			"deviceTime": "2014-08-16T22:20:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "424d4d9b-1675-4883-a995-84c4aa9e5017"
		},
		{
			"deviceTime": "2014-08-16T22:25:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7e48d68-6784-4945-9961-f09f30d5fa3f"
		},
		{
			"deviceTime": "2014-08-16T22:30:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad02b3bd-1821-49f9-8333-ac91899fd621"
		},
		{
			"deviceTime": "2014-08-16T22:35:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a4da2b4-24b6-48ce-bb09-655d97e3cf6c"
		},
		{
			"deviceTime": "2014-08-16T22:40:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a44380b1-d53e-482d-99f1-69cedb925c65"
		},
		{
			"deviceTime": "2014-08-16T23:00:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1029778e-2e06-42d8-93b1-49e3a8c98f3c"
		},
		{
			"deviceTime": "2014-08-16T23:05:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba6835fc-d2ad-48af-9c4f-d7e79c83572e"
		},
		{
			"deviceTime": "2014-08-16T23:10:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22ba754e-7d18-412a-b939-9664f0747f55"
		},
		{
			"deviceTime": "2014-08-16T23:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d87cb80d-ea54-4261-8d30-9cd87704d148"
		},
		{
			"deviceTime": "2014-08-16T23:20:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49d3517b-d8e5-4f06-9afc-2cad062e1503"
		},
		{
			"deviceTime": "2014-08-16T23:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5aa7bb0f-72ac-4c9a-9994-65e7df77601f"
		},
		{
			"deviceTime": "2014-08-16T23:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "011fc86a-da12-4e05-a9c0-3b3962cd8dd5"
		},
		{
			"deviceTime": "2014-08-16T23:35:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28902c64-a15d-4bcf-b110-8794c1b0da6d"
		},
		{
			"deviceTime": "2014-08-16T23:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4bc546b-9df4-429a-8328-81672e13557b"
		},
		{
			"deviceTime": "2014-08-16T23:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32dee64f-4e86-4b8c-a866-e8c4c8576625"
		},
		{
			"deviceTime": "2014-08-16T23:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31c4bd95-64c8-49a4-a7e6-76b1526adec6"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-17T02:00:00",
			"start": "2014-08-17T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "b14bb5e9-878e-4339-b9d0-d20694512dcd"
		},
		{
			"deviceTime": "2014-08-17T00:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae8d748d-4069-4667-8678-0b84aaf68d7f"
		},
		{
			"deviceTime": "2014-08-17T00:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dde1a8e9-c2eb-4796-a037-2e30c331e7b7"
		},
		{
			"deviceTime": "2014-08-17T00:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "194428c2-c7df-4595-a1a2-26887981d9db"
		},
		{
			"deviceTime": "2014-08-17T00:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df9f339d-d226-44fb-b842-882a396c403a"
		},
		{
			"deviceTime": "2014-08-17T00:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d00d22dd-2d1a-418b-9775-c6b8b74b41d5"
		},
		{
			"deviceTime": "2014-08-17T00:25:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3334d1d-3d8d-494d-99e9-2a184c86d469"
		},
		{
			"deviceTime": "2014-08-17T00:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b4a9538-4a4c-4955-a8e2-16d04081b836"
		},
		{
			"deviceTime": "2014-08-17T00:35:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fee3ed3-a8d5-4a13-9b5b-583ca3518bad"
		},
		{
			"deviceTime": "2014-08-17T00:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9eb049d-e1cd-4ff3-aab5-aff556928df3"
		},
		{
			"deviceTime": "2014-08-17T00:45:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "441fb2f5-dc42-454d-9815-f6f57a53f9cb"
		},
		{
			"deviceTime": "2014-08-17T00:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b654a1d-b484-427f-bb68-d9e0a8ed3c67"
		},
		{
			"deviceTime": "2014-08-17T00:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0d94f1a-09df-4baf-94ad-a7007d67c23e"
		},
		{
			"deviceTime": "2014-08-17T01:00:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a00a8f7f-03f1-4758-90bb-86af392a6e64"
		},
		{
			"deviceTime": "2014-08-17T01:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4550f24-323f-4e65-8801-fc2d3c11fb3f"
		},
		{
			"deviceTime": "2014-08-17T01:09:32",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "21b040aa-3145-4e10-b07c-6382f288c73a"
		},
		{
			"deviceTime": "2014-08-17T01:09:32",
			"value": 8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "2f678b1d-4091-4638-9378-d67fd915a4fa"
		},
		{
			"deviceTime": "2014-08-17T01:09:32",
			"id": "2f678b1d-4091-4638-9378-d67fd915a4fa",
			"source": "demo",
			"joinKey": "0ea95558-7d0f-4e50-9a3b-aa4173801099",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 8
			}
		},
		{
			"deviceTime": "2014-08-17T01:09:32",
			"programmed": 0.5,
			"joinKey": "0ea95558-7d0f-4e50-9a3b-aa4173801099",
			"value": 0.5,
			"source": "demo",
			"recommended": 0.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "be26ab6a-501d-4ad2-9d31-cf6743038569"
		},
		{
			"deviceTime": "2014-08-17T01:10:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "104fcf7a-7744-48df-8da0-afe683730ae3"
		},
		{
			"deviceTime": "2014-08-17T01:15:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "423c6824-6fac-4aaf-bb11-ca7c3dc415b9"
		},
		{
			"deviceTime": "2014-08-17T01:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14582667-4dd6-4184-aad4-f6d41e8c22af"
		},
		{
			"deviceTime": "2014-08-17T01:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c76c4a8-6e78-47a3-972a-b42763fb33e0"
		},
		{
			"deviceTime": "2014-08-17T01:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c8f4f94-f0f2-4fd1-b10e-706c17d1bbb5"
		},
		{
			"deviceTime": "2014-08-17T01:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac01664b-18e0-4dc5-8374-836c24f7b181"
		},
		{
			"deviceTime": "2014-08-17T01:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6826ddb-f9a2-4575-9a89-f4ed95eead9c"
		},
		{
			"deviceTime": "2014-08-17T01:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01281d02-011c-4597-ac69-38fecf69c63f"
		},
		{
			"deviceTime": "2014-08-17T01:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab8d466e-4dea-4754-8f77-82438d7e7395"
		},
		{
			"deviceTime": "2014-08-17T01:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4acbb01-0097-4642-8667-88f88f948c7d"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-17T04:00:00",
			"start": "2014-08-17T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "f9911f6d-d30d-4511-88ba-09820228ca3d"
		},
		{
			"deviceTime": "2014-08-17T02:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f2bc077-d60b-4143-890e-dcbd13bfd385"
		},
		{
			"deviceTime": "2014-08-17T02:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e966581-58d9-4669-86c6-fe96e9c13659"
		},
		{
			"deviceTime": "2014-08-17T02:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c78ccd14-e8c3-44ce-8b95-c693871ca06f"
		},
		{
			"deviceTime": "2014-08-17T02:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dd66953-d7d6-4963-a13e-4e858f17ee3a"
		},
		{
			"deviceTime": "2014-08-17T02:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ceef4903-1504-423d-89bb-147659796b67"
		},
		{
			"deviceTime": "2014-08-17T02:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c861ea18-8d6d-4da0-ba4c-db4b4f4fd0db"
		},
		{
			"deviceTime": "2014-08-17T02:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37447580-43b1-4403-ad01-823dd7674d48"
		},
		{
			"deviceTime": "2014-08-17T02:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "feeaf833-1031-4d34-9830-319b5f01a187"
		},
		{
			"deviceTime": "2014-08-17T02:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6e85e47-3d08-4bfe-8b81-fdd1fd08bb96"
		},
		{
			"deviceTime": "2014-08-17T02:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9b4c368-8f7d-4d30-8a95-09406ed2fc14"
		},
		{
			"deviceTime": "2014-08-17T02:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91cb1ec7-aef2-4f65-8ba7-1d9c35078ff2"
		},
		{
			"deviceTime": "2014-08-17T02:55:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "967e692f-38cb-45e1-a27b-8215ee30327f"
		},
		{
			"deviceTime": "2014-08-17T03:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f9e58d7-58c8-49b1-b0ad-5ddb5e1d05f6"
		},
		{
			"deviceTime": "2014-08-17T03:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a77f94d6-2cd9-4c78-bef3-28c40adabcd9"
		},
		{
			"deviceTime": "2014-08-17T03:10:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "130ddd16-231f-4336-a4f2-6e8df326d462"
		},
		{
			"deviceTime": "2014-08-17T03:15:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f57158c-cac8-4cb9-8c85-81166ef506da"
		},
		{
			"deviceTime": "2014-08-17T03:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45f131d8-35d9-494a-b3de-766090870b20"
		},
		{
			"deviceTime": "2014-08-17T03:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcd0256c-f126-461a-9a28-ae31f48f078b"
		},
		{
			"deviceTime": "2014-08-17T03:30:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28f8b432-03d5-4d63-b08d-24c52534f994"
		},
		{
			"deviceTime": "2014-08-17T03:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0838b3d5-d2db-4214-844a-dec8f4325851"
		},
		{
			"deviceTime": "2014-08-17T03:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f9d68f9-ffb2-47d5-9b4a-5218d80fbcf7"
		},
		{
			"deviceTime": "2014-08-17T03:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b17803f-6bc5-4382-84b9-7a5705e5135f"
		},
		{
			"deviceTime": "2014-08-17T03:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1df028d6-52a7-43af-8ba9-20d6fcd8d17d"
		},
		{
			"deviceTime": "2014-08-17T03:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fdf0597a-8ac0-4685-a168-3746881b9567"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-17T05:00:00",
			"start": "2014-08-17T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "a918aff3-7724-41dc-a239-35fbf322ebbf"
		},
		{
			"deviceTime": "2014-08-17T04:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52760fbd-3cf7-445a-ba7f-9241ecb9aed2"
		},
		{
			"deviceTime": "2014-08-17T04:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bfd2e68-912f-421d-a4fc-7edbe5a53696"
		},
		{
			"deviceTime": "2014-08-17T04:10:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b342066-4523-4406-8e0c-2149310141ea"
		},
		{
			"deviceTime": "2014-08-17T04:15:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27113f78-7f18-49f4-ac64-48f1c9f51ae4"
		},
		{
			"deviceTime": "2014-08-17T04:20:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1d2a2b1-71af-4f5d-b54c-438bb60c58f3"
		},
		{
			"deviceTime": "2014-08-17T04:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58065b43-38cb-4cc6-be18-7367884d8608"
		},
		{
			"deviceTime": "2014-08-17T04:30:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b899b76-6bbd-41f7-a24b-a80fbd9a4617"
		},
		{
			"deviceTime": "2014-08-17T04:35:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37e95279-867d-4172-b432-b12ec4a99047"
		},
		{
			"deviceTime": "2014-08-17T04:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31a64eeb-5b81-43c1-a29e-b809defc6d0a"
		},
		{
			"deviceTime": "2014-08-17T04:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f10f5a7c-cb14-42bf-a1d0-f78888f64864"
		},
		{
			"deviceTime": "2014-08-17T04:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8aec49f-f622-4c26-92ec-39585ea1f9d4"
		},
		{
			"deviceTime": "2014-08-17T04:55:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9e676a3-bf21-4c67-b85f-27113d7ed283"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-17T06:00:00",
			"start": "2014-08-17T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "5a120401-07aa-4fc3-9256-837b26093c92"
		},
		{
			"deviceTime": "2014-08-17T05:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30a0f6fa-93d1-4537-9ce2-47baf6c5178e"
		},
		{
			"deviceTime": "2014-08-17T05:05:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd984366-6ef7-468d-99b7-044337b21022"
		},
		{
			"deviceTime": "2014-08-17T05:10:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bdad8b8-9b68-4312-ab91-f7d9c0e609db"
		},
		{
			"deviceTime": "2014-08-17T05:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e4c4ccd-d1b5-4c36-ae85-d27f4fdedf64"
		},
		{
			"deviceTime": "2014-08-17T05:20:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b345ad4-ca7e-41ba-bbee-96659a086ffc"
		},
		{
			"deviceTime": "2014-08-17T05:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b3a8b52-1fed-49e0-9cd7-b4b433083ed0"
		},
		{
			"deviceTime": "2014-08-17T05:30:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "141c4c3f-ff61-4a33-9882-894fac94ec55"
		},
		{
			"deviceTime": "2014-08-17T05:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d19273ba-fdf6-47d9-8dbf-e0fe614a89c2"
		},
		{
			"deviceTime": "2014-08-17T05:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "332de9f6-779d-4278-8db7-fcc4b934767f"
		},
		{
			"deviceTime": "2014-08-17T05:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b05a8a00-7a56-4f52-9a19-be3d38a0ad40"
		},
		{
			"deviceTime": "2014-08-17T05:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b5f79e9-512c-4d75-a4bd-275b45d6f593"
		},
		{
			"deviceTime": "2014-08-17T05:55:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3638156-a26b-4eb9-b8ec-8db0431856e7"
		},
		{
			"delivered": 1,
			"end": "2014-08-17T09:00:00",
			"start": "2014-08-17T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "f265ef9b-879a-4231-b94b-3c8d442039b3"
		},
		{
			"deviceTime": "2014-08-17T06:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec843bbf-e042-4c77-9209-527b91f71d35"
		},
		{
			"deviceTime": "2014-08-17T06:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69ef6360-6de7-48f2-b507-3f9f90d53a3b"
		},
		{
			"deviceTime": "2014-08-17T06:07:51",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "9b0b930f-c635-4656-9cab-4fcabef99ba6"
		},
		{
			"deviceTime": "2014-08-17T06:07:51",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "508f7970-b860-4d78-a6cf-aeed8be41fea"
		},
		{
			"deviceTime": "2014-08-17T06:07:51",
			"id": "508f7970-b860-4d78-a6cf-aeed8be41fea",
			"source": "demo",
			"joinKey": "e5e80e95-11c4-40f3-8263-c9a849df8d0b",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 45
			}
		},
		{
			"deviceTime": "2014-08-17T06:07:51",
			"programmed": 3,
			"joinKey": "e5e80e95-11c4-40f3-8263-c9a849df8d0b",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"extendedDelivery": 3,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "3949fabf-19a8-4415-9bfc-cab2e20e152e"
		},
		{
			"deviceTime": "2014-08-17T06:10:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea97b4b9-b5af-4e2b-b041-34fc8e115b90"
		},
		{
			"deviceTime": "2014-08-17T06:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a084ab65-180b-4e9e-a656-450bda48f14a"
		},
		{
			"deviceTime": "2014-08-17T06:20:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f3f7210-5db5-4605-9b55-17b254ba1577"
		},
		{
			"deviceTime": "2014-08-17T06:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a1ee1b8-e1ce-4d07-b70a-c164e45e1050"
		},
		{
			"deviceTime": "2014-08-17T06:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99acfbac-5df8-49ce-8bfb-1990187c64e5"
		},
		{
			"deviceTime": "2014-08-17T06:35:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "574a42ce-db7a-4d37-8d06-a03e64bb4999"
		},
		{
			"deviceTime": "2014-08-17T06:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6b29036-efd8-4bdf-9bca-12a4aa6d3543"
		},
		{
			"deviceTime": "2014-08-17T06:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72c8c3b6-28cd-404b-b66f-5d562110c6eb"
		},
		{
			"deviceTime": "2014-08-17T06:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf203aab-7ab7-4bcb-9d19-71dd3923b465"
		},
		{
			"deviceTime": "2014-08-17T06:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d61d69eb-9ab8-4f5f-bfcd-ee71ade404c8"
		},
		{
			"deviceTime": "2014-08-17T07:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c75af0b9-5202-4a0d-bd15-71c05fb63433"
		},
		{
			"deviceTime": "2014-08-17T07:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "012dea85-1328-47db-9dc9-d54bee0f83a0"
		},
		{
			"deviceTime": "2014-08-17T07:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3d3ba70-ec1d-471e-ab80-6a63b07c2cfd"
		},
		{
			"deviceTime": "2014-08-17T07:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf7caed9-e409-4b32-bb58-84442a4960a8"
		},
		{
			"deviceTime": "2014-08-17T07:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fab2486e-309c-4998-bd8c-a4dd38eecb5e"
		},
		{
			"deviceTime": "2014-08-17T07:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cdacf75-af9b-4667-9000-b06a3b1f57dd"
		},
		{
			"deviceTime": "2014-08-17T07:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe182d7e-6b17-4ad5-b64e-062174d02b19"
		},
		{
			"deviceTime": "2014-08-17T07:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54930366-a898-4369-9d63-acebf4686477"
		},
		{
			"deviceTime": "2014-08-17T07:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0b465da-f1cb-4c52-b6b6-0187f15810a4"
		},
		{
			"deviceTime": "2014-08-17T07:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "468a3fb3-b9e5-46d6-8bc4-c6259c67776d"
		},
		{
			"deviceTime": "2014-08-17T07:50:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9457c74-a20e-4234-8206-e977a7c5be49"
		},
		{
			"deviceTime": "2014-08-17T07:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d07109b-89cb-422d-a367-9e399c34ef39"
		},
		{
			"deviceTime": "2014-08-17T08:00:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f43a2883-68d7-4fd0-bc23-916a68122a6b"
		},
		{
			"deviceTime": "2014-08-17T08:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a6df4cc-3f37-40fa-8fee-6762efc64219"
		},
		{
			"deviceTime": "2014-08-17T08:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ff7558f-c868-483e-8b36-055121a89c72"
		},
		{
			"deviceTime": "2014-08-17T08:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb712a49-2ba0-46bf-b582-f43a3f7dac36"
		},
		{
			"deviceTime": "2014-08-17T08:20:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a99c37b-f644-49c7-a45b-21c814cd0d2d"
		},
		{
			"deviceTime": "2014-08-17T08:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24a72476-311e-4d41-98df-f9818f321135"
		},
		{
			"deviceTime": "2014-08-17T08:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "035a9124-252e-490f-9524-a7da99388b81"
		},
		{
			"deviceTime": "2014-08-17T08:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d079b64-9e9c-4a58-9460-524282b36d4c"
		},
		{
			"deviceTime": "2014-08-17T08:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7845803-2f21-41ab-98e2-dc8b7ce741b3"
		},
		{
			"deviceTime": "2014-08-17T08:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d342c0e-5084-4d0e-9f7b-59cbd0649dac"
		},
		{
			"deviceTime": "2014-08-17T08:50:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1fb6451e-218b-4f0a-a13c-341c925c2497"
		},
		{
			"deviceTime": "2014-08-17T08:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00d80ab4-bf3f-4e86-8891-ee7c5857de91"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-17T15:00:00",
			"start": "2014-08-17T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "f8060569-7dd8-433e-b07c-931a38a11efc"
		},
		{
			"deviceTime": "2014-08-17T09:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7898a416-8d1f-4bf9-948d-c996d4571409"
		},
		{
			"deviceTime": "2014-08-17T09:05:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3236d739-8345-4711-9db4-f78e3420ec0c"
		},
		{
			"deviceTime": "2014-08-17T09:10:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c648d47c-3fe3-4a43-96a5-0874e3d5cb33"
		},
		{
			"deviceTime": "2014-08-17T09:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82db8649-15ab-4b15-9f77-5899462e861b"
		},
		{
			"deviceTime": "2014-08-17T09:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b47010fd-de54-4074-a750-fb228c07aa2b"
		},
		{
			"deviceTime": "2014-08-17T09:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "661f3b95-427b-455e-976c-7c8ca563675c"
		},
		{
			"deviceTime": "2014-08-17T09:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21688ea1-a044-4e0d-8bf8-0cff397b5176"
		},
		{
			"deviceTime": "2014-08-17T09:50:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9e28e59-757e-4c13-945a-ff14505fa96c"
		},
		{
			"deviceTime": "2014-08-17T09:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95844119-1c72-46a7-816d-f343c77c9576"
		},
		{
			"deviceTime": "2014-08-17T10:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1dff583-4766-4085-b9f9-0912a65d82e6"
		},
		{
			"deviceTime": "2014-08-17T10:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22fe7e9d-6291-41cf-8954-9e45a6d8c2ec"
		},
		{
			"end": "2014-08-17T11:06:01",
			"start": "2014-08-17T10:06:01",
			"percent": 1.1,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "5f9b3c5a-4db9-4692-9f15-6aaeb053fc5d"
		},
		{
			"deviceTime": "2014-08-17T10:10:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2503bf2-27d7-421d-aed0-b36e4b3919ce"
		},
		{
			"deviceTime": "2014-08-17T10:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4afbbaa-0bbe-4401-862b-968968c1d704"
		},
		{
			"deviceTime": "2014-08-17T10:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1c2e1d4-9a84-48db-a47d-b6c8427f3691"
		},
		{
			"deviceTime": "2014-08-17T10:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8efa3d7f-8206-4f44-bd99-a11c8c8b7652"
		},
		{
			"deviceTime": "2014-08-17T10:30:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3090ff6d-5b5f-4f38-a963-197335996f06"
		},
		{
			"deviceTime": "2014-08-17T10:35:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47419bf2-4a18-4ebb-85de-ca46918ae102"
		},
		{
			"deviceTime": "2014-08-17T10:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e9f08d0-9a04-4c2f-9ff6-0adb4b0d1cf4"
		},
		{
			"deviceTime": "2014-08-17T10:45:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e16d7e1f-4d95-45ac-8f7c-b21b4fbef550"
		},
		{
			"deviceTime": "2014-08-17T10:50:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13626d28-8940-4c82-9ebd-6109adf9db30"
		},
		{
			"deviceTime": "2014-08-17T10:55:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3721d0c-5315-40af-a54a-40ecb634929f"
		},
		{
			"deviceTime": "2014-08-17T11:00:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "221d9410-1a2c-4267-bfe7-84091e76c245"
		},
		{
			"deviceTime": "2014-08-17T11:05:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3e29912-8e56-40d7-b715-b48e53aa5ecc"
		},
		{
			"deviceTime": "2014-08-17T11:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ef8944d-e1d0-42dd-b8fe-1c96768f93a0"
		},
		{
			"deviceTime": "2014-08-17T11:15:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c38a425c-92c0-4363-a14d-263b7f73d0cc"
		},
		{
			"messageText": "Spare ribs turkey leberkas, flank capicola esse enim reprehenderit minim turducken. Shoulder frankfurter quis laboris sed. Qui ea jowl tri-tip irure do non, beef pork belly ad shoulder in sunt filet mignon cupidatat.",
			"parentMessage": "",
			"utcTime": "2014-08-17T11:17:37Z",
			"type": "message",
			"id": "cf78c3fb-be19-4903-b85e-26a01eb72a95"
		},
		{
			"deviceTime": "2014-08-17T11:20:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8efaa07-2ba6-4681-92f2-cc3918b9d2ee"
		},
		{
			"deviceTime": "2014-08-17T11:25:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea69e35d-7a5a-4870-9859-5babc23c5aa3"
		},
		{
			"deviceTime": "2014-08-17T11:30:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7494b844-9831-4203-9a72-f12164aeed76"
		},
		{
			"deviceTime": "2014-08-17T11:35:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c22b72c-adf5-4ccd-875f-8c9b69b81aa8"
		},
		{
			"deviceTime": "2014-08-17T11:38:24",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d328fb61-96bd-4ef3-9dee-aaf5b621e617"
		},
		{
			"deviceTime": "2014-08-17T11:38:24",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "dbb52b69-f79c-4faa-9bb7-7e4efd26ab8a"
		},
		{
			"deviceTime": "2014-08-17T11:38:24",
			"id": "dbb52b69-f79c-4faa-9bb7-7e4efd26ab8a",
			"source": "demo",
			"joinKey": "c24567ef-4beb-4269-bd50-53e85cfbde12",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 71
			}
		},
		{
			"deviceTime": "2014-08-17T11:38:24",
			"suspendedAt": "2014-08-17T11:48:24",
			"programmed": 4.7,
			"joinKey": "c24567ef-4beb-4269-bd50-53e85cfbde12",
			"value": 0.8,
			"id": "72221e7e-a610-466e-8693-f18a5edc5d3b",
			"source": "demo",
			"recommended": 4.7,
			"extendedDelivery": 4.7,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-17T11:40:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eec00edd-c69c-4759-bf0e-858b05cab899"
		},
		{
			"deviceTime": "2014-08-17T11:45:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0086857-3120-407f-bb63-803a2809e582"
		},
		{
			"deviceTime": "2014-08-17T11:45:31",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "44690dac-5005-4d5f-a902-9911cb2544ab"
		},
		{
			"deviceTime": "2014-08-17T11:45:31",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "ad8426fa-88b6-4eff-9639-ba1ddbe469ba"
		},
		{
			"deviceTime": "2014-08-17T11:45:31",
			"id": "ad8426fa-88b6-4eff-9639-ba1ddbe469ba",
			"source": "demo",
			"joinKey": "cdf65b44-0a41-4c01-9d37-d8c98b7d86d2",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 66
			}
		},
		{
			"deviceTime": "2014-08-17T11:45:31",
			"programmed": 4.4,
			"joinKey": "cdf65b44-0a41-4c01-9d37-d8c98b7d86d2",
			"value": 4.4,
			"source": "demo",
			"recommended": 4.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "83884b27-dd4f-49e9-88ea-52cb79c060db"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-17T11:48:24",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "22dacd9f-5149-40cc-8e56-4c1ceb61f31c"
		},
		{
			"deviceTime": "2014-08-17T11:50:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23b1a6bf-76e6-491d-976c-5a51b1ba473c"
		},
		{
			"deviceTime": "2014-08-17T11:55:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aa1aa8e-ec4a-447d-8f41-0ffadf4633eb"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-17T11:59:24",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "b26a9443-d9e1-4127-8725-f55c02b6440a",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-17T11:48:24",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "22dacd9f-5149-40cc-8e56-4c1ceb61f31c"
			}
		},
		{
			"deviceTime": "2014-08-17T12:00:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d92e01e-85e2-4941-9abf-771657c05fc6"
		},
		{
			"deviceTime": "2014-08-17T12:03:27",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "9dac596b-2ce8-4001-9ac7-f507a00a62f9"
		},
		{
			"deviceTime": "2014-08-17T12:05:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef1143f5-b0d1-4963-b63b-de0d1bd28cf2"
		},
		{
			"deviceTime": "2014-08-17T12:10:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83db6e77-ee21-4123-834b-485b6f10a2fd"
		},
		{
			"deviceTime": "2014-08-17T12:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b892540c-ccf1-4203-8ea8-11f0ba7d697f"
		},
		{
			"deviceTime": "2014-08-17T12:20:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "862b778f-3040-4296-915a-2c86a2b93bd2"
		},
		{
			"deviceTime": "2014-08-17T12:23:36",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b4cdeac9-413c-48a3-be0c-d368646ad9ea"
		},
		{
			"deviceTime": "2014-08-17T12:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "113299ce-c2f6-498e-9b51-10bef8bb7132"
		},
		{
			"deviceTime": "2014-08-17T12:30:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5505f5e-d1f5-41cf-a721-215580766144"
		},
		{
			"deviceTime": "2014-08-17T12:35:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58ce78c0-1dbb-42a8-8557-81e8ffe16e59"
		},
		{
			"deviceTime": "2014-08-17T12:40:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "919ccd4a-0f21-4f83-9c16-bafb26af3501"
		},
		{
			"deviceTime": "2014-08-17T12:45:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6eb1c98-c7ab-4273-8ae8-0b3791ca15a4"
		},
		{
			"deviceTime": "2014-08-17T12:50:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7966184-2866-47ae-ba15-ee65013d00a8"
		},
		{
			"deviceTime": "2014-08-17T12:55:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bfe2b9d-294c-4db7-bf33-75c6157895d2"
		},
		{
			"deviceTime": "2014-08-17T13:00:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6be6afa-c474-49b2-b16c-bc3df92047eb"
		},
		{
			"deviceTime": "2014-08-17T13:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87c29f82-1cf4-4237-800a-3e4027b78f2b"
		},
		{
			"deviceTime": "2014-08-17T13:10:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92fc782d-673c-474d-94f6-dc925408ec14"
		},
		{
			"deviceTime": "2014-08-17T13:14:35",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "7127b0c9-c003-453a-9d0f-9b99a31db39a"
		},
		{
			"deviceTime": "2014-08-17T13:14:35",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "950312d3-bd4a-4387-9450-c7c1df337b55"
		},
		{
			"deviceTime": "2014-08-17T13:14:35",
			"id": "950312d3-bd4a-4387-9450-c7c1df337b55",
			"source": "demo",
			"joinKey": "c0c74df6-1781-4c32-a1c0-011b2ae9413a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 64
			}
		},
		{
			"deviceTime": "2014-08-17T13:14:35",
			"programmed": 4.3,
			"joinKey": "c0c74df6-1781-4c32-a1c0-011b2ae9413a",
			"value": 4.3,
			"source": "demo",
			"recommended": 4.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "66c71b88-c449-4b06-84bd-42221378682a"
		},
		{
			"deviceTime": "2014-08-17T13:15:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4193733c-2715-4c25-bb97-4b496e8790b8"
		},
		{
			"deviceTime": "2014-08-17T13:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78e03162-a003-4a15-93e2-02db727a6619"
		},
		{
			"deviceTime": "2014-08-17T13:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd5c75b1-5249-4acc-8772-f1267304cd69"
		},
		{
			"deviceTime": "2014-08-17T13:30:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbf2b1cc-4ddb-42d4-9cbd-86557d5c390b"
		},
		{
			"deviceTime": "2014-08-17T13:35:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe5ae33a-db40-42cd-8b1f-898d2ca2ba25"
		},
		{
			"deviceTime": "2014-08-17T13:40:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39761aae-a8a8-41d9-8f27-47d20d2f8e77"
		},
		{
			"deviceTime": "2014-08-17T13:45:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f67a83ab-245d-463a-9946-d40841ce166e"
		},
		{
			"deviceTime": "2014-08-17T13:50:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba63e185-981f-4e60-8a1f-ffca5cf27c44"
		},
		{
			"deviceTime": "2014-08-17T13:55:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36833991-2dde-4f29-8f47-7d978fbdc276"
		},
		{
			"deviceTime": "2014-08-17T14:00:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3658dc8a-b02e-44b2-8cee-8e62285111ea"
		},
		{
			"deviceTime": "2014-08-17T14:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e2c6f8b-c419-4982-b736-3d8a70cc68e8"
		},
		{
			"deviceTime": "2014-08-17T14:10:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b7dfa8a-33a0-4e4b-b125-2e54387cbaa5"
		},
		{
			"deviceTime": "2014-08-17T14:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c70e113-7252-43e0-9e6f-e2b32c889822"
		},
		{
			"deviceTime": "2014-08-17T14:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7015d0a5-3d0f-4f40-92d3-b47f5fac9ada"
		},
		{
			"deviceTime": "2014-08-17T14:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31e5bdd6-f6ea-4eb7-ae72-d65db27828d2"
		},
		{
			"deviceTime": "2014-08-17T14:30:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb441d6f-60e6-418d-b88f-a00627352b22"
		},
		{
			"deviceTime": "2014-08-17T14:35:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f07f4319-6a62-4dfc-8dee-5e72bf9953be"
		},
		{
			"deviceTime": "2014-08-17T14:40:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25d7198a-a0c3-4782-83a9-39a22e99e4ae"
		},
		{
			"deviceTime": "2014-08-17T14:45:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8e75a47-24cc-4021-b947-641e551cd145"
		},
		{
			"deviceTime": "2014-08-17T14:50:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ac7d777-7b6b-412d-9081-bb9b920a1608"
		},
		{
			"deviceTime": "2014-08-17T14:55:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "635e2bfb-9880-41f2-a432-4b3ed21b43de"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-17T20:00:00",
			"start": "2014-08-17T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "764c46d2-2e18-4490-96ca-b7351fba89dd"
		},
		{
			"deviceTime": "2014-08-17T15:00:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18a03801-7616-43cb-9334-96fb40e41959"
		},
		{
			"deviceTime": "2014-08-17T15:05:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc81daae-eb12-4f9c-9f25-ab028ebec6d3"
		},
		{
			"deviceTime": "2014-08-17T15:10:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d366d686-9168-49f1-a062-fa1df2e86297"
		},
		{
			"deviceTime": "2014-08-17T15:15:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3dbf37cb-23f4-4a47-a491-1b89d4ca08bc"
		},
		{
			"deviceTime": "2014-08-17T15:20:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f85eb733-42dc-4afb-a2f6-371ead971452"
		},
		{
			"deviceTime": "2014-08-17T15:25:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8618aa61-4474-4b00-8f57-c86d6e5bdd49"
		},
		{
			"deviceTime": "2014-08-17T15:30:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a370515-3ed2-43b2-b67f-637b8175d2fc"
		},
		{
			"deviceTime": "2014-08-17T15:35:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b36a2bcc-9ac4-4a01-8489-9050c890a42a"
		},
		{
			"deviceTime": "2014-08-17T15:40:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b68e686e-14d9-4380-a4c1-f14e3bb2130a"
		},
		{
			"deviceTime": "2014-08-17T15:45:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf924192-3d4d-4584-b234-bc42ae46a9b8"
		},
		{
			"deviceTime": "2014-08-17T15:50:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d901583-6ceb-4325-afec-f3e9bea66b19"
		},
		{
			"deviceTime": "2014-08-17T15:55:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d63ed82-00c5-43d6-8c4a-ef56b4c8d73b"
		},
		{
			"deviceTime": "2014-08-17T16:00:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00bc081b-50de-48ab-bc42-7ec2dea1e74a"
		},
		{
			"deviceTime": "2014-08-17T16:05:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce713cb8-b345-457a-89c1-14c9fd062402"
		},
		{
			"deviceTime": "2014-08-17T16:10:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1111aa7b-7a8a-4378-9e31-9d76b1be7bb4"
		},
		{
			"deviceTime": "2014-08-17T16:15:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa94bc8e-77bf-4977-882c-aa5e4efe8c4a"
		},
		{
			"deviceTime": "2014-08-17T16:20:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6ab1a82-df82-44f6-976a-88e29ba92748"
		},
		{
			"deviceTime": "2014-08-17T16:25:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b655bf70-66bc-48af-88af-8d35d18723ce"
		},
		{
			"deviceTime": "2014-08-17T16:30:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a452a9a-9d43-4468-b2e4-eeffa2c097ee"
		},
		{
			"deviceTime": "2014-08-17T16:35:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edf8a88d-0b64-46e5-a86f-3d09f5db03b5"
		},
		{
			"deviceTime": "2014-08-17T16:40:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "282216bb-0ffb-45c3-80eb-44873f6210f0"
		},
		{
			"deviceTime": "2014-08-17T16:45:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4b49108-2d40-42a1-92b4-d11acbf80af3"
		},
		{
			"deviceTime": "2014-08-17T16:50:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdb4c5bc-656f-4d1e-b116-8c52df3e5c8c"
		},
		{
			"deviceTime": "2014-08-17T16:55:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20765674-9056-4914-98d1-9a656d0371e1"
		},
		{
			"deviceTime": "2014-08-17T17:00:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e37349c4-6463-41b1-ad33-cb885db1bca0"
		},
		{
			"deviceTime": "2014-08-17T17:05:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30a8d126-7839-401b-a538-760c9fee0efa"
		},
		{
			"deviceTime": "2014-08-17T17:10:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1324c9d-8f73-40b2-a003-ff729e6b5009"
		},
		{
			"deviceTime": "2014-08-17T17:15:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3459a14-898f-48e2-b550-38a0b1d5ff84"
		},
		{
			"deviceTime": "2014-08-17T17:20:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b662b10b-7419-4275-a56d-24e0bc730b99"
		},
		{
			"deviceTime": "2014-08-17T17:25:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea9232ee-422e-422a-b1f5-d666120f6b1f"
		},
		{
			"deviceTime": "2014-08-17T17:30:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "696b6c99-7c04-4aa3-82cc-d48588e49bc7"
		},
		{
			"deviceTime": "2014-08-17T17:35:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53d9008f-cd12-4490-a8de-3398cf7a2be7"
		},
		{
			"deviceTime": "2014-08-17T17:40:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f627f33c-9bf1-4906-9cc8-9d514705a334"
		},
		{
			"deviceTime": "2014-08-17T17:45:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30bfd6e8-3f5f-4d09-8074-91b9a9b22517"
		},
		{
			"deviceTime": "2014-08-17T17:50:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fa9ca77-0f6e-40a6-b2ca-317c23944fec"
		},
		{
			"deviceTime": "2014-08-17T17:55:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2604e7e5-db41-4a7d-8c1c-e6e1dc302517"
		},
		{
			"deviceTime": "2014-08-17T18:00:22",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb1be344-6c2f-4a6e-8cf3-cda50a1ecd67"
		},
		{
			"deviceTime": "2014-08-17T18:05:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f357add-687f-4bad-a99a-3e72af5e1538"
		},
		{
			"deviceTime": "2014-08-17T18:10:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7bc561f-3fd7-48e9-bad1-95b25af1d80b"
		},
		{
			"deviceTime": "2014-08-17T18:15:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a51d1d3e-75a5-4204-a181-ad5c3d9dadd0"
		},
		{
			"end": "2014-08-17T22:17:01",
			"start": "2014-08-17T18:17:01",
			"percent": 0.5,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "98a64675-aae7-4903-9ffc-8ccd1671f88d"
		},
		{
			"deviceTime": "2014-08-17T18:20:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2e3e502-4a3e-44ce-b87c-c604a2757d0d"
		},
		{
			"deviceTime": "2014-08-17T18:25:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bcff3d5-b023-40ac-a7a2-8277f1432d56"
		},
		{
			"deviceTime": "2014-08-17T18:30:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7016e33-849f-4f7a-a7c0-ef163b0b7736"
		},
		{
			"deviceTime": "2014-08-17T18:35:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8986bcc6-0ca7-4232-a650-7464b92adc03"
		},
		{
			"deviceTime": "2014-08-17T18:40:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "670834a5-d5a2-4a07-b83c-1dc049444f5e"
		},
		{
			"deviceTime": "2014-08-17T18:45:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c0c45a1-3052-4585-811e-2be5e673763d"
		},
		{
			"deviceTime": "2014-08-17T18:50:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb18042e-0ea7-4496-9439-f4dcfb067543"
		},
		{
			"deviceTime": "2014-08-17T18:55:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82fa6bac-3ea6-4738-8bae-c187cccb9b9f"
		},
		{
			"deviceTime": "2014-08-17T19:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d875f049-0b91-4fdc-964c-517601dd9bd4"
		},
		{
			"deviceTime": "2014-08-17T19:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0263a2f8-5b86-408c-aa74-5da110362ba9"
		},
		{
			"deviceTime": "2014-08-17T19:10:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e06ef68-8adb-45f0-9ff5-8633bc271386"
		},
		{
			"deviceTime": "2014-08-17T19:15:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c885130-29bf-4eb2-9b11-4e2dd4691cbf"
		},
		{
			"deviceTime": "2014-08-17T19:20:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "879092a4-7e4b-4854-8052-3164a0707487"
		},
		{
			"deviceTime": "2014-08-17T19:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6317902c-16d0-4feb-8494-b82a3b2c0e24"
		},
		{
			"deviceTime": "2014-08-17T19:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5adbf0b0-d723-48a0-864b-fe80c419518f"
		},
		{
			"deviceTime": "2014-08-17T19:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "288ced4e-60e0-49b2-8333-602c94bcf796"
		},
		{
			"deviceTime": "2014-08-17T19:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57b449f2-67b5-4459-92e3-4106aaf386dc"
		},
		{
			"deviceTime": "2014-08-17T19:45:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02cdd7ee-0773-48f5-af72-4444bb66ec43"
		},
		{
			"deviceTime": "2014-08-17T19:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "003b3f94-fee4-4b19-922f-191b20f8a1a8"
		},
		{
			"deviceTime": "2014-08-17T19:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8282f27-e143-495c-862a-55a2558f7141"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-18T00:00:00",
			"start": "2014-08-17T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "58320d98-c104-43ab-83ff-1aa2399a7aad"
		},
		{
			"deviceTime": "2014-08-17T20:00:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cc1537c-2a25-409c-a6b2-b61891fc4f4a"
		},
		{
			"deviceTime": "2014-08-17T20:05:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb5b8bbf-3d4c-49af-9155-524292cec430"
		},
		{
			"deviceTime": "2014-08-17T20:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5e4e75f-f00f-49e7-afeb-538efcce2927"
		},
		{
			"deviceTime": "2014-08-17T20:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49db9524-7d84-4546-9d08-0d69a5454d10"
		},
		{
			"deviceTime": "2014-08-17T20:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee019cb8-3eb0-4967-88c4-415dc90d88f3"
		},
		{
			"deviceTime": "2014-08-17T20:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c83d261b-9986-4ab0-9730-6242cc6d3cce"
		},
		{
			"deviceTime": "2014-08-17T20:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c443f19-cf63-40f4-9664-0a56d9ac6d0f"
		},
		{
			"deviceTime": "2014-08-17T20:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51155048-1739-4248-8c33-416e5f496465"
		},
		{
			"deviceTime": "2014-08-17T20:40:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d22d0102-29d9-4e27-9893-02fc1f166969"
		},
		{
			"deviceTime": "2014-08-17T20:45:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "486d89b4-470e-42fd-91a0-29ba5fbd26e2"
		},
		{
			"deviceTime": "2014-08-17T20:50:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "079d2a39-979f-4095-b3cc-4f0c14632389"
		},
		{
			"deviceTime": "2014-08-17T20:55:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cfcb236-6cc9-45e5-b208-2c0bfe9a6fac"
		},
		{
			"deviceTime": "2014-08-17T21:00:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28926f0e-6b33-4197-844d-870e8e4d1ebb"
		},
		{
			"deviceTime": "2014-08-17T21:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57a11820-b242-41a5-a1a3-ef1994d17ffc"
		},
		{
			"deviceTime": "2014-08-17T21:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96d93d71-43d0-4f8d-a595-0f2e6aea31d9"
		},
		{
			"deviceTime": "2014-08-17T21:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95881e4b-1a61-4856-b524-9a73aed031d8"
		},
		{
			"deviceTime": "2014-08-17T21:20:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52c4cfd5-0051-4639-9e45-c403861741f6"
		},
		{
			"deviceTime": "2014-08-17T21:25:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "beef4f6b-4cba-4280-a5a8-a0422e60b701"
		},
		{
			"deviceTime": "2014-08-17T21:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e7dce5f-035a-4ffc-9754-3a567492d642"
		},
		{
			"deviceTime": "2014-08-17T21:35:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02ae26eb-9237-4bd5-83f4-ffa7bb436f37"
		},
		{
			"deviceTime": "2014-08-17T21:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e2f2d17-b862-4d91-9ec7-0d02730a906c"
		},
		{
			"deviceTime": "2014-08-17T21:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "474858cd-3328-4ec0-aeee-380d79764cd1"
		},
		{
			"deviceTime": "2014-08-17T21:50:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c52b981-77b5-42c8-8c36-41c17e4fb320"
		},
		{
			"deviceTime": "2014-08-17T21:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bf4f326-f225-4b04-a0c2-f1f33c47ff60"
		},
		{
			"deviceTime": "2014-08-17T22:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc4151cf-8e6b-4d8a-9bfa-4fc4704271e5"
		},
		{
			"deviceTime": "2014-08-17T22:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcc885bc-ab89-48eb-823e-0fed6aee9941"
		},
		{
			"deviceTime": "2014-08-17T22:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92bdd88a-6bf5-44b8-897b-343823c48db3"
		},
		{
			"deviceTime": "2014-08-17T22:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e161d7f-70ef-4f64-86f8-16b1c441f079"
		},
		{
			"deviceTime": "2014-08-17T22:20:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5769737-084e-4af1-9dae-800c5438d4b6"
		},
		{
			"deviceTime": "2014-08-17T22:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2d733a5-23f4-4724-99df-38739593fbd4"
		},
		{
			"deviceTime": "2014-08-17T22:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3296f904-9d9d-4c73-8d7f-7e9b2c765865"
		},
		{
			"deviceTime": "2014-08-17T22:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16c92567-b15c-47db-99c3-6c666b1e1fec"
		},
		{
			"deviceTime": "2014-08-17T22:40:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9470ae7a-d54c-4c36-b955-53ad5efd7d42"
		},
		{
			"deviceTime": "2014-08-17T22:45:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a07231c-27c7-42a0-9437-202f579d6e05"
		},
		{
			"deviceTime": "2014-08-17T22:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "227db871-964e-4905-8b4c-963db49f8ccd"
		},
		{
			"deviceTime": "2014-08-17T22:55:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af6bd326-13e7-463e-913f-12183802be9c"
		},
		{
			"deviceTime": "2014-08-17T23:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a8393e7-0470-44f3-be74-5d32fa403a6a"
		},
		{
			"deviceTime": "2014-08-17T23:05:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fce31c8c-2e50-4fce-a4da-74d8eede8258"
		},
		{
			"deviceTime": "2014-08-17T23:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ea50cca-d967-4cfd-bf9e-718d9456897c"
		},
		{
			"deviceTime": "2014-08-17T23:15:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8db91cb0-6912-4a1f-841e-e3a91ec89ee0"
		},
		{
			"deviceTime": "2014-08-17T23:20:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a507926c-eb53-4177-8753-f60f50a4994e"
		},
		{
			"deviceTime": "2014-08-17T23:25:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21630566-e273-4727-9997-623bafeb967f"
		},
		{
			"deviceTime": "2014-08-17T23:30:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de9af5ed-975b-4ba9-bce7-b74dd84f8b81"
		},
		{
			"deviceTime": "2014-08-17T23:35:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34c81422-bc79-454f-b829-a1547e161689"
		},
		{
			"deviceTime": "2014-08-17T23:40:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2b9a6bf-0ecc-4c3d-9778-97840936e9d5"
		},
		{
			"deviceTime": "2014-08-17T23:45:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "366985cf-3ad4-469d-98ae-1981982f4a2a"
		},
		{
			"deviceTime": "2014-08-17T23:50:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ed54592-c812-41d6-851a-e331a168507c"
		},
		{
			"deviceTime": "2014-08-17T23:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00855579-696d-4819-ae6e-05108f766edf"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-18T02:00:00",
			"start": "2014-08-18T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "0835f4aa-0320-4152-9aae-26c018507593"
		},
		{
			"deviceTime": "2014-08-18T00:00:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad0e6478-f6db-4bea-9245-43946ef283ed"
		},
		{
			"deviceTime": "2014-08-18T00:05:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee55a548-8f41-4a78-8fd8-17d2fe6bf389"
		},
		{
			"deviceTime": "2014-08-18T00:10:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "997450b7-27bb-45da-a0f5-501947b31f66"
		},
		{
			"deviceTime": "2014-08-18T00:15:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aef94d3c-5b4c-4bea-8eb5-7460b0b414c0"
		},
		{
			"deviceTime": "2014-08-18T00:20:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d91a275-62c7-44e0-bc39-47349f02d02b"
		},
		{
			"deviceTime": "2014-08-18T00:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4dbbb67e-4c07-4b11-a342-9498dbacc9c5"
		},
		{
			"deviceTime": "2014-08-18T00:30:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a847714-dcfc-4eec-b9a9-e12ed5c3bc49"
		},
		{
			"deviceTime": "2014-08-18T00:35:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "795ffc59-7fd3-4711-a26b-95e46ac23c3d"
		},
		{
			"deviceTime": "2014-08-18T00:40:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50861426-16a8-4ca2-997f-a0b3ea9b1017"
		},
		{
			"deviceTime": "2014-08-18T00:45:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49a12ec6-f17d-47ae-952f-16ecaf2f8894"
		},
		{
			"deviceTime": "2014-08-18T00:50:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bc58683-a34a-4085-85b3-ff433126e0e1"
		},
		{
			"deviceTime": "2014-08-18T00:55:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac5956f6-3545-4311-9954-31d889ff7e19"
		},
		{
			"deviceTime": "2014-08-18T01:00:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a9f55c6-7904-4d35-b035-c8e9494bc0c2"
		},
		{
			"deviceTime": "2014-08-18T01:05:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7833f132-bb5b-4cd0-9dc5-82cd56284a02"
		},
		{
			"deviceTime": "2014-08-18T01:10:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "748bbe12-0c72-475b-9380-9b830c2e119b"
		},
		{
			"deviceTime": "2014-08-18T01:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a35e549-755f-41fd-8736-7af2fa24e669"
		},
		{
			"deviceTime": "2014-08-18T01:20:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a92363ca-ea33-44f3-a1e5-bf11a74a2088"
		},
		{
			"deviceTime": "2014-08-18T01:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d60bfbb0-1cae-4d97-8df2-2cc6adc35c4a"
		},
		{
			"deviceTime": "2014-08-18T01:30:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a3015e3-f8e9-4335-83bb-438dc406cb0f"
		},
		{
			"deviceTime": "2014-08-18T01:35:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4df612d9-ec20-4b99-a17b-37e234f62b8a"
		},
		{
			"deviceTime": "2014-08-18T01:40:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcdefa9d-2fdf-44ef-9983-cfec24376737"
		},
		{
			"deviceTime": "2014-08-18T01:45:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cf75a1d-4163-4885-a97b-2d251f8eb213"
		},
		{
			"deviceTime": "2014-08-18T01:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97eb7731-93e6-4805-82e8-a01a42fd4940"
		},
		{
			"deviceTime": "2014-08-18T01:55:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0cd92db-af04-4d4d-b556-f8f78a2dc09e"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-18T04:00:00",
			"start": "2014-08-18T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "986dff0e-3803-4af4-ad02-e0f53e1662d2"
		},
		{
			"deviceTime": "2014-08-18T02:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f5eace5-a745-46c9-9bf8-32eb11c73497"
		},
		{
			"deviceTime": "2014-08-18T02:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ea8080f-1d2b-4fcf-b53d-e7663fc6ece6"
		},
		{
			"deviceTime": "2014-08-18T02:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "133fbc31-7459-446b-8711-8f5119951c75"
		},
		{
			"deviceTime": "2014-08-18T02:15:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c7545fb-a138-45fc-b68c-d81cd13b2ba2"
		},
		{
			"deviceTime": "2014-08-18T02:20:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6fff6fc-d93b-44b6-8efb-b89f89595306"
		},
		{
			"deviceTime": "2014-08-18T02:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05acb594-d431-4e97-a611-5dc774b3dc60"
		},
		{
			"deviceTime": "2014-08-18T02:30:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c14b596a-1ff3-46ce-a2ef-0cd05a919efc"
		},
		{
			"deviceTime": "2014-08-18T02:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "261d5c9e-2350-4880-bcc5-c3348f7e21e9"
		},
		{
			"deviceTime": "2014-08-18T02:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e159f462-ca16-4c1f-8c98-06eb4ff8eeb8"
		},
		{
			"deviceTime": "2014-08-18T02:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53f07a25-b095-4856-a47e-45e2142e969c"
		},
		{
			"deviceTime": "2014-08-18T02:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2692d236-fca2-47b4-be6d-8e6596a71c89"
		},
		{
			"deviceTime": "2014-08-18T02:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a7cca3d-5823-4fd8-9d4f-eaa6facb0995"
		},
		{
			"deviceTime": "2014-08-18T03:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f60a330c-00f6-4a47-b750-f24914fd1dec"
		},
		{
			"deviceTime": "2014-08-18T03:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39fe7a15-99de-46f1-b558-3b61671175fb"
		},
		{
			"deviceTime": "2014-08-18T03:10:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bfba06c2-d0ea-44c1-9ef0-ec1d3e2ac70c"
		},
		{
			"deviceTime": "2014-08-18T03:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ad7f299-0301-48a7-a8f8-32d2b1675de5"
		},
		{
			"deviceTime": "2014-08-18T03:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ac02f9c-4bab-43bb-a9f2-4d3fd5f02db4"
		},
		{
			"deviceTime": "2014-08-18T03:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab309879-555a-402a-8ad6-7112e11af17a"
		},
		{
			"deviceTime": "2014-08-18T03:30:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5414ac9-fe1e-4c19-98c3-d18793154ac1"
		},
		{
			"deviceTime": "2014-08-18T03:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2732fe44-6241-4ad2-a1b4-80753663797c"
		},
		{
			"deviceTime": "2014-08-18T03:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3be46ddf-829a-48fc-acfa-3ff961a236f5"
		},
		{
			"deviceTime": "2014-08-18T03:45:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62dae7ec-2628-4709-b2e5-2b59e78ebf59"
		},
		{
			"deviceTime": "2014-08-18T03:50:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14e6eb02-be65-46b1-b826-3391ff4e6509"
		},
		{
			"deviceTime": "2014-08-18T03:55:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c1ec8e1-3089-4a12-8685-efe1e68b25a8"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-18T05:00:00",
			"start": "2014-08-18T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "17339624-390c-4844-bc43-c2046f055261"
		},
		{
			"deviceTime": "2014-08-18T04:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f4c92f6-0656-4822-a94c-04acbddb9b88"
		},
		{
			"deviceTime": "2014-08-18T04:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47c9cb7d-31c5-4f24-89df-7631041b466c"
		},
		{
			"deviceTime": "2014-08-18T04:10:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "271c51d7-f53b-489a-8fc6-4d8d3dfaf53e"
		},
		{
			"deviceTime": "2014-08-18T04:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81a51bd9-c97e-4856-bb64-5416d1ef458c"
		},
		{
			"deviceTime": "2014-08-18T04:20:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "223c80c0-c169-4f82-b3ef-bd41d2313b0c"
		},
		{
			"deviceTime": "2014-08-18T04:25:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b51ecef-de37-4d3b-9d45-f10a5ce35151"
		},
		{
			"deviceTime": "2014-08-18T04:30:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7f51f35-9482-44cd-942d-27ece18e9d0d"
		},
		{
			"deviceTime": "2014-08-18T04:35:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f9af38e-9916-41ba-9b40-012078821c4f"
		},
		{
			"deviceTime": "2014-08-18T04:40:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d2f48e1-7abe-4283-b7d3-39cf0d513b56"
		},
		{
			"deviceTime": "2014-08-18T04:45:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26b2c41c-1ae3-4b36-9cff-1347428ad06b"
		},
		{
			"deviceTime": "2014-08-18T04:50:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2acb50f1-8ecc-41aa-bcb9-b447b557b5be"
		},
		{
			"deviceTime": "2014-08-18T04:55:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2c8f73c-d2f4-4784-b735-ff708e29382a"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-18T06:00:00",
			"start": "2014-08-18T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "72280015-6947-4c44-bb46-eb13f03bb296"
		},
		{
			"deviceTime": "2014-08-18T05:00:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f81a1a8-2015-47d0-85ad-36edd290499d"
		},
		{
			"deviceTime": "2014-08-18T05:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b10d51f-f436-401c-91d9-4324d61f2451"
		},
		{
			"deviceTime": "2014-08-18T05:10:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39fa71e3-82cf-4d17-9557-f058278552ad"
		},
		{
			"deviceTime": "2014-08-18T05:15:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eda9dc8-8df5-4594-99f7-5eb6004c0c92"
		},
		{
			"deviceTime": "2014-08-18T05:15:43",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4f6d9f89-2c71-4ca0-a912-036dfa2069db"
		},
		{
			"deviceTime": "2014-08-18T05:18:11",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "2c464263-3b2f-4f91-9f59-383989fd890f"
		},
		{
			"deviceTime": "2014-08-18T05:18:11",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "3ffc7322-eb3a-4d69-ae90-26dd1f5618f8"
		},
		{
			"deviceTime": "2014-08-18T05:18:11",
			"id": "3ffc7322-eb3a-4d69-ae90-26dd1f5618f8",
			"source": "demo",
			"joinKey": "ee08dfa1-567b-4260-93ca-1a86d7ed6de0",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 63
			}
		},
		{
			"deviceTime": "2014-08-18T05:18:11",
			"programmed": 4.5,
			"joinKey": "ee08dfa1-567b-4260-93ca-1a86d7ed6de0",
			"value": 4.5,
			"source": "demo",
			"recommended": 4.2,
			"extendedDelivery": 2.7,
			"initialDelivery": 1.8,
			"duration": 7200000,
			"extended": true,
			"type": "bolus",
			"id": "255ea9d7-7de5-42cb-9edf-c25a44658f04",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-18T05:20:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef3463e9-1cbb-4bbf-baa5-ef07db6b0bef"
		},
		{
			"deviceTime": "2014-08-18T05:25:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3968d58d-525f-41ab-9e84-2296cd139720"
		},
		{
			"deviceTime": "2014-08-18T05:28:01",
			"value": 2.6,
			"source": "demo",
			"recommended": 2.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "0883ec9d-c030-4d3c-8294-a67033b6336a"
		},
		{
			"deviceTime": "2014-08-18T05:30:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2500792-f78f-4012-a39a-d400a729b94b"
		},
		{
			"deviceTime": "2014-08-18T05:35:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbeaf2ea-d181-4caf-94ee-0024e5d54383"
		},
		{
			"deviceTime": "2014-08-18T05:40:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e409b495-3c1d-4d5b-9723-bb1fa90b2ff1"
		},
		{
			"deviceTime": "2014-08-18T05:45:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ce5b10f-93db-41a3-961a-5ee43cf74820"
		},
		{
			"end": "2014-08-18T12:17:01",
			"start": "2014-08-18T05:47:01",
			"percent": 2,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 23400000,
			"type": "basal-rate-segment",
			"id": "91ce70eb-479c-46f5-9a4c-654f00c2783c"
		},
		{
			"deviceTime": "2014-08-18T05:50:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a43b800d-0269-4b5a-8cb5-7bcbbc19833e"
		},
		{
			"deviceTime": "2014-08-18T05:55:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b36e6ad0-3722-42c0-8285-28abf236cc10"
		},
		{
			"delivered": 1,
			"end": "2014-08-18T09:00:00",
			"start": "2014-08-18T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "097b30fa-640d-4e67-bbc8-b754b97ab682"
		},
		{
			"deviceTime": "2014-08-18T06:00:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eca3383c-e544-4c34-8f59-1fff3f563fec"
		},
		{
			"deviceTime": "2014-08-18T06:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e77f87f7-e762-4c41-888c-5b3465dc8576"
		},
		{
			"deviceTime": "2014-08-18T06:10:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cea260d-d490-490c-9a0e-2002ab05d58a"
		},
		{
			"deviceTime": "2014-08-18T06:15:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "323cae70-d2af-4a56-8449-58c27908bb6b"
		},
		{
			"deviceTime": "2014-08-18T06:20:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59aab592-87bb-4e32-9cd9-05a7ba839656"
		},
		{
			"deviceTime": "2014-08-18T06:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f813b53d-3128-4c44-8feb-663f8a75285a"
		},
		{
			"deviceTime": "2014-08-18T06:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b835c41-131a-42ce-beae-ed932a7fb3e9"
		},
		{
			"deviceTime": "2014-08-18T06:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39018aca-df50-4d73-a972-0f5ff5ac8219"
		},
		{
			"deviceTime": "2014-08-18T06:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29e16a08-6621-41c3-8196-0026196ee6db"
		},
		{
			"deviceTime": "2014-08-18T06:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9934008-614e-40f6-9cec-0d89b39fbd9d"
		},
		{
			"deviceTime": "2014-08-18T06:50:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9e4a4b6-2dc2-4b84-97d0-e2bccaa2f3a0"
		},
		{
			"deviceTime": "2014-08-18T06:55:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b45478b2-0644-44fb-99bc-a8aa9f4fc808"
		},
		{
			"deviceTime": "2014-08-18T07:00:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57e778db-567a-4a78-8724-5dca3519fabe"
		},
		{
			"deviceTime": "2014-08-18T07:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "577b0620-208d-4642-80be-357386a520ef"
		},
		{
			"deviceTime": "2014-08-18T07:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "488d6b9a-1525-4781-8907-67d1e18d1635"
		},
		{
			"deviceTime": "2014-08-18T07:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98162d24-ebed-4b08-a9a0-9043474892f9"
		},
		{
			"deviceTime": "2014-08-18T07:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d577e86e-6ab2-44e9-9eee-66a88385db78"
		},
		{
			"deviceTime": "2014-08-18T07:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "254ce0ca-f100-4ca4-8273-55c80444626e"
		},
		{
			"deviceTime": "2014-08-18T07:30:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0dbbf3c5-464f-41fd-a0d2-dfbeddc058e9"
		},
		{
			"deviceTime": "2014-08-18T07:35:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17c34a11-4066-489e-9151-7ac0155ad450"
		},
		{
			"deviceTime": "2014-08-18T07:40:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7806bd6-f000-4e75-89b4-d8ee648615ce"
		},
		{
			"deviceTime": "2014-08-18T07:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6cfe1f7-12f6-4169-98f1-ef1f03cee6a6"
		},
		{
			"deviceTime": "2014-08-18T07:50:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d75ca988-3a3f-49ee-8b14-3c91e4b593a5"
		},
		{
			"deviceTime": "2014-08-18T07:55:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1d16abd-51e7-415f-a0fa-773758997124"
		},
		{
			"deviceTime": "2014-08-18T08:00:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e29bfce-f832-4736-ac46-5fdce1786f2a"
		},
		{
			"deviceTime": "2014-08-18T08:05:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5262477-7366-42f9-b3f7-d5b7435f42fb"
		},
		{
			"deviceTime": "2014-08-18T08:07:57",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "1086e425-3cc3-4d43-a97c-9ba129202318"
		},
		{
			"deviceTime": "2014-08-18T08:07:57",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fcb30045-021e-495b-a6bb-fab1f9111a9d"
		},
		{
			"deviceTime": "2014-08-18T08:07:57",
			"id": "fcb30045-021e-495b-a6bb-fab1f9111a9d",
			"source": "demo",
			"joinKey": "f9a9a5bd-0176-40a2-8e1b-d1a979012db3",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 85
			}
		},
		{
			"deviceTime": "2014-08-18T08:07:57",
			"programmed": 5.7,
			"joinKey": "f9a9a5bd-0176-40a2-8e1b-d1a979012db3",
			"value": 0.7,
			"source": "demo",
			"recommended": 5.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1cbd5e5f-aa16-429c-8a98-0ebdef1d5924"
		},
		{
			"deviceTime": "2014-08-18T08:10:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28a34f93-fb93-478e-85d9-34953e6fb565"
		},
		{
			"deviceTime": "2014-08-18T08:15:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b72efd6-1c51-4897-b6ad-854d0fcb93f9"
		},
		{
			"deviceTime": "2014-08-18T08:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec336350-d48a-467a-82e8-693715b5b559"
		},
		{
			"deviceTime": "2014-08-18T08:25:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a4328b9-be2e-4a25-9367-b0d78cb5392d"
		},
		{
			"deviceTime": "2014-08-18T08:30:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df4beb68-0b9b-4311-9b91-3ce1a3db9b8c"
		},
		{
			"deviceTime": "2014-08-18T08:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c324bd21-7fa4-48a8-968c-56aa805c23a9"
		},
		{
			"deviceTime": "2014-08-18T08:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4a89ef1-80c0-44da-95eb-26ecf50683d3"
		},
		{
			"deviceTime": "2014-08-18T08:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31bfd8c4-1c7c-4ce6-af7a-c6d59161c50a"
		},
		{
			"deviceTime": "2014-08-18T08:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a94ad481-5167-47f1-ac75-5ff561a2e11f"
		},
		{
			"deviceTime": "2014-08-18T08:55:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d89684a8-1dcc-493c-8099-2674b08705b8"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-18T15:00:00",
			"start": "2014-08-18T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "91d93f34-f0f1-4c92-8ec8-63f7c643f797"
		},
		{
			"deviceTime": "2014-08-18T09:00:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f21c9162-da29-44e3-95f0-98c66968cf59"
		},
		{
			"deviceTime": "2014-08-18T09:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67022bda-62ad-41bb-ac1b-f568e586252d"
		},
		{
			"messageText": "Nulla consectetur elit aliqua qui shankle ad.",
			"parentMessage": "",
			"utcTime": "2014-08-18T09:10:04Z",
			"type": "message",
			"id": "eaca0bd1-5843-44f9-ab68-bf634f1f6782"
		},
		{
			"deviceTime": "2014-08-18T09:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08c67d73-9b2f-4399-918b-a7119e3bef54"
		},
		{
			"deviceTime": "2014-08-18T09:15:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdfd5762-a7d5-416a-ba96-50258ad3edd7"
		},
		{
			"deviceTime": "2014-08-18T09:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "015ca4fe-8ffb-4108-93af-f9c7b07df9aa"
		},
		{
			"deviceTime": "2014-08-18T09:25:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebf852b4-0cd2-46aa-8e88-a8ba4e98091a"
		},
		{
			"deviceTime": "2014-08-18T10:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b5f1e6f-8698-4ddb-ad71-23b69b8de708"
		},
		{
			"deviceTime": "2014-08-18T10:05:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9aff3c4f-e0b8-430d-af5c-1f6b2ab26f8a"
		},
		{
			"deviceTime": "2014-08-18T10:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d75fe9f-9299-4c43-8d2a-fd6df3418f22"
		},
		{
			"deviceTime": "2014-08-18T10:15:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0be41748-abd6-4c24-8d3c-f03d48635de6"
		},
		{
			"deviceTime": "2014-08-18T10:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2abe4cf1-4ccc-49ce-877a-43d05ffac795"
		},
		{
			"deviceTime": "2014-08-18T10:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a93c562-3c64-448e-86f6-306958425e01"
		},
		{
			"deviceTime": "2014-08-18T10:30:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be01a446-a491-4389-9820-af40124ddc3b"
		},
		{
			"deviceTime": "2014-08-18T10:34:04",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "97763a3d-1331-4bb2-80e8-29d01ccdc6bb"
		},
		{
			"deviceTime": "2014-08-18T10:34:04",
			"value": 38,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "4859c014-072f-439e-bce4-802fdb036814"
		},
		{
			"deviceTime": "2014-08-18T10:34:04",
			"id": "4859c014-072f-439e-bce4-802fdb036814",
			"source": "demo",
			"joinKey": "255a2c01-e70e-4a00-bc86-7df296a3b57e",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 38
			}
		},
		{
			"deviceTime": "2014-08-18T10:34:04",
			"suspendedAt": "2014-08-18T12:04:04",
			"programmed": 2.5,
			"joinKey": "255a2c01-e70e-4a00-bc86-7df296a3b57e",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.5,
			"extendedDelivery": 2.2,
			"initialDelivery": 0.3,
			"duration": 10800000,
			"extended": true,
			"type": "bolus",
			"id": "196ec2d7-24a5-4f57-b592-0338844e11d4",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-18T10:35:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7bab01b-384f-4b76-90ba-a959b2394ac9"
		},
		{
			"deviceTime": "2014-08-18T10:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa508093-9c21-4878-bfeb-cb3e8792d9cb"
		},
		{
			"deviceTime": "2014-08-18T10:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32666df1-b56e-411c-a310-8799a8c46b6a"
		},
		{
			"deviceTime": "2014-08-18T10:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03a05dbc-c0bf-490a-afac-a9d9bcfb8315"
		},
		{
			"deviceTime": "2014-08-18T10:55:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6abb3265-9579-4e78-93db-d329c9483b97"
		},
		{
			"deviceTime": "2014-08-18T11:15:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03f617d4-25f6-47a8-bfb0-33cbb65d266d"
		},
		{
			"deviceTime": "2014-08-18T11:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83794746-aae1-4838-906d-cb017b0c59af"
		},
		{
			"deviceTime": "2014-08-18T11:25:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29c51667-b89b-4df3-8c56-5f6fc60cca58"
		},
		{
			"deviceTime": "2014-08-18T11:26:10",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "31a3fd77-0d12-4e6f-941d-363127088334"
		},
		{
			"deviceTime": "2014-08-18T11:26:10",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "41d4d1f8-eb81-4969-9cc3-0b4c73d57802"
		},
		{
			"deviceTime": "2014-08-18T11:26:10",
			"id": "41d4d1f8-eb81-4969-9cc3-0b4c73d57802",
			"source": "demo",
			"joinKey": "9c8de5e6-544d-456f-9e85-85029a334351",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 54
			}
		},
		{
			"deviceTime": "2014-08-18T11:26:10",
			"suspendedAt": "2014-08-18T11:41:10",
			"programmed": 3.4,
			"joinKey": "9c8de5e6-544d-456f-9e85-85029a334351",
			"value": 3.4,
			"source": "demo",
			"recommended": 3.6,
			"extendedDelivery": 3.4,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "c955881f-a2b7-4b6d-9cb5-54c3dcf9680c"
		},
		{
			"deviceTime": "2014-08-18T11:30:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9e2664b-0a10-4445-9c5d-84bfd808f68c"
		},
		{
			"deviceTime": "2014-08-18T11:35:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92626b48-7edb-4d77-a018-a22f97842f02"
		},
		{
			"deviceTime": "2014-08-18T11:40:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9526f382-e41b-4dc3-9d5b-bea755996665"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-18T11:41:10",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "8bf7188b-5dda-408e-a03d-ee820fa87c2d"
		},
		{
			"deviceTime": "2014-08-18T11:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e75a9cd5-c062-4ae1-983a-e4ff9b2fdefa"
		},
		{
			"deviceTime": "2014-08-18T11:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5822bb9-217a-4767-aeab-f2c4ec48abb2"
		},
		{
			"deviceTime": "2014-08-18T11:55:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ae47229-870f-4a30-b0ec-f645a139f310"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-18T11:57:10",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "94432248-3da1-40bc-9592-25be1d8722e3",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-18T11:41:10",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "8bf7188b-5dda-408e-a03d-ee820fa87c2d"
			}
		},
		{
			"deviceTime": "2014-08-18T12:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5e072aa-348d-483c-acb7-53140d36af0c"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-18T12:04:04",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "71f82aec-14af-440a-a4a9-31b0ffc61a59"
		},
		{
			"deviceTime": "2014-08-18T12:05:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "353f4fdc-7861-405d-a8cd-e8f7a241b132"
		},
		{
			"deviceTime": "2014-08-18T12:10:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "512c6657-004e-407c-8f31-5e72d9e69322"
		},
		{
			"deviceTime": "2014-08-18T12:15:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1372f407-b871-40c2-a248-96004522cd2d"
		},
		{
			"deviceTime": "2014-08-18T12:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c42a078-4810-4c07-b652-b3f5a936f217"
		},
		{
			"deviceTime": "2014-08-18T12:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca33d14e-a805-4820-bd60-23d30d93a595"
		},
		{
			"deviceTime": "2014-08-18T12:30:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc3abe0b-0363-4a19-9b47-486e0b28ef65"
		},
		{
			"deviceTime": "2014-08-18T12:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af00fd13-dfce-4abc-b609-cb40c45f2c98"
		},
		{
			"deviceTime": "2014-08-18T12:40:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af5499e9-096b-41b6-828a-b267bf6899c4"
		},
		{
			"deviceTime": "2014-08-18T12:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea265fbf-aa4b-4e77-9314-9cc5e07123d0"
		},
		{
			"deviceTime": "2014-08-18T12:50:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c9d2267-21a0-42ec-959e-ba08c86454ef"
		},
		{
			"deviceTime": "2014-08-18T13:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bba33079-dade-4902-b8a5-ba848e679e8e"
		},
		{
			"deviceTime": "2014-08-18T13:25:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14bd51c7-6b86-4b07-b9fd-a2cdf60ece2d"
		},
		{
			"deviceTime": "2014-08-18T13:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4094c56b-8c97-4894-b0d9-ae64cbcfc4ae"
		},
		{
			"deviceTime": "2014-08-18T13:35:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09ca00c6-dc6e-4681-bb10-ae293d53554d"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-18T13:37:04",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "6943568c-6fe2-44a7-a298-6ec3e24665dd",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-18T12:04:04",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "71f82aec-14af-440a-a4a9-31b0ffc61a59"
			}
		},
		{
			"deviceTime": "2014-08-18T13:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fed193c9-2871-4f6c-89f1-0f09c4eeda41"
		},
		{
			"deviceTime": "2014-08-18T13:45:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0040dae7-a39a-4b8f-aeab-f62eac4e39da"
		},
		{
			"deviceTime": "2014-08-18T13:50:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5cdfd47-69aa-42eb-bc4f-7c823197ed22"
		},
		{
			"deviceTime": "2014-08-18T13:58:09",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "71ae7d0b-0cd7-4874-a5a3-9257354d5964"
		},
		{
			"deviceTime": "2014-08-18T14:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8b9967e-05b4-44fd-bd9a-48e8220d46ea"
		},
		{
			"deviceTime": "2014-08-18T14:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da4feb83-d6b7-4ab8-9be2-64ebed4bf517"
		},
		{
			"deviceTime": "2014-08-18T14:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c529b763-23a1-46c0-bc9c-a44ecf0c7148"
		},
		{
			"deviceTime": "2014-08-18T14:15:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa7c584a-71fc-4873-84d1-52216a739ca4"
		},
		{
			"end": "2014-08-18T14:49:01",
			"start": "2014-08-18T14:19:01",
			"percent": 1.1,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"type": "basal-rate-segment",
			"id": "bba415e3-fb12-4563-8d75-7cd88c6c5005"
		},
		{
			"deviceTime": "2014-08-18T14:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab86e3bd-84da-48cf-95ee-1673791d9567"
		},
		{
			"deviceTime": "2014-08-18T14:25:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9da9be7a-f699-4d2a-a32f-b90b6f0a29d5"
		},
		{
			"deviceTime": "2014-08-18T14:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "239928cb-845d-46c8-b975-d35570e453db"
		},
		{
			"deviceTime": "2014-08-18T14:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e37b7009-2f09-45b4-b9e4-cc97e2a3cd7d"
		},
		{
			"deviceTime": "2014-08-18T14:40:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2329a16-0ffb-42df-bf4b-4c0d89ab443a"
		},
		{
			"deviceTime": "2014-08-18T14:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d0b7dae-0b0c-457e-8b11-7311980e5b06"
		},
		{
			"deviceTime": "2014-08-18T14:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b096497c-7bb2-4ce6-acb6-866fb51eb79f"
		},
		{
			"deviceTime": "2014-08-18T14:55:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f818ecc4-9810-4513-9c14-f5a16f94f6b2"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-18T20:00:00",
			"start": "2014-08-18T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "07fe2127-6fe8-4fdc-a823-bfb458583685"
		},
		{
			"deviceTime": "2014-08-18T15:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62bc8af6-8399-47b7-b7d0-ff7c2c7f73ee"
		},
		{
			"deviceTime": "2014-08-18T15:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b48e3a7a-79f0-44e4-99be-6b68c89e314f"
		},
		{
			"deviceTime": "2014-08-18T15:10:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5c638db-7e0d-4e99-b040-0099dfb9ede0"
		},
		{
			"deviceTime": "2014-08-18T15:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e403ae9a-50d3-4b11-889c-ab8256efe433"
		},
		{
			"deviceTime": "2014-08-18T15:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37799fa0-c734-49bd-8e2f-b9cfba825848"
		},
		{
			"deviceTime": "2014-08-18T15:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da13a67f-ceec-404a-a9a9-b6fa0356cc66"
		},
		{
			"deviceTime": "2014-08-18T15:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34dd1927-1f55-47ff-af52-ae6bb5b1bbaa"
		},
		{
			"deviceTime": "2014-08-18T15:35:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eda2d8d-f962-41b1-ae68-a238d009797d"
		},
		{
			"deviceTime": "2014-08-18T15:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adadb5e2-61e5-4ad4-b67c-7722b7cac485"
		},
		{
			"deviceTime": "2014-08-18T15:45:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da734234-cc72-4280-a9fe-3ef8aa599662"
		},
		{
			"deviceTime": "2014-08-18T15:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8acd2cc9-6f1e-4edb-806d-70dba8b618dd"
		},
		{
			"deviceTime": "2014-08-18T15:55:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6e3fa70-3791-4235-88d4-b1f896303256"
		},
		{
			"deviceTime": "2014-08-18T16:00:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fe522ba-f0bb-4eb5-93f8-cd9358c0ce3d"
		},
		{
			"deviceTime": "2014-08-18T16:05:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abe6547a-b4c2-43af-88f6-8afdf24248bb"
		},
		{
			"deviceTime": "2014-08-18T16:10:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68a54b99-8c39-496c-b412-4754373c142a"
		},
		{
			"deviceTime": "2014-08-18T16:15:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6134a71e-dd23-4916-9374-8897b5a5c117"
		},
		{
			"deviceTime": "2014-08-18T16:20:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d3dfd7e-c54d-47cf-8b45-cb714914fe84"
		},
		{
			"deviceTime": "2014-08-18T16:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10bf3550-a38e-4062-9c29-b4fb654b88d5"
		},
		{
			"deviceTime": "2014-08-18T16:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10f6bb70-8cac-4927-9734-fe942ae22612"
		},
		{
			"deviceTime": "2014-08-18T16:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10810348-a27c-43e6-b62e-bd8c2a4bd673"
		},
		{
			"deviceTime": "2014-08-18T16:40:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a9d7d0c-d147-4b14-a467-16cd1cb6e56b"
		},
		{
			"deviceTime": "2014-08-18T16:45:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bef7cfb7-9ead-4e83-aba9-dce078d143bf"
		},
		{
			"deviceTime": "2014-08-18T16:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "811c1b4b-7bbf-4210-8830-0c1830aa7f4a"
		},
		{
			"deviceTime": "2014-08-18T16:55:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff034abf-b243-4abc-bab1-7121a5585cff"
		},
		{
			"deviceTime": "2014-08-18T17:00:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fee984a6-5670-449d-9579-129a9f798269"
		},
		{
			"deviceTime": "2014-08-18T17:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf52b405-938f-4ae4-a987-8a84e888784c"
		},
		{
			"deviceTime": "2014-08-18T17:15:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82a4d5f7-d013-48da-b3eb-252993304794"
		},
		{
			"deviceTime": "2014-08-18T17:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3a628d2-5f2d-4be6-ad86-94de55229228"
		},
		{
			"deviceTime": "2014-08-18T17:45:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66a8d79e-de8e-454d-a2fb-fc02e6ef77ed"
		},
		{
			"deviceTime": "2014-08-18T17:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba2b3e76-21b7-4305-98e3-093eb31bbb75"
		},
		{
			"deviceTime": "2014-08-18T17:55:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ed6696a-b10a-4b8d-b745-46030024517d"
		},
		{
			"deviceTime": "2014-08-18T18:00:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04bc3271-e7d9-4713-ba87-ef60cf1a2a55"
		},
		{
			"deviceTime": "2014-08-18T18:05:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b8849e2-bb29-462b-8c07-953cb990d599"
		},
		{
			"deviceTime": "2014-08-18T18:10:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9bc5938e-fef6-4ad7-9086-81950f767c16"
		},
		{
			"deviceTime": "2014-08-18T18:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72d6ebdd-3cc4-4e3c-8756-c22eaf12f71d"
		},
		{
			"deviceTime": "2014-08-18T18:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8bb7b67-bc71-4f83-b258-3f8a45af0700"
		},
		{
			"deviceTime": "2014-08-18T18:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97a45a03-071b-4281-bea2-b01f3da7551b"
		},
		{
			"deviceTime": "2014-08-18T18:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6c01d06-2cac-41ca-812e-b9669c9fa63e"
		},
		{
			"deviceTime": "2014-08-18T18:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b33c360-a370-401d-a2eb-7b3ef2481032"
		},
		{
			"deviceTime": "2014-08-18T18:40:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "defca0a5-3e40-480d-9180-7dd93657f092"
		},
		{
			"deviceTime": "2014-08-18T18:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc91ae17-6cab-485c-9ce0-e567c83f854f"
		},
		{
			"deviceTime": "2014-08-18T18:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0096aec7-05bd-45f3-8f5d-3c1b86d0f8f5"
		},
		{
			"deviceTime": "2014-08-18T18:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae736381-50cd-4ce5-a554-724834840dee"
		},
		{
			"deviceTime": "2014-08-18T19:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9d707bf-03c8-4b70-8731-97f8c0e21b86"
		},
		{
			"deviceTime": "2014-08-18T19:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4261870-4b12-450d-9059-258119eddc18"
		},
		{
			"deviceTime": "2014-08-18T19:10:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82bbd332-2622-46f1-bfdb-35fc46833238"
		},
		{
			"deviceTime": "2014-08-18T19:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad0243e2-a812-46c2-a089-9b515c4bf45b"
		},
		{
			"deviceTime": "2014-08-18T19:45:24",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "cfd320de-f389-4fb5-ae6a-1b80a7168097"
		},
		{
			"deviceTime": "2014-08-18T19:45:24",
			"value": 37,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "5433b6de-41b6-4176-9dc2-2c09e3bc27be"
		},
		{
			"deviceTime": "2014-08-18T19:45:24",
			"id": "5433b6de-41b6-4176-9dc2-2c09e3bc27be",
			"source": "demo",
			"joinKey": "0b16ce14-a4a4-427b-abc7-8639fadfa6b7",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 37
			}
		},
		{
			"deviceTime": "2014-08-18T19:45:24",
			"programmed": 2.5,
			"joinKey": "0b16ce14-a4a4-427b-abc7-8639fadfa6b7",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.5,
			"extendedDelivery": 2.5,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "e16feb47-5633-47b8-9739-e0550c51dbf2"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-19T00:00:00",
			"start": "2014-08-18T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "b8867d64-625f-431b-a8ed-fc4f6f37ba5e"
		},
		{
			"deviceTime": "2014-08-18T20:15:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6bd2949-fe4b-40ef-8547-c317bd68c873"
		},
		{
			"deviceTime": "2014-08-18T20:35:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f0a364a-6b7f-4c72-a26b-92d140e8a448"
		},
		{
			"deviceTime": "2014-08-18T20:40:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd2464de-8e8a-4358-b9ae-66d827f6c332"
		},
		{
			"deviceTime": "2014-08-18T20:45:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "306dfa18-3ac7-4008-9058-fcbffdb5600b"
		},
		{
			"deviceTime": "2014-08-18T20:50:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "181bc297-cc50-46eb-b6de-d4fdbda42e37"
		},
		{
			"deviceTime": "2014-08-18T20:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a37acb6a-84ee-4a60-8928-a68d4c49b138"
		},
		{
			"deviceTime": "2014-08-18T21:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e8776a8-903d-4205-9a86-bf62b1eae15b"
		},
		{
			"deviceTime": "2014-08-18T21:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e327ede1-913a-49a8-8b68-723174b2022b"
		},
		{
			"deviceTime": "2014-08-18T21:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86d4171c-086d-4e92-a3be-cd7befe3d298"
		},
		{
			"deviceTime": "2014-08-18T21:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07b37b0c-31c7-4467-9c0a-5f259ffe315a"
		},
		{
			"deviceTime": "2014-08-18T21:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "daff0d4b-5771-4bb4-9fc5-b98940a04b93"
		},
		{
			"deviceTime": "2014-08-18T21:25:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ae91eff-b89f-495c-8106-05266d43d8bc"
		},
		{
			"deviceTime": "2014-08-18T21:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "576ab823-adf1-402d-bdc3-7d8adb740a06"
		},
		{
			"deviceTime": "2014-08-18T21:35:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a6cefd4-d430-423e-90e7-a2d691e4d3e8"
		},
		{
			"deviceTime": "2014-08-18T21:40:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c16a585-3ecd-41ae-a0d6-8b12f961cf67"
		},
		{
			"deviceTime": "2014-08-18T21:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b9ea6e3-5ffd-4c37-a0be-60ba0dd2970c"
		},
		{
			"deviceTime": "2014-08-18T21:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf0e9bca-5994-41a9-813d-5d253f4586af"
		},
		{
			"deviceTime": "2014-08-18T21:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2788f8ce-d22c-4298-8a75-9a611e8d50ae"
		},
		{
			"deviceTime": "2014-08-18T22:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67a3c516-7c58-4dd6-8ee1-b32d00053676"
		},
		{
			"deviceTime": "2014-08-18T22:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b99d3246-91cb-4cfd-bce0-3e3772182dd0"
		},
		{
			"deviceTime": "2014-08-18T22:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df53c9cf-c9aa-4ffb-9636-007e71c558de"
		},
		{
			"deviceTime": "2014-08-18T22:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d455beb-7bc9-4e29-96f2-5e73841f6a1f"
		},
		{
			"deviceTime": "2014-08-18T22:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00c6d929-ae09-40f4-b954-6912f4e568dc"
		},
		{
			"deviceTime": "2014-08-18T22:25:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b2f62a3-5d08-4da7-87c6-314d8cd87b10"
		},
		{
			"deviceTime": "2014-08-18T22:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45f931e9-25e5-4fe8-8185-e745f47fcaf3"
		},
		{
			"deviceTime": "2014-08-18T22:35:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a7ba4f3-b760-437e-9fe6-fe1a11211fbf"
		},
		{
			"deviceTime": "2014-08-18T22:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9266b18-0a08-41a8-91e6-a29af37c7dd6"
		},
		{
			"deviceTime": "2014-08-18T22:45:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21b717ff-410c-4695-98a3-357c7177cb5f"
		},
		{
			"deviceTime": "2014-08-18T22:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43d340ef-88e5-4602-888e-c08f4ad749e2"
		},
		{
			"deviceTime": "2014-08-18T22:55:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4118f478-3fec-47cd-97b2-110b609371a5"
		},
		{
			"deviceTime": "2014-08-18T23:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06d0d59a-57ab-421c-960f-50962d818f52"
		},
		{
			"deviceTime": "2014-08-18T23:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b034a7b-38cb-4e74-8d52-98c9c4198196"
		},
		{
			"deviceTime": "2014-08-18T23:10:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3c199f4-73bf-4ae3-a9b6-0b4219eaa606"
		},
		{
			"deviceTime": "2014-08-18T23:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1eb4cbf6-e11e-4ca1-a30e-bfa54a4a69b3"
		},
		{
			"deviceTime": "2014-08-18T23:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5861a429-78a8-4d33-84e4-e9a656aded39"
		},
		{
			"deviceTime": "2014-08-18T23:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "774b7636-c04e-48c4-9451-125253902bbe"
		},
		{
			"deviceTime": "2014-08-18T23:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac603fb7-06f1-499d-81a6-387e7acb8697"
		},
		{
			"deviceTime": "2014-08-18T23:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80b391a5-9bf6-4c4c-86a9-c23a7a16052a"
		},
		{
			"deviceTime": "2014-08-18T23:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e07ceea-6f94-456b-961a-101cc8707a00"
		},
		{
			"deviceTime": "2014-08-18T23:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b257da1-4a31-45c5-b326-65d27501a080"
		},
		{
			"deviceTime": "2014-08-18T23:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "470df7e5-9bd9-4f14-9589-358043c4c52b"
		},
		{
			"deviceTime": "2014-08-18T23:55:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73bf9bff-d37c-47bf-ac1d-3656cde0e607"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-19T02:00:00",
			"start": "2014-08-19T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "8f99dc62-4ea5-427b-bacb-9be607429b66"
		},
		{
			"deviceTime": "2014-08-19T00:00:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a2baa28-dfcb-4229-8a7b-a4fe656b86df"
		},
		{
			"deviceTime": "2014-08-19T00:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12a240f3-7b68-4788-a09d-a710b0191fc6"
		},
		{
			"deviceTime": "2014-08-19T00:10:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "880ade6c-28e0-4591-8771-a53215481a12"
		},
		{
			"deviceTime": "2014-08-19T00:15:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1bef157-6d30-484f-ab1c-56939b352ae4"
		},
		{
			"deviceTime": "2014-08-19T00:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56101553-3a1c-49ab-8fda-3a85ca294269"
		},
		{
			"deviceTime": "2014-08-19T00:25:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6134c79-b906-4034-9520-1a8caa52c546"
		},
		{
			"deviceTime": "2014-08-19T00:30:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90941fc9-0178-4fc8-b7df-eaea78114261"
		},
		{
			"deviceTime": "2014-08-19T00:35:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edfb9595-add3-4d6f-9d7f-9a4b3c91b9c5"
		},
		{
			"deviceTime": "2014-08-19T00:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3fd6fdd-d9e7-4531-8c4d-834799401f9f"
		},
		{
			"deviceTime": "2014-08-19T00:45:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3fff78b6-36b4-4e22-9918-6a6f2a178abf"
		},
		{
			"deviceTime": "2014-08-19T00:50:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a29e6c09-1542-48c7-840a-9b570e288c52"
		},
		{
			"deviceTime": "2014-08-19T00:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b498229-2d48-413f-b358-71043f891445"
		},
		{
			"deviceTime": "2014-08-19T01:00:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddc3e5a5-f254-4b0d-8f23-92b055a5acae"
		},
		{
			"deviceTime": "2014-08-19T01:05:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfc454b1-5012-4e8b-8cb0-fa17098db75c"
		},
		{
			"deviceTime": "2014-08-19T01:10:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f58b342e-f997-4f45-8dc4-696d0c58451e"
		},
		{
			"deviceTime": "2014-08-19T01:15:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39307d8c-b879-4e75-9dce-5f61ce6cf674"
		},
		{
			"deviceTime": "2014-08-19T01:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21862b31-1a95-4005-a825-2c23e8add630"
		},
		{
			"deviceTime": "2014-08-19T01:25:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1bfb7ef-7e25-4e14-bc5b-9b2e0e863674"
		},
		{
			"deviceTime": "2014-08-19T01:30:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "070294ee-4acd-4891-8d36-8a76eb499e63"
		},
		{
			"deviceTime": "2014-08-19T01:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d13f493-4745-4edc-a49e-03be807d36f6"
		},
		{
			"deviceTime": "2014-08-19T01:40:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a64d6a8-53d0-4c3d-a9ec-a496e6803d94"
		},
		{
			"deviceTime": "2014-08-19T01:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23ad483e-95d6-4ed8-8a8e-f0cbad41aab2"
		},
		{
			"deviceTime": "2014-08-19T01:50:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "275c987f-7065-401d-b19c-26c1b527ed42"
		},
		{
			"deviceTime": "2014-08-19T01:55:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8193d09-3f3f-45ea-9260-294ff4d87bc2"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-19T04:00:00",
			"start": "2014-08-19T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "d77580cc-003b-46d9-898f-27c666a03108"
		},
		{
			"deviceTime": "2014-08-19T02:00:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "298d903d-e68d-4179-8f58-a646ca1deea4"
		},
		{
			"deviceTime": "2014-08-19T02:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f4100b0-0963-4828-b2fc-eb121eeb8d45"
		},
		{
			"deviceTime": "2014-08-19T02:10:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23dde996-0469-4f1a-ad84-41ca14e8a5ec"
		},
		{
			"deviceTime": "2014-08-19T02:15:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d7431d0-9d64-46a5-b09e-a3a448b3e425"
		},
		{
			"deviceTime": "2014-08-19T02:20:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1ddcfc5-010f-47bf-ae76-d9b50c744750"
		},
		{
			"deviceTime": "2014-08-19T02:25:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b326a7df-d447-4938-b52b-9823fe7bfa9f"
		},
		{
			"deviceTime": "2014-08-19T02:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf2a17c8-682e-4c49-b6ba-b7a6c71419ee"
		},
		{
			"deviceTime": "2014-08-19T02:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5a28d0e-5712-45ae-9bcb-32333a49f4b8"
		},
		{
			"deviceTime": "2014-08-19T02:40:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "691069f5-56b2-4396-a3bb-7b96e06417a1"
		},
		{
			"deviceTime": "2014-08-19T02:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "677a6186-69ae-49bc-85d8-e3fd7819564b"
		},
		{
			"deviceTime": "2014-08-19T02:50:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15e03a08-f4e0-4926-8e38-e628f4f0c035"
		},
		{
			"deviceTime": "2014-08-19T02:55:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c656e0cf-7ec3-4c4e-9f21-af4ba2f7f788"
		},
		{
			"deviceTime": "2014-08-19T03:00:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cb1df05-c0f6-4955-93fe-ca32c84b5691"
		},
		{
			"deviceTime": "2014-08-19T03:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ac5989d-090a-4050-8bba-3ea0e28227bf"
		},
		{
			"deviceTime": "2014-08-19T03:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffa19057-cd93-4477-8f42-8c820b76942c"
		},
		{
			"deviceTime": "2014-08-19T03:15:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81f2b9c7-30c7-4162-97ef-6af3a5d21d66"
		},
		{
			"deviceTime": "2014-08-19T03:20:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f493e1f-0a53-4aaf-ad09-22ff8abf5879"
		},
		{
			"deviceTime": "2014-08-19T03:25:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95f6c5a2-2be8-46eb-aadf-1ef75fff4cc2"
		},
		{
			"deviceTime": "2014-08-19T03:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "899ac825-9c21-45d1-8616-cd8662e81a9f"
		},
		{
			"deviceTime": "2014-08-19T03:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "728c1749-9b73-4a98-8d2f-28020fb7a476"
		},
		{
			"deviceTime": "2014-08-19T03:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d511e87-4640-40e7-a654-99d1cbe70545"
		},
		{
			"deviceTime": "2014-08-19T03:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84d4a869-ef95-43f2-8f1d-a81e5352170c"
		},
		{
			"deviceTime": "2014-08-19T03:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e25dacbd-e7b0-4835-89b8-b2634735c22d"
		},
		{
			"deviceTime": "2014-08-19T03:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6796bc3-a137-4fd1-8daf-3bd8b29dde85"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-19T05:00:00",
			"start": "2014-08-19T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "4ca45458-a06b-4e93-98d8-e9b21c15e4e5"
		},
		{
			"deviceTime": "2014-08-19T04:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e326059-5c9b-4ec0-9ddf-7d28e2e8586a"
		},
		{
			"end": "2014-08-19T12:03:01",
			"start": "2014-08-19T04:03:01",
			"percent": 1.6,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 28800000,
			"type": "basal-rate-segment",
			"id": "4ae448bc-8272-4d95-bc96-0b47e58e0c0d"
		},
		{
			"deviceTime": "2014-08-19T04:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e93bb24a-33ed-4cb5-b545-ca629c179fc1"
		},
		{
			"deviceTime": "2014-08-19T04:10:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e7c6c65-1c9b-4076-a170-139f3ca15027"
		},
		{
			"deviceTime": "2014-08-19T04:15:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "827d7068-5bb7-4d0c-baea-0994820ced4f"
		},
		{
			"deviceTime": "2014-08-19T04:20:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7550a198-9f5c-42d4-85dc-f1ffd0377148"
		},
		{
			"deviceTime": "2014-08-19T04:25:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cec7fd0-5b3a-45be-867c-cb891bc7bacf"
		},
		{
			"deviceTime": "2014-08-19T04:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63885844-b8ff-4d1c-be10-6d25e1b4dae7"
		},
		{
			"deviceTime": "2014-08-19T04:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ae8bb0e-e632-4f00-930c-1f8f9e1e9500"
		},
		{
			"deviceTime": "2014-08-19T04:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1ac3326-ea2c-4922-ae2a-77f629d7e256"
		},
		{
			"deviceTime": "2014-08-19T04:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e29017d-ae14-49de-8a41-31f0b524f851"
		},
		{
			"deviceTime": "2014-08-19T04:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f959f1bf-b812-4a04-96fa-407bbf547ff0"
		},
		{
			"deviceTime": "2014-08-19T04:52:50",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "37675116-cef6-4d4e-9b1c-d7edc625717f"
		},
		{
			"deviceTime": "2014-08-19T04:52:50",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "23521d3e-5559-4f5d-a2da-d57f12670c6a"
		},
		{
			"deviceTime": "2014-08-19T04:52:50",
			"id": "23521d3e-5559-4f5d-a2da-d57f12670c6a",
			"source": "demo",
			"joinKey": "dc44f27a-a6de-49f7-bd5e-25c77b2b9d05",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 45
			}
		},
		{
			"deviceTime": "2014-08-19T04:52:50",
			"programmed": 3,
			"joinKey": "dc44f27a-a6de-49f7-bd5e-25c77b2b9d05",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"extendedDelivery": 3,
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"extended": true,
			"type": "bolus",
			"id": "05745d17-969f-4e07-8644-101855181728"
		},
		{
			"deviceTime": "2014-08-19T04:55:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7904baab-f57b-4321-a8c2-c52366b8a189"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-19T06:00:00",
			"start": "2014-08-19T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "0d35cca9-4705-40de-9133-2e9cdea35614"
		},
		{
			"deviceTime": "2014-08-19T05:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15ce3cd5-8ad4-4e26-8654-fdd1ac977c1e"
		},
		{
			"deviceTime": "2014-08-19T05:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9954eea4-8e85-45a2-b7cf-e502506bb019"
		},
		{
			"deviceTime": "2014-08-19T05:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e54eb134-912b-4cfc-877a-07109edc3c4d"
		},
		{
			"deviceTime": "2014-08-19T05:15:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c92b1859-ffc2-448f-a26f-1411da6c9642"
		},
		{
			"deviceTime": "2014-08-19T05:20:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d83bd7e0-5fda-4a08-9cce-570f82d3cefe"
		},
		{
			"deviceTime": "2014-08-19T05:24:01",
			"value": 1,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "949a21f2-2a91-4ef1-87cb-bdc9043a3283"
		},
		{
			"deviceTime": "2014-08-19T05:25:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77738338-a1ae-4709-8b75-7e5879e1b94e"
		},
		{
			"deviceTime": "2014-08-19T05:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "098c3844-7540-4ccd-9be6-2b5fb78f790a"
		},
		{
			"deviceTime": "2014-08-19T05:35:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0465451-1d40-4e40-828c-2ddacc0c43df"
		},
		{
			"deviceTime": "2014-08-19T05:40:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "884bb9ed-641b-4a84-8cf4-ec95c05808a6"
		},
		{
			"deviceTime": "2014-08-19T05:45:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78fc4db3-694c-4acb-a4ce-1f9c6ada1e26"
		},
		{
			"deviceTime": "2014-08-19T05:50:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11fbdae5-0d35-44f0-bfcd-3df241a90068"
		},
		{
			"deviceTime": "2014-08-19T05:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7843317-1497-4445-b00f-7dc52cbe5bda"
		},
		{
			"delivered": 1,
			"end": "2014-08-19T09:00:00",
			"start": "2014-08-19T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "d362c069-3a3d-40ce-9941-da2bbbc2c2c1"
		},
		{
			"deviceTime": "2014-08-19T06:00:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc85c012-a15e-432f-9a76-5a621e6e4329"
		},
		{
			"deviceTime": "2014-08-19T06:05:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f40c937e-d4c9-4a10-9369-93793e2f48be"
		},
		{
			"deviceTime": "2014-08-19T06:10:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86daef0e-0523-46dc-979b-87e809a7aa0c"
		},
		{
			"deviceTime": "2014-08-19T06:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf8de15d-d947-4081-a09e-7ada1e5f612e"
		},
		{
			"deviceTime": "2014-08-19T06:20:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0295576-8a0b-4da2-b488-65fe44405e4d"
		},
		{
			"deviceTime": "2014-08-19T06:25:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52d37f31-1d42-4d85-a6da-ab44441971b2"
		},
		{
			"deviceTime": "2014-08-19T06:30:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "325e98f2-d98a-4d26-8024-88aeca18bf1c"
		},
		{
			"deviceTime": "2014-08-19T06:35:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f18e4eae-79cf-4354-88e0-3d182c32fca8"
		},
		{
			"deviceTime": "2014-08-19T06:40:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9fea573-07d3-44ff-bc06-44e94a964b8c"
		},
		{
			"deviceTime": "2014-08-19T06:45:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4a6c48d-79f3-4de5-a589-0c6d644c76d2"
		},
		{
			"deviceTime": "2014-08-19T06:49:08",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "125b9cba-7a5d-473a-b6e8-1c57daa56ef1"
		},
		{
			"deviceTime": "2014-08-19T06:49:08",
			"value": 35,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1bd09156-033e-44e7-8c09-c8474ae40c19"
		},
		{
			"deviceTime": "2014-08-19T06:49:08",
			"id": "1bd09156-033e-44e7-8c09-c8474ae40c19",
			"source": "demo",
			"joinKey": "ab3562e0-03ae-4345-b1b4-e51283339a6a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 35
			}
		},
		{
			"deviceTime": "2014-08-19T06:49:08",
			"suspendedAt": "2014-08-19T07:49:08",
			"programmed": 2.3,
			"joinKey": "ab3562e0-03ae-4345-b1b4-e51283339a6a",
			"value": 2.3,
			"source": "demo",
			"recommended": 2.3,
			"extendedDelivery": 2.3,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "3b8a87c9-e8a3-4440-9de4-52c858a07795"
		},
		{
			"deviceTime": "2014-08-19T06:50:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c432ec5e-a334-4b6b-9df5-2b029ad90cf2"
		},
		{
			"deviceTime": "2014-08-19T06:55:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8e76005-2b42-4de5-abff-7bbe67b37e86"
		},
		{
			"deviceTime": "2014-08-19T07:00:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cc3e572-a490-42c9-93fc-e143bb36ffbf"
		},
		{
			"deviceTime": "2014-08-19T07:05:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9047da16-5317-447e-bc83-12c295fec5a8"
		},
		{
			"deviceTime": "2014-08-19T07:10:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ff3084e-8eb5-41a7-b1b5-f14a0715d11f"
		},
		{
			"deviceTime": "2014-08-19T07:15:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc72d8f2-47e9-4fd5-a853-85686d752142"
		},
		{
			"deviceTime": "2014-08-19T07:20:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68c85bc5-cec4-466a-9a06-9c78952b336d"
		},
		{
			"deviceTime": "2014-08-19T07:25:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c803744-31c4-48a3-a0de-d626fb0bc30d"
		},
		{
			"deviceTime": "2014-08-19T07:30:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fca2b9e-af51-4c19-bfa4-aab37045e4a9"
		},
		{
			"deviceTime": "2014-08-19T07:35:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "524d3309-bcc8-4aff-a581-f9f3e8435e77"
		},
		{
			"deviceTime": "2014-08-19T07:40:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc4be5f0-07df-43aa-bed3-3c1a2c200f5d"
		},
		{
			"deviceTime": "2014-08-19T07:45:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94117553-e385-40c8-abf3-86cf48187a3e"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-19T07:49:08",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "744383af-8e35-4cac-8197-26fc4e69e1b6"
		},
		{
			"deviceTime": "2014-08-19T07:50:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85913c32-acf7-484c-bd70-707e9506d631"
		},
		{
			"deviceTime": "2014-08-19T07:55:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b2f49a6-8df6-4dee-8107-63e839d5ddfa"
		},
		{
			"deviceTime": "2014-08-19T08:00:22",
			"value": 214,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26be3019-0f4f-4b82-a121-1137851baf42"
		},
		{
			"deviceTime": "2014-08-19T08:05:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66e4c255-2432-4646-a4c8-01920bbebe95"
		},
		{
			"deviceTime": "2014-08-19T08:10:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c28c92a-de13-4a6e-9d81-44d93944ecae"
		},
		{
			"deviceTime": "2014-08-19T08:15:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05300cf1-b935-4ad1-a269-04a72f11c082"
		},
		{
			"deviceTime": "2014-08-19T08:20:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18841a88-e0e7-4455-8e5b-42daa2869b78"
		},
		{
			"deviceTime": "2014-08-19T08:25:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98e91212-3be3-4791-9cee-051c481ea7cf"
		},
		{
			"deviceTime": "2014-08-19T08:30:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a3b54b4-1e67-428b-b2a7-dfad6e1cefc4"
		},
		{
			"deviceTime": "2014-08-19T08:35:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2a2c364-c4df-4c16-9874-c72025fcd7b4"
		},
		{
			"deviceTime": "2014-08-19T08:40:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e914389-a951-473b-9fc6-79e09275e022"
		},
		{
			"deviceTime": "2014-08-19T08:45:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea672d27-7f94-4e52-a6cd-a8035966cbd9"
		},
		{
			"deviceTime": "2014-08-19T08:50:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecc381ee-f1f4-4ff0-8cf2-2c58cfd05eb6"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-19T08:51:08",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "1dca0e28-1a4f-4e93-9dc9-d0dd0287a47b",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-19T07:49:08",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "744383af-8e35-4cac-8197-26fc4e69e1b6"
			}
		},
		{
			"deviceTime": "2014-08-19T08:55:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dccf3238-049d-423c-be8c-0ce346d57386"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-19T15:00:00",
			"start": "2014-08-19T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "1ccedbcc-045b-4885-b862-f131cc8a5002"
		},
		{
			"deviceTime": "2014-08-19T09:00:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "551a5243-44fa-494c-bfe7-ae7e2a8f7337"
		},
		{
			"deviceTime": "2014-08-19T09:05:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "334ab28b-9253-43f0-a2b1-0f3c98c1624b"
		},
		{
			"deviceTime": "2014-08-19T09:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a9af7e3-4d9b-42de-b7e8-de092a9bdc4d"
		},
		{
			"deviceTime": "2014-08-19T09:14:25",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e74a5ebd-dfff-439f-8832-4efee92c76db"
		},
		{
			"deviceTime": "2014-08-19T09:14:25",
			"value": 38,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e36096a5-4d6c-4f04-b0f3-0a395da9cbf9"
		},
		{
			"deviceTime": "2014-08-19T09:14:25",
			"id": "e36096a5-4d6c-4f04-b0f3-0a395da9cbf9",
			"source": "demo",
			"joinKey": "f08efe8f-af64-4c80-941f-2bd807c2f6a0",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 38
			}
		},
		{
			"deviceTime": "2014-08-19T09:14:25",
			"programmed": 2.5,
			"joinKey": "f08efe8f-af64-4c80-941f-2bd807c2f6a0",
			"value": 0.3,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c6ae3840-3ceb-4eb9-b78d-76e54394e66b"
		},
		{
			"deviceTime": "2014-08-19T09:15:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d68642bd-f37b-436c-8ff7-5e84baf57062"
		},
		{
			"deviceTime": "2014-08-19T09:20:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1112c087-8e2e-414a-b485-842c19e5cc4d"
		},
		{
			"deviceTime": "2014-08-19T09:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "162673bc-27aa-4acd-98f9-18d91615d13a"
		},
		{
			"deviceTime": "2014-08-19T09:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "099be6f1-86ca-4f76-b752-27c38cf659dd"
		},
		{
			"deviceTime": "2014-08-19T09:32:41",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d82991fc-c09a-4791-922a-c3aca9a2ba83"
		},
		{
			"deviceTime": "2014-08-19T09:32:41",
			"value": 25,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "f000c9c9-ee15-4310-b35b-3c2e85d86a89"
		},
		{
			"deviceTime": "2014-08-19T09:32:41",
			"id": "f000c9c9-ee15-4310-b35b-3c2e85d86a89",
			"source": "demo",
			"joinKey": "610be307-8db9-4d3d-abb7-f64e50fda7b1",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 25
			}
		},
		{
			"deviceTime": "2014-08-19T09:32:41",
			"programmed": 1.7,
			"joinKey": "610be307-8db9-4d3d-abb7-f64e50fda7b1",
			"value": 1.7,
			"source": "demo",
			"recommended": 1.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "2387c643-4624-4de2-92fd-8ac7c19220ac"
		},
		{
			"deviceTime": "2014-08-19T09:35:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7903a5c-925c-450e-a033-12fb8660a1b8"
		},
		{
			"deviceTime": "2014-08-19T09:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe2406a3-2a3f-4e70-9ce4-7837b2d42a86"
		},
		{
			"deviceTime": "2014-08-19T09:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03134ad4-1527-4f9d-a80c-16ffc0f1f37c"
		},
		{
			"deviceTime": "2014-08-19T09:50:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d388668b-2b81-4345-951e-f052b3ceb111"
		},
		{
			"deviceTime": "2014-08-19T09:55:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd9789ea-f5fd-40e5-95ec-5b069a600f25"
		},
		{
			"deviceTime": "2014-08-19T10:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8bedc07-ba88-4c0d-9be5-013d1aeb857c"
		},
		{
			"deviceTime": "2014-08-19T10:05:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d94cb1fb-35d9-4069-9b3e-1c3cebc447c7"
		},
		{
			"deviceTime": "2014-08-19T10:10:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f23f6a4a-df17-4cb3-80ad-f8a1a10a8606"
		},
		{
			"deviceTime": "2014-08-19T10:15:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "796a2b64-d2da-4fa0-9e1a-e4a379dd11c0"
		},
		{
			"deviceTime": "2014-08-19T10:20:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06bc2e0b-3c35-4ef9-8082-dbcabe8210c6"
		},
		{
			"deviceTime": "2014-08-19T10:25:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74db4d62-9276-4322-9dc4-c873c5ea9a88"
		},
		{
			"deviceTime": "2014-08-19T10:30:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "726b9b8f-beec-42aa-b12b-19f90acd0c50"
		},
		{
			"deviceTime": "2014-08-19T10:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64636539-c39e-48a1-8b73-763b9db33d78"
		},
		{
			"deviceTime": "2014-08-19T10:40:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71f2a5fe-741e-4967-b1f6-119630e242a6"
		},
		{
			"deviceTime": "2014-08-19T10:45:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "284dc028-7bc6-49dc-9022-8c217bbf9420"
		},
		{
			"deviceTime": "2014-08-19T10:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89638ab2-904c-4f74-ad9b-5a18563b4595"
		},
		{
			"deviceTime": "2014-08-19T10:55:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b553f00-e44d-45c8-89f6-ef333e20743a"
		},
		{
			"deviceTime": "2014-08-19T11:00:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5635e120-d40c-444c-8bcf-fef7d07d5f52"
		},
		{
			"deviceTime": "2014-08-19T11:05:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70b2c333-f3cd-4f2d-8a91-5d405ac3e9bd"
		},
		{
			"deviceTime": "2014-08-19T11:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e29e5d85-1fa8-45e8-84cf-7bcad3d349cb"
		},
		{
			"deviceTime": "2014-08-19T11:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "021cb8ae-5590-4dde-b9c4-429fb1385635"
		},
		{
			"deviceTime": "2014-08-19T11:19:21",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "fdcbd9cb-fa3c-42cc-b776-41f5ac67f891"
		},
		{
			"deviceTime": "2014-08-19T11:19:21",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "8a42237e-cf9e-4494-a917-8f5234236d29"
		},
		{
			"deviceTime": "2014-08-19T11:19:21",
			"id": "8a42237e-cf9e-4494-a917-8f5234236d29",
			"source": "demo",
			"joinKey": "2d78627d-9b74-4f87-8d03-e8f4c8334957",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 53
			}
		},
		{
			"deviceTime": "2014-08-19T11:19:21",
			"programmed": 3.5,
			"joinKey": "2d78627d-9b74-4f87-8d03-e8f4c8334957",
			"value": 3.5,
			"source": "demo",
			"recommended": 3.5,
			"extendedDelivery": 1.4,
			"initialDelivery": 2.1,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "ee718145-8130-41b2-8130-777327b1cd96",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-19T11:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11e88a59-b0d9-49cc-ab96-10d3589e3d0e"
		},
		{
			"deviceTime": "2014-08-19T11:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c47a2de6-f158-495b-a8ef-4e32c986c314"
		},
		{
			"deviceTime": "2014-08-19T11:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa7e60f4-d414-490f-998e-6c653add976a"
		},
		{
			"deviceTime": "2014-08-19T11:35:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3da7d991-faaf-4e53-bc9e-451a5578dae7"
		},
		{
			"deviceTime": "2014-08-19T11:40:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbd97725-b329-4e9f-9223-5321943c9347"
		},
		{
			"deviceTime": "2014-08-19T11:45:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91d56c87-80ed-472f-8c74-3c4422a4aca0"
		},
		{
			"deviceTime": "2014-08-19T11:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3747cb3e-3235-4e1b-94dc-e0ae6c625987"
		},
		{
			"deviceTime": "2014-08-19T11:55:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d10459b6-c27c-47e1-9238-5062024e0064"
		},
		{
			"deviceTime": "2014-08-19T12:00:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f2892a5-b06f-45bf-bbe5-18402912c44e"
		},
		{
			"deviceTime": "2014-08-19T12:05:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "667a7255-be9d-4a46-84d9-4d519871543c"
		},
		{
			"deviceTime": "2014-08-19T12:10:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b816a37-3cf7-4629-b5f0-f409750dd82b"
		},
		{
			"deviceTime": "2014-08-19T12:15:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bffbd72-c7e4-4ead-b54e-d5bd9417b991"
		},
		{
			"deviceTime": "2014-08-19T12:20:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c020a15-b376-44b7-a89c-db4061ca9ec7"
		},
		{
			"deviceTime": "2014-08-19T12:25:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "564a6d14-4084-4ba0-8613-be9828810917"
		},
		{
			"deviceTime": "2014-08-19T12:30:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec4ddb1e-ca45-4725-8791-cbb04003f9bb"
		},
		{
			"deviceTime": "2014-08-19T12:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e8ce9b9-75b1-4f66-9b14-eb21084a005a"
		},
		{
			"deviceTime": "2014-08-19T12:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94ec8b46-b9f2-4102-8c16-a394de0d6e18"
		},
		{
			"deviceTime": "2014-08-19T12:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4761900a-ef4f-4471-a503-e115d4120693"
		},
		{
			"deviceTime": "2014-08-19T12:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67f2e0fe-4ea0-48b4-abf9-e93b52205b8c"
		},
		{
			"deviceTime": "2014-08-19T12:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33fe1dbd-519d-46a3-a89b-bab5fae80879"
		},
		{
			"deviceTime": "2014-08-19T13:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55e18523-91a9-4701-81f6-b3a86ee441ca"
		},
		{
			"deviceTime": "2014-08-19T13:01:00",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "8d3313b8-097d-47ed-8446-3b5e974ad402"
		},
		{
			"deviceTime": "2014-08-19T13:01:00",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "653b2631-0a00-4d87-8a02-c688745d52b2"
		},
		{
			"deviceTime": "2014-08-19T13:01:00",
			"id": "653b2631-0a00-4d87-8a02-c688745d52b2",
			"source": "demo",
			"joinKey": "0b05d4e6-a84e-41d6-8b2c-9fc77d4c7cfd",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 44
			}
		},
		{
			"deviceTime": "2014-08-19T13:01:00",
			"programmed": 2.9,
			"joinKey": "0b05d4e6-a84e-41d6-8b2c-9fc77d4c7cfd",
			"value": 2.9,
			"source": "demo",
			"recommended": 2.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "06011c33-ed7a-4539-b3e3-d32dbbaa5185"
		},
		{
			"deviceTime": "2014-08-19T13:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "addbd026-47d6-4af1-84fd-91fc52fa3c36"
		},
		{
			"deviceTime": "2014-08-19T13:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e45badf-7d9b-410e-a8ee-167a5025703d"
		},
		{
			"deviceTime": "2014-08-19T13:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2418524-af8f-4a81-9437-49d5250f715d"
		},
		{
			"deviceTime": "2014-08-19T13:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fb012ed-5c1c-4566-b61c-0f7996caec6a"
		},
		{
			"deviceTime": "2014-08-19T13:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce5821e0-4e02-4094-8389-3d0130d1f894"
		},
		{
			"deviceTime": "2014-08-19T13:30:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76d34cdd-0f34-47b0-8f57-cb6d13efdd58"
		},
		{
			"deviceTime": "2014-08-19T13:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb68e5f0-1ee0-4c4b-9adf-ce1f4cc94876"
		},
		{
			"deviceTime": "2014-08-19T13:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1146113-990b-4414-9ff5-55ba2a337fdd"
		},
		{
			"deviceTime": "2014-08-19T13:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "921831ad-7227-413d-a97f-f918ff1a8538"
		},
		{
			"deviceTime": "2014-08-19T13:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8dd9c82b-ccea-4f0a-b4a5-920627077216"
		},
		{
			"deviceTime": "2014-08-19T13:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39f28b8d-c728-4d21-8a3a-a710d9e4ad5a"
		},
		{
			"deviceTime": "2014-08-19T14:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fa07ff2-b4e0-4a7a-a1ea-0ec6a5666922"
		},
		{
			"deviceTime": "2014-08-19T14:05:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "718c0528-c115-44c5-9454-68ee7073d2f2"
		},
		{
			"deviceTime": "2014-08-19T14:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "194218f1-7fa0-4d06-933f-7c5e6ae2c5a3"
		},
		{
			"deviceTime": "2014-08-19T14:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fa49959-5f3f-4928-b4bd-53499aa052c8"
		},
		{
			"deviceTime": "2014-08-19T14:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d866eb53-4560-43de-9e51-ddceefc1e980"
		},
		{
			"deviceTime": "2014-08-19T14:25:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db120cf0-bccf-4e0a-be94-c5fc4cdd9258"
		},
		{
			"deviceTime": "2014-08-19T14:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ab9d965-9779-414e-8e7a-84d55b88bea6"
		},
		{
			"deviceTime": "2014-08-19T14:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3232a2b4-657d-4214-b4f6-855cfc7ff04b"
		},
		{
			"deviceTime": "2014-08-19T14:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abce8bb0-7ca7-43a2-b003-6c518ffd3f74"
		},
		{
			"deviceTime": "2014-08-19T14:45:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aaf20eb7-0409-4f20-a455-1145275fcdae"
		},
		{
			"deviceTime": "2014-08-19T14:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29cdc7e1-8687-496b-ac19-0959045bc1d4"
		},
		{
			"deviceTime": "2014-08-19T14:55:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88c46c4c-60b4-44be-8912-96d3db036f83"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-19T20:00:00",
			"start": "2014-08-19T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "df2247e5-04e8-4288-a98e-753b213ffd6c"
		},
		{
			"deviceTime": "2014-08-19T15:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92a109a4-3b8e-4ab9-8c6d-5add39a65210"
		},
		{
			"deviceTime": "2014-08-19T15:05:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b081cd1b-d94a-441f-970f-36f6458aa0e7"
		},
		{
			"deviceTime": "2014-08-19T15:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1e050b2-63ad-4754-a9d6-5b6e284178d5"
		},
		{
			"deviceTime": "2014-08-19T15:15:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a01680b8-921c-417e-94b8-8063f2d202af"
		},
		{
			"deviceTime": "2014-08-19T15:20:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ece2f329-65dd-4e9b-b2a7-086deeaab5a5"
		},
		{
			"deviceTime": "2014-08-19T15:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db935834-ba5c-4d57-a8cf-b2535e88ec83"
		},
		{
			"deviceTime": "2014-08-19T15:30:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e525a38-0756-4c4f-8d30-c1c4f1dd7baa"
		},
		{
			"deviceTime": "2014-08-19T15:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71899d1a-9bf6-4dbc-8439-dde6a5d1ee55"
		},
		{
			"deviceTime": "2014-08-19T15:39:54",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "bf2b4a95-ed69-4c6b-aa3d-fc88c25ce907"
		},
		{
			"deviceTime": "2014-08-19T15:39:54",
			"value": 22,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "adb9a0c5-d095-4c0e-9840-348926beb5e3"
		},
		{
			"deviceTime": "2014-08-19T15:39:54",
			"id": "adb9a0c5-d095-4c0e-9840-348926beb5e3",
			"source": "demo",
			"joinKey": "f5149dda-75fb-48b0-a18c-d62da3fe06c5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 22
			}
		},
		{
			"deviceTime": "2014-08-19T15:39:54",
			"programmed": 1.5,
			"joinKey": "f5149dda-75fb-48b0-a18c-d62da3fe06c5",
			"value": 0.1,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "e305288e-7063-48fd-b0e9-3f06edd2d278"
		},
		{
			"deviceTime": "2014-08-19T15:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a22904a7-9fd1-4f0b-b78c-fe5e6cf21e45"
		},
		{
			"deviceTime": "2014-08-19T15:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e93aa056-1c36-4808-bfff-80a7ede18b31"
		},
		{
			"deviceTime": "2014-08-19T15:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f2ac130-0f6a-49ee-86e3-3c452f20855b"
		},
		{
			"deviceTime": "2014-08-19T15:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78478f66-ec2e-4cd8-a7b9-63b0393f1884"
		},
		{
			"deviceTime": "2014-08-19T16:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94282577-2c2b-4761-8043-998950f51b56"
		},
		{
			"deviceTime": "2014-08-19T16:05:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f057c920-c22c-4403-9819-8f5a3c16754e"
		},
		{
			"deviceTime": "2014-08-19T16:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28ed1f2f-37ef-4603-86d2-03fe46ddc3c9"
		},
		{
			"deviceTime": "2014-08-19T16:15:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb3066b5-cee3-4245-8e0d-cef28ce78158"
		},
		{
			"deviceTime": "2014-08-19T16:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41aa2f9b-ac31-4f2b-8635-a7e602f51bfe"
		},
		{
			"deviceTime": "2014-08-19T16:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a10c62a0-854f-4cea-9629-48e3c0e4c7e7"
		},
		{
			"deviceTime": "2014-08-19T16:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea48d8a9-dcbc-46bf-8b54-e5f4ef8b939b"
		},
		{
			"deviceTime": "2014-08-19T16:35:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8ea6a85-4f31-417c-b79d-0ac5b6437f76"
		},
		{
			"deviceTime": "2014-08-19T16:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbaa18b5-9237-412d-b4cc-7e91679131af"
		},
		{
			"deviceTime": "2014-08-19T16:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8ed8a02-990d-4b0b-ba0a-674bfc2c7271"
		},
		{
			"deviceTime": "2014-08-19T16:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1ba67ec-3c0b-442a-a9c9-a284de8854fb"
		},
		{
			"messageText": "Pork strip steak shank culpa aliqua kielbasa ribeye, dolore bresaola mollit short loin id reprehenderit t-bone deserunt. Commodo deserunt occaecat, tail pork ea in exercitation anim tongue ham hock esse nulla sausage. Dolore tri-tip brisket pork loin, meatball sirloin ribeye et ham chicken.",
			"parentMessage": "",
			"utcTime": "2014-08-19T16:51:13Z",
			"type": "message",
			"id": "f08ea3e3-86c8-4ecf-a813-19389e1c00be"
		},
		{
			"deviceTime": "2014-08-19T16:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76fe11fb-9ff7-4826-96b6-e8e1c9808a7c"
		},
		{
			"deviceTime": "2014-08-19T17:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a1a19ec-84eb-4e08-8025-18e79217d8c5"
		},
		{
			"deviceTime": "2014-08-19T17:05:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e436715a-7246-45f5-9b8d-42d4bc97a505"
		},
		{
			"deviceTime": "2014-08-19T17:10:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1317e340-7dbc-44c7-8e29-c249017451b2"
		},
		{
			"deviceTime": "2014-08-19T17:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "801a57b1-9857-4401-a7dd-d1f1361c5230"
		},
		{
			"deviceTime": "2014-08-19T17:20:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b86f8c1e-c7e0-40d3-b04b-aca5489f0603"
		},
		{
			"deviceTime": "2014-08-19T17:23:01",
			"value": 2,
			"source": "demo",
			"recommended": 2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "f46b8a7a-0eba-4b38-8ea9-5d49c6e9fbbe"
		},
		{
			"deviceTime": "2014-08-19T17:25:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d73933f8-057c-40da-a5d5-796f24c51861"
		},
		{
			"deviceTime": "2014-08-19T17:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b522dce8-3117-48bd-8b39-cd2790feead5"
		},
		{
			"deviceTime": "2014-08-19T17:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71d5d733-4481-4a8c-8171-0b27340e7578"
		},
		{
			"deviceTime": "2014-08-19T17:40:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "611d3f49-5775-44b2-a351-6462aee82870"
		},
		{
			"deviceTime": "2014-08-19T17:45:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9dffb0b2-0695-40ef-b636-a57306f55a81"
		},
		{
			"deviceTime": "2014-08-19T17:50:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aef14fe4-3250-4b80-9f8c-83c3b0b9ff67"
		},
		{
			"deviceTime": "2014-08-19T17:55:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a92ce5a6-f1eb-4c09-995d-48f44ef6ad4b"
		},
		{
			"deviceTime": "2014-08-19T18:00:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32d3cf8b-e378-4f0d-bdfc-a51129152fd5"
		},
		{
			"deviceTime": "2014-08-19T18:05:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e2f048b-15de-42d8-bd4b-cfcb3fd82e6c"
		},
		{
			"deviceTime": "2014-08-19T18:10:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11bc804f-71a9-4265-a8dc-c28cc339c138"
		},
		{
			"deviceTime": "2014-08-19T18:15:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8298e138-6222-44aa-b818-3888c7c1a303"
		},
		{
			"deviceTime": "2014-08-19T18:20:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e355daaf-8fbb-4a21-95ed-402baa47d657"
		},
		{
			"deviceTime": "2014-08-19T18:25:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2273978f-f146-45d8-ae92-525c907a06b1"
		},
		{
			"deviceTime": "2014-08-19T18:30:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96de7465-4316-45ad-b118-d476cc6b7f54"
		},
		{
			"deviceTime": "2014-08-19T18:35:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3806283f-ffd1-4b97-983e-f47200c19bb5"
		},
		{
			"deviceTime": "2014-08-19T18:40:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36070d2c-9336-40d3-b717-28b49a3c0ff2"
		},
		{
			"deviceTime": "2014-08-19T18:45:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41a3898b-26c7-4dc9-b9aa-91147342b259"
		},
		{
			"deviceTime": "2014-08-19T18:50:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ed15f3b-75e9-4169-a71e-7501ed56e3e4"
		},
		{
			"deviceTime": "2014-08-19T18:55:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84c89377-82ef-4805-802c-14346261b78b"
		},
		{
			"deviceTime": "2014-08-19T19:00:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8329132-4eed-4bf1-8d32-dcdc18832049"
		},
		{
			"deviceTime": "2014-08-19T19:05:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87e25094-7c2c-4476-aa60-d0a8a9d4b461"
		},
		{
			"deviceTime": "2014-08-19T19:10:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae99c2e8-17ff-4209-9222-79322efa7e87"
		},
		{
			"deviceTime": "2014-08-19T19:15:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "408ef6f1-a504-4bfe-b662-d57ea0897fec"
		},
		{
			"deviceTime": "2014-08-19T19:20:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51228f64-2cbd-4c86-9fcc-5dc11e14f74f"
		},
		{
			"deviceTime": "2014-08-19T19:25:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a1f7781-fceb-48b6-a546-a3443aed2d8c"
		},
		{
			"deviceTime": "2014-08-19T19:30:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b914c097-7b17-40c3-abab-f5f75f9a5d70"
		},
		{
			"deviceTime": "2014-08-19T19:35:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94eb10a6-cf55-4332-84bd-5d30147e37b3"
		},
		{
			"deviceTime": "2014-08-19T19:40:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d8f2fc2-5be5-4a98-a393-547d0b28d472"
		},
		{
			"deviceTime": "2014-08-19T19:45:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04087e30-9241-4d1d-bb00-6728c627f8ee"
		},
		{
			"deviceTime": "2014-08-19T19:50:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1dc31b7-b434-4bcb-b7a8-aaf45b4ca0fb"
		},
		{
			"deviceTime": "2014-08-19T19:55:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b7c1bb2-83c6-45cd-b2b0-b5fb216e4237"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-20T00:00:00",
			"start": "2014-08-19T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "02c0de69-b1fe-474a-8bb2-cbdb701a0fa8"
		},
		{
			"deviceTime": "2014-08-19T20:20:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc4e0428-233d-4eb7-94ee-47dafaa491a9"
		},
		{
			"deviceTime": "2014-08-19T20:40:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2849a1c4-f4b4-447c-a044-3e213ee7ec07"
		},
		{
			"deviceTime": "2014-08-19T21:10:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "453a2725-b29a-4222-a665-d11ae2af6d64"
		},
		{
			"deviceTime": "2014-08-19T21:15:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "510d4af8-76b7-4931-9c4d-d0a7e87cc491"
		},
		{
			"deviceTime": "2014-08-19T21:20:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3180a7c-3974-4af0-9a8d-087596eca18c"
		},
		{
			"deviceTime": "2014-08-19T21:25:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d15e443-b536-47a7-97c6-50049696f530"
		},
		{
			"deviceTime": "2014-08-19T21:30:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3255ed33-61f1-4202-813c-fe738a826e77"
		},
		{
			"deviceTime": "2014-08-19T21:35:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "900d2e02-057b-4bcc-8d97-f3a4fa7b802d"
		},
		{
			"deviceTime": "2014-08-19T21:40:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ad7b956-ea27-4383-bb67-6806863bf480"
		},
		{
			"deviceTime": "2014-08-19T21:45:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e82f4b86-e5ab-40b6-9c28-6921f10cb521"
		},
		{
			"deviceTime": "2014-08-19T21:50:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e79d37e7-97ae-44bd-a4cc-4bc617d68390"
		},
		{
			"deviceTime": "2014-08-19T21:55:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38024c38-9376-4811-8fd6-9ae36c2290c2"
		},
		{
			"deviceTime": "2014-08-19T22:00:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4dd51128-0052-497c-bb49-34bf7153137b"
		},
		{
			"deviceTime": "2014-08-19T22:05:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7990ea9-d09e-47f6-b882-3f8c727d705d"
		},
		{
			"deviceTime": "2014-08-19T22:10:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d05aa7f1-08a7-4d67-8b46-661379ba8a2c"
		},
		{
			"deviceTime": "2014-08-19T22:15:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8a6c5a6-1468-4a80-8a59-df878a2511a2"
		},
		{
			"deviceTime": "2014-08-19T22:20:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e367737-5c73-4523-8eff-48cf6d450442"
		},
		{
			"deviceTime": "2014-08-19T22:25:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51a72f8b-07d8-4a08-88c8-1a8bc7f81b50"
		},
		{
			"deviceTime": "2014-08-19T22:30:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d872f25-8b56-4978-b8c1-188fc38aeee8"
		},
		{
			"deviceTime": "2014-08-19T22:35:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6dfecdc-ec52-4fef-a13a-2f83feb6021e"
		},
		{
			"deviceTime": "2014-08-19T22:40:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c07ae1a-c091-46f2-be32-f47aaa42ef7a"
		},
		{
			"deviceTime": "2014-08-19T22:45:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71b7f828-ddb7-4c05-a96e-813d81a5febb"
		},
		{
			"deviceTime": "2014-08-19T22:50:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c647b1cd-db16-4147-a9aa-f9eeb5c936c9"
		},
		{
			"deviceTime": "2014-08-19T22:55:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e5246ce-1033-47ba-948b-02bb71868a45"
		},
		{
			"deviceTime": "2014-08-19T23:00:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f571efbe-30b6-479d-bb97-1b53a6fb9c59"
		},
		{
			"deviceTime": "2014-08-19T23:05:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ec76adb-14ee-4620-b899-597bb7efa7c2"
		},
		{
			"deviceTime": "2014-08-19T23:10:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03363f79-6282-4020-8692-25b872f0ea5f"
		},
		{
			"deviceTime": "2014-08-19T23:15:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83c90d52-98f6-4010-afec-3bb3ac9e3a16"
		},
		{
			"deviceTime": "2014-08-19T23:20:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b205498-bb1c-4627-ba1f-fe87f09f11fb"
		},
		{
			"deviceTime": "2014-08-19T23:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f51027d8-79cf-4aae-8e86-df8becd75ac3"
		},
		{
			"deviceTime": "2014-08-19T23:30:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59c40834-3320-4d2b-951f-6f365058e9a3"
		},
		{
			"deviceTime": "2014-08-19T23:35:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e432ce6f-3b44-48b0-a7b3-dbfb1ada008e"
		},
		{
			"deviceTime": "2014-08-19T23:40:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d107c3af-52ea-446d-944d-e0258152258d"
		},
		{
			"deviceTime": "2014-08-19T23:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a364fcba-1d78-49bb-b64d-d8e430f9280d"
		},
		{
			"deviceTime": "2014-08-19T23:50:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5728eec-ab0f-4e28-9410-ab94005fc24b"
		},
		{
			"deviceTime": "2014-08-19T23:55:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f282cad1-6fce-40d3-9a98-e00eff336785"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-20T02:00:00",
			"start": "2014-08-20T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "617a47aa-1fe6-4d6e-91db-626817a2e602"
		},
		{
			"deviceTime": "2014-08-20T00:00:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eaf42173-7c85-405d-b0d9-cc71022ebda5"
		},
		{
			"deviceTime": "2014-08-20T00:05:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5f02535-f6cd-4dce-8ef8-10ef6dda7d92"
		},
		{
			"deviceTime": "2014-08-20T00:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afa0ab73-bcc1-4f72-94f3-5fdd316bff03"
		},
		{
			"deviceTime": "2014-08-20T00:15:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e5dff5c-344b-4bbe-b705-fe7b125c924e"
		},
		{
			"deviceTime": "2014-08-20T00:20:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "580a00c5-406a-4d13-add9-d9d9f054502d"
		},
		{
			"deviceTime": "2014-08-20T00:25:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de8a7e1d-fad6-47e2-aac5-7cd3755dabfd"
		},
		{
			"deviceTime": "2014-08-20T00:30:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f3b2737-e1b0-439e-bfbf-677b055c3c3e"
		},
		{
			"deviceTime": "2014-08-20T00:35:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16475d33-3a78-489f-baab-a0c463285197"
		},
		{
			"deviceTime": "2014-08-20T00:40:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53296c02-e930-43aa-bedf-b01c7ecf0d8c"
		},
		{
			"deviceTime": "2014-08-20T00:45:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25f76b3b-896d-446d-b896-ac4ba63e4afc"
		},
		{
			"deviceTime": "2014-08-20T00:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "354690bb-4897-4f89-8be0-f3312b9d7084"
		},
		{
			"deviceTime": "2014-08-20T00:55:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bab17c30-66f2-4e6c-be8c-e096a8b70ce1"
		},
		{
			"deviceTime": "2014-08-20T01:00:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f304a047-d194-4e18-80ec-3137cb0e8730"
		},
		{
			"deviceTime": "2014-08-20T01:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a1fc557-c1af-413a-8b39-a5c7d519ec3f"
		},
		{
			"deviceTime": "2014-08-20T01:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c4ea6ca-a16c-420e-a040-2280d4c9ddf7"
		},
		{
			"end": "2014-08-20T08:15:01",
			"start": "2014-08-20T01:15:01",
			"percent": 0.2,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 25200000,
			"type": "basal-rate-segment",
			"id": "6d7b8988-1656-4dcc-b0ac-f0dc4a13c244"
		},
		{
			"deviceTime": "2014-08-20T01:15:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9542483-05b3-41ef-89e0-2f3567209fca"
		},
		{
			"deviceTime": "2014-08-20T01:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2be3ab0f-3d4f-4597-bc3d-9da925e13f60"
		},
		{
			"deviceTime": "2014-08-20T01:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "901daaee-f272-437a-b983-c863c69a39ef"
		},
		{
			"deviceTime": "2014-08-20T01:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e086e18c-3d7f-4fda-8066-b17eadcfe022"
		},
		{
			"deviceTime": "2014-08-20T01:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f3538e7-9efe-497e-b8e6-bd4fbe18eac6"
		},
		{
			"deviceTime": "2014-08-20T01:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04d9f877-a7e2-4415-8b9c-ea0aaab0ff12"
		},
		{
			"deviceTime": "2014-08-20T01:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "703119f1-f20e-4c11-9f02-b5188f291ba2"
		},
		{
			"deviceTime": "2014-08-20T01:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "007ad52f-9eb8-4a5b-945d-981a031e0747"
		},
		{
			"deviceTime": "2014-08-20T01:55:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "279518c2-2e9f-4f18-a93c-84e6857baa77"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-20T04:00:00",
			"start": "2014-08-20T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "16061bf2-f2a7-4671-aafc-d63585d2eaa2"
		},
		{
			"deviceTime": "2014-08-20T02:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2aa9175-1dfb-4869-ad68-d475c6e83921"
		},
		{
			"deviceTime": "2014-08-20T02:05:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e2002ba-a534-4438-b0b0-97b2f0071985"
		},
		{
			"deviceTime": "2014-08-20T02:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b274c2c-f471-49bc-9dd2-36373d11f06d"
		},
		{
			"deviceTime": "2014-08-20T02:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ac5ec35-4b87-4feb-9906-5e52ebcf9499"
		},
		{
			"deviceTime": "2014-08-20T02:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0c48acf-12ba-42b0-881c-b9fd5f4b4ce6"
		},
		{
			"deviceTime": "2014-08-20T02:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79c7e5d4-a819-4a0e-951e-dc1ecbe0a972"
		},
		{
			"deviceTime": "2014-08-20T02:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9073a474-c18d-4f3a-8073-4160d38bb6ec"
		},
		{
			"deviceTime": "2014-08-20T02:45:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41c571cd-dc86-4db9-b7bf-5e84741cb938"
		},
		{
			"deviceTime": "2014-08-20T02:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d26e570c-cd57-456b-818d-dc0d2282efce"
		},
		{
			"deviceTime": "2014-08-20T02:55:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73a4b431-1d2d-48fd-b8a2-761258652f8a"
		},
		{
			"deviceTime": "2014-08-20T03:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4dc9252a-5149-4aa5-959c-be428c98dc64"
		},
		{
			"deviceTime": "2014-08-20T03:30:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19ccbd1d-3a76-4b72-a47b-feb27e1f4234"
		},
		{
			"deviceTime": "2014-08-20T03:35:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac9732b1-e9e0-48c3-9cd6-1c11b60fc579"
		},
		{
			"deviceTime": "2014-08-20T03:40:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cca04fae-80d3-4125-83f5-cbd7808f47a6"
		},
		{
			"deviceTime": "2014-08-20T03:45:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cbe05d4-8ad7-49d3-b6b0-45c7f26a33be"
		},
		{
			"deviceTime": "2014-08-20T03:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dde0b73f-2f81-469a-b041-31ded9a424d2"
		},
		{
			"deviceTime": "2014-08-20T03:55:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c68a0477-5529-4669-b4c7-19c3030689c3"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-20T05:00:00",
			"start": "2014-08-20T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "ccc6e53a-ccba-4b9e-a50b-41f6bc98b4b2"
		},
		{
			"deviceTime": "2014-08-20T04:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6d01851-bf90-4f8c-afd1-f3943936a6ed"
		},
		{
			"deviceTime": "2014-08-20T04:14:37",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "51f8ddcd-fe4a-445c-b3e4-3df3ea07344e"
		},
		{
			"messageText": "Minim ut non sint eiusmod tongue in magna.",
			"parentMessage": "",
			"utcTime": "2014-08-20T04:16:20Z",
			"type": "message",
			"id": "eefcd147-1e1e-4db7-ae92-1893ad305ef5"
		},
		{
			"deviceTime": "2014-08-20T04:20:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17b3c37c-fb9e-42c8-b539-2fced0ece9df"
		},
		{
			"deviceTime": "2014-08-20T04:25:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46d99dc9-bf59-45d8-9fa7-bdbc40daabfe"
		},
		{
			"deviceTime": "2014-08-20T04:30:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b69d9bf2-5dd5-4261-8bf8-ffdadb8707b9"
		},
		{
			"deviceTime": "2014-08-20T04:36:20",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "05c25c40-c741-41c9-b871-2b91c973b9a6"
		},
		{
			"deviceTime": "2014-08-20T04:36:20",
			"value": 25,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "568771c9-1786-4b0d-a9a8-ee26a07f3c2f"
		},
		{
			"deviceTime": "2014-08-20T04:36:20",
			"id": "568771c9-1786-4b0d-a9a8-ee26a07f3c2f",
			"source": "demo",
			"joinKey": "1af28d45-39fb-45d6-9ace-7391da42335b",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 25
			}
		},
		{
			"deviceTime": "2014-08-20T04:36:59",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "687e24a4-908c-4012-8e7e-00ca14f13e04"
		},
		{
			"deviceTime": "2014-08-20T04:36:59",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "45584b41-46ab-4983-9fe6-eac3b74b4992"
		},
		{
			"deviceTime": "2014-08-20T04:36:59",
			"id": "45584b41-46ab-4983-9fe6-eac3b74b4992",
			"source": "demo",
			"joinKey": "80c99590-ae21-4f65-8886-81cf63c99db8",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 47
			}
		},
		{
			"deviceTime": "2014-08-20T04:36:59",
			"programmed": 3.6,
			"joinKey": "80c99590-ae21-4f65-8886-81cf63c99db8",
			"value": 3.6,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "3a8b462b-d983-468e-94a6-8f0b1cf718ef"
		},
		{
			"messageText": "Veniam cow esse aliquip sint eu ad fatback shankle porchetta kevin dolore ball tip ex venison. Laborum pastrami pig meatball pariatur, exercitation spare ribs ullamco.",
			"parentMessage": "eefcd147-1e1e-4db7-ae92-1893ad305ef5",
			"utcTime": "2014-08-20T04:38:20Z",
			"type": "message",
			"id": "fe7b2dde-13b2-483d-a3e3-bf92dc2a4243"
		},
		{
			"messageText": "Spare ribs ullamco ball tip, duis ex ut do jowl officia t-bone quis.",
			"parentMessage": "eefcd147-1e1e-4db7-ae92-1893ad305ef5",
			"utcTime": "2014-08-20T04:41:20Z",
			"type": "message",
			"id": "ab2eaaf9-7c83-45c2-aa5c-4630f8e9469b"
		},
		{
			"deviceTime": "2014-08-20T04:55:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5d6f586-1304-4d36-b935-36ecb093620e"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-20T06:00:00",
			"start": "2014-08-20T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "a2bf3075-73ee-4a15-933f-d486644fd353"
		},
		{
			"deviceTime": "2014-08-20T05:00:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f87ff57b-4c69-418c-ae06-5ae02aed0e13"
		},
		{
			"deviceTime": "2014-08-20T05:05:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0c0a14c-c35a-4deb-a8dd-fb71371421ad"
		},
		{
			"deviceTime": "2014-08-20T05:10:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28b5917b-deba-4c35-9350-46816796f460"
		},
		{
			"deviceTime": "2014-08-20T05:15:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "669d95dc-2f55-4f22-8a9f-f8246c7d3220"
		},
		{
			"deviceTime": "2014-08-20T05:20:01",
			"value": 3.7,
			"source": "demo",
			"recommended": 4.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c7074cc0-e45d-4004-a92b-ecbcf3f29053"
		},
		{
			"deviceTime": "2014-08-20T05:20:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8029e744-3a96-40e8-8a82-471cd25a36ab"
		},
		{
			"deviceTime": "2014-08-20T05:25:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66530be2-145a-4f4d-b037-12d47ee7f994"
		},
		{
			"deviceTime": "2014-08-20T05:30:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "313b4739-2cca-4834-aa71-e45322a8fe79"
		},
		{
			"deviceTime": "2014-08-20T05:35:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9a4eed4-a95d-41ab-a05c-eba0eed6d192"
		},
		{
			"deviceTime": "2014-08-20T05:40:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58983cd7-c706-4c0d-9ac1-09d821921fd7"
		},
		{
			"deviceTime": "2014-08-20T05:45:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8612d1d3-0958-4486-b042-61c32b81ccd1"
		},
		{
			"deviceTime": "2014-08-20T05:50:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15cf319a-cf72-4c23-90e3-d4bb54773e2e"
		},
		{
			"deviceTime": "2014-08-20T05:55:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd1c9978-bd69-4c6c-b9d8-13b5b230110e"
		},
		{
			"delivered": 1,
			"end": "2014-08-20T09:00:00",
			"start": "2014-08-20T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "267b784b-c382-4d3a-bd17-0cf6d6818bc2"
		},
		{
			"deviceTime": "2014-08-20T06:00:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7517b627-18f0-465d-a895-c1a936aa3a77"
		},
		{
			"deviceTime": "2014-08-20T06:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44f668be-46d3-4115-91ec-e6f415974a73"
		},
		{
			"deviceTime": "2014-08-20T06:10:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03ebe9bc-31a0-4e55-9c9e-431ae273e424"
		},
		{
			"deviceTime": "2014-08-20T06:15:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bd144fa-489e-44b8-bba9-e142cdb49c95"
		},
		{
			"deviceTime": "2014-08-20T06:20:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "529c778d-90a3-4001-bc6a-a94fb4574819"
		},
		{
			"deviceTime": "2014-08-20T06:25:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b12c766-6fbf-46ce-b3b8-1e533b77c6ff"
		},
		{
			"deviceTime": "2014-08-20T06:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab8eea5c-2b64-4d02-aaa3-47854dc9c627"
		},
		{
			"deviceTime": "2014-08-20T06:35:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19c7fb2c-cf9d-4ac6-869d-f28d63ed8e70"
		},
		{
			"deviceTime": "2014-08-20T06:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7468f0f3-b007-40f0-a46a-6ff05e5cd91c"
		},
		{
			"deviceTime": "2014-08-20T06:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1bc42da-a0b1-4e40-a8b8-93a237c11144"
		},
		{
			"deviceTime": "2014-08-20T06:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2df01480-15bc-44f2-b9c4-9035fe5a5514"
		},
		{
			"deviceTime": "2014-08-20T06:55:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1db2d0c1-5ee5-4877-ae5b-01a72256660d"
		},
		{
			"deviceTime": "2014-08-20T07:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76c3ff3c-c4a6-429e-bfbe-d3c0a9d2641b"
		},
		{
			"deviceTime": "2014-08-20T07:05:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "121b4c5e-954f-4758-b32a-185991b39f88"
		},
		{
			"deviceTime": "2014-08-20T07:10:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c74cbca-0777-4044-8db5-c5f7f4da6215"
		},
		{
			"deviceTime": "2014-08-20T07:15:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b4d8fff-2412-4b2f-8cac-e9645974d08d"
		},
		{
			"deviceTime": "2014-08-20T07:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "596c3e11-e9b6-44d2-82fe-f5bfdebff258"
		},
		{
			"deviceTime": "2014-08-20T07:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b7a56a3-c416-4999-9869-8e08899b0299"
		},
		{
			"deviceTime": "2014-08-20T07:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba84e577-2fc5-4ef1-99e3-5613f2085f7a"
		},
		{
			"deviceTime": "2014-08-20T07:35:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97181188-0cbc-45e1-92c7-43c181878061"
		},
		{
			"deviceTime": "2014-08-20T07:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9bb6ec66-c9bc-4f21-aab7-e2d7277af7e5"
		},
		{
			"deviceTime": "2014-08-20T07:44:47",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4d94f27b-dfd6-4e9b-8a3a-f35121270cc0"
		},
		{
			"deviceTime": "2014-08-20T07:44:47",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "9e42a5ad-1fe5-45ce-8a1f-f27bc03fa828"
		},
		{
			"deviceTime": "2014-08-20T07:44:47",
			"id": "9e42a5ad-1fe5-45ce-8a1f-f27bc03fa828",
			"source": "demo",
			"joinKey": "ad678d1a-6d52-4d70-adb7-39502bf67462",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 76
			}
		},
		{
			"deviceTime": "2014-08-20T07:44:47",
			"programmed": 5.8,
			"joinKey": "ad678d1a-6d52-4d70-adb7-39502bf67462",
			"value": 5.8,
			"source": "demo",
			"recommended": 5.1,
			"extendedDelivery": 5.8,
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"extended": true,
			"type": "bolus",
			"id": "e1a6919f-29bd-46f3-a8cc-817dd40294cd"
		},
		{
			"deviceTime": "2014-08-20T07:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6909a8a-befc-45fa-adfd-b71cecfb83bf"
		},
		{
			"deviceTime": "2014-08-20T07:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f84f1d30-a78c-47e7-88bd-452f5b4a23e1"
		},
		{
			"deviceTime": "2014-08-20T07:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d431ca6b-8db0-4279-9501-fe7052892ea3"
		},
		{
			"deviceTime": "2014-08-20T08:00:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad025bd1-0b9e-4bb4-a8f6-bce7f377f752"
		},
		{
			"deviceTime": "2014-08-20T08:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfd63744-13d4-4c06-b047-4d8f42845b1d"
		},
		{
			"deviceTime": "2014-08-20T08:10:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09b32827-f762-406c-9917-488e92944aef"
		},
		{
			"deviceTime": "2014-08-20T08:15:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29c11434-22f4-455b-a388-c01e1bb37afb"
		},
		{
			"deviceTime": "2014-08-20T08:20:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "baa93c27-43f6-4ff9-b1d4-08c282c38395"
		},
		{
			"deviceTime": "2014-08-20T08:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35e16ed6-46e5-4eda-ab67-e9ff117e2c45"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-20T15:00:00",
			"start": "2014-08-20T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "b5da2b6a-11a6-499c-9b41-e4af22622c74"
		},
		{
			"deviceTime": "2014-08-20T09:00:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83f2c1ce-bbe0-452d-a0c5-0963f386ecfa"
		},
		{
			"deviceTime": "2014-08-20T09:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87334edb-6b0b-4cc4-819b-babeef2c90ac"
		},
		{
			"deviceTime": "2014-08-20T09:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0155f57-9021-4348-b952-f886d00764bf"
		},
		{
			"deviceTime": "2014-08-20T09:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "906c22d8-d89e-4652-a150-a6b219ef767c"
		},
		{
			"end": "2014-08-20T11:55:01",
			"start": "2014-08-20T09:25:01",
			"percent": 0.7,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 9000000,
			"type": "basal-rate-segment",
			"id": "98bb6967-359b-447b-80b3-e1c12c68f152"
		},
		{
			"deviceTime": "2014-08-20T09:25:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aba10846-07aa-430c-bde1-cc02862c9ca3"
		},
		{
			"deviceTime": "2014-08-20T09:30:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06947211-1e96-4c9d-a6e3-67186a9774ef"
		},
		{
			"deviceTime": "2014-08-20T09:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac41dca6-b47f-4dae-af1d-82a5832deeda"
		},
		{
			"deviceTime": "2014-08-20T09:40:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c2ad667-63ab-435a-8907-8fa0de43722a"
		},
		{
			"deviceTime": "2014-08-20T09:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44ee2f0d-aa45-4301-9d0d-d3e00137d8a1"
		},
		{
			"deviceTime": "2014-08-20T09:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "057b9a2b-19ac-4ffb-9a03-1f732c4d9698"
		},
		{
			"deviceTime": "2014-08-20T09:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4897bf3c-c20b-4f8c-aa4f-1870e1aeabde"
		},
		{
			"deviceTime": "2014-08-20T10:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e27b5464-e6ce-4a0a-ab68-389ce0ec6bbb"
		},
		{
			"deviceTime": "2014-08-20T10:05:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16188fa0-2666-47b3-91fb-0bde671f4d23"
		},
		{
			"deviceTime": "2014-08-20T10:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "769c9c78-ccef-4e60-b2f6-e995d8011704"
		},
		{
			"deviceTime": "2014-08-20T10:15:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2bf63e6-177e-45ed-9942-648f54fa4ebe"
		},
		{
			"deviceTime": "2014-08-20T10:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3de0c0b-67f7-410d-a80e-e60b01e07c44"
		},
		{
			"deviceTime": "2014-08-20T10:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a38e4fae-ffb0-4add-b5b2-9f167159ce34"
		},
		{
			"deviceTime": "2014-08-20T10:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91c33b63-46a9-4fca-b55f-1136744c2817"
		},
		{
			"deviceTime": "2014-08-20T10:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6de69510-e933-4b92-ac51-8ab6d2fdddd5"
		},
		{
			"deviceTime": "2014-08-20T10:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c4a7728-3910-44d6-9ccc-2493e3d59f3a"
		},
		{
			"deviceTime": "2014-08-20T10:45:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b425fb8e-a657-4f69-8720-b2ef7a48cddb"
		},
		{
			"deviceTime": "2014-08-20T10:50:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edbb6fab-92e1-4feb-b157-94a1c21a99c7"
		},
		{
			"deviceTime": "2014-08-20T10:55:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0b0bcba-1021-4eaf-b0cd-8469500909a7"
		},
		{
			"deviceTime": "2014-08-20T11:00:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9baf9dfe-d34f-4882-9a80-7f95ff7fc297"
		},
		{
			"deviceTime": "2014-08-20T11:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fb37952-56eb-487d-95bd-49d62c584ea6"
		},
		{
			"deviceTime": "2014-08-20T11:10:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37b96059-8fea-408f-81ba-02b7b164016a"
		},
		{
			"deviceTime": "2014-08-20T11:15:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53513a82-e628-49c7-bce8-e11506b3689d"
		},
		{
			"deviceTime": "2014-08-20T11:20:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cabfd1ae-3059-495f-811d-602be3564ee2"
		},
		{
			"deviceTime": "2014-08-20T11:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fdfff868-818f-4d87-9678-19c7fb101041"
		},
		{
			"deviceTime": "2014-08-20T11:30:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "708c2bf7-5d04-4877-bc7b-8c503efce40f"
		},
		{
			"deviceTime": "2014-08-20T11:31:43",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "1d9d79d2-3ff8-4059-8467-71f86aa4df9c"
		},
		{
			"deviceTime": "2014-08-20T11:31:43",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "6fb2d966-38dd-4406-addd-5243dd9b0b9b"
		},
		{
			"deviceTime": "2014-08-20T11:31:43",
			"id": "6fb2d966-38dd-4406-addd-5243dd9b0b9b",
			"source": "demo",
			"joinKey": "f940d5cf-b5aa-439d-be58-202693e2113f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 55
			}
		},
		{
			"deviceTime": "2014-08-20T11:31:43",
			"suspendedAt": "2014-08-20T11:46:43",
			"programmed": 4.2,
			"joinKey": "f940d5cf-b5aa-439d-be58-202693e2113f",
			"value": 4.2,
			"source": "demo",
			"recommended": 3.7,
			"extendedDelivery": 1.7,
			"initialDelivery": 2.5,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "f6dc9122-d428-4f76-8946-bf67c1ff7e1a",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-20T11:35:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c80e42e-3c18-499b-a76b-ea3262ed8433"
		},
		{
			"deviceTime": "2014-08-20T11:40:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7db15fc9-5abf-4b18-b199-d17444f47a56"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-20T11:46:43",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "80133fa0-d048-4395-8aac-d3af08339927"
		},
		{
			"deviceTime": "2014-08-20T11:55:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db1e8145-fd67-4052-8f65-f205d845df06"
		},
		{
			"deviceTime": "2014-08-20T12:00:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37dada08-1232-4896-a1ee-057a3a5d49c3"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-20T12:02:43",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "69264be4-586b-4fe4-9ef7-f509d0a9fee9",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-20T11:46:43",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "80133fa0-d048-4395-8aac-d3af08339927"
			}
		},
		{
			"deviceTime": "2014-08-20T12:05:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bed6708-cfa3-4a70-b508-3457177014a0"
		},
		{
			"deviceTime": "2014-08-20T12:10:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8733bf6c-04de-418b-82f6-ef79d008fcec"
		},
		{
			"deviceTime": "2014-08-20T12:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d3d8fbe-63e6-48be-8fed-18c7bc000568"
		},
		{
			"deviceTime": "2014-08-20T12:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9df599ad-19e8-4505-bae5-1c93298424f8"
		},
		{
			"deviceTime": "2014-08-20T12:25:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "272c8322-bffc-4e6f-a88c-2a0f3e2aca17"
		},
		{
			"deviceTime": "2014-08-20T12:30:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7ee9aa2-d74d-4871-9892-f23bf6dda602"
		},
		{
			"deviceTime": "2014-08-20T12:35:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbac5267-dd86-40f4-990b-1ce3898f5b4b"
		},
		{
			"deviceTime": "2014-08-20T12:40:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa4c2ddc-05ed-4c82-8f09-48b2faaa6375"
		},
		{
			"deviceTime": "2014-08-20T12:45:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6a47986-d9ac-48e6-896d-0dd0e4244e11"
		},
		{
			"deviceTime": "2014-08-20T13:05:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69fb7783-be0b-430b-b553-6f488fbc4fa0"
		},
		{
			"deviceTime": "2014-08-20T13:10:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c1ef72c-676f-4823-af44-85bff351601c"
		},
		{
			"deviceTime": "2014-08-20T13:15:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f94c281c-687b-493d-bb40-90ca6ae49d3f"
		},
		{
			"deviceTime": "2014-08-20T13:20:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c55b7eb-03c5-4599-9ebf-dec198003c51"
		},
		{
			"deviceTime": "2014-08-20T13:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5cee957-97b8-480e-a6ec-37f696f538a5"
		},
		{
			"deviceTime": "2014-08-20T13:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78390195-50c4-4457-ab62-35c59edaa5ad"
		},
		{
			"deviceTime": "2014-08-20T13:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "701be980-4d9b-4509-8727-aa7803259f29"
		},
		{
			"deviceTime": "2014-08-20T13:39:39",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "260e6f40-486f-40b4-bc24-7fbbdbbe28bf"
		},
		{
			"deviceTime": "2014-08-20T13:39:39",
			"value": 17,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "bf8582bc-9642-411e-91f1-61e21fa12e45"
		},
		{
			"deviceTime": "2014-08-20T13:39:39",
			"id": "bf8582bc-9642-411e-91f1-61e21fa12e45",
			"source": "demo",
			"joinKey": "6ed46ad7-4772-44a7-98ab-88c102248b11",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 17
			}
		},
		{
			"deviceTime": "2014-08-20T13:39:39",
			"programmed": 1,
			"joinKey": "6ed46ad7-4772-44a7-98ab-88c102248b11",
			"value": 1,
			"source": "demo",
			"recommended": 1.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "28898271-4f37-4c73-ba2d-e8d48cc42532"
		},
		{
			"deviceTime": "2014-08-20T13:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd0faaac-f5bb-48f2-8d03-44dadecf4d5b"
		},
		{
			"deviceTime": "2014-08-20T13:45:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5a7cf0d-d524-4b00-bef9-628e56d1a156"
		},
		{
			"deviceTime": "2014-08-20T13:50:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe00d2db-6ea4-47f6-9160-628050fc45fe"
		},
		{
			"deviceTime": "2014-08-20T13:55:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77136dbf-3da0-400c-bda1-e9aa7fd19954"
		},
		{
			"deviceTime": "2014-08-20T14:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5548961e-cdd5-4153-ab48-98dc9a3ff098"
		},
		{
			"deviceTime": "2014-08-20T14:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdfa56db-8781-4a6b-8e88-f54604718bcf"
		},
		{
			"deviceTime": "2014-08-20T14:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5900bc6-e2ea-4a96-bb5d-5a0834320f3e"
		},
		{
			"deviceTime": "2014-08-20T14:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea539c51-190e-4778-be5a-b2275b7c1d91"
		},
		{
			"deviceTime": "2014-08-20T14:20:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a02bf645-dbe6-48c9-85cd-203ee913e429"
		},
		{
			"deviceTime": "2014-08-20T14:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79221f12-dad1-454f-ba3a-b7f2f2d929f4"
		},
		{
			"deviceTime": "2014-08-20T14:30:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f687d5e-e9ad-4723-97bb-5b80df8d90b0"
		},
		{
			"deviceTime": "2014-08-20T14:35:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39d57c1c-af76-4b71-9986-373c66907d4b"
		},
		{
			"deviceTime": "2014-08-20T14:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b85455c1-bf6f-4502-8f81-9d213b7de436"
		},
		{
			"deviceTime": "2014-08-20T14:45:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0e8fce9-02d8-43fe-bebc-abe842d65480"
		},
		{
			"deviceTime": "2014-08-20T14:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a24b223c-86d5-491c-8de9-f1acaf98c98f"
		},
		{
			"deviceTime": "2014-08-20T14:55:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ac57ad0-ea7a-4572-8354-4740e7eecc3f"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-20T20:00:00",
			"start": "2014-08-20T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "86baf37f-3da5-43db-828e-263aa293c98d"
		},
		{
			"deviceTime": "2014-08-20T15:00:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af723651-dda0-4472-8912-740c2c0e7fa5"
		},
		{
			"deviceTime": "2014-08-20T15:05:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5342cd4b-d9ca-4530-8da1-01d1c0c66621"
		},
		{
			"deviceTime": "2014-08-20T15:10:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6256d2e9-4270-4b42-bda3-298d2fd937ab"
		},
		{
			"deviceTime": "2014-08-20T15:15:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60923633-fcab-496f-ba89-29936f75bb4e"
		},
		{
			"deviceTime": "2014-08-20T15:20:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de06881f-171a-405d-af81-5b2ed1876f73"
		},
		{
			"deviceTime": "2014-08-20T15:25:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a60ca7a-b418-465b-acdd-491743092c93"
		},
		{
			"deviceTime": "2014-08-20T15:50:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c04615c-c757-45f0-867e-e1dc129d7798"
		},
		{
			"deviceTime": "2014-08-20T16:15:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2c5873c-4fdf-4c31-90b6-caa15a0cb88a"
		},
		{
			"deviceTime": "2014-08-20T16:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21c3b15b-4540-4e13-b3d2-a9c3fc956c63"
		},
		{
			"deviceTime": "2014-08-20T16:25:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2026909c-445f-4151-af8f-f96cca243c07"
		},
		{
			"deviceTime": "2014-08-20T16:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e0ffa80-a549-4e45-b5d3-22e93babd86a"
		},
		{
			"deviceTime": "2014-08-20T16:35:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a370902-da86-4d2e-8388-135313adf7bb"
		},
		{
			"deviceTime": "2014-08-20T16:40:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b12b2e2d-ba2a-4ced-9dd2-82f494be34de"
		},
		{
			"deviceTime": "2014-08-20T16:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3212730-f578-4ade-8fa4-022d6dde1845"
		},
		{
			"deviceTime": "2014-08-20T16:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ac67afa-1346-4b87-a000-cca3cf077adf"
		},
		{
			"deviceTime": "2014-08-20T16:55:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3508ca6e-8647-425b-bdd7-468edcaaf544"
		},
		{
			"deviceTime": "2014-08-20T17:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1c252f6-d933-453c-b62a-499384f915e2"
		},
		{
			"deviceTime": "2014-08-20T17:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3e9349f-c2c7-4b4e-b4a0-eec9ab1ad9df"
		},
		{
			"deviceTime": "2014-08-20T17:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66f1010c-4097-4ca7-a690-29dbf71f2bd4"
		},
		{
			"deviceTime": "2014-08-20T17:15:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "767604b2-d595-437a-8ff1-7a1701cbf4cb"
		},
		{
			"deviceTime": "2014-08-20T17:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b424c0d6-e54c-41e4-90de-f1bc2f84f751"
		},
		{
			"deviceTime": "2014-08-20T17:22:01",
			"value": 4.2,
			"source": "demo",
			"recommended": 4.2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "2126bb9f-6d41-4a5d-a848-aa0f1837314b"
		},
		{
			"deviceTime": "2014-08-20T17:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "680b3aee-63b0-4344-a126-ae57e9cfb2e6"
		},
		{
			"deviceTime": "2014-08-20T17:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab1b5eab-4878-4063-a0e4-1620db53fd0d"
		},
		{
			"deviceTime": "2014-08-20T17:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49c62da3-9167-4373-95a6-50bbb50b69f2"
		},
		{
			"deviceTime": "2014-08-20T17:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6724a788-0026-4f18-a583-29b3f6cb0ace"
		},
		{
			"deviceTime": "2014-08-20T17:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a3a048a-04f8-4cd2-b602-0fcaae81f73d"
		},
		{
			"deviceTime": "2014-08-20T17:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9f74994-0e77-439f-87d1-9b60d648a6a1"
		},
		{
			"deviceTime": "2014-08-20T17:55:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2b30d7f-c701-4c58-a578-e18b9fa01291"
		},
		{
			"deviceTime": "2014-08-20T18:00:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c4d6917-d941-4fd6-99dd-5f91edd251fb"
		},
		{
			"deviceTime": "2014-08-20T18:05:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec1662ee-d2bf-45a1-adf6-afa51a2f4916"
		},
		{
			"deviceTime": "2014-08-20T18:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8924028e-782b-4d49-a294-2aba6e4feb71"
		},
		{
			"deviceTime": "2014-08-20T18:15:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65ba2b30-b898-45e9-a8de-a876fdb20147"
		},
		{
			"deviceTime": "2014-08-20T18:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d257f05b-eef6-4483-b7ca-976756bbfb34"
		},
		{
			"deviceTime": "2014-08-20T18:25:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf0015e4-689f-491b-8d92-75b360be330b"
		},
		{
			"deviceTime": "2014-08-20T18:45:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca452be1-b4bb-4406-b59e-7bc6c448775f"
		},
		{
			"deviceTime": "2014-08-20T18:50:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bd8f621-1ef6-42a2-9633-3322e39d3674"
		},
		{
			"end": "2014-08-20T20:22:01",
			"start": "2014-08-20T18:52:01",
			"percent": 1.7,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "cb54a67c-db7b-4bf4-bb4a-a6682121968d"
		},
		{
			"deviceTime": "2014-08-20T18:55:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8a3feb8-9e2a-4792-a6b1-f438383f5d64"
		},
		{
			"deviceTime": "2014-08-20T19:00:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6134c6e8-979e-4d28-8b22-f868230349fb"
		},
		{
			"deviceTime": "2014-08-20T19:05:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10e27fc6-a228-4efb-8cb7-bec55f897cb5"
		},
		{
			"deviceTime": "2014-08-20T19:15:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba4dc7f2-1dbd-434d-a3d3-dae6064f3df6"
		},
		{
			"deviceTime": "2014-08-20T19:20:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30928c7f-1a02-43aa-b124-710767fa1bd7"
		},
		{
			"deviceTime": "2014-08-20T19:25:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f773be4e-6272-47d1-a471-2bffb8b34259"
		},
		{
			"deviceTime": "2014-08-20T19:30:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc62be3f-bc3b-4ddf-93c1-0f15ddc91b92"
		},
		{
			"deviceTime": "2014-08-20T19:35:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc40c048-29b3-4aca-a2bc-38abc8764f24"
		},
		{
			"deviceTime": "2014-08-20T19:55:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c2b5bac-2e24-4e20-9651-57922b9483f9"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-21T00:00:00",
			"start": "2014-08-20T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "70ceb629-f21d-4f8b-9fcd-961137ed9c7b"
		},
		{
			"deviceTime": "2014-08-20T20:00:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6c62a91-003d-4932-ac1c-deed63b76d80"
		},
		{
			"deviceTime": "2014-08-20T20:05:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "927e8194-dcd0-4ce7-ab0c-cd9ee7f3bbd6"
		},
		{
			"deviceTime": "2014-08-20T20:10:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8281154f-9d3c-4c59-9070-2f9615605f18"
		},
		{
			"deviceTime": "2014-08-20T20:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ce47d07-3e20-4226-8c79-0ff583dd0093"
		},
		{
			"deviceTime": "2014-08-20T20:20:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9ab2b6a-3fd9-4ef2-8305-09d73acb1bf8"
		},
		{
			"deviceTime": "2014-08-20T20:25:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8ec031e-ff57-4e2e-bbd7-9ca39ac59bb1"
		},
		{
			"deviceTime": "2014-08-20T20:30:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2fe9608-27fd-4803-8740-514e878daead"
		},
		{
			"deviceTime": "2014-08-20T20:35:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe50e646-3d09-4768-8800-6672733f5d40"
		},
		{
			"end": "2014-08-21T00:08:01",
			"start": "2014-08-20T21:08:01",
			"percent": 0.05,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "88b992a2-5f99-420e-82f5-436d301e3377"
		},
		{
			"deviceTime": "2014-08-20T21:10:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ace3d059-1756-404a-966d-fa7ed4634b2c"
		},
		{
			"deviceTime": "2014-08-20T21:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe6039fa-0dd2-4a8e-a186-4133809d8cad"
		},
		{
			"deviceTime": "2014-08-20T21:20:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da848a6a-dc9f-4df6-9b00-d90a69e69f8a"
		},
		{
			"deviceTime": "2014-08-20T21:25:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff7fb8ac-d61a-4967-9c9f-399cc4cb35b2"
		},
		{
			"deviceTime": "2014-08-20T21:30:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01f189b9-8591-4b98-8e17-403c6f98324c"
		},
		{
			"deviceTime": "2014-08-20T21:35:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14be6d1f-14f1-470a-b7c3-1c5353ac462a"
		},
		{
			"deviceTime": "2014-08-20T21:40:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "288da3cc-1ff1-449e-8f4a-384c2259ec90"
		},
		{
			"deviceTime": "2014-08-20T21:45:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4908aee9-fdf0-41d0-ac14-d179c183ffd2"
		},
		{
			"deviceTime": "2014-08-20T21:50:22",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab6d0f73-450c-485d-b046-b723c9205549"
		},
		{
			"deviceTime": "2014-08-20T21:55:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7c5b278-2a8a-4dff-8d93-886ea87c1fac"
		},
		{
			"deviceTime": "2014-08-20T22:00:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09564b69-68a5-4e73-b508-5b4a898658b0"
		},
		{
			"deviceTime": "2014-08-20T22:05:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63e23eb2-2f31-4f32-97dc-8642953298fb"
		},
		{
			"deviceTime": "2014-08-20T22:10:22",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c83923e-764a-4c44-ab09-db54fc9b2a77"
		},
		{
			"deviceTime": "2014-08-20T22:15:22",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4de5031c-6739-4998-8742-fb20065db5f9"
		},
		{
			"deviceTime": "2014-08-20T22:20:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0158855c-bc96-4915-814c-252303ed4f9f"
		},
		{
			"deviceTime": "2014-08-20T22:25:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ee375d6-f858-4b87-9c5e-185131b37b01"
		},
		{
			"deviceTime": "2014-08-20T22:30:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a07f150a-d764-4dc9-a4bf-4e3a9dde287a"
		},
		{
			"deviceTime": "2014-08-20T22:35:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "486100bd-3557-4735-bb4d-8e426c0ad431"
		},
		{
			"deviceTime": "2014-08-20T22:38:27",
			"value": 31,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d5c86ff6-81e5-418a-9f38-0576cc6287bd"
		},
		{
			"deviceTime": "2014-08-20T22:38:27",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "0562f9d7-fa7a-44eb-a59c-af351528d3f6"
		},
		{
			"deviceTime": "2014-08-20T22:38:27",
			"id": "0562f9d7-fa7a-44eb-a59c-af351528d3f6",
			"source": "demo",
			"joinKey": "53b59f8a-a66c-44ab-bebf-0d5a8cfa0523",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 56
			}
		},
		{
			"deviceTime": "2014-08-20T22:38:27",
			"programmed": 3.7,
			"joinKey": "53b59f8a-a66c-44ab-bebf-0d5a8cfa0523",
			"value": 3.7,
			"source": "demo",
			"recommended": 3.7,
			"extendedDelivery": 3.7,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "de0068c8-f5af-46c1-90d8-088c7ba06bcf"
		},
		{
			"deviceTime": "2014-08-20T22:40:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd078672-dc40-4d79-b8a4-0c6902419f72"
		},
		{
			"deviceTime": "2014-08-20T22:45:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86f85a80-b440-471c-a3aa-098d0c696738"
		},
		{
			"deviceTime": "2014-08-20T22:50:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "286fe42f-c54c-40e6-ba46-497dcee5f214"
		},
		{
			"deviceTime": "2014-08-20T22:55:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43cd280f-a144-4525-a89d-f6df3e55712f"
		},
		{
			"deviceTime": "2014-08-20T23:00:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b90ae205-49bb-4e72-bd9e-a9247395bbec"
		},
		{
			"deviceTime": "2014-08-20T23:05:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07b7e82b-a510-430e-ac02-c9f332e39687"
		},
		{
			"deviceTime": "2014-08-20T23:10:22",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a270579-7a23-4f61-a8ab-3c1742c2897f"
		},
		{
			"deviceTime": "2014-08-20T23:15:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e5d5722-afb3-4b1f-b399-30cb68ae2abd"
		},
		{
			"deviceTime": "2014-08-20T23:50:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "906f23b4-2aa1-41a3-a2a6-4822b8a173eb"
		},
		{
			"deviceTime": "2014-08-20T23:55:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8e6c9ab-d87e-473d-ba66-2552bba70404"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-21T02:00:00",
			"start": "2014-08-21T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "711e90e6-9c30-4f87-bc00-3658f3037265"
		},
		{
			"deviceTime": "2014-08-21T00:00:22",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b509e557-653f-4673-9a77-c378ef89b615"
		},
		{
			"deviceTime": "2014-08-21T00:05:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc80c5ad-992c-49f1-aa76-3aedfa15167e"
		},
		{
			"deviceTime": "2014-08-21T00:10:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b55b70d9-b1a6-4486-8615-a6bca6bf498e"
		},
		{
			"deviceTime": "2014-08-21T00:15:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "419c9e3b-1bab-4ea7-b046-ff3b6702c46b"
		},
		{
			"deviceTime": "2014-08-21T00:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aed4720a-5976-4983-b18d-d3893617a790"
		},
		{
			"deviceTime": "2014-08-21T00:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e44a6f1-ecc8-4410-b1cf-8ae5f1ca5537"
		},
		{
			"deviceTime": "2014-08-21T00:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1508fb5e-12f9-4209-8a75-555fb8516d9e"
		},
		{
			"deviceTime": "2014-08-21T00:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ef20145-1374-41f1-a2ac-078ed4eb4238"
		},
		{
			"deviceTime": "2014-08-21T00:40:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f83f49d7-444f-48dc-820c-33da8fd98791"
		},
		{
			"deviceTime": "2014-08-21T01:00:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7d0c5d5-eb45-443d-8bd4-94760b27001a"
		},
		{
			"deviceTime": "2014-08-21T01:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f822f7d2-627f-4001-ac07-843ca00d8708"
		},
		{
			"deviceTime": "2014-08-21T01:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2397def-741c-4e04-b4da-5017b3ab9c2e"
		},
		{
			"deviceTime": "2014-08-21T01:15:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9e51aaa-fc98-4f73-b144-59880f597da0"
		},
		{
			"deviceTime": "2014-08-21T01:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e5a72d6-ac76-41e2-9e27-3b121687ca06"
		},
		{
			"deviceTime": "2014-08-21T01:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "feb21561-bcb2-43ea-947f-00a18c8ad910"
		},
		{
			"deviceTime": "2014-08-21T01:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19d1d4f8-135a-4939-8f76-264403ef4804"
		},
		{
			"deviceTime": "2014-08-21T01:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b78910bb-1209-4b37-a077-d6eed4cf8521"
		},
		{
			"deviceTime": "2014-08-21T01:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1b235c9-8f5e-4837-9cf4-880fa12beff5"
		},
		{
			"deviceTime": "2014-08-21T01:45:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3959979-5f76-40ba-ab90-d87ea6d21ad3"
		},
		{
			"deviceTime": "2014-08-21T01:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58f47207-860f-4ccb-b662-9a6332b68417"
		},
		{
			"deviceTime": "2014-08-21T01:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c78544a-b079-445d-a944-bee201f4b62d"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-21T04:00:00",
			"start": "2014-08-21T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "d247346e-1610-43a1-aa2a-b81b7787661c"
		},
		{
			"deviceTime": "2014-08-21T02:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74ed4451-3563-4ab6-a92e-f3310aa84059"
		},
		{
			"deviceTime": "2014-08-21T02:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de27ebe4-c732-41f2-a9b4-bd03a4d1e246"
		},
		{
			"deviceTime": "2014-08-21T02:10:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb0aca5a-c7ca-44b4-8a9e-83c16eecce2b"
		},
		{
			"deviceTime": "2014-08-21T02:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b12d6de7-4291-4d89-b3cf-c16613383a75"
		},
		{
			"deviceTime": "2014-08-21T02:16:48",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "a94a8a88-d27e-4f84-9296-cca9522096d1"
		},
		{
			"deviceTime": "2014-08-21T02:16:48",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "9261bcfd-8fb6-4835-a9b1-a9f30917bb4e"
		},
		{
			"deviceTime": "2014-08-21T02:16:48",
			"id": "9261bcfd-8fb6-4835-a9b1-a9f30917bb4e",
			"source": "demo",
			"joinKey": "238a4411-6269-4bc9-8e1c-c77a4ba3cb55",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 58
			}
		},
		{
			"deviceTime": "2014-08-21T02:16:48",
			"suspendedAt": "2014-08-21T03:16:48",
			"programmed": 3.9,
			"joinKey": "238a4411-6269-4bc9-8e1c-c77a4ba3cb55",
			"value": 0.2,
			"source": "demo",
			"recommended": 3.9,
			"extendedDelivery": 3.9,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "147068e2-46da-44d9-8b56-2fdcebd06289"
		},
		{
			"deviceTime": "2014-08-21T02:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afefb60d-78b3-4fd3-b5f0-cfcf4823c05a"
		},
		{
			"deviceTime": "2014-08-21T02:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "262fc496-68a5-4724-a6d4-fb9362d8ec0b"
		},
		{
			"deviceTime": "2014-08-21T02:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a49b7c64-7445-4838-9bee-e71af179c434"
		},
		{
			"deviceTime": "2014-08-21T02:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28e0417a-c96c-4350-99c0-a0eb35d426eb"
		},
		{
			"deviceTime": "2014-08-21T02:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba028379-374b-412e-af7e-9d81682d4614"
		},
		{
			"deviceTime": "2014-08-21T02:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5da7cc58-4806-41ab-8877-505837c6d81e"
		},
		{
			"deviceTime": "2014-08-21T02:50:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f7759c8-bcb8-4163-930b-2dd458e0b832"
		},
		{
			"deviceTime": "2014-08-21T02:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0122c30-913b-414c-9036-5065a8c3ff6e"
		},
		{
			"deviceTime": "2014-08-21T03:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6c48ea6-1474-4555-99ae-7e568df7e639"
		},
		{
			"deviceTime": "2014-08-21T03:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "997abbc5-7936-4e56-9181-3c80d5910a44"
		},
		{
			"deviceTime": "2014-08-21T03:05:36",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "54ad3a78-f52f-4323-b540-e5ef7211bd4f"
		},
		{
			"deviceTime": "2014-08-21T03:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47d65d70-e4ea-48cb-a6ef-01efa4ea21ff"
		},
		{
			"deviceTime": "2014-08-21T03:15:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ff6bdcb-fa68-433d-9902-4829f7a7ed3f"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-21T03:16:48",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "bf7a16c0-e957-4e85-86a8-4c8706d85f05"
		},
		{
			"deviceTime": "2014-08-21T03:20:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d46d982c-398c-4086-b05e-637081b254f3"
		},
		{
			"deviceTime": "2014-08-21T03:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc4299e4-d5c5-4dc7-a715-4b6b294790e5"
		},
		{
			"deviceTime": "2014-08-21T03:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96dd497e-5079-45a8-aeac-fb094307b962"
		},
		{
			"deviceTime": "2014-08-21T03:35:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "108e968b-b7d2-4d96-9208-968cfe1f16ed"
		},
		{
			"deviceTime": "2014-08-21T03:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7acef01f-2c1d-40ef-8c4f-d6079573716f"
		},
		{
			"deviceTime": "2014-08-21T03:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d26ca2f-3342-47f2-ac2b-9bd23e0ded38"
		},
		{
			"deviceTime": "2014-08-21T03:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85519b86-3b44-4f8e-92ed-cc60ec992ace"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-21T05:00:00",
			"start": "2014-08-21T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "75880922-6193-4a1a-ba07-fb0a33b9ec9e"
		},
		{
			"deviceTime": "2014-08-21T04:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bef934fb-c36e-4d25-b6a0-be045da4bae4"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-21T04:17:48",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "8caa43a4-4da0-45cc-bc2e-04c13445fdec",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-21T03:16:48",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "bf7a16c0-e957-4e85-86a8-4c8706d85f05"
			}
		},
		{
			"deviceTime": "2014-08-21T04:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83dc6a12-a87c-443d-8652-a590144a6d0b"
		},
		{
			"deviceTime": "2014-08-21T04:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da231cb0-afc3-4bbc-bf71-e1a05ab1f157"
		},
		{
			"deviceTime": "2014-08-21T04:40:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49b0faaa-1407-4f8c-94b5-40f62c565e31"
		},
		{
			"deviceTime": "2014-08-21T04:45:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff28b182-ba92-460b-9b9f-6d4f6864dff7"
		},
		{
			"deviceTime": "2014-08-21T04:50:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b210ee5-9b19-4c24-806a-cdf66a1015c7"
		},
		{
			"deviceTime": "2014-08-21T04:55:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f2675ec-5e3c-40b0-bdf1-7c951ff661ca"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-21T06:00:00",
			"start": "2014-08-21T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "c3128c70-364c-4fab-a137-bf271924cfd6"
		},
		{
			"deviceTime": "2014-08-21T05:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c33a8ea5-e602-429b-852d-c08a1e5c8fc8"
		},
		{
			"deviceTime": "2014-08-21T05:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28aa58c5-5e7f-4534-a7c5-5ffd9070a6be"
		},
		{
			"deviceTime": "2014-08-21T05:10:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d242d50-4062-4122-a267-69a4dd47f24f"
		},
		{
			"deviceTime": "2014-08-21T05:15:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0978ab27-12e6-4f09-aaee-f7a84934ca6a"
		},
		{
			"deviceTime": "2014-08-21T05:20:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "663c34d2-ea54-4637-8739-0963f1be70d4"
		},
		{
			"deviceTime": "2014-08-21T05:25:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9390355-14b7-45b3-9a28-9b7a16ac7b6b"
		},
		{
			"deviceTime": "2014-08-21T05:30:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3cb4b7d5-d265-4e32-a723-5058402f7410"
		},
		{
			"deviceTime": "2014-08-21T05:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c9e1ade-0aae-4703-b2d1-e0c84f1a6474"
		},
		{
			"deviceTime": "2014-08-21T05:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a921c8c-3560-42a8-96a5-b3762ea391c3"
		},
		{
			"deviceTime": "2014-08-21T05:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f19b5bbf-c476-47c9-b656-b392999fef72"
		},
		{
			"deviceTime": "2014-08-21T05:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a231100-0345-4f10-8ce3-94a841c4bfe9"
		},
		{
			"deviceTime": "2014-08-21T05:55:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "009f2154-0b2b-4acf-9517-6ae7f2768f3e"
		},
		{
			"delivered": 1,
			"end": "2014-08-21T09:00:00",
			"start": "2014-08-21T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "ec75ad15-bc3d-4fa2-9c15-a5fb8b9db2b1"
		},
		{
			"deviceTime": "2014-08-21T06:00:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77437657-25df-4c51-91a6-2d9dfa946aee"
		},
		{
			"deviceTime": "2014-08-21T06:05:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4a3f306-f303-46f6-8660-8c2a59d62ad2"
		},
		{
			"deviceTime": "2014-08-21T06:10:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6bc733f-0bc9-41ac-ac3c-70a8a3d69a09"
		},
		{
			"deviceTime": "2014-08-21T06:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44ad8ed2-d094-4fbb-a766-424cda7340e8"
		},
		{
			"deviceTime": "2014-08-21T06:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87cf3797-d944-418e-96b2-8d17157214d5"
		},
		{
			"deviceTime": "2014-08-21T06:25:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea4594b7-5369-4061-bbae-6a6e83c05e5e"
		},
		{
			"deviceTime": "2014-08-21T06:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fc9c0ee-f7e0-4a89-9067-f52c3cabb0c0"
		},
		{
			"deviceTime": "2014-08-21T06:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0feb9909-8d97-41be-b427-2228580a03ea"
		},
		{
			"deviceTime": "2014-08-21T06:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1945b47-9397-4ea1-90a9-744d64e3bb8a"
		},
		{
			"deviceTime": "2014-08-21T06:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd79c5aa-bf80-4a2c-98d1-13a5b1f44db8"
		},
		{
			"deviceTime": "2014-08-21T06:50:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a4ebe97-4cc4-4a79-b1b9-9f262fe7b732"
		},
		{
			"deviceTime": "2014-08-21T06:55:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f36c0a83-9f09-4710-bddd-116ad579fd15"
		},
		{
			"deviceTime": "2014-08-21T07:00:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1a70f1b-9495-4aa2-a651-abf96d5f9085"
		},
		{
			"deviceTime": "2014-08-21T07:05:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2bf3146-ff13-4fff-a205-30a1316f168c"
		},
		{
			"deviceTime": "2014-08-21T07:10:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d16c9f9-2cf4-4d23-bd2c-46d268fe2c7e"
		},
		{
			"deviceTime": "2014-08-21T07:15:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "beab1aa6-d927-4fa9-b853-e10cff086dd9"
		},
		{
			"deviceTime": "2014-08-21T07:20:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07d2246a-6cc8-444a-8ca8-a1f1e5260eed"
		},
		{
			"deviceTime": "2014-08-21T07:25:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5815224-4cad-4cd2-8668-c8d82527dc2e"
		},
		{
			"deviceTime": "2014-08-21T07:30:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87edb2de-0aeb-4f2a-a338-db60cf515937"
		},
		{
			"deviceTime": "2014-08-21T07:35:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3dc68a97-4926-4654-ae4e-cc48861ef0cd"
		},
		{
			"deviceTime": "2014-08-21T07:50:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cea1e892-106c-44e2-99f4-786b78379c6b"
		},
		{
			"deviceTime": "2014-08-21T07:55:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8254420e-86ab-4892-85ae-cbb05bb43e54"
		},
		{
			"deviceTime": "2014-08-21T08:00:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b75bbf46-c1d5-4459-8512-e1b5f4c3b3f6"
		},
		{
			"deviceTime": "2014-08-21T08:05:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0175548-6a10-44c6-9a50-9923c771e780"
		},
		{
			"deviceTime": "2014-08-21T08:10:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a47ee9bf-983a-4b5c-8dd8-93d569667180"
		},
		{
			"deviceTime": "2014-08-21T08:14:49",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3134e1df-6275-4732-984e-255d79a2930d"
		},
		{
			"deviceTime": "2014-08-21T08:15:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d41f936-5ef9-44e2-84d0-5b5b7cf4cf6d"
		},
		{
			"deviceTime": "2014-08-21T08:20:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "177a9a76-1dba-4091-abe0-72b504e41f1d"
		},
		{
			"deviceTime": "2014-08-21T08:25:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16c32bff-97a5-4645-ac0a-a1b24aa81568"
		},
		{
			"deviceTime": "2014-08-21T08:35:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "801a3a94-6a5d-447e-8c9d-661a9c3b918d"
		},
		{
			"deviceTime": "2014-08-21T08:40:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "732ec757-719f-4bf9-86bc-f818efc7305f"
		},
		{
			"deviceTime": "2014-08-21T08:45:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "048f74b3-3a4d-4eca-8e28-fca062666730"
		},
		{
			"deviceTime": "2014-08-21T08:50:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d71a8c5f-d0b1-4bbc-80cf-6e1a841260b2"
		},
		{
			"deviceTime": "2014-08-21T08:55:22",
			"value": 222,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abb286f2-a070-4db7-a1b3-d7d7be4de42c"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-21T15:00:00",
			"start": "2014-08-21T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "fb919911-897c-4a88-9784-9aaf7e14f6b1"
		},
		{
			"deviceTime": "2014-08-21T09:00:22",
			"value": 238,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13430218-d1fd-4d09-98ef-f714e0466202"
		},
		{
			"deviceTime": "2014-08-21T09:05:22",
			"value": 257,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb29cc2c-77f7-4335-b859-129df826f636"
		},
		{
			"deviceTime": "2014-08-21T09:10:22",
			"value": 269,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73beaabd-ec7d-46d0-ba7b-c5b4680885da"
		},
		{
			"deviceTime": "2014-08-21T09:15:22",
			"value": 265,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25406699-e046-4a7a-ae91-2a299ff4ebc4"
		},
		{
			"deviceTime": "2014-08-21T09:20:22",
			"value": 245,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a8a00a7-a54b-47de-bc2d-afc48f2b57d4"
		},
		{
			"deviceTime": "2014-08-21T09:25:22",
			"value": 221,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ef81e4e-ffb6-4419-8142-30666c7dea8f"
		},
		{
			"deviceTime": "2014-08-21T09:28:52",
			"value": 227,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "96ec0997-e619-4717-b771-df70b60ceff0"
		},
		{
			"deviceTime": "2014-08-21T09:28:52",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "6c207376-a1ef-402a-9f26-a187d97107c2"
		},
		{
			"deviceTime": "2014-08-21T09:28:52",
			"id": "6c207376-a1ef-402a-9f26-a187d97107c2",
			"source": "demo",
			"joinKey": "cc037c4c-8cd7-4225-8749-3f5144440a47",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 48
			}
		},
		{
			"deviceTime": "2014-08-21T09:28:52",
			"programmed": 3.2,
			"joinKey": "cc037c4c-8cd7-4225-8749-3f5144440a47",
			"value": 3.2,
			"source": "demo",
			"recommended": 3.2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "d728acb8-fb3a-4059-b342-798911fd056a"
		},
		{
			"deviceTime": "2014-08-21T09:30:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c9dacd9-06c4-4f4b-abd5-6d42b860ae16"
		},
		{
			"deviceTime": "2014-08-21T09:35:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10ae4029-cb99-4199-9ead-9d0b599bd01f"
		},
		{
			"deviceTime": "2014-08-21T09:40:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d26658f5-0615-4233-ad94-2d06932c8b00"
		},
		{
			"deviceTime": "2014-08-21T09:45:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3aed61ee-30d2-4482-a037-3341c4bafba6"
		},
		{
			"deviceTime": "2014-08-21T09:50:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cfee272-83d6-4985-b02f-720fe2158d86"
		},
		{
			"deviceTime": "2014-08-21T09:55:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a3585db-a655-48ea-b081-b8dcb259173e"
		},
		{
			"deviceTime": "2014-08-21T10:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17b46427-17ae-4839-b981-9ecdd5b56766"
		},
		{
			"deviceTime": "2014-08-21T10:05:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d17270e-ea86-4176-b6aa-045b520d9b32"
		},
		{
			"deviceTime": "2014-08-21T10:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84e96cb6-a5fe-4cc3-b83f-9bb1add517fa"
		},
		{
			"deviceTime": "2014-08-21T10:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1c1998d-9e1d-4efc-9758-2acbe4606cb1"
		},
		{
			"deviceTime": "2014-08-21T10:20:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b860bde-6fec-4b1b-8dd1-92f3af76ba75"
		},
		{
			"deviceTime": "2014-08-21T10:25:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4ee86b7-4271-4116-8137-96b8a062df34"
		},
		{
			"deviceTime": "2014-08-21T10:30:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43fc6f6e-1cb4-460b-9cd2-77033fda8c1f"
		},
		{
			"deviceTime": "2014-08-21T10:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84bd6ab6-7ad2-49c0-b0c1-9436d36dde59"
		},
		{
			"deviceTime": "2014-08-21T10:40:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a1b8bf5-2789-4d88-abbd-d247a2303f5c"
		},
		{
			"deviceTime": "2014-08-21T10:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0806342-bd3d-4bed-b228-d1e0fc191026"
		},
		{
			"deviceTime": "2014-08-21T10:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4224a1d5-f52b-4e03-8b70-72d20af75cee"
		},
		{
			"deviceTime": "2014-08-21T10:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "730aca51-1bc4-4c38-950c-c15a049b2a43"
		},
		{
			"deviceTime": "2014-08-21T11:00:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c0e1649-6fb4-4bf7-bb28-f871d54c1cf1"
		},
		{
			"deviceTime": "2014-08-21T11:05:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce882bae-b76f-4b69-b1d4-31dc4417a4e2"
		},
		{
			"deviceTime": "2014-08-21T11:10:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c51e2a4-7045-4c72-98ea-f13a04cbf11a"
		},
		{
			"deviceTime": "2014-08-21T11:15:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4b643e6-07a6-42b9-9549-4ee98c35690e"
		},
		{
			"deviceTime": "2014-08-21T11:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "500c5363-632a-4d92-8e18-fd9c75f3e8f3"
		},
		{
			"end": "2014-08-21T14:55:01",
			"start": "2014-08-21T11:25:01",
			"percent": 1.1,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 12600000,
			"type": "basal-rate-segment",
			"id": "6a5aa052-f6dd-4977-8776-8249762f3472"
		},
		{
			"deviceTime": "2014-08-21T11:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5153a42-c43a-4c2b-b57b-8f5c4403e9ce"
		},
		{
			"deviceTime": "2014-08-21T11:30:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e7e3333-102c-4864-aea9-47d3f4cb7ef7"
		},
		{
			"deviceTime": "2014-08-21T11:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fc4d456-9c80-4f1e-be83-1f3ed667a400"
		},
		{
			"deviceTime": "2014-08-21T11:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5db2aaf-042e-43ca-a0bf-5bd242517bd5"
		},
		{
			"deviceTime": "2014-08-21T11:45:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a69469b-9821-414b-af95-3a5f842924e0"
		},
		{
			"deviceTime": "2014-08-21T11:50:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e247e5b1-f776-4319-b150-9e448b732a47"
		},
		{
			"messageText": "In tenderloin fugiat, officia short ribs laboris chicken et culpa eiusmod bresaola ad rump kielbasa.",
			"parentMessage": "",
			"utcTime": "2014-08-21T11:52:16Z",
			"type": "message",
			"id": "a6f8309b-0e14-4a48-93d3-e929b5d8c627"
		},
		{
			"deviceTime": "2014-08-21T11:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8af66ea-5695-40fb-b1cf-e0f156103465"
		},
		{
			"deviceTime": "2014-08-21T12:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79bff098-0331-41d7-837b-2f37c6a4f340"
		},
		{
			"deviceTime": "2014-08-21T12:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1d595a3-e249-4f4f-a8e3-475464f42494"
		},
		{
			"deviceTime": "2014-08-21T12:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f19f932-72bb-490b-894b-0f167c630ac1"
		},
		{
			"deviceTime": "2014-08-21T12:15:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45e7a0f4-f560-45d0-8e4f-3486f5c9085f"
		},
		{
			"deviceTime": "2014-08-21T12:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3009ed15-495d-4d0a-b09f-c31651daa485"
		},
		{
			"deviceTime": "2014-08-21T12:25:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed94a79e-cb36-4e89-8ef1-f4eb0a82873a"
		},
		{
			"deviceTime": "2014-08-21T12:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd135831-1f1d-4b6f-9db7-241c71cbdd42"
		},
		{
			"deviceTime": "2014-08-21T12:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9da22462-d7e9-4d6c-8fde-7c2b9465cfc9"
		},
		{
			"deviceTime": "2014-08-21T12:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30642c9c-21e4-4ef4-8a28-4ac6533b7c47"
		},
		{
			"deviceTime": "2014-08-21T12:44:42",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "82c4f420-cbd6-41c3-83f4-5c66104d82b8"
		},
		{
			"deviceTime": "2014-08-21T12:45:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "444f8ebb-3bf1-4ae2-981f-919f4a14c805"
		},
		{
			"deviceTime": "2014-08-21T12:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c828c86f-f528-4601-bf3e-a0c4160f7513"
		},
		{
			"deviceTime": "2014-08-21T12:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0feeeebf-1257-493c-b30f-8c38ec4a0b0c"
		},
		{
			"deviceTime": "2014-08-21T13:00:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55187262-2e31-4c5a-9329-31bd8ce94c0c"
		},
		{
			"deviceTime": "2014-08-21T13:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03f702fb-b4d3-4eab-b4eb-d16753f86d9f"
		},
		{
			"deviceTime": "2014-08-21T13:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6339eaf4-86c9-446d-99d6-1795eb58ad4c"
		},
		{
			"deviceTime": "2014-08-21T13:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c06506bf-6fc9-49ad-83c4-af853a85c283"
		},
		{
			"deviceTime": "2014-08-21T13:20:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58eae68c-878d-4903-8bfd-d8aee03a4125"
		},
		{
			"deviceTime": "2014-08-21T13:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a849c46-faa6-40fa-9ea8-da63480206e7"
		},
		{
			"deviceTime": "2014-08-21T13:30:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dad50363-268f-4c10-90f7-0857ac3694ba"
		},
		{
			"deviceTime": "2014-08-21T13:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c694733-b2d0-4197-a709-c191d112a0fd"
		},
		{
			"deviceTime": "2014-08-21T13:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be3784d3-19ee-41e8-8c68-1ac9c6ecd5c7"
		},
		{
			"deviceTime": "2014-08-21T13:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66a0f3f1-adc1-445e-8d82-f67801298016"
		},
		{
			"deviceTime": "2014-08-21T13:50:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92a5ac00-eda7-4e01-b9c1-cc38b7290fa3"
		},
		{
			"deviceTime": "2014-08-21T13:53:46",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "69397cfc-a4ff-4e72-8c58-7c81cd30f994"
		},
		{
			"deviceTime": "2014-08-21T13:53:46",
			"value": 12,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "13e94d19-6cb4-4a1a-9cbd-8a7af00bbaaa"
		},
		{
			"deviceTime": "2014-08-21T13:53:46",
			"id": "13e94d19-6cb4-4a1a-9cbd-8a7af00bbaaa",
			"source": "demo",
			"joinKey": "911eb23e-b4e1-4d14-8bca-dd9cfe7adad5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 12
			}
		},
		{
			"deviceTime": "2014-08-21T13:53:46",
			"programmed": 0.8,
			"joinKey": "911eb23e-b4e1-4d14-8bca-dd9cfe7adad5",
			"value": 0.8,
			"source": "demo",
			"recommended": 0.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "86f3c1f4-d043-48b3-a69c-b45ea78f9180"
		},
		{
			"deviceTime": "2014-08-21T14:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eab7ae9b-422d-4f9a-a641-29ac003130dd"
		},
		{
			"deviceTime": "2014-08-21T14:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f2e19ab-093e-4306-a9a6-7f4006a6abf5"
		},
		{
			"deviceTime": "2014-08-21T14:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6258b18-d6f5-4fad-8cdd-4fb454de5e73"
		},
		{
			"deviceTime": "2014-08-21T14:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ba5648c-7d71-4c2d-966c-dfb93eb62f8f"
		},
		{
			"deviceTime": "2014-08-21T14:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c88c5b62-8445-4099-8082-1d9b9136e586"
		},
		{
			"deviceTime": "2014-08-21T14:45:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ccd7f90-debc-4491-8c7f-f19f424f8629"
		},
		{
			"deviceTime": "2014-08-21T14:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08d51606-1719-464d-9d42-5da49552525d"
		},
		{
			"deviceTime": "2014-08-21T14:55:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3fea31d6-0d20-496a-92ac-6bb4b5527f02"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-21T20:00:00",
			"start": "2014-08-21T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "5ce73812-4b9b-42bc-bb7c-8d7a2398e0cb"
		},
		{
			"deviceTime": "2014-08-21T15:00:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "371dfcef-f9e0-4808-944a-1597737e8f72"
		},
		{
			"deviceTime": "2014-08-21T15:05:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85118c93-7494-44f4-bcec-96cfa033b219"
		},
		{
			"deviceTime": "2014-08-21T15:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "655e013e-577d-4ebe-8c47-4285fe2cf6ae"
		},
		{
			"deviceTime": "2014-08-21T15:15:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bfe584e0-5066-49b7-8939-85787ecf4efc"
		},
		{
			"deviceTime": "2014-08-21T15:20:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ee171a0-1b9f-4678-a3f5-73abb4e8d0ed"
		},
		{
			"deviceTime": "2014-08-21T15:25:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa1c7a73-71d5-4655-a36a-389fadf2ee4d"
		},
		{
			"deviceTime": "2014-08-21T15:30:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ea05f97-9947-4fc5-97b5-e531d94f07a7"
		},
		{
			"deviceTime": "2014-08-21T15:35:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31bc96eb-f832-40b3-afd4-915149ce5cfb"
		},
		{
			"deviceTime": "2014-08-21T15:40:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b417a39d-6816-43e8-80c2-17e728f9738e"
		},
		{
			"deviceTime": "2014-08-21T15:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e3c03e4-9c1a-4db7-98b9-9269b89db66c"
		},
		{
			"deviceTime": "2014-08-21T15:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e6711b2-5629-4daa-9d43-c69bafeccb72"
		},
		{
			"deviceTime": "2014-08-21T15:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cab9d028-0588-4485-a15a-1cec29ccc1d4"
		},
		{
			"deviceTime": "2014-08-21T16:00:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c81d9e2f-1813-4008-87b3-1023e9394a19"
		},
		{
			"deviceTime": "2014-08-21T16:05:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dff310fe-e3f4-48b2-9e4a-97f1ef8cdcd1"
		},
		{
			"deviceTime": "2014-08-21T16:10:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9ac0528-65ec-4706-9ae1-cb24fc7c2cf6"
		},
		{
			"deviceTime": "2014-08-21T16:15:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aa6cc5e-3a18-4b64-989b-95d9b1321f77"
		},
		{
			"deviceTime": "2014-08-21T16:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf727c62-4ca9-4441-aa80-e83e4564a33f"
		},
		{
			"deviceTime": "2014-08-21T16:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39703c09-63fe-4daf-9f03-18eeb11c8f8d"
		},
		{
			"deviceTime": "2014-08-21T16:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7eecc91-990a-4f5a-a142-5205a22e99fa"
		},
		{
			"deviceTime": "2014-08-21T16:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afec33dc-1768-4440-b84c-813699350cc4"
		},
		{
			"deviceTime": "2014-08-21T16:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c56c43c5-e74b-4bbe-ae6e-76e8da3643e7"
		},
		{
			"deviceTime": "2014-08-21T16:45:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9298b28-aeaf-4780-91e4-0d873f984704"
		},
		{
			"deviceTime": "2014-08-21T16:50:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28899634-4c62-472a-97b8-a075262887ca"
		},
		{
			"deviceTime": "2014-08-21T16:55:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "820df712-86dc-4ccd-acde-787dd5538e67"
		},
		{
			"deviceTime": "2014-08-21T17:00:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a7874bc-b4c6-4c41-a868-4b8c33948e8b"
		},
		{
			"deviceTime": "2014-08-21T17:05:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1172acba-7b00-423d-af4a-17061c8cb246"
		},
		{
			"deviceTime": "2014-08-21T17:10:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a195f6db-5fac-4cbe-83c4-350183fb8bc8"
		},
		{
			"deviceTime": "2014-08-21T17:13:01",
			"value": 2.3,
			"source": "demo",
			"recommended": 2.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "786db643-a766-4887-bb46-f8524d6ead29"
		},
		{
			"deviceTime": "2014-08-21T17:15:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef38412e-6294-4bc9-bf4a-a445044be3f0"
		},
		{
			"deviceTime": "2014-08-21T17:20:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e32e0647-0c8b-4f9b-acee-bc793b717321"
		},
		{
			"deviceTime": "2014-08-21T17:25:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d4a2607-9e53-4975-9730-01081861d533"
		},
		{
			"deviceTime": "2014-08-21T17:30:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5463960d-94b0-41cd-b5cc-7258d12ab149"
		},
		{
			"deviceTime": "2014-08-21T17:35:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad3fab64-9831-4dda-b1f1-7fe351bdbb16"
		},
		{
			"deviceTime": "2014-08-21T17:40:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef73a0e5-a5c1-49d1-8716-97bb97280174"
		},
		{
			"deviceTime": "2014-08-21T17:45:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ee5d5c2-dd64-4ff3-a76a-94e6eec8de2b"
		},
		{
			"deviceTime": "2014-08-21T17:50:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ade7b89-aba1-4f16-9f94-586c63ed4373"
		},
		{
			"deviceTime": "2014-08-21T17:55:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f84383e-05c6-4d59-821e-6250c3cffb02"
		},
		{
			"deviceTime": "2014-08-21T18:00:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62ce9739-6268-4b97-bf81-59fa91174500"
		},
		{
			"deviceTime": "2014-08-21T18:05:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e40053e9-1320-41a4-b2dc-cd5bece5c42e"
		},
		{
			"deviceTime": "2014-08-21T18:10:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "463813b2-b865-408c-b30a-890ff21ede88"
		},
		{
			"deviceTime": "2014-08-21T18:15:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13adbc60-d64e-4440-bb63-d00f968db01d"
		},
		{
			"deviceTime": "2014-08-21T18:20:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "907fc143-3258-492a-aa7d-c22d64081329"
		},
		{
			"deviceTime": "2014-08-21T18:25:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f50efd26-7603-4c02-83e6-923a6af032d6"
		},
		{
			"deviceTime": "2014-08-21T18:30:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bb61ae0-52d4-4f6d-b967-ff00b2224649"
		},
		{
			"deviceTime": "2014-08-21T18:35:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8d8709b-2554-4e70-9753-943e2f43348f"
		},
		{
			"deviceTime": "2014-08-21T18:40:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7c11603-da06-4259-beeb-15dedc3c82e2"
		},
		{
			"deviceTime": "2014-08-21T18:45:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50a24104-7869-489e-af9b-ec415aa8aa75"
		},
		{
			"deviceTime": "2014-08-21T18:50:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89ecb014-3386-4b4f-85f6-5ce7a588fbdb"
		},
		{
			"deviceTime": "2014-08-21T18:55:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2ebaf72-5972-4529-aae1-53e13bc96d68"
		},
		{
			"deviceTime": "2014-08-21T19:00:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d211aff4-3781-4699-8810-e44acbf6bd18"
		},
		{
			"deviceTime": "2014-08-21T19:05:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37ebd096-3f72-419d-a50d-02ef4585eeaa"
		},
		{
			"end": "2014-08-21T23:09:01",
			"start": "2014-08-21T19:09:01",
			"percent": 1.45,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "bf290c40-8213-46d5-91ff-386e05b8bf59"
		},
		{
			"deviceTime": "2014-08-21T19:10:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dadb7941-be46-4617-aeb0-9d5c0c799048"
		},
		{
			"deviceTime": "2014-08-21T19:15:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45bbf031-9557-48c2-9eb9-df55f14c5235"
		},
		{
			"deviceTime": "2014-08-21T19:20:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "147eabb4-ad06-44be-b94a-831427e64fb7"
		},
		{
			"deviceTime": "2014-08-21T19:25:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "134b48d6-8170-4b3b-9ac6-dbf9cc95efd4"
		},
		{
			"deviceTime": "2014-08-21T19:30:22",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8a0f779-54f7-4f74-9c88-1b60eeff19d7"
		},
		{
			"deviceTime": "2014-08-21T19:35:22",
			"value": 40,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d8c59b1-3de5-4981-b1b3-ded6e7934024"
		},
		{
			"deviceTime": "2014-08-21T19:40:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77667edc-1705-4ae8-a567-b72f97a4aba3"
		},
		{
			"deviceTime": "2014-08-21T19:45:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7029dd3e-aafa-43af-9818-17bdaf512685"
		},
		{
			"deviceTime": "2014-08-21T19:50:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c8cb478-76ff-4369-9229-4794c30c492d"
		},
		{
			"deviceTime": "2014-08-21T19:55:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c18fab25-6bfd-4405-8a1a-a791d699ae44"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-22T00:00:00",
			"start": "2014-08-21T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "0f347349-f614-4a30-9a27-b3e06d1dd024"
		},
		{
			"deviceTime": "2014-08-21T20:00:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3198c6f5-c9a3-4946-961d-95ea1476fedc"
		},
		{
			"deviceTime": "2014-08-21T20:05:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0ec4df1-ea16-4015-94ca-f95d4c36e945"
		},
		{
			"deviceTime": "2014-08-21T20:10:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc02ded0-4c87-4243-a2f6-5809ac4eaeb1"
		},
		{
			"deviceTime": "2014-08-21T20:15:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "786d095d-e3c1-4b27-af1f-d89044401130"
		},
		{
			"deviceTime": "2014-08-21T20:20:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd30756d-f8ed-4659-a008-84d89d935640"
		},
		{
			"deviceTime": "2014-08-21T20:25:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93015f6d-d087-49cd-8eb2-8843ee7d6188"
		},
		{
			"deviceTime": "2014-08-21T20:30:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40dad409-bc6f-4ff4-84e1-4c89ee6a7ff8"
		},
		{
			"deviceTime": "2014-08-21T20:35:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "851ae669-7870-4be5-967f-2cad95cb2cc8"
		},
		{
			"deviceTime": "2014-08-21T20:40:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "833cb0dc-218e-4fa2-a429-d45b4fa12360"
		},
		{
			"deviceTime": "2014-08-21T20:45:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0e5766d-e0bd-4957-821a-7f7ed6461bd6"
		},
		{
			"deviceTime": "2014-08-21T20:50:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdb36d23-ac56-44cb-9a85-f58cc6cda110"
		},
		{
			"deviceTime": "2014-08-21T20:55:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5348cef-d25e-4d48-8f47-a5943176f23c"
		},
		{
			"deviceTime": "2014-08-21T21:00:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "358f55ce-3a6e-4b4c-89e8-b2a30cc2f2bc"
		},
		{
			"deviceTime": "2014-08-21T21:05:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d11f8608-6722-43e9-87dc-a477a322795d"
		},
		{
			"deviceTime": "2014-08-21T21:10:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f5fae9b-e617-44af-ae57-e256ec40ee3d"
		},
		{
			"deviceTime": "2014-08-21T21:15:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35c8d7fb-c900-4a9b-bac0-2cbc20eaf373"
		},
		{
			"deviceTime": "2014-08-21T21:20:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c6794ab-b52f-4878-9b03-8e1c0ba30fb5"
		},
		{
			"deviceTime": "2014-08-21T21:25:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53d16f03-1841-42c5-a7ff-2ae1f5883e03"
		},
		{
			"deviceTime": "2014-08-21T21:29:45",
			"value": 31,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3497da93-500d-457c-a7dd-d391b50bf8de"
		},
		{
			"deviceTime": "2014-08-21T21:29:45",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fb8406ba-81e1-47ec-9d7a-6a26c1c403f6"
		},
		{
			"deviceTime": "2014-08-21T21:29:45",
			"id": "fb8406ba-81e1-47ec-9d7a-6a26c1c403f6",
			"source": "demo",
			"joinKey": "3ba83d00-68b8-4a89-a156-fa418fd9a533",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 46
			}
		},
		{
			"deviceTime": "2014-08-21T21:29:45",
			"programmed": 3.1,
			"joinKey": "3ba83d00-68b8-4a89-a156-fa418fd9a533",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "daa040d7-5374-4825-bf21-8f63355cecab"
		},
		{
			"deviceTime": "2014-08-21T21:30:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e49bdad7-b70f-4624-9cc4-f6cb264bd11e"
		},
		{
			"deviceTime": "2014-08-21T21:35:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be450b2c-148c-4655-89a5-6831ff142a71"
		},
		{
			"deviceTime": "2014-08-21T21:40:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1ccb305-4d63-4cae-9249-2ce94a61563a"
		},
		{
			"deviceTime": "2014-08-21T21:45:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "332823fc-a305-4fba-8449-11d590eb1e40"
		},
		{
			"deviceTime": "2014-08-21T21:50:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43bad2c2-657c-4843-a8c3-679d1be36ce5"
		},
		{
			"deviceTime": "2014-08-21T21:55:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a84dcd75-625c-4326-81f0-dc642fb934ed"
		},
		{
			"deviceTime": "2014-08-21T22:00:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92c128f6-de7e-48f1-89c4-f0256ea51cb3"
		},
		{
			"deviceTime": "2014-08-21T22:05:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f48aa298-5de1-441d-b0d6-29d14cebefe3"
		},
		{
			"deviceTime": "2014-08-21T22:10:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aadc769c-28b4-4aa0-b375-bb843dd7ef13"
		},
		{
			"deviceTime": "2014-08-21T22:15:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b005014-955e-465e-ae56-059e51fe2b6d"
		},
		{
			"deviceTime": "2014-08-21T22:20:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ced2dff-0c81-43e1-95a5-dc7494dde64f"
		},
		{
			"deviceTime": "2014-08-21T22:25:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "337f10a0-4650-4724-b41a-58b19aa6b07e"
		},
		{
			"deviceTime": "2014-08-21T22:30:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5d324ad-8c6d-49ff-bb2c-54eb6fff1cb4"
		},
		{
			"deviceTime": "2014-08-21T22:35:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7beaaf0-1bfd-4e4f-9093-de6a2d94a492"
		},
		{
			"deviceTime": "2014-08-21T22:40:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f12e3be8-0f2c-4ef9-a966-b8217ea6925c"
		},
		{
			"deviceTime": "2014-08-21T22:45:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04c4e111-2954-46b1-aa07-e2e2eb5e1641"
		},
		{
			"deviceTime": "2014-08-21T22:50:22",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c245370-b66c-43fa-9ffb-6c897a7b945b"
		},
		{
			"deviceTime": "2014-08-21T22:55:22",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b87176dc-03a3-4158-93af-b6fe6e2cf304"
		},
		{
			"deviceTime": "2014-08-21T23:00:22",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb6e9983-7297-4078-887f-8a2f61906532"
		},
		{
			"deviceTime": "2014-08-21T23:05:22",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bebfdcb-da41-4165-bb4e-e59e65fb262c"
		},
		{
			"deviceTime": "2014-08-21T23:10:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0814a66-07e8-47be-b39d-596a80ce7bc1"
		},
		{
			"deviceTime": "2014-08-21T23:15:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6daf013-f8f9-4035-8d4a-ef20bcf41151"
		},
		{
			"deviceTime": "2014-08-21T23:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd713731-fa37-4989-957d-2a8ed6daa889"
		},
		{
			"deviceTime": "2014-08-21T23:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0facaaa5-56bf-46b2-a96d-cf0814afd321"
		},
		{
			"deviceTime": "2014-08-21T23:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "922b58de-3423-4185-8167-088b63884362"
		},
		{
			"deviceTime": "2014-08-21T23:35:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b94f36d5-11c6-4b88-a581-b8dac2cc17a3"
		},
		{
			"deviceTime": "2014-08-21T23:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eccde3c9-b5c9-4200-ae8f-df3ba4d60a42"
		},
		{
			"deviceTime": "2014-08-21T23:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94a3e8ae-2b46-4cf8-bee4-d6f136766bc9"
		},
		{
			"deviceTime": "2014-08-21T23:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39071658-52a7-4ee6-b8b4-e2f8315ccb79"
		},
		{
			"deviceTime": "2014-08-21T23:55:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "270a9771-7312-4a6b-9480-38754bd3e4f7"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-22T02:00:00",
			"start": "2014-08-22T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "3be87b83-dd58-4928-bd53-e4d8c96af828"
		},
		{
			"deviceTime": "2014-08-22T00:00:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05c8cd99-3633-47ce-ac70-54619d1cc578"
		},
		{
			"deviceTime": "2014-08-22T00:05:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "182e6e3f-3179-4b0b-94c3-96f8ac2e309e"
		},
		{
			"deviceTime": "2014-08-22T00:10:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5062293d-9ffb-4464-abd3-64eee6f273ed"
		},
		{
			"deviceTime": "2014-08-22T00:15:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "631390c2-59b6-47ed-9ea3-4545394684be"
		},
		{
			"deviceTime": "2014-08-22T00:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75d04802-ae0e-4c08-a5ce-a8635f15f8f7"
		},
		{
			"deviceTime": "2014-08-22T00:25:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "578f38a3-de52-4ec6-ab3c-8935acc7494d"
		},
		{
			"deviceTime": "2014-08-22T00:30:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c418b312-e8f8-437e-8128-6b17a63b8d03"
		},
		{
			"deviceTime": "2014-08-22T00:35:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2920e5b7-edbc-49f5-b835-aaf1423f6d72"
		},
		{
			"deviceTime": "2014-08-22T00:40:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a90481b-45dc-4798-96cb-95d28e9ad228"
		},
		{
			"deviceTime": "2014-08-22T00:45:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "486f2e4f-f054-4991-96c2-3f2756df576c"
		},
		{
			"deviceTime": "2014-08-22T00:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bccd47b9-0859-4c51-b269-eb00c6c4242b"
		},
		{
			"deviceTime": "2014-08-22T00:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36ee1ea9-0e78-41b8-996f-2652ebd97df8"
		},
		{
			"deviceTime": "2014-08-22T01:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "501c738a-e6d9-4410-af6b-bd900d8b4aa4"
		},
		{
			"deviceTime": "2014-08-22T01:05:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2ec6773-8130-4a16-aa45-c30ec915f397"
		},
		{
			"deviceTime": "2014-08-22T01:10:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "409ae159-adc2-476c-a2c3-4e1697a7d799"
		},
		{
			"deviceTime": "2014-08-22T01:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf42e19d-420d-46e3-9c7c-07163ca76c54"
		},
		{
			"deviceTime": "2014-08-22T01:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e11edeb8-665b-4bb3-9620-678013e80de8"
		},
		{
			"deviceTime": "2014-08-22T01:25:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "798888fd-35c0-4acc-9b64-91066f2369f4"
		},
		{
			"deviceTime": "2014-08-22T01:30:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ada02e63-8ba4-45a8-8646-cfa2ffd8930c"
		},
		{
			"deviceTime": "2014-08-22T01:35:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3519b45b-a058-4e2c-9540-093cd5d635e9"
		},
		{
			"deviceTime": "2014-08-22T01:40:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89eed3a4-4fd5-4692-9a2d-55897eb60253"
		},
		{
			"deviceTime": "2014-08-22T01:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04b64bb0-4dbd-45c7-a054-dd93e3a5a414"
		},
		{
			"deviceTime": "2014-08-22T01:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12f272a1-a549-482f-a705-2f32f91b9867"
		},
		{
			"deviceTime": "2014-08-22T01:55:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0a66b33-c56c-48f4-9f79-b0b3f967e104"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-22T04:00:00",
			"start": "2014-08-22T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "adec05bd-09fc-47c5-b032-ea79a9408e6d"
		},
		{
			"deviceTime": "2014-08-22T02:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69157e9a-faed-4392-9e62-0ed7fa0b2091"
		},
		{
			"deviceTime": "2014-08-22T02:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6808ac15-0145-4934-85d9-ab88acf63e3a"
		},
		{
			"deviceTime": "2014-08-22T02:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3919832f-f747-48bc-a69b-83586655514e"
		},
		{
			"deviceTime": "2014-08-22T02:15:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26580d61-837a-4c84-a336-d3ec53acc099"
		},
		{
			"deviceTime": "2014-08-22T02:20:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f90b549-d877-40c9-9cf4-b3f8b2325aa6"
		},
		{
			"deviceTime": "2014-08-22T02:25:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "539cc67d-e7b2-4586-a0af-c4c6a78f03b3"
		},
		{
			"deviceTime": "2014-08-22T02:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b149dc7-b211-48b0-85ac-088133dde1c3"
		},
		{
			"deviceTime": "2014-08-22T02:35:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e995790e-e000-4bb4-832a-17a0bea049f8"
		},
		{
			"deviceTime": "2014-08-22T02:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "216f3779-54af-4f9d-96a5-f7afb9419e77"
		},
		{
			"deviceTime": "2014-08-22T02:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20473db3-e122-422a-ac26-31be98e195b7"
		},
		{
			"deviceTime": "2014-08-22T02:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e60909e-5278-4699-a925-218a19b31d44"
		},
		{
			"deviceTime": "2014-08-22T03:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "632d0a01-4212-4ace-8497-f2f19a7d080a"
		},
		{
			"deviceTime": "2014-08-22T03:05:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da267b1d-a81e-4bdd-b019-451ad72e582d"
		},
		{
			"deviceTime": "2014-08-22T03:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "612be44c-1168-4bb8-b166-497f690b9090"
		},
		{
			"deviceTime": "2014-08-22T03:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7610313-ae03-4899-819f-65e1826b8079"
		},
		{
			"deviceTime": "2014-08-22T03:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c947c85-6f6c-4bb8-98ae-8f9eb8ce3b22"
		},
		{
			"deviceTime": "2014-08-22T03:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ae4910b-5fdb-4a77-a6f9-7421d975eeed"
		},
		{
			"deviceTime": "2014-08-22T03:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba5abb53-85ee-4053-9941-7c05edfe9d45"
		},
		{
			"deviceTime": "2014-08-22T03:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e18c372f-ec89-4a10-9c9d-6b6dc3279c43"
		},
		{
			"deviceTime": "2014-08-22T03:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c56198b5-a01c-4794-8e95-507196bf5d14"
		},
		{
			"deviceTime": "2014-08-22T03:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7379f73-cc18-4fd8-ad71-dcf992188104"
		},
		{
			"deviceTime": "2014-08-22T03:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e72ee4b-f6d7-4f46-8892-756836f7ba2f"
		},
		{
			"deviceTime": "2014-08-22T03:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9ea35f7-6991-461b-8637-9f09be9545c0"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-22T05:00:00",
			"start": "2014-08-22T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "b24eca58-fd55-4174-9216-06fe199f001d"
		},
		{
			"deviceTime": "2014-08-22T04:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b10137a1-44b1-4f47-b581-47fe39c071cf"
		},
		{
			"deviceTime": "2014-08-22T04:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d40a293-038e-41bc-ab2c-f13dc4196b80"
		},
		{
			"deviceTime": "2014-08-22T04:10:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d0f3088-1e7e-43d7-9511-97a750f87219"
		},
		{
			"deviceTime": "2014-08-22T04:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90c10c49-247e-495f-bd77-2fdcc45555f9"
		},
		{
			"deviceTime": "2014-08-22T04:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12fc186c-e035-4f6c-b8ea-b21d144f4ab2"
		},
		{
			"deviceTime": "2014-08-22T04:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77762420-b759-4b2b-9693-06a12e2178be"
		},
		{
			"deviceTime": "2014-08-22T04:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55ba4ca1-1a6c-4465-ac58-9d0ec3e2620b"
		},
		{
			"deviceTime": "2014-08-22T04:35:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25446c89-d1d4-4876-bac1-262cb78fc444"
		},
		{
			"deviceTime": "2014-08-22T04:40:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e4defa8-6ebc-4c97-bdae-45d360abdc2e"
		},
		{
			"deviceTime": "2014-08-22T04:45:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab49dd2d-629a-4878-bdd7-88224985bc56"
		},
		{
			"deviceTime": "2014-08-22T04:50:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c897d099-63c3-4a1a-8a22-6c13156067c0"
		},
		{
			"deviceTime": "2014-08-22T04:55:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ab5cb98-136a-4eb3-ba80-02886136b556"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-22T06:00:00",
			"start": "2014-08-22T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "c04b1045-6f74-4e39-b691-83232697d654"
		},
		{
			"deviceTime": "2014-08-22T05:00:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee06da0d-80a6-4e7e-9693-c00484038550"
		},
		{
			"deviceTime": "2014-08-22T05:05:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c1efb13-117f-4794-8609-8f08ce1b4602"
		},
		{
			"deviceTime": "2014-08-22T05:10:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c2929c1-8127-41b6-a798-549f38b50dd4"
		},
		{
			"deviceTime": "2014-08-22T05:13:01",
			"value": 0.3,
			"source": "demo",
			"recommended": 0.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "fe6058c6-17d1-43ed-aa2d-cad8c68e99e6"
		},
		{
			"deviceTime": "2014-08-22T05:15:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "018ab946-ca9d-4779-9fba-355811481557"
		},
		{
			"deviceTime": "2014-08-22T05:20:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6670087-a812-46a9-ac61-84aedd28f77a"
		},
		{
			"deviceTime": "2014-08-22T05:25:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ffc26a1-f63d-40cc-bb22-abb1fba7853c"
		},
		{
			"deviceTime": "2014-08-22T05:30:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a9550b8-0913-46d3-8bdc-6030a496aefb"
		},
		{
			"deviceTime": "2014-08-22T05:35:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "739fee59-5e0d-449e-a8d8-33dc849d3daa"
		},
		{
			"deviceTime": "2014-08-22T05:40:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bc6370c-2950-4f02-9026-12bb36914f60"
		},
		{
			"deviceTime": "2014-08-22T05:45:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ca10e7b-c196-45dc-8c26-a33653a9dc7c"
		},
		{
			"deviceTime": "2014-08-22T05:50:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd7cace6-f2e6-4dc3-b006-ee7ce7f10199"
		},
		{
			"deviceTime": "2014-08-22T05:55:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4d97958-2ad1-4f76-8662-f247cbcdf437"
		},
		{
			"delivered": 1,
			"end": "2014-08-22T09:00:00",
			"start": "2014-08-22T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "22a738aa-4be1-4922-9a9a-0ef7f7273695"
		},
		{
			"deviceTime": "2014-08-22T06:00:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d05b2c27-152c-471c-8946-44b2596b4790"
		},
		{
			"deviceTime": "2014-08-22T06:05:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b448381c-4143-43c4-b05c-2dceaeacf016"
		},
		{
			"deviceTime": "2014-08-22T06:10:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a85fb659-67c7-40da-9086-6b3cc4e1bc0f"
		},
		{
			"deviceTime": "2014-08-22T06:15:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2282fd5f-f4ed-40ae-a22c-c80fa267d3ee"
		},
		{
			"deviceTime": "2014-08-22T06:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e236e69-4833-4187-a1fd-4de9bdf6b8c2"
		},
		{
			"deviceTime": "2014-08-22T06:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75af4b5f-c307-44f9-af7f-562f6aad2fc9"
		},
		{
			"deviceTime": "2014-08-22T06:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05d51f0b-e1fe-4293-84ca-b0e8ca9ccd78"
		},
		{
			"deviceTime": "2014-08-22T06:35:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bfa48ed4-edf1-438e-bc2f-35e83c08662e"
		},
		{
			"deviceTime": "2014-08-22T06:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40270dce-848f-49a2-80cf-61f263a17be0"
		},
		{
			"deviceTime": "2014-08-22T06:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0e9351a-28c2-42fe-a81d-bbe8019c1242"
		},
		{
			"deviceTime": "2014-08-22T06:50:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd049c1b-9fc8-4a2c-8516-32ec084379f4"
		},
		{
			"deviceTime": "2014-08-22T06:52:44",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e2b6c4ea-08eb-414d-9e14-9a96facd7cf3"
		},
		{
			"deviceTime": "2014-08-22T06:55:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ecece24-ecb8-46a1-8420-8b5a59bc7e46"
		},
		{
			"deviceTime": "2014-08-22T07:00:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0b96603-066e-460a-8083-ec58286fd5c5"
		},
		{
			"deviceTime": "2014-08-22T07:05:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c66cbef2-3754-42d3-ad4a-c5ba122daed6"
		},
		{
			"deviceTime": "2014-08-22T07:10:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df9c9cf5-375f-4bdf-b2e6-a0232fb720f5"
		},
		{
			"deviceTime": "2014-08-22T07:15:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a5f2774-ed26-4655-826c-0d37a6cc5e86"
		},
		{
			"deviceTime": "2014-08-22T07:20:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2c44eda-6858-4444-a3b7-aec12a84e50f"
		},
		{
			"deviceTime": "2014-08-22T07:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ebd14eb-b6b7-450f-844b-d88d60f80f20"
		},
		{
			"deviceTime": "2014-08-22T07:30:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e8ebcb7-1526-4499-87c7-c8e15f86251a"
		},
		{
			"deviceTime": "2014-08-22T07:35:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcd376d8-63b7-41f3-b912-cfdf4d2910bd"
		},
		{
			"deviceTime": "2014-08-22T07:40:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e53dce2-265f-4feb-998b-c714504db679"
		},
		{
			"deviceTime": "2014-08-22T07:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2f3590b-dc11-44af-9d8d-cbb469f4e5ff"
		},
		{
			"deviceTime": "2014-08-22T07:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b1ee3a5-a851-473f-8a09-3777355a1ca6"
		},
		{
			"deviceTime": "2014-08-22T07:55:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7f2c90a-c903-4dbf-8840-0d46b7d23534"
		},
		{
			"deviceTime": "2014-08-22T08:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "161f0a4c-e5b3-46b8-afaf-e542dcabab55"
		},
		{
			"deviceTime": "2014-08-22T08:05:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a792df33-a497-4f2b-ba58-12c9c7b3af23"
		},
		{
			"deviceTime": "2014-08-22T08:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bc1f5eb-748d-48a5-8f37-5a74d8b1f730"
		},
		{
			"deviceTime": "2014-08-22T08:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc71b629-c37f-4376-a446-5000ef008f4b"
		},
		{
			"deviceTime": "2014-08-22T08:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0aa90a07-1de4-4919-a42c-67e39cbc5e32"
		},
		{
			"deviceTime": "2014-08-22T08:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26b3990e-afa8-4acb-ab05-2ece1f638dad"
		},
		{
			"deviceTime": "2014-08-22T08:30:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd5ff98f-9287-4142-8c11-f457d2001ad3"
		},
		{
			"deviceTime": "2014-08-22T08:35:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5e6ef61-b49c-44eb-b74a-a939a09171e5"
		},
		{
			"deviceTime": "2014-08-22T08:40:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "876932c5-1a3b-4461-8001-bdcea380c731"
		},
		{
			"deviceTime": "2014-08-22T08:40:52",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "03b219a5-e50c-47da-8941-2821dba6266f"
		},
		{
			"deviceTime": "2014-08-22T08:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18eaadda-11da-462a-a2d6-12121ce369d5"
		},
		{
			"deviceTime": "2014-08-22T08:50:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9e0021b-4375-4723-9dde-39c13bac5677"
		},
		{
			"messageText": "Magna corned beef tail incididunt, elit capicola meatball velit dolor veniam enim ex pig laboris pork. Frankfurter ham venison laborum elit aliquip eu ad sint. Ut sunt sirloin deserunt duis irure, corned beef dolor anim.",
			"parentMessage": "",
			"utcTime": "2014-08-22T08:50:33Z",
			"type": "message",
			"id": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc"
		},
		{
			"messageText": "Beef ribs bacon jerky meatball non est flank t-bone rump id dolore deserunt. In sirloin duis, do tri-tip id salami aute occaecat dolor in. Sunt eu swine, hamburger rump ex boudin pastrami aute leberkas culpa shankle ut.",
			"parentMessage": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc",
			"utcTime": "2014-08-22T08:52:33Z",
			"type": "message",
			"id": "f565fa3d-1379-4512-83fb-18ba5a383e41"
		},
		{
			"deviceTime": "2014-08-22T08:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e9b132a-5b7b-4707-88de-e2eeafdd00c1"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-22T15:00:00",
			"start": "2014-08-22T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "b2409ac9-899a-4122-bf98-87a68705e877"
		},
		{
			"deviceTime": "2014-08-22T09:00:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09c7c86b-283b-4628-b824-591046f9b216"
		},
		{
			"deviceTime": "2014-08-22T09:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f4f9226-bac0-4226-884e-e34f44066631"
		},
		{
			"messageText": "Cillum sausage jerky dolor laborum. Ullamco id turkey strip steak t-bone deserunt flank.",
			"parentMessage": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc",
			"utcTime": "2014-08-22T09:08:33Z",
			"type": "message",
			"id": "dc2089e1-4f82-4b08-b01b-edb03c83453f"
		},
		{
			"deviceTime": "2014-08-22T09:10:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d24cd33-259d-4cb6-aefd-69490badb969"
		},
		{
			"deviceTime": "2014-08-22T09:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18b270a1-b443-4360-858a-5632b9408a24"
		},
		{
			"messageText": "Jerky corned beef pork belly doner, filet mignon boudin sint nulla. Veniam occaecat duis adipisicing pork belly pig proident est do landjaeger sunt deserunt consectetur tenderloin short loin. Ball tip ham hock proident kielbasa porchetta in ex cow.",
			"parentMessage": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc",
			"utcTime": "2014-08-22T09:15:33Z",
			"type": "message",
			"id": "2ce7f742-fbb6-41ea-9f07-09045749dc82"
		},
		{
			"deviceTime": "2014-08-22T09:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "766123ac-5f2b-4302-8d3b-b0b901d3f68b"
		},
		{
			"messageText": "Do capicola laboris dolore, sirloin strip steak shoulder in et ullamco.",
			"parentMessage": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc",
			"utcTime": "2014-08-22T09:23:33Z",
			"type": "message",
			"id": "6859a758-9708-457b-bd6f-1f1cde570315"
		},
		{
			"deviceTime": "2014-08-22T09:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0be3c864-bf53-4fb2-8d8f-043c55a830dc"
		},
		{
			"deviceTime": "2014-08-22T09:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5efc6fd-2564-4c90-9ab1-59bd8def7783"
		},
		{
			"messageText": "In incididunt prosciutto, tongue anim salami non nisi frankfurter pork chop. Bresaola venison in labore, proident pork belly strip steak ut porchetta pork. Corned beef turducken pork chop shank, swine pork chicken.",
			"parentMessage": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc",
			"utcTime": "2014-08-22T09:30:33Z",
			"type": "message",
			"id": "547a3617-61af-43a8-bcb6-916cec249fc5"
		},
		{
			"deviceTime": "2014-08-22T09:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31406e8d-9ee5-48b6-bd3e-a667cf5e9fe1"
		},
		{
			"messageText": "Incididunt spare ribs rump ham hock laborum pig prosciutto ea, short ribs anim.",
			"parentMessage": "80e37e6e-39e3-4efc-b04f-3c85a5d2e3fc",
			"utcTime": "2014-08-22T09:35:33Z",
			"type": "message",
			"id": "e3e9fb29-c06f-4094-b9c9-cd5e837efe15"
		},
		{
			"deviceTime": "2014-08-22T09:40:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d931ce7-59d4-4ce1-b03d-1bc688fa383a"
		},
		{
			"deviceTime": "2014-08-22T09:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8687661-c3d2-4717-990f-9081693c292e"
		},
		{
			"deviceTime": "2014-08-22T09:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa719587-f284-4dc2-b3cd-bf1a0689a884"
		},
		{
			"deviceTime": "2014-08-22T09:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9ea5a9a-e84a-4e8b-8165-339beab3203f"
		},
		{
			"deviceTime": "2014-08-22T10:00:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc44d020-2f99-47ce-ac94-cb093ca39ed7"
		},
		{
			"deviceTime": "2014-08-22T10:05:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "761941fc-2962-429c-9d0f-1af36857f7e9"
		},
		{
			"deviceTime": "2014-08-22T10:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8e008f2-138c-4333-b6af-50a6ae5d2460"
		},
		{
			"deviceTime": "2014-08-22T10:15:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2395fa40-6cd4-46ba-ac5a-e8188b25bb5b"
		},
		{
			"deviceTime": "2014-08-22T10:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b262502a-4e46-4d36-aa58-854059b35009"
		},
		{
			"deviceTime": "2014-08-22T10:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77a98a6c-3819-49e3-94a8-4c1547cb56d4"
		},
		{
			"deviceTime": "2014-08-22T10:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39cd7db0-e6cf-458b-bf25-a55dc7fef58d"
		},
		{
			"deviceTime": "2014-08-22T10:35:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39bb8602-3f29-4e98-9ca0-89b4d31d0b5f"
		},
		{
			"end": "2014-08-22T12:06:01",
			"start": "2014-08-22T10:36:01",
			"percent": 1.15,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "c84c2549-adc5-4f31-b55d-9d70d8d52c57"
		},
		{
			"deviceTime": "2014-08-22T10:39:03",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "37459b9b-d5fc-4af7-8fa6-8180af0fef23"
		},
		{
			"deviceTime": "2014-08-22T10:39:03",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "5d9e43b5-1167-4d9b-8b03-ada62b7ce3fb"
		},
		{
			"deviceTime": "2014-08-22T10:39:03",
			"id": "5d9e43b5-1167-4d9b-8b03-ada62b7ce3fb",
			"source": "demo",
			"joinKey": "6f0bb82a-910a-4bcd-8764-0f3175e2e293",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 62
			}
		},
		{
			"deviceTime": "2014-08-22T10:39:03",
			"suspendedAt": "2014-08-22T10:46:33",
			"programmed": 4.1,
			"joinKey": "6f0bb82a-910a-4bcd-8764-0f3175e2e293",
			"value": 4.1,
			"source": "demo",
			"recommended": 4.1,
			"extendedDelivery": 3.7,
			"initialDelivery": 0.4,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "af41c54e-8ae9-40bd-a9e6-5fc7397f518a",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-22T10:40:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42697a70-8079-40ba-bb4a-28b6035907da"
		},
		{
			"deviceTime": "2014-08-22T10:45:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e514b9f1-e719-42c5-8246-97f7fec2ab6e"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-22T10:46:33",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "49be3037-1ace-40cf-b039-25a0e9611488"
		},
		{
			"deviceTime": "2014-08-22T10:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3c03b91-0ced-4672-aa1e-89614c081de5"
		},
		{
			"deviceTime": "2014-08-22T10:55:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc9223d1-8cd3-448f-b598-0eee72079626"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-22T10:56:03",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "3929c5a4-7385-4d54-938b-95b0b07d484c",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-22T10:46:33",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "49be3037-1ace-40cf-b039-25a0e9611488"
			}
		},
		{
			"deviceTime": "2014-08-22T11:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74bb9414-2cfe-45e2-a445-ae166479e026"
		},
		{
			"deviceTime": "2014-08-22T11:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "118a2cd5-8fe9-4d81-b135-ca77167e1643"
		},
		{
			"deviceTime": "2014-08-22T11:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7f965e5-2d12-44d6-9195-8ff2106e5783"
		},
		{
			"deviceTime": "2014-08-22T11:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "512d2920-b225-4e92-aee1-fee09a55a296"
		},
		{
			"deviceTime": "2014-08-22T11:18:47",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d8d4c60d-3230-4af3-8130-23e06f56cd15"
		},
		{
			"deviceTime": "2014-08-22T11:18:47",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "f483206c-9881-48df-9399-cbdab9cd90df"
		},
		{
			"deviceTime": "2014-08-22T11:18:47",
			"id": "f483206c-9881-48df-9399-cbdab9cd90df",
			"source": "demo",
			"joinKey": "29377227-cdac-4fc4-a95f-2800467ad16e",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 69
			}
		},
		{
			"deviceTime": "2014-08-22T11:18:47",
			"programmed": 5.3,
			"joinKey": "29377227-cdac-4fc4-a95f-2800467ad16e",
			"value": 5.3,
			"source": "demo",
			"recommended": 4.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1bfa9825-5c47-443f-ad9e-d6c1e20a51a5"
		},
		{
			"deviceTime": "2014-08-22T11:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23f39060-0546-401f-912d-88ed878bedcd"
		},
		{
			"deviceTime": "2014-08-22T11:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3af7968-595e-463c-b3c6-75ec1ffb2133"
		},
		{
			"deviceTime": "2014-08-22T11:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2eda8cbb-e3b4-47bf-8b1f-f214337753a0"
		},
		{
			"deviceTime": "2014-08-22T11:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "baf93384-22ff-4d47-a180-2da05850c5c7"
		},
		{
			"deviceTime": "2014-08-22T11:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cce80d6-7acf-4a9c-9efe-a9b584c47b6e"
		},
		{
			"deviceTime": "2014-08-22T11:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1fe98fa5-ae05-49fa-a2d5-24cf1da7951c"
		},
		{
			"deviceTime": "2014-08-22T11:50:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2be3d6ec-a0dc-414b-aeb4-1acb166373b5"
		},
		{
			"deviceTime": "2014-08-22T11:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "132db74e-08af-4f67-9dfd-f2388ddc41bf"
		},
		{
			"deviceTime": "2014-08-22T12:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aef9dd70-ddeb-4a8e-a6e0-8ad645ef5deb"
		},
		{
			"deviceTime": "2014-08-22T12:05:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7db33cbd-b569-46f2-afcf-a9ff0797ac8e"
		},
		{
			"deviceTime": "2014-08-22T12:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5126cd0b-fefc-4642-8c9e-a3a99cddf278"
		},
		{
			"deviceTime": "2014-08-22T12:13:17",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "89ffd5c2-69d5-430c-ab18-6c46a26acc50"
		},
		{
			"deviceTime": "2014-08-22T12:13:17",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "6484d722-7c3e-48da-abb4-0ad27143cefb"
		},
		{
			"deviceTime": "2014-08-22T12:13:17",
			"id": "6484d722-7c3e-48da-abb4-0ad27143cefb",
			"source": "demo",
			"joinKey": "a4b35047-f77f-4e9f-9ef7-298f4333bbd7",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 70
			}
		},
		{
			"deviceTime": "2014-08-22T12:13:17",
			"programmed": 4.7,
			"joinKey": "a4b35047-f77f-4e9f-9ef7-298f4333bbd7",
			"value": 4.7,
			"source": "demo",
			"recommended": 4.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "db5ff362-c526-48d3-9dea-0a6e5b48a8c8"
		},
		{
			"deviceTime": "2014-08-22T12:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0f08613-566b-46ac-bc4d-ef1eaf07c294"
		},
		{
			"deviceTime": "2014-08-22T12:20:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "892b22e1-2749-4d7c-8ba0-7a4577d76017"
		},
		{
			"deviceTime": "2014-08-22T12:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bf12730-2e2e-46e9-9dc6-968d9c65a7da"
		},
		{
			"deviceTime": "2014-08-22T12:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1063a47-6ea4-4fce-bf74-f9a14b11ec46"
		},
		{
			"deviceTime": "2014-08-22T12:35:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac2d0de6-184d-43dc-aaf8-fe1df5617bd4"
		},
		{
			"deviceTime": "2014-08-22T12:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "922db295-a4e9-45f0-aaf1-32e01d825069"
		},
		{
			"deviceTime": "2014-08-22T12:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6176029-75c1-4db8-b63f-c60cc795ebfa"
		},
		{
			"deviceTime": "2014-08-22T12:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "861548a1-6c59-4e42-8c35-a7cb18949201"
		},
		{
			"deviceTime": "2014-08-22T12:55:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5acb9e15-3895-4041-b9e4-727eb22dd9b4"
		},
		{
			"deviceTime": "2014-08-22T13:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db5e0059-45b4-403b-b038-45d3ac9102ca"
		},
		{
			"deviceTime": "2014-08-22T13:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89bc2c75-dccf-4975-a053-5e81a78fe3cb"
		},
		{
			"deviceTime": "2014-08-22T13:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b4f6620-4584-4bad-aefa-ae7bcd80410f"
		},
		{
			"deviceTime": "2014-08-22T13:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c69a956-cad1-4342-b2b1-58dadd3ed01e"
		},
		{
			"deviceTime": "2014-08-22T13:20:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a41c3ea3-09ca-4b24-9014-5b4760b6178b"
		},
		{
			"deviceTime": "2014-08-22T13:25:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e99cac9c-140d-4787-b714-80c0efb64743"
		},
		{
			"deviceTime": "2014-08-22T13:30:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae50dfe8-bbaa-488f-811b-396602dd2f20"
		},
		{
			"deviceTime": "2014-08-22T13:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f6e8b6e-a116-4f3e-a99d-d182fb7f52ed"
		},
		{
			"deviceTime": "2014-08-22T13:40:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b7e68b5-9edb-443f-907c-8a83f851d7e0"
		},
		{
			"deviceTime": "2014-08-22T13:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43888458-ee00-4b84-bfce-7ca43cb3f1d6"
		},
		{
			"deviceTime": "2014-08-22T13:50:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bca86623-311e-4893-bb05-13870ac0932f"
		},
		{
			"deviceTime": "2014-08-22T13:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6157fa09-06ee-4b25-bcf9-8b986b4befb4"
		},
		{
			"deviceTime": "2014-08-22T14:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f260ec27-c53a-41f8-8a13-460b1d8f6982"
		},
		{
			"deviceTime": "2014-08-22T14:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "deadf4ed-d578-4afe-9bea-459a08bd0333"
		},
		{
			"deviceTime": "2014-08-22T14:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "958e06ff-8d36-46d9-9cc4-a6a51ba0bbd9"
		},
		{
			"deviceTime": "2014-08-22T14:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "620e5979-9a4d-4c09-bd7e-4879d22fcca0"
		},
		{
			"deviceTime": "2014-08-22T14:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a63c39a-d8a0-4798-a1ee-fce78a1cdbcc"
		},
		{
			"deviceTime": "2014-08-22T14:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d338032-d752-4939-be67-4738ce8b71f9"
		},
		{
			"deviceTime": "2014-08-22T14:30:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7d8a3e5-9379-4bd2-b049-8637f6b13cae"
		},
		{
			"deviceTime": "2014-08-22T14:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffd842d0-f232-43a5-a520-b7e9d7b6661a"
		},
		{
			"deviceTime": "2014-08-22T14:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44446c9e-997f-475c-824d-d07fc20cb535"
		},
		{
			"deviceTime": "2014-08-22T14:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43a95db2-ddc1-4643-8f28-7091cecb0429"
		},
		{
			"deviceTime": "2014-08-22T14:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1a432ef-8f0d-425f-a137-3e02eae3642c"
		},
		{
			"deviceTime": "2014-08-22T14:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d82cf70-5c87-46de-b43a-b2f8aeb2b07d"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-22T20:00:00",
			"start": "2014-08-22T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "e4a3d6ba-c09c-4e1e-abed-b183e195f75d"
		},
		{
			"deviceTime": "2014-08-22T15:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5b7164e-1564-41da-b4f1-0724234b34bb"
		},
		{
			"deviceTime": "2014-08-22T15:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8be59b14-2ea6-4fe0-bcd9-394e91fd0e71"
		},
		{
			"deviceTime": "2014-08-22T15:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff72bee6-6227-4aad-b704-80bc2cbce149"
		},
		{
			"deviceTime": "2014-08-22T15:15:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19d6ac2e-dcc0-4187-82ac-2c6f4361bd0c"
		},
		{
			"deviceTime": "2014-08-22T15:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f788c70-2d4d-4f98-b90f-95ffebeb9eee"
		},
		{
			"deviceTime": "2014-08-22T15:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04e8b552-267b-474e-8577-d288ef49f5ce"
		},
		{
			"deviceTime": "2014-08-22T15:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b58d47e5-9ea1-41b5-bac8-33e780abdda0"
		},
		{
			"deviceTime": "2014-08-22T15:35:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc0970c7-f210-4feb-9dfb-7ba922bd7aff"
		},
		{
			"deviceTime": "2014-08-22T15:40:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ccab8bd-1dd0-45d7-b5aa-21ba0553a17a"
		},
		{
			"deviceTime": "2014-08-22T15:45:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0242c7d-a5e9-43ea-a6e3-be60400f1fa9"
		},
		{
			"deviceTime": "2014-08-22T15:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "798cb200-0e1e-4c71-adc6-5e1b3fd87f4a"
		},
		{
			"deviceTime": "2014-08-22T15:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f31dde8c-933e-465b-868c-448565b9d13e"
		},
		{
			"deviceTime": "2014-08-22T16:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22a8ebd9-5dfd-4806-8ed0-8018bb403980"
		},
		{
			"deviceTime": "2014-08-22T16:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a518674-5b21-40ee-bc92-8461d437dd63"
		},
		{
			"deviceTime": "2014-08-22T16:10:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6561b1dc-4709-4e50-b525-a310656438ed"
		},
		{
			"deviceTime": "2014-08-22T16:15:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b9f95e7-0172-4e5e-89ea-346f7d413e37"
		},
		{
			"deviceTime": "2014-08-22T16:20:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94a0f720-5c0c-4e07-9ffb-8f2914467821"
		},
		{
			"deviceTime": "2014-08-22T16:25:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1c885fb-99de-46e2-a83f-4af8b3d8cbf3"
		},
		{
			"deviceTime": "2014-08-22T16:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aca19de9-f9af-4469-a1cc-c330ab0a8c21"
		},
		{
			"deviceTime": "2014-08-22T16:35:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "902ca3c1-87df-4be5-8ede-8601fb3279f3"
		},
		{
			"deviceTime": "2014-08-22T16:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f54d7847-9c9b-4b1f-b3bd-dbe0cdebcf40"
		},
		{
			"deviceTime": "2014-08-22T16:45:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1eaccf1b-c690-4830-a105-94b30c4f2aea"
		},
		{
			"deviceTime": "2014-08-22T16:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97a361b6-ae7a-4ed1-b767-848b173d9249"
		},
		{
			"deviceTime": "2014-08-22T16:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0645168f-d327-4f92-af7f-d7db9fc7f2e2"
		},
		{
			"deviceTime": "2014-08-22T17:00:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "689b1d5b-a47a-43f3-a0a1-0dec40262130"
		},
		{
			"deviceTime": "2014-08-22T17:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0af94d8f-2298-4305-980e-4191de5c048b"
		},
		{
			"deviceTime": "2014-08-22T17:10:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d17dfd4-37ed-4a17-b2c7-006ec7c67e40"
		},
		{
			"deviceTime": "2014-08-22T17:12:01",
			"value": 3,
			"source": "demo",
			"recommended": 2,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "cd449c7d-2a65-4187-ab90-f74d469c3491"
		},
		{
			"deviceTime": "2014-08-22T17:15:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0318038c-5d0a-402d-b268-91c5f38928f2"
		},
		{
			"deviceTime": "2014-08-22T17:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d427bf6a-03e5-4d05-9cda-ded6b6518da4"
		},
		{
			"deviceTime": "2014-08-22T17:25:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19e6585f-f779-4cf4-a99f-22e4524560bd"
		},
		{
			"deviceTime": "2014-08-22T17:30:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2cf2e5a-6b5e-424d-b679-1b4b2a9e797d"
		},
		{
			"deviceTime": "2014-08-22T17:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c68bb255-b0a1-4b37-8109-93d64883b92b"
		},
		{
			"deviceTime": "2014-08-22T17:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e88fcd7-a0d3-4eee-a57c-0b04564a2943"
		},
		{
			"deviceTime": "2014-08-22T17:45:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa71cceb-2494-44f4-b449-6f099693f499"
		},
		{
			"deviceTime": "2014-08-22T17:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38ebaf62-b28a-4fd8-8d58-e7679150e543"
		},
		{
			"deviceTime": "2014-08-22T17:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eaeb224-c38b-4c10-a032-f7f06c17e881"
		},
		{
			"deviceTime": "2014-08-22T18:00:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "765e8c5a-611a-4a21-bb43-c5a54f1627f5"
		},
		{
			"deviceTime": "2014-08-22T18:05:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a9b47ff-aafd-4f8b-8b14-a07c3a3405f4"
		},
		{
			"deviceTime": "2014-08-22T18:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8d297fb-2152-4583-b822-5250cc6e0a8f"
		},
		{
			"deviceTime": "2014-08-22T18:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acabc83f-f5c7-438c-b9a9-ea48775aed3d"
		},
		{
			"deviceTime": "2014-08-22T18:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64a911e1-740d-4dc3-adba-817ec03bc835"
		},
		{
			"deviceTime": "2014-08-22T18:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e84e2500-272a-4de3-bacf-1c8992dfa737"
		},
		{
			"deviceTime": "2014-08-22T18:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d554b68-fea7-4731-8728-f6a7b02dd225"
		},
		{
			"deviceTime": "2014-08-22T18:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0edaece1-2760-4da0-aad2-6caf0f5c24be"
		},
		{
			"deviceTime": "2014-08-22T18:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ee10a6c-d7e6-4599-95cf-d37086252de6"
		},
		{
			"deviceTime": "2014-08-22T18:40:55",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5d44430b-6908-49b4-a6af-e55c6972e118"
		},
		{
			"deviceTime": "2014-08-22T18:40:55",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "5025f99d-9131-4f0c-9e4f-90c8067ceae5"
		},
		{
			"deviceTime": "2014-08-22T18:40:55",
			"id": "5025f99d-9131-4f0c-9e4f-90c8067ceae5",
			"source": "demo",
			"joinKey": "b85c14e1-e0b6-4317-8eb9-8dccbb347b78",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 53
			}
		},
		{
			"deviceTime": "2014-08-22T18:40:55",
			"programmed": 3.1,
			"joinKey": "b85c14e1-e0b6-4317-8eb9-8dccbb347b78",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.5,
			"extendedDelivery": 1.2,
			"initialDelivery": 1.9,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "28688fd5-1e77-4fc9-842d-dc39f7e7ca10",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-22T18:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4a9782f-98f6-42c7-8503-5e39d174a7fb"
		},
		{
			"deviceTime": "2014-08-22T18:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2071e155-2726-48ef-a611-907035284944"
		},
		{
			"deviceTime": "2014-08-22T18:55:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a02e6c9-b3a8-4f1b-8754-38e38c6b54a6"
		},
		{
			"deviceTime": "2014-08-22T19:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc091527-519f-4668-86a3-8fd175918f66"
		},
		{
			"deviceTime": "2014-08-22T19:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38efc323-3f72-4601-8c76-9d76c0655da8"
		},
		{
			"deviceTime": "2014-08-22T19:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21bdb28c-e1c2-4ed5-9f4a-427ef99127b4"
		},
		{
			"deviceTime": "2014-08-22T19:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23804c12-1d63-44c2-9f5d-7d642844b5e8"
		},
		{
			"deviceTime": "2014-08-22T19:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec02dc8b-ce4d-4b40-b3bc-562aace585f3"
		},
		{
			"deviceTime": "2014-08-22T19:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ba84890-f955-4f1c-9330-e4a95aeb535f"
		},
		{
			"deviceTime": "2014-08-22T19:30:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80bfc765-b8d3-406a-a9ae-73ed25298710"
		},
		{
			"deviceTime": "2014-08-22T19:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d823b89-d089-4ff0-88a8-9a58e3f3dafb"
		},
		{
			"deviceTime": "2014-08-22T19:40:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a8b803e-0bc4-46cb-a801-a41539c46f8a"
		},
		{
			"deviceTime": "2014-08-22T19:45:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fb3780a-a013-4f02-b2ea-31bab9528c07"
		},
		{
			"deviceTime": "2014-08-22T19:50:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a25093e2-8e2a-4dfa-9b06-871ae3350479"
		},
		{
			"deviceTime": "2014-08-22T19:55:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cedb18f9-9ac3-4fcb-a29b-2c406a3b3ab8"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-23T00:00:00",
			"start": "2014-08-22T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "54e7aa38-12b2-4463-9f1e-7f92622a6805"
		},
		{
			"deviceTime": "2014-08-22T20:00:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1214082-6449-47a0-b7ec-cddd7d9fea03"
		},
		{
			"deviceTime": "2014-08-22T20:05:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33d17266-88e9-40c5-a375-ab02fb954c66"
		},
		{
			"deviceTime": "2014-08-22T20:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b278368-9e28-4fca-a834-517be96fb716"
		},
		{
			"deviceTime": "2014-08-22T20:15:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3787738e-b705-4f66-a27e-657edecfc4fc"
		},
		{
			"deviceTime": "2014-08-22T20:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef4e64e6-773a-48e0-801f-88850be3f4ad"
		},
		{
			"deviceTime": "2014-08-22T20:25:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9502e10c-fff1-446e-8883-cd15a5f55a2b"
		},
		{
			"deviceTime": "2014-08-22T20:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b6fa995-3ceb-4010-b80a-d8584de5d2b3"
		},
		{
			"deviceTime": "2014-08-22T20:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31c0fa64-4f55-4fa0-866d-19215b053265"
		},
		{
			"deviceTime": "2014-08-22T20:40:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b98210a5-0be6-4fd6-aa03-2fe4333880a9"
		},
		{
			"deviceTime": "2014-08-22T20:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5c5da64-7e5d-4dd5-8ae3-a68e50b11ace"
		},
		{
			"deviceTime": "2014-08-22T20:50:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe7ac58a-215d-4304-8f65-5edb8cfdefcb"
		},
		{
			"deviceTime": "2014-08-22T20:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acd2b66c-e193-48e3-880e-fa7c6c290b25"
		},
		{
			"deviceTime": "2014-08-22T21:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99612d15-e3e9-474f-976b-137f5a53cb76"
		},
		{
			"deviceTime": "2014-08-22T21:05:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f049648d-044d-4a4f-9c96-b380c007ad52"
		},
		{
			"deviceTime": "2014-08-22T21:10:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1fc0f1ee-2a30-4f37-b1fd-02ab9b37ec43"
		},
		{
			"deviceTime": "2014-08-22T21:15:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38dcf9c2-70d6-4c47-bbed-b4e69e444404"
		},
		{
			"deviceTime": "2014-08-22T21:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc77c289-b7ff-41e1-a282-d4e6b56e2d4c"
		},
		{
			"deviceTime": "2014-08-22T21:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4889afc9-7c43-45c0-aea2-b24dc09039b2"
		},
		{
			"deviceTime": "2014-08-22T21:30:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c268fa8b-41a7-4bc2-b3b7-ea5bbbb264a1"
		},
		{
			"deviceTime": "2014-08-22T21:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e0ea154-f7fe-464f-a82d-031a2220b825"
		},
		{
			"deviceTime": "2014-08-22T21:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e279dff-8894-42e8-863d-b27149c88806"
		},
		{
			"deviceTime": "2014-08-22T21:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8363065-7811-4648-a5a7-537d99a87174"
		},
		{
			"deviceTime": "2014-08-22T21:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fe598e1-34af-437a-856a-eeed5b75d60f"
		},
		{
			"deviceTime": "2014-08-22T21:55:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c99b4a5c-b87c-4762-b227-43fcce7b068a"
		},
		{
			"deviceTime": "2014-08-22T22:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58332af3-b5a4-4aca-8273-dd3c8a44fb28"
		},
		{
			"deviceTime": "2014-08-22T22:05:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad5a1f0a-03d7-4b7d-bb6d-5b5feb294544"
		},
		{
			"deviceTime": "2014-08-22T22:10:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c164d7b-db73-4ecf-8e95-823094582552"
		},
		{
			"deviceTime": "2014-08-22T22:15:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65bbeaf9-b6fd-4dfa-9a24-3cbeaedb140f"
		},
		{
			"deviceTime": "2014-08-22T22:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e028f1b-e0b6-45a8-bb4a-3bf038859f38"
		},
		{
			"deviceTime": "2014-08-22T22:25:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62956b05-1bf2-4db5-a3a0-5d25aadb450f"
		},
		{
			"deviceTime": "2014-08-22T22:30:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a8f61c3-884d-47e8-baa8-c2044be88ec3"
		},
		{
			"deviceTime": "2014-08-22T22:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8777524b-bc0f-49da-96af-a2eb38c8f20f"
		},
		{
			"deviceTime": "2014-08-22T22:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e6aae14-b9e8-4fb3-8192-e20556d5697f"
		},
		{
			"deviceTime": "2014-08-22T22:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbf1c671-ef95-4fdf-bdf7-1127edf1e5d7"
		},
		{
			"deviceTime": "2014-08-22T22:50:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1e9eea3-3c0f-4df7-bba2-d2eb2799ba2c"
		},
		{
			"deviceTime": "2014-08-22T22:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90d7fc5f-d644-4479-934c-6ab26eb7579d"
		},
		{
			"deviceTime": "2014-08-22T23:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87639180-551f-40d4-b83a-995e906d2ad7"
		},
		{
			"deviceTime": "2014-08-22T23:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f27a4010-ee83-407c-a548-621cc57f1c5f"
		},
		{
			"deviceTime": "2014-08-22T23:10:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dec3c5b4-b775-4da7-b200-d157b4080a9d"
		},
		{
			"deviceTime": "2014-08-22T23:12:50",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "a7153c0d-c851-4513-854b-ef552dec5396"
		},
		{
			"deviceTime": "2014-08-22T23:15:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "feb069d6-9363-43f5-b040-85f070129b5e"
		},
		{
			"deviceTime": "2014-08-22T23:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d412729c-003c-406c-af3c-a6826074040c"
		},
		{
			"deviceTime": "2014-08-22T23:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ca4fe2c-5b9d-4f2b-bf47-d324a4d3e37a"
		},
		{
			"deviceTime": "2014-08-22T23:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2afc9aa3-e0af-41ff-8c14-e769e8249ceb"
		},
		{
			"deviceTime": "2014-08-22T23:35:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a24f2e9-4cad-45fa-ac73-9bd116867ee5"
		},
		{
			"deviceTime": "2014-08-22T23:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af4962a6-1b08-450b-b627-1bf98efb4442"
		},
		{
			"deviceTime": "2014-08-22T23:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ece2fbd4-48c2-4e5b-82d4-0d17438e9d6e"
		},
		{
			"deviceTime": "2014-08-22T23:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f03f0b6e-af14-4e51-9c3c-e002e88b7b29"
		},
		{
			"deviceTime": "2014-08-22T23:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61bdabca-baf4-4341-972b-7c118eae7587"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-23T02:00:00",
			"start": "2014-08-23T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "b1e94080-0f9b-4d00-993d-9126a5e52118"
		},
		{
			"deviceTime": "2014-08-23T00:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13b03b28-d3f2-46b6-a1c7-95fbe2b3db0e"
		},
		{
			"deviceTime": "2014-08-23T00:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d28d1c4e-f785-44de-b852-f3da33e447fd"
		},
		{
			"deviceTime": "2014-08-23T00:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f378a574-7909-405f-b70f-0092aedd378d"
		},
		{
			"deviceTime": "2014-08-23T00:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f506b40e-6353-4592-9f28-ff1a8a753210"
		},
		{
			"deviceTime": "2014-08-23T00:20:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47ca0d16-3605-436c-a6f0-4e33fb04b7a3"
		},
		{
			"deviceTime": "2014-08-23T00:25:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3f0685f-0f40-44a8-a2c9-fe927f80f13e"
		},
		{
			"deviceTime": "2014-08-23T00:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5979ee6-04ec-42e2-8ef5-2cd8347c6bb6"
		},
		{
			"deviceTime": "2014-08-23T00:35:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aeda2126-fdc1-4b3a-b037-1927f9fa4ef2"
		},
		{
			"deviceTime": "2014-08-23T00:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfb65929-33d2-4eca-b8fa-c43ea08b1c3f"
		},
		{
			"deviceTime": "2014-08-23T00:45:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c027df26-a741-4e78-919c-f3fe7ed8785f"
		},
		{
			"deviceTime": "2014-08-23T00:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4777049f-e63f-4743-82dc-dd388e2c1750"
		},
		{
			"deviceTime": "2014-08-23T00:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3fe6dbc-1a44-4edd-9227-aa41d8760ad2"
		},
		{
			"deviceTime": "2014-08-23T01:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd504300-b2d0-4b99-a87e-1bc0451c194e"
		},
		{
			"deviceTime": "2014-08-23T01:05:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28948a44-cb93-474f-b773-7b5310d58173"
		},
		{
			"deviceTime": "2014-08-23T01:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9891056-0942-4f21-8dd5-5c098cd7e46b"
		},
		{
			"deviceTime": "2014-08-23T01:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47920cc8-acfc-4869-bd08-e021dce224dc"
		},
		{
			"deviceTime": "2014-08-23T01:20:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51e29e7d-9bc6-4885-beff-c54ec749bfeb"
		},
		{
			"deviceTime": "2014-08-23T01:25:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40d8e946-8c6c-44e6-a386-31dc63b1ee18"
		},
		{
			"deviceTime": "2014-08-23T01:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e98c575-cfd8-4644-b402-7fc1527a5cb2"
		},
		{
			"deviceTime": "2014-08-23T01:35:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d680eb9c-5631-44a2-9c84-a9db0d601e64"
		},
		{
			"deviceTime": "2014-08-23T01:40:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "701aa5ea-52c2-4e53-abfe-573963b350c5"
		},
		{
			"deviceTime": "2014-08-23T01:45:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a8007d6-a141-4427-8143-29e74d3c2b8e"
		},
		{
			"deviceTime": "2014-08-23T01:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bbfb747-41a7-4b98-9e77-d31280051109"
		},
		{
			"deviceTime": "2014-08-23T01:55:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6d413f6-6f7e-4ce8-9104-0a7aa341c13d"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-23T04:00:00",
			"start": "2014-08-23T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "bae93b14-6b34-4681-933f-bcca0b73c0f4"
		},
		{
			"deviceTime": "2014-08-23T02:00:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "816c4041-2507-4536-9d49-2818c8f81133"
		},
		{
			"deviceTime": "2014-08-23T02:05:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d98f241a-060f-4708-9c8e-3361449019e8"
		},
		{
			"deviceTime": "2014-08-23T02:10:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a85e824-365a-4ba6-860a-f799f1cdd37d"
		},
		{
			"deviceTime": "2014-08-23T02:15:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24884eb3-19e4-4780-afd7-1a3aa7da6341"
		},
		{
			"deviceTime": "2014-08-23T02:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb2e2fd2-33b5-4e0a-9301-7843eb3ff293"
		},
		{
			"deviceTime": "2014-08-23T02:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d29c503-c8c9-451f-b6a7-8346d82e6dd8"
		},
		{
			"deviceTime": "2014-08-23T02:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14b58678-6e18-429e-b59f-be3799a4ce01"
		},
		{
			"deviceTime": "2014-08-23T02:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73aa1742-2afb-44a9-a94d-7abc5c7c67e5"
		},
		{
			"deviceTime": "2014-08-23T02:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f70cb70c-e3dd-4634-9ce0-a5dd7f95e9f3"
		},
		{
			"deviceTime": "2014-08-23T02:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "045579cb-0b02-4b2c-8ade-60eac3cd6f49"
		},
		{
			"deviceTime": "2014-08-23T02:50:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67d09305-0906-4cd1-9ce0-ab9a60e4f3fa"
		},
		{
			"deviceTime": "2014-08-23T02:55:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88cea424-b850-4add-82f2-901495576403"
		},
		{
			"deviceTime": "2014-08-23T03:00:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dca9889-d981-4c79-85ca-d3adb363b8cf"
		},
		{
			"deviceTime": "2014-08-23T03:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e3262ba-902b-4659-ac5b-5a7e086142d4"
		},
		{
			"deviceTime": "2014-08-23T03:10:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c879494c-9733-450c-ad1e-ef2761e8b3e1"
		},
		{
			"deviceTime": "2014-08-23T03:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28bd18f1-ac20-4264-a445-133a8b57eb59"
		},
		{
			"deviceTime": "2014-08-23T03:20:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a07b9cb-06d6-4bb9-8459-9044b9a9b5f4"
		},
		{
			"deviceTime": "2014-08-23T03:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90a4cc7b-1d39-4755-b78e-d8575fc028a5"
		},
		{
			"deviceTime": "2014-08-23T03:30:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7beec9d6-cbbd-4030-bab5-69e8eabdbf5e"
		},
		{
			"deviceTime": "2014-08-23T03:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7289414d-bbb8-4fb4-aa72-281ab050df08"
		},
		{
			"deviceTime": "2014-08-23T03:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06a8cf7b-ac4f-4841-97c1-a4d03d309989"
		},
		{
			"deviceTime": "2014-08-23T03:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e47f86a4-a9d2-4171-bba8-4e03be22829d"
		},
		{
			"deviceTime": "2014-08-23T03:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a9c05ad-3faa-4df1-9b40-02ae03e2b598"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-23T05:00:00",
			"start": "2014-08-23T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "d21d3a49-de8d-4826-ab3c-7d915a282795"
		},
		{
			"deviceTime": "2014-08-23T04:11:53",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5f06d1d1-7ff1-49fd-aeb1-7dd0f6d39704"
		},
		{
			"deviceTime": "2014-08-23T04:11:53",
			"value": 41,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "056690b1-4791-49c8-bbfd-1f650cbafff4"
		},
		{
			"deviceTime": "2014-08-23T04:11:53",
			"id": "056690b1-4791-49c8-bbfd-1f650cbafff4",
			"source": "demo",
			"joinKey": "e5c5e3bc-c6d5-4f45-97c4-413dbe5ebfa8",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 41
			}
		},
		{
			"deviceTime": "2014-08-23T04:11:53",
			"programmed": 2.7,
			"joinKey": "e5c5e3bc-c6d5-4f45-97c4-413dbe5ebfa8",
			"value": 2.7,
			"id": "38e312c7-9e36-4356-83d3-82032e844276",
			"source": "demo",
			"recommended": 2.7,
			"extendedDelivery": 2.7,
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"extended": true,
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-23T04:20:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cccd15bd-fb48-4a0e-8bdc-98beffce7754"
		},
		{
			"deviceTime": "2014-08-23T04:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3f0c625-ca51-4cee-b67f-a993bd3f4a77"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-23T06:00:00",
			"start": "2014-08-23T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "219c8c78-5b8b-4b6a-8737-164df58088ca"
		},
		{
			"deviceTime": "2014-08-23T05:00:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1965a741-7550-4f1c-b68d-a267850ce7c1"
		},
		{
			"deviceTime": "2014-08-23T05:05:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef8fe292-0243-4c79-9814-4ee2184ac7cb"
		},
		{
			"deviceTime": "2014-08-23T05:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e4db4db-aac6-4735-9355-44a1365068a2"
		},
		{
			"deviceTime": "2014-08-23T05:12:01",
			"value": 3.8,
			"source": "demo",
			"recommended": 3.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "19ad12cb-2f69-4bd0-be82-e5112c82e922"
		},
		{
			"deviceTime": "2014-08-23T05:15:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cee9473-a993-4795-9213-5811bd419b4a"
		},
		{
			"deviceTime": "2014-08-23T05:20:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "922bab67-28b5-4f10-b3d8-8eba6acce796"
		},
		{
			"deviceTime": "2014-08-23T05:25:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e222b75-2171-4dbb-ad78-72d9599c4c33"
		},
		{
			"deviceTime": "2014-08-23T05:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8503b10a-f953-4525-a82f-8ad570ad6d62"
		},
		{
			"deviceTime": "2014-08-23T05:35:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ce619b7-da4c-4e5d-9319-45c15fd553b2"
		},
		{
			"deviceTime": "2014-08-23T05:40:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "817592de-a2e1-484f-a178-6a8a46ed20ae"
		},
		{
			"deviceTime": "2014-08-23T05:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6283fcc-e00f-4215-b88e-5bb985dbb61c"
		},
		{
			"deviceTime": "2014-08-23T05:50:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd2b6cdc-e45d-443f-bfd7-5d08d2b0ec4e"
		},
		{
			"deviceTime": "2014-08-23T05:55:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0de3030-4c7a-48a2-bcd2-d72e4ac1b1e0"
		},
		{
			"delivered": 1,
			"end": "2014-08-23T09:00:00",
			"start": "2014-08-23T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "9764bfbd-a3a5-4a65-b3b5-4d5be71d77d8"
		},
		{
			"deviceTime": "2014-08-23T06:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00ff3f92-acbe-48ab-bf2f-316c9d0f8a12"
		},
		{
			"deviceTime": "2014-08-23T06:05:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bc4d9e0-f1e6-4832-8ee4-6663e3cfb5ec"
		},
		{
			"deviceTime": "2014-08-23T06:10:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6060be8-0341-4d10-8e37-55627e2e5b21"
		},
		{
			"deviceTime": "2014-08-23T06:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f4df9dd-f034-40c1-a8bd-16f55616d875"
		},
		{
			"deviceTime": "2014-08-23T06:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "595afb6b-188f-4fe2-96de-3af91839d830"
		},
		{
			"deviceTime": "2014-08-23T06:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75675c15-8e91-49fa-8f5a-e0be98979077"
		},
		{
			"deviceTime": "2014-08-23T06:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2183cdf6-6500-4099-b2d6-b7a60eda21ed"
		},
		{
			"deviceTime": "2014-08-23T06:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ad8b0ad-fad8-426a-a055-4ee634b65d4c"
		},
		{
			"messageText": "Eiusmod corned beef boudin hamburger, beef ribs officia dolore landjaeger dolore velit shank. Aliquip mollit ut rump.",
			"parentMessage": "",
			"utcTime": "2014-08-23T06:48:29Z",
			"type": "message",
			"id": "e94d4e48-4419-4a67-a753-ea79148a79cc"
		},
		{
			"deviceTime": "2014-08-23T06:50:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c76a336-638d-45ab-89e9-2ee15609889e"
		},
		{
			"deviceTime": "2014-08-23T06:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d51395e5-fc18-4839-8c18-ae059cc53b46"
		},
		{
			"deviceTime": "2014-08-23T07:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8483aa3c-13ae-4222-baef-d28be7a36d19"
		},
		{
			"deviceTime": "2014-08-23T07:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbda2b03-0acb-4aa4-a85f-ec3862ce709f"
		},
		{
			"deviceTime": "2014-08-23T07:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03d9e93f-7b07-48ed-acf9-e397871a305f"
		},
		{
			"deviceTime": "2014-08-23T07:15:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9459ac4-8ce6-499d-bcc8-f63aaf1da3fa"
		},
		{
			"deviceTime": "2014-08-23T07:19:16",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "2f912353-ff50-42f4-a665-d259349386b1"
		},
		{
			"deviceTime": "2014-08-23T07:19:16",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "824f4d94-ac7e-4c11-b9e5-625c763b721e"
		},
		{
			"deviceTime": "2014-08-23T07:19:16",
			"id": "824f4d94-ac7e-4c11-b9e5-625c763b721e",
			"source": "demo",
			"joinKey": "610e538e-d702-4974-b083-4f31746df90e",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 80
			}
		},
		{
			"deviceTime": "2014-08-23T07:19:16",
			"suspendedAt": "2014-08-23T07:34:16",
			"programmed": 5.3,
			"joinKey": "610e538e-d702-4974-b083-4f31746df90e",
			"value": 0.6,
			"source": "demo",
			"recommended": 5.3,
			"extendedDelivery": 5.3,
			"deviceId": "Demo - 123",
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "946e4ba0-a3f0-4656-8ed7-49a174789825"
		},
		{
			"deviceTime": "2014-08-23T07:20:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d80ea8f-4b11-4ca4-a168-41048b63acba"
		},
		{
			"deviceTime": "2014-08-23T07:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8f210eb-b491-4fb2-a770-7a9bbd48fc26"
		},
		{
			"deviceTime": "2014-08-23T07:30:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8b36e9a-ebc0-4c66-b559-c926d0c8d94d"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-23T07:34:16",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "b4eea68b-8137-44f6-8113-16eb98a92389"
		},
		{
			"deviceTime": "2014-08-23T07:35:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bc6ff6f-cdfd-4803-ad64-c60eb02ba7f2"
		},
		{
			"deviceTime": "2014-08-23T07:40:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7a5ae0b-e612-4cbc-8473-1a8f430a1f77"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-23T07:45:16",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "dc9fdf55-4783-43d3-bbcb-07e2683f1403",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-23T07:34:16",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "b4eea68b-8137-44f6-8113-16eb98a92389"
			}
		},
		{
			"deviceTime": "2014-08-23T07:45:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fc2a588-2794-444a-bf0c-d31aed3544bb"
		},
		{
			"deviceTime": "2014-08-23T07:50:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "add190ed-1c75-448d-b16d-ea3eb47ac3c2"
		},
		{
			"end": "2014-08-23T13:55:01",
			"start": "2014-08-23T07:55:01",
			"percent": 1.7,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "ab6fc3b7-63f9-434f-8fe2-5a8fea078251"
		},
		{
			"deviceTime": "2014-08-23T07:55:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa8816f3-1b30-44ce-881f-360977ed4169"
		},
		{
			"deviceTime": "2014-08-23T08:00:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b32a9490-df4e-4e35-999e-34e7d31744bb"
		},
		{
			"deviceTime": "2014-08-23T08:05:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a2ddf08-439a-49f2-9cd8-080011c03d97"
		},
		{
			"deviceTime": "2014-08-23T08:10:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f33d1da-a2b5-4ba0-bbd0-711b6a0c77ef"
		},
		{
			"deviceTime": "2014-08-23T08:15:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ccdc24d-109c-4ae6-8dfa-970407910356"
		},
		{
			"deviceTime": "2014-08-23T08:20:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aac22bd2-6c46-480d-bd13-18dd1100f1d0"
		},
		{
			"deviceTime": "2014-08-23T08:25:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56b7e91e-d689-4b1e-b660-fa3c686f74a0"
		},
		{
			"deviceTime": "2014-08-23T08:30:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66a3c4b2-6503-43a8-87d5-f94c745f069d"
		},
		{
			"deviceTime": "2014-08-23T08:35:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2eaaff69-6c19-4a4f-941f-d95313b40115"
		},
		{
			"deviceTime": "2014-08-23T08:50:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f215f02-4daf-4189-8ff5-85c90a4c5c14"
		},
		{
			"deviceTime": "2014-08-23T08:55:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b21ff0e9-b272-4b47-aa91-745e190c723d"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-23T15:00:00",
			"start": "2014-08-23T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "2852a0af-569f-4de8-9958-bf6b54b89900"
		},
		{
			"deviceTime": "2014-08-23T09:00:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f9d6d9c-80b6-4bf9-bb06-46af8d29ab92"
		},
		{
			"deviceTime": "2014-08-23T09:05:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7ebd130-bee2-4845-a837-88c902823a4f"
		},
		{
			"deviceTime": "2014-08-23T09:10:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "295b2863-465a-429f-a518-2f513bb127d4"
		},
		{
			"deviceTime": "2014-08-23T09:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "800ff077-7656-4600-8261-f3fc5ba36976"
		},
		{
			"deviceTime": "2014-08-23T09:18:05",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "6658c2e4-fe09-46f6-a969-101544259572"
		},
		{
			"deviceTime": "2014-08-23T09:18:05",
			"value": 34,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "b62bcce4-10bb-4624-bd76-d6acb2c111ef"
		},
		{
			"deviceTime": "2014-08-23T09:18:05",
			"id": "b62bcce4-10bb-4624-bd76-d6acb2c111ef",
			"source": "demo",
			"joinKey": "93193c98-35b8-494e-b9af-49fa8a42ca5b",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 34
			}
		},
		{
			"deviceTime": "2014-08-23T09:18:05",
			"suspendedAt": "2014-08-23T09:40:35",
			"programmed": 2,
			"joinKey": "93193c98-35b8-494e-b9af-49fa8a42ca5b",
			"value": 0.9,
			"source": "demo",
			"recommended": 2.3,
			"extendedDelivery": 2,
			"deviceId": "Demo - 123",
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "28e8785d-835f-4275-92f4-796d3f8a090a"
		},
		{
			"deviceTime": "2014-08-23T09:20:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1f8645f-81a8-4f44-a007-8250141390b4"
		},
		{
			"deviceTime": "2014-08-23T09:25:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f8824c6-1a02-4641-97e5-28647e25cacb"
		},
		{
			"end": "2014-08-23T13:27:01",
			"start": "2014-08-23T09:27:01",
			"percent": 1.75,
			"deliveryType": "temp",
			"id": "e1e1dec8-657e-4381-b060-04fbb9040f93",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-23T09:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ce4a1a1-fe89-4d18-aad5-d2968d9828c9"
		},
		{
			"deviceTime": "2014-08-23T09:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aef9bc25-23e6-4399-a348-7bace7b5aa5e"
		},
		{
			"deviceTime": "2014-08-23T09:40:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cd26ef0-5aee-4464-9554-cf3cc2cc3841"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-23T09:40:35",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "29ee8af9-df79-426b-b2bd-f5b911fca4ab"
		},
		{
			"deviceTime": "2014-08-23T09:45:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b915ba09-7a9c-4e57-abfe-70fb8791498f"
		},
		{
			"deviceTime": "2014-08-23T09:50:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eaee1ab8-18f0-4d73-8188-30ec7edda900"
		},
		{
			"deviceTime": "2014-08-23T09:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33e4fa02-2eec-413f-9766-be1161d0a95f"
		},
		{
			"deviceTime": "2014-08-23T10:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b0714b3-5939-4eb3-8ca4-32c561b159fa"
		},
		{
			"deviceTime": "2014-08-23T10:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c364fbb-b412-4c22-a5b5-8e2cf46c1d96"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-23T10:06:05",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "59654c29-d3bf-4fe7-9c4a-ad1e254c260e",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-23T09:40:35",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "29ee8af9-df79-426b-b2bd-f5b911fca4ab"
			}
		},
		{
			"deviceTime": "2014-08-23T10:10:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9abd83c7-0074-4a48-b337-40555642477d"
		},
		{
			"deviceTime": "2014-08-23T10:15:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a82f667e-5e87-408b-b1af-24256cec72a5"
		},
		{
			"deviceTime": "2014-08-23T10:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0379fbeb-0075-4ce6-b51f-95a6f69a4746"
		},
		{
			"deviceTime": "2014-08-23T10:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "854741c4-8569-4fe8-8c07-c6b36ecb0368"
		},
		{
			"deviceTime": "2014-08-23T10:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "278a7d50-7e1f-4e88-a077-36f7a8eb83bb"
		},
		{
			"deviceTime": "2014-08-23T10:35:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edd920d4-8fa6-402b-a6c5-e76e2b8134dc"
		},
		{
			"deviceTime": "2014-08-23T10:40:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc3234fe-b9f6-4dc7-9bb1-7e71775c2137"
		},
		{
			"deviceTime": "2014-08-23T10:43:28",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "6b987b67-28e8-4936-8690-1cb13b0a9569"
		},
		{
			"deviceTime": "2014-08-23T10:43:28",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "87e3bee2-68a8-4530-80c6-1745c107feb9"
		},
		{
			"deviceTime": "2014-08-23T10:43:28",
			"id": "87e3bee2-68a8-4530-80c6-1745c107feb9",
			"source": "demo",
			"joinKey": "43b4615a-8194-451a-9677-fd979241923a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 67
			}
		},
		{
			"deviceTime": "2014-08-23T10:43:28",
			"programmed": 4.5,
			"joinKey": "43b4615a-8194-451a-9677-fd979241923a",
			"value": 4.5,
			"source": "demo",
			"recommended": 4.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "ea035109-f01d-41ee-81d3-d83536a30848"
		},
		{
			"deviceTime": "2014-08-23T10:45:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "902277a8-064c-4db7-b68a-ac1683de85b4"
		},
		{
			"deviceTime": "2014-08-23T10:50:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47f0f2b6-7b07-4239-9b4e-f8a0b33c30c8"
		},
		{
			"deviceTime": "2014-08-23T10:55:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f766fd5-d7ce-4438-a444-3f4d2aea3f1c"
		},
		{
			"deviceTime": "2014-08-23T11:00:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e904197-25b3-4f08-8d84-22fd29995c0d"
		},
		{
			"deviceTime": "2014-08-23T11:05:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5e1ace4-89fa-4614-80ab-7b4a7fde76a9"
		},
		{
			"deviceTime": "2014-08-23T11:10:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73b91e28-78bd-419d-8573-f490594e7103"
		},
		{
			"deviceTime": "2014-08-23T11:15:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c074d672-a955-46e5-b0d0-96facb3b3e9f"
		},
		{
			"deviceTime": "2014-08-23T11:20:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8f9f400-83b4-44a7-8826-c98c4c67ffa8"
		},
		{
			"deviceTime": "2014-08-23T11:25:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58725811-41db-46bd-a5c7-b650729203e0"
		},
		{
			"deviceTime": "2014-08-23T11:30:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1bab426a-0f61-4412-ace2-da2c268603fd"
		},
		{
			"deviceTime": "2014-08-23T11:35:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d47a57a-316d-4c64-b0b0-f929ff1c13d8"
		},
		{
			"deviceTime": "2014-08-23T11:40:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7f16ee9-0baf-49de-b88e-764bab26c8bc"
		},
		{
			"deviceTime": "2014-08-23T11:45:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "854a30b2-b9f9-438e-ad91-3271af215ef3"
		},
		{
			"deviceTime": "2014-08-23T11:50:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1f66b0b-ef52-4309-a1c8-589ea719218b"
		},
		{
			"deviceTime": "2014-08-23T11:55:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6f50fdc-90ec-40a6-be82-533796c98279"
		},
		{
			"deviceTime": "2014-08-23T12:00:22",
			"value": 212,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e1a45cb-2a0e-415f-b583-c948e90d086e"
		},
		{
			"deviceTime": "2014-08-23T12:05:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fea0a73-017d-4c4b-9221-556d962f724c"
		},
		{
			"deviceTime": "2014-08-23T12:10:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c588874-3d3d-4357-a43f-75efc1f58697"
		},
		{
			"deviceTime": "2014-08-23T12:15:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc17bd1a-b116-4d58-8b53-7cb8117c6d9a"
		},
		{
			"deviceTime": "2014-08-23T12:20:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd058da6-ceae-4ca2-992e-65ac475aa639"
		},
		{
			"deviceTime": "2014-08-23T12:25:22",
			"value": 214,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51997f52-cda8-4e25-a0ed-20f8fc1019f2"
		},
		{
			"deviceTime": "2014-08-23T12:30:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "daa85540-606c-4bd8-b291-ff06ac0dc1a4"
		},
		{
			"deviceTime": "2014-08-23T12:35:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5df76c73-9de1-4ebf-9aad-d10bc320b223"
		},
		{
			"deviceTime": "2014-08-23T12:40:22",
			"value": 222,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "162e45b6-342d-44f0-b535-91706095382e"
		},
		{
			"deviceTime": "2014-08-23T12:45:22",
			"value": 218,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9e12246-23f2-4609-8a59-d1fa8aca3002"
		},
		{
			"deviceTime": "2014-08-23T12:50:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56d37806-2221-4388-a538-fffaf9632e70"
		},
		{
			"deviceTime": "2014-08-23T12:55:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6ca338a-5ed2-4692-a1b8-101c0cffb5f0"
		},
		{
			"deviceTime": "2014-08-23T12:58:10",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "56a0bf23-f937-43ac-ac99-5e0ac2db665f"
		},
		{
			"deviceTime": "2014-08-23T13:00:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98b64a7e-cf2a-4e30-8fcd-e832576ad6aa"
		},
		{
			"deviceTime": "2014-08-23T13:05:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65c6a573-9a0d-493e-89b5-e1554087197e"
		},
		{
			"deviceTime": "2014-08-23T13:10:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "146a0806-60b7-41ae-b972-f0ecef35eab5"
		},
		{
			"deviceTime": "2014-08-23T13:15:22",
			"value": 215,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e893dc1-3247-4244-a968-9ca5f623e9a3"
		},
		{
			"deviceTime": "2014-08-23T13:20:22",
			"value": 215,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5524d5e-fcaf-4937-b307-e3b0dea73053"
		},
		{
			"deviceTime": "2014-08-23T13:25:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b9824e8-e37e-4860-a0c0-402282b73a93"
		},
		{
			"deviceTime": "2014-08-23T13:30:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "545ab688-cb1a-475b-9e53-3f3805abe030"
		},
		{
			"deviceTime": "2014-08-23T13:35:22",
			"value": 222,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f1b2cea-171c-4060-9899-770999032371"
		},
		{
			"deviceTime": "2014-08-23T13:40:22",
			"value": 221,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11cdf3c6-0936-4514-a230-1bcbe8a2e9aa"
		},
		{
			"deviceTime": "2014-08-23T13:45:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ff2c11f-77d8-4dd9-9e67-281276bb30cc"
		},
		{
			"deviceTime": "2014-08-23T13:50:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c093811-a584-4efd-8a35-9b5f3ca88316"
		},
		{
			"deviceTime": "2014-08-23T13:55:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0549291-fd6f-437e-84f8-d72498b9b726"
		},
		{
			"deviceTime": "2014-08-23T14:00:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe99aa4e-204d-4d2f-a7ec-e61cca15a763"
		},
		{
			"deviceTime": "2014-08-23T14:05:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6777a804-42d5-45bc-9de9-0c81c2057f5e"
		},
		{
			"deviceTime": "2014-08-23T14:10:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d123aaa-ea14-41bf-96c7-c78c8ee4480a"
		},
		{
			"deviceTime": "2014-08-23T14:15:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2982e305-5649-4937-b35e-0de563084bdc"
		},
		{
			"deviceTime": "2014-08-23T14:20:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65d329c7-f38f-478b-93a0-e0bda75cf2f9"
		},
		{
			"deviceTime": "2014-08-23T14:25:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ec84f77-02fd-47c8-b827-a0c9723b4b61"
		},
		{
			"deviceTime": "2014-08-23T14:30:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dfffac6b-1536-422c-95d7-9889b994a960"
		},
		{
			"deviceTime": "2014-08-23T14:35:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e35b632b-31f4-47a0-8595-58382bc1a255"
		},
		{
			"deviceTime": "2014-08-23T14:40:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9064ca8b-25a7-40be-8eb0-205a198f3bf2"
		},
		{
			"deviceTime": "2014-08-23T14:45:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9200657-6dea-4101-9aaa-9e551b510216"
		},
		{
			"deviceTime": "2014-08-23T14:50:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52310231-55c9-4bbe-ac39-35c618fbf0b5"
		},
		{
			"deviceTime": "2014-08-23T14:55:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07f92ab4-9fbc-4e12-a852-da0747d000e9"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-23T20:00:00",
			"start": "2014-08-23T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "b372a272-9e16-49b9-9ee2-ff1b51c88f6f"
		},
		{
			"deviceTime": "2014-08-23T15:00:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a41f99fa-bab2-484f-83b2-27c087e39669"
		},
		{
			"deviceTime": "2014-08-23T15:05:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5716bbd2-071b-494c-891b-f94029fa8fd8"
		},
		{
			"deviceTime": "2014-08-23T15:10:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36e3e43f-06c1-42c2-862c-04a642008e7c"
		},
		{
			"deviceTime": "2014-08-23T15:15:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "838cc40b-7982-4265-b47c-64905d4bc1b4"
		},
		{
			"deviceTime": "2014-08-23T15:20:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94bcdfb1-c956-4f7d-a9ed-b2abfe44a199"
		},
		{
			"deviceTime": "2014-08-23T15:25:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fffb987b-4b6f-42a7-9b6b-90e2aa831212"
		},
		{
			"deviceTime": "2014-08-23T15:30:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8e33ced-8e54-4ef1-a2f8-a8fd2400bada"
		},
		{
			"deviceTime": "2014-08-23T15:35:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1886bed8-43b1-4d3a-94f0-61f9c5b8e7cf"
		},
		{
			"deviceTime": "2014-08-23T15:40:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9f286b6-f4f6-482a-93a8-60639f81c13e"
		},
		{
			"deviceTime": "2014-08-23T15:45:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35a35d12-54ec-4951-adee-a8b154efc377"
		},
		{
			"deviceTime": "2014-08-23T15:50:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "031cf636-12eb-431e-bb72-20c1a30e47ef"
		},
		{
			"deviceTime": "2014-08-23T15:55:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9406941-a87e-4d17-bd4b-bcb7522bfd37"
		},
		{
			"deviceTime": "2014-08-23T16:00:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4abeb52-9646-406c-9eb6-1cced4f1f727"
		},
		{
			"deviceTime": "2014-08-23T16:05:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ae42fe3-20ee-40e5-a632-9b7953c19456"
		},
		{
			"deviceTime": "2014-08-23T16:10:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82f2f817-537a-476a-9175-705629e6a157"
		},
		{
			"deviceTime": "2014-08-23T16:15:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6665bdaa-a592-406c-b40f-d8ee21395c9b"
		},
		{
			"deviceTime": "2014-08-23T16:20:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ed5e389-8800-4f64-aa26-fc1e45be70d1"
		},
		{
			"end": "2014-08-23T17:23:01",
			"start": "2014-08-23T16:23:01",
			"percent": 0,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "859f07aa-19cc-405a-be20-1a0960cb2db1"
		},
		{
			"deviceTime": "2014-08-23T16:25:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c97955c6-9d12-4c71-9255-cfc76d6844fe"
		},
		{
			"deviceTime": "2014-08-23T16:30:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcabb1fe-8514-4d38-9f2f-4d2bbe9edc11"
		},
		{
			"deviceTime": "2014-08-23T16:35:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a3634fa-6fa3-4d6b-800c-3dac3f26cf5e"
		},
		{
			"deviceTime": "2014-08-23T16:40:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27ead378-432a-437a-8642-da5001c56dd8"
		},
		{
			"deviceTime": "2014-08-23T16:45:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bce0b8c3-e2ec-4ede-afc0-85e606a7896c"
		},
		{
			"deviceTime": "2014-08-23T16:50:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f6f1351-0a47-4689-aa34-b6379e14e49a"
		},
		{
			"deviceTime": "2014-08-23T16:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc365082-fae9-467f-b948-6f5b86f67068"
		},
		{
			"deviceTime": "2014-08-23T17:00:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "701f28f2-83b3-4ddd-8194-702c6e06c823"
		},
		{
			"deviceTime": "2014-08-23T17:05:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae1c68f0-9422-49a4-ad6c-44f16449cf6b"
		},
		{
			"deviceTime": "2014-08-23T17:08:25",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "aab14c33-ac71-410e-b296-0e4466c1a3e3"
		},
		{
			"deviceTime": "2014-08-23T17:08:25",
			"value": 28,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "ea6c6f56-d4bc-4c9d-abd9-581c2f9c1bd0"
		},
		{
			"deviceTime": "2014-08-23T17:08:25",
			"id": "ea6c6f56-d4bc-4c9d-abd9-581c2f9c1bd0",
			"source": "demo",
			"joinKey": "8b5848e3-01d5-48b3-9af3-d5e1242e0d2c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 28
			}
		},
		{
			"deviceTime": "2014-08-23T17:08:25",
			"programmed": 1.9,
			"joinKey": "8b5848e3-01d5-48b3-9af3-d5e1242e0d2c",
			"value": 1.9,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "4afd6b0d-9fe5-4711-8193-030aff464ecc"
		},
		{
			"deviceTime": "2014-08-23T17:10:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "884279f9-c483-40f2-b3e5-e47002f4e305"
		},
		{
			"deviceTime": "2014-08-23T17:12:01",
			"value": 5,
			"source": "demo",
			"recommended": 5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "e9833b0d-f0ec-45f1-b41a-bb181efae05c"
		},
		{
			"deviceTime": "2014-08-23T17:15:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83207093-b9ad-4bf9-a5ea-5ffbcc9cc432"
		},
		{
			"deviceTime": "2014-08-23T17:20:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a4c59b7-cf9c-4d84-b938-8f438fbb1902"
		},
		{
			"deviceTime": "2014-08-23T17:25:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "395886b7-611a-4dae-8202-bf3dbd21325e"
		},
		{
			"deviceTime": "2014-08-23T17:30:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d4ffc3a-c48a-4592-94ab-e9af1a8def55"
		},
		{
			"deviceTime": "2014-08-23T17:35:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e00c493-8965-4944-9d91-9b75ba8cd4be"
		},
		{
			"deviceTime": "2014-08-23T17:40:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbd86a17-9b52-4057-a8fe-c21698621d20"
		},
		{
			"deviceTime": "2014-08-23T17:45:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d84bc41d-497a-457c-824c-dd8713885c73"
		},
		{
			"deviceTime": "2014-08-23T17:50:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e924956-91da-46bb-b15e-1ef41a087527"
		},
		{
			"deviceTime": "2014-08-23T17:55:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aee27699-c2de-41ea-8369-bde20aaa6468"
		},
		{
			"deviceTime": "2014-08-23T18:00:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51e75324-6c83-4dde-b52d-3c9d08043939"
		},
		{
			"deviceTime": "2014-08-23T18:05:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c5fe77b-0752-4f49-a87f-60684028836e"
		},
		{
			"deviceTime": "2014-08-23T18:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bb51e26-5020-48ee-8516-43af92fd8a38"
		},
		{
			"deviceTime": "2014-08-23T18:15:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3aeaef43-7f5d-4e6f-94d1-a9ace4f9ae8e"
		},
		{
			"deviceTime": "2014-08-23T18:20:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1bb1f293-4c0d-447f-93c9-f16b0bdf8e1d"
		},
		{
			"deviceTime": "2014-08-23T18:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c87e46b8-b833-4562-943f-7e28d1ac6859"
		},
		{
			"deviceTime": "2014-08-23T18:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3f92224-6cc4-483f-95c9-0ae11174f4c5"
		},
		{
			"deviceTime": "2014-08-23T18:35:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20a2ee7f-13ea-466f-bc3c-4307355eebfd"
		},
		{
			"deviceTime": "2014-08-23T18:40:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d92cb35-d54f-4058-8201-6ffcef1d872a"
		},
		{
			"deviceTime": "2014-08-23T18:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "793c98ad-9ef0-43dc-96ba-515c901e729f"
		},
		{
			"deviceTime": "2014-08-23T18:50:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "234ffc1e-c4b8-4bfe-93d8-d6bdeb2c9b58"
		},
		{
			"deviceTime": "2014-08-23T18:55:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e65a587d-f072-435f-b829-fcf41ad20b58"
		},
		{
			"deviceTime": "2014-08-23T19:00:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c59e8d33-541a-4771-b3dd-6da21836301d"
		},
		{
			"deviceTime": "2014-08-23T19:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9ee9b45-548a-4557-879c-897819facd2a"
		},
		{
			"deviceTime": "2014-08-23T19:10:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ba049ed-f2d5-4440-8929-63a3894d5ec4"
		},
		{
			"deviceTime": "2014-08-23T19:15:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdc65ecf-8f69-4781-aeaa-f4703007bdb0"
		},
		{
			"deviceTime": "2014-08-23T19:20:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e07fd5a1-0778-45a2-bdbd-0218183fd083"
		},
		{
			"deviceTime": "2014-08-23T19:25:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "992a2fec-b9c3-4e4f-924a-07be2a8d2c1b"
		},
		{
			"deviceTime": "2014-08-23T19:27:33",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "51b12512-fa90-4fb7-a0b0-83ab820e3515"
		},
		{
			"deviceTime": "2014-08-23T19:27:33",
			"value": 6,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e5b8ac66-ccbb-4b05-9398-df5f441eed40"
		},
		{
			"deviceTime": "2014-08-23T19:27:33",
			"id": "e5b8ac66-ccbb-4b05-9398-df5f441eed40",
			"source": "demo",
			"joinKey": "1e0b42f5-e3dc-46c2-9774-19e6aa783b2c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 6
			}
		},
		{
			"deviceTime": "2014-08-23T19:27:33",
			"joinKey": "1e0b42f5-e3dc-46c2-9774-19e6aa783b2c",
			"value": 0.4,
			"source": "demo",
			"recommended": 0.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "e6d6a006-923b-44ef-89b4-37a10846afee"
		},
		{
			"deviceTime": "2014-08-23T19:30:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d7b3e97-0496-4366-a28f-cab19b923a07"
		},
		{
			"deviceTime": "2014-08-23T19:35:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b47ccba-a91f-419d-8d6b-f1c7faf32681"
		},
		{
			"deviceTime": "2014-08-23T19:40:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5c2a218-57dd-4af7-a720-a03060a07ca0"
		},
		{
			"deviceTime": "2014-08-23T19:45:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ea82f24-fe42-4753-af97-83a3c3f03dc3"
		},
		{
			"deviceTime": "2014-08-23T19:50:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdcb53a0-f4cb-4b9f-9ea4-6623481833b6"
		},
		{
			"deviceTime": "2014-08-23T19:55:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5fc7d4c-0465-4238-9bd2-59e3565cd6ae"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-24T00:00:00",
			"start": "2014-08-23T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"id": "d8a970f1-7d99-45f2-969c-dd2205a39a47",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-23T20:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecfc2d0f-22a8-4403-8d92-8ccb9c188a78"
		},
		{
			"deviceTime": "2014-08-23T20:05:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "deeb2369-df89-446b-9ea3-c4637a1acac7"
		},
		{
			"deviceTime": "2014-08-23T20:10:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bca0c15a-153e-4b52-a2cf-787c846e4c65"
		},
		{
			"deviceTime": "2014-08-23T20:15:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15ea372c-6625-49af-9f38-2e157e4b3d6d"
		},
		{
			"deviceTime": "2014-08-23T20:20:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f4ae38c-a523-4f45-9b4b-3debae8d0cbe"
		},
		{
			"deviceTime": "2014-08-23T20:25:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aabb528d-d6b6-463d-a925-d96c1c2ab294"
		},
		{
			"deviceTime": "2014-08-23T20:30:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56295b61-c559-4303-8417-977ab5116c26"
		},
		{
			"deviceTime": "2014-08-23T20:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e2d7b1e-199b-4f36-8e0d-1758d9c02ef2"
		},
		{
			"deviceTime": "2014-08-23T20:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c8f261b-81b4-4779-910d-d2fa1367d10e"
		},
		{
			"deviceTime": "2014-08-23T20:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4926c197-da5c-47e2-a7ce-8185aa87608a"
		},
		{
			"deviceTime": "2014-08-23T20:50:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e831e0e-660d-4588-b6a4-5b6e12eee5be"
		},
		{
			"deviceTime": "2014-08-23T20:55:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2fcd9ae-f142-4fbf-b679-79702a2bb15e"
		},
		{
			"deviceTime": "2014-08-23T21:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b833624-6082-4358-90f1-44c440a0a1e7"
		},
		{
			"deviceTime": "2014-08-23T21:05:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4176385e-ad03-40d3-b48d-7274aa250f50"
		},
		{
			"deviceTime": "2014-08-23T21:10:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da726b0c-e486-4f24-80b7-8797b4933b05"
		},
		{
			"deviceTime": "2014-08-23T21:15:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89a75ba4-bc8b-401a-a30f-705ed261af9a"
		},
		{
			"deviceTime": "2014-08-23T21:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8730473c-f165-4b0c-94e1-4d8e97ef64b0"
		},
		{
			"deviceTime": "2014-08-23T21:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "922858fb-9704-4bef-a8fa-8ebbb0afd264"
		},
		{
			"deviceTime": "2014-08-23T21:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb7ae8c3-dcf2-470e-8a44-2e125d92cddf"
		},
		{
			"deviceTime": "2014-08-23T21:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32aaf26e-d8b2-409a-b7b5-be529f70bdf7"
		},
		{
			"deviceTime": "2014-08-23T21:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f20c30c-3a5f-4478-b6c4-d2ab68406194"
		},
		{
			"deviceTime": "2014-08-23T21:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7e1d5da-2f76-4ea8-b57c-5ca51c46576b"
		},
		{
			"deviceTime": "2014-08-23T21:50:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f921506e-3dbc-4039-9abf-09733c51f54c"
		},
		{
			"deviceTime": "2014-08-23T21:55:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b5bbdc2-5859-4073-9fb0-8b857723ff4a"
		},
		{
			"deviceTime": "2014-08-23T22:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91eaa308-2452-462b-a1a3-56ccf4b53ae7"
		},
		{
			"deviceTime": "2014-08-23T22:05:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9acb080d-4a1d-44fc-8e9d-5eb486e6fc55"
		},
		{
			"deviceTime": "2014-08-23T22:10:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aaf5a508-fa34-47d4-90e6-161aba6e6d27"
		},
		{
			"deviceTime": "2014-08-23T22:15:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fa24512-1338-4a64-aa4b-98240c30bbfb"
		},
		{
			"deviceTime": "2014-08-23T22:20:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5a8dc52-0b80-4d18-bc29-dc16ef1299d0"
		},
		{
			"deviceTime": "2014-08-23T22:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7771f6a2-8e78-4f2b-8b5b-bdd98a875137"
		},
		{
			"deviceTime": "2014-08-23T22:30:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bc2c8a7-13ae-47b5-ba40-4595ef33e68d"
		},
		{
			"deviceTime": "2014-08-23T22:35:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17ff735f-fda3-4eb8-8f24-9338116c372c"
		},
		{
			"deviceTime": "2014-08-23T22:40:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad04cd6f-682e-4066-9591-49d63448c7e3"
		},
		{
			"deviceTime": "2014-08-23T22:45:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bc19908-c731-4159-b32e-4b651a745fa4"
		},
		{
			"deviceTime": "2014-08-23T22:50:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10ca8c17-3c6f-4c5c-8199-91e1a436d6ab"
		},
		{
			"deviceTime": "2014-08-23T22:55:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c091cba2-fbfe-4b8e-9273-527ef717121e"
		},
		{
			"deviceTime": "2014-08-23T23:00:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d843b93-f1f4-4f24-b755-d4ce75b7535f"
		},
		{
			"deviceTime": "2014-08-23T23:05:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c856dde-e50a-47b1-950a-fda3d3d1eb01"
		},
		{
			"deviceTime": "2014-08-23T23:10:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76c300af-4d78-468e-93e2-1930aad55e88"
		},
		{
			"deviceTime": "2014-08-23T23:15:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f823fdd8-9b10-4506-b34b-861b8fe437e7"
		},
		{
			"deviceTime": "2014-08-23T23:20:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c9f08e5-2099-4848-8252-29c63edab618"
		},
		{
			"deviceTime": "2014-08-23T23:25:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b4c067e-2719-4769-b76d-1bb8bd2fd5f4"
		},
		{
			"deviceTime": "2014-08-23T23:30:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d08a424b-18f6-4789-881c-960f11a78018"
		},
		{
			"deviceTime": "2014-08-23T23:35:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a2e1d4f-4397-4756-a5ac-1b2088814971"
		},
		{
			"deviceTime": "2014-08-23T23:40:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0ecccef-1cdc-4d47-8753-7bd20adec968"
		},
		{
			"deviceTime": "2014-08-23T23:45:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d3c27bd-764f-4c33-88e6-58d058dafc56"
		},
		{
			"deviceTime": "2014-08-23T23:50:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "859d9ef4-edbd-4417-afb7-6aa8fd309ee9"
		},
		{
			"deviceTime": "2014-08-23T23:55:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d03628b4-d414-43e4-98e6-5ffb2c5e82f1"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-24T02:00:00",
			"start": "2014-08-24T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "4a71d353-078a-404a-9f54-f068f620eb9e"
		},
		{
			"deviceTime": "2014-08-24T00:00:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b4f0086-1055-44d7-ab6e-53b31d009267"
		},
		{
			"deviceTime": "2014-08-24T00:05:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38f97d1d-d973-4439-8f04-7991f5c9e554"
		},
		{
			"deviceTime": "2014-08-24T00:10:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "125ee77c-a1d9-4be7-927d-74abd512bee3"
		},
		{
			"deviceTime": "2014-08-24T00:15:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09758ad2-05e4-4440-8216-bd3b06f8516d"
		},
		{
			"deviceTime": "2014-08-24T00:20:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1443f19d-d383-403d-bdd0-87d40a5dfb26"
		},
		{
			"deviceTime": "2014-08-24T00:25:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6358e5b1-d7fe-43f2-bcc0-887623ed55c0"
		},
		{
			"deviceTime": "2014-08-24T00:30:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09f5f03e-422f-4577-b745-e5311dfcd768"
		},
		{
			"deviceTime": "2014-08-24T00:35:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70fc165b-50c0-4fa7-b44b-a86fb7089654"
		},
		{
			"deviceTime": "2014-08-24T00:40:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a942e30-b806-4003-bf1e-afadea8efd61"
		},
		{
			"deviceTime": "2014-08-24T00:42:39",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "21e6020d-7431-4e55-b2ce-fa40747cd1ab"
		},
		{
			"deviceTime": "2014-08-24T00:42:39",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "924275b0-2133-4c9a-86b3-f861e8badb69"
		},
		{
			"deviceTime": "2014-08-24T00:42:39",
			"id": "924275b0-2133-4c9a-86b3-f861e8badb69",
			"source": "demo",
			"joinKey": "bb1e4239-7b63-4afb-ae9c-c9f9cf96d093",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 93
			}
		},
		{
			"deviceTime": "2014-08-24T00:42:39",
			"programmed": 5.8,
			"joinKey": "bb1e4239-7b63-4afb-ae9c-c9f9cf96d093",
			"value": 5.8,
			"source": "demo",
			"recommended": 6.2,
			"extendedDelivery": 5.8,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "92e80ad2-6752-4359-ba8b-d177deff6e2d"
		},
		{
			"deviceTime": "2014-08-24T00:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1b5434d-fe8b-4115-93eb-5ec3a4cfd783"
		},
		{
			"deviceTime": "2014-08-24T00:50:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b362e52-5c15-42b4-873e-6f5b4fc5e021"
		},
		{
			"deviceTime": "2014-08-24T00:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d0403f5-97dd-4887-bcd0-9e0c561dc557"
		},
		{
			"deviceTime": "2014-08-24T01:00:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "584ad536-c4c1-40df-99da-173033dd7897"
		},
		{
			"deviceTime": "2014-08-24T01:05:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8145f195-bd7a-4271-8872-21f85bdc732e"
		},
		{
			"deviceTime": "2014-08-24T01:10:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1e1b5f3-efb2-42d5-bc31-e190fb843fd7"
		},
		{
			"deviceTime": "2014-08-24T01:15:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efc02d69-5e55-4bec-a31c-4e6fa3146616"
		},
		{
			"deviceTime": "2014-08-24T01:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b860beff-bbda-4217-a172-f52353d6a8b4"
		},
		{
			"deviceTime": "2014-08-24T01:25:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61085432-ac06-4e8f-a5c2-5d9fcd953648"
		},
		{
			"deviceTime": "2014-08-24T01:30:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "945f2c41-897e-43ad-a19c-1bf4b1462285"
		},
		{
			"deviceTime": "2014-08-24T01:35:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ae891a4-2e10-4c9c-adf3-57d86aafc4d5"
		},
		{
			"deviceTime": "2014-08-24T01:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd03e28b-4469-4ca3-adf5-c59c919be4b4"
		},
		{
			"deviceTime": "2014-08-24T01:45:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbf77462-11c2-480f-8daa-1cfdbe2c87bf"
		},
		{
			"deviceTime": "2014-08-24T01:50:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15d0b3b7-4adf-4399-818c-ffdba471309a"
		},
		{
			"deviceTime": "2014-08-24T01:55:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09f7f4ce-20d8-47ce-95b1-df7c2cab3b87"
		},
		{
			"deviceTime": "2014-08-24T01:56:57",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "77a2e798-dedf-4421-9cfd-b729ed67a028"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-24T04:00:00",
			"start": "2014-08-24T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "b8d66e5f-a071-4547-8a09-2936798e0e01"
		},
		{
			"deviceTime": "2014-08-24T02:00:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e24f9d5-8a46-4784-8b60-af0526618050"
		},
		{
			"deviceTime": "2014-08-24T02:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18a0cc5e-e0d6-48f6-a37a-426312f8120f"
		},
		{
			"deviceTime": "2014-08-24T02:10:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "239ed33d-5ae1-4f7e-b8dc-cc0f56c67136"
		},
		{
			"deviceTime": "2014-08-24T02:15:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98342c98-d5e4-424a-9477-2f2180c24e79"
		},
		{
			"deviceTime": "2014-08-24T02:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f75cdb6a-c96f-485e-9cf9-15fb323e8795"
		},
		{
			"deviceTime": "2014-08-24T02:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4070e525-ff43-44df-8c72-2e29e4414d01"
		},
		{
			"deviceTime": "2014-08-24T02:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e40397d-9c12-4dcb-afd2-13640206bcc0"
		},
		{
			"deviceTime": "2014-08-24T02:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29767425-7afa-49be-ad12-af08c98e2725"
		},
		{
			"deviceTime": "2014-08-24T02:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "489b326a-af77-4c21-b4c8-b784c02c455b"
		},
		{
			"deviceTime": "2014-08-24T02:45:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86b457f4-d0e8-488c-a6d1-6bc83b872a82"
		},
		{
			"deviceTime": "2014-08-24T02:50:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24d73441-9d5d-46bf-9999-9dc5d3ad1d25"
		},
		{
			"deviceTime": "2014-08-24T02:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf46863a-ba6f-4323-96c0-c63c26dbd136"
		},
		{
			"deviceTime": "2014-08-24T03:00:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5a80856-21b6-48b3-9a1d-4085d889387a"
		},
		{
			"deviceTime": "2014-08-24T03:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f1e6cc8-47fe-41d4-b254-f6333f38c5b4"
		},
		{
			"deviceTime": "2014-08-24T03:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20c7450b-ca8c-4bd3-b316-dde4b34c56c7"
		},
		{
			"deviceTime": "2014-08-24T03:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84319f2c-db64-4b23-a7fd-ae27addd5afd"
		},
		{
			"deviceTime": "2014-08-24T03:20:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c75a47c-d5e0-4856-886a-b0c58464bc7e"
		},
		{
			"deviceTime": "2014-08-24T03:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55659029-59ab-4db2-96cc-6f165900a51e"
		},
		{
			"deviceTime": "2014-08-24T03:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b5b2189-9189-434b-9a9b-7d391bc6cdbd"
		},
		{
			"deviceTime": "2014-08-24T03:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c53a2ea3-716f-4d09-918c-3800d59a327b"
		},
		{
			"deviceTime": "2014-08-24T03:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0ae27ba-7fd9-4d6f-82d2-4f0cbb01f909"
		},
		{
			"deviceTime": "2014-08-24T03:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45985ad7-a1d6-44ef-852e-5e875596fc5c"
		},
		{
			"deviceTime": "2014-08-24T03:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d81b4dc-fa56-4f96-8f07-294a485f41f3"
		},
		{
			"deviceTime": "2014-08-24T03:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75ec1974-afe3-42ac-9ba2-f14c0d66f904"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-24T05:00:00",
			"start": "2014-08-24T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "411dc287-daa8-4e51-83fa-b781c7d7a0c6"
		},
		{
			"deviceTime": "2014-08-24T04:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ed786aa-c9a7-4584-8e47-30f12c6287bf"
		},
		{
			"deviceTime": "2014-08-24T04:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "193508bd-6eaf-4e78-a723-d368bf35d79b"
		},
		{
			"deviceTime": "2014-08-24T04:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3a22dea-01be-4811-980b-920ded55ce75"
		},
		{
			"deviceTime": "2014-08-24T04:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f54ba004-3f07-4928-b41f-4f294bd14f67"
		},
		{
			"deviceTime": "2014-08-24T04:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1800523-63e9-4298-b595-a9a0904ac501"
		},
		{
			"deviceTime": "2014-08-24T04:25:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ad2c390-9328-4893-9279-91ba867482a5"
		},
		{
			"deviceTime": "2014-08-24T04:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f10e16d-c903-4b83-a6a3-74d5895bdb34"
		},
		{
			"deviceTime": "2014-08-24T04:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee53c790-bf68-4ccd-8980-c399db94aeef"
		},
		{
			"deviceTime": "2014-08-24T04:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cae9bf1f-478d-4df5-95d4-a9d478159873"
		},
		{
			"deviceTime": "2014-08-24T04:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb973f92-6e45-4ce4-8cb9-ab2d72ef5e7d"
		},
		{
			"deviceTime": "2014-08-24T04:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2ae80f0-f701-40f3-8f75-5656a27da72d"
		},
		{
			"deviceTime": "2014-08-24T04:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d956408-c3f9-4a01-960f-81360cdfffc4"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-24T06:00:00",
			"start": "2014-08-24T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "d0651801-910f-41b1-9d9e-6440acafb3c8"
		},
		{
			"deviceTime": "2014-08-24T05:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a6622e2-e7c1-4465-8fdf-3eba97859ab1"
		},
		{
			"deviceTime": "2014-08-24T05:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71e8536d-1e21-44ea-8881-835ad9532735"
		},
		{
			"deviceTime": "2014-08-24T05:09:01",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "cb94ef9a-81d0-4a9a-b2d8-52acfa286268"
		},
		{
			"deviceTime": "2014-08-24T05:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73e01f7d-2fc3-4c89-812b-f214474fbca4"
		},
		{
			"deviceTime": "2014-08-24T05:15:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28d96191-15e0-47aa-a761-9ea0d78543f4"
		},
		{
			"deviceTime": "2014-08-24T05:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad4e112f-17e7-4e6a-bdf9-df4c73d6bba5"
		},
		{
			"deviceTime": "2014-08-24T05:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2912c66a-34dd-47c3-bad0-06dba6748819"
		},
		{
			"deviceTime": "2014-08-24T05:28:13",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e6b27eff-b698-413e-90d0-8a55d4701f9a"
		},
		{
			"deviceTime": "2014-08-24T05:28:13",
			"value": 35,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "45dde28e-32f0-43b6-8eb8-62961cf0cf0b"
		},
		{
			"deviceTime": "2014-08-24T05:28:13",
			"id": "45dde28e-32f0-43b6-8eb8-62961cf0cf0b",
			"source": "demo",
			"joinKey": "49cce155-4ca2-441c-be21-646ff0b94def",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 35
			}
		},
		{
			"deviceTime": "2014-08-24T05:28:13",
			"suspendedAt": "2014-08-24T05:39:28",
			"programmed": 2.3,
			"joinKey": "49cce155-4ca2-441c-be21-646ff0b94def",
			"value": 2.3,
			"source": "demo",
			"recommended": 2.3,
			"extendedDelivery": 2.3,
			"deviceId": "Demo - 123",
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "9475e08d-5370-43b9-96ff-6c1412363911"
		},
		{
			"deviceTime": "2014-08-24T05:30:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b325f4c3-596d-47d8-88a3-4acd0cf68cf6"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-24T05:39:28",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "3d8fd4af-6b85-4493-8eca-0b6797bf03ac"
		},
		{
			"deviceTime": "2014-08-24T05:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa9cbbf4-6fca-4136-806a-50c069e28879"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-24T05:47:43",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "212e92b4-a6cf-4dcb-90ef-0fef26ceb869",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-24T05:39:28",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "3d8fd4af-6b85-4493-8eca-0b6797bf03ac"
			}
		},
		{
			"deviceTime": "2014-08-24T05:50:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65fdc4b7-5a89-4edb-8ffa-5145c1d81ef0"
		},
		{
			"deviceTime": "2014-08-24T05:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49c33b54-5525-4544-93a4-ee2d0bbc6404"
		},
		{
			"delivered": 1,
			"end": "2014-08-24T09:00:00",
			"start": "2014-08-24T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "305f2b61-a683-4a2f-b7e2-062ef54b0b40"
		},
		{
			"deviceTime": "2014-08-24T06:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b63536ff-a694-4f05-9df1-d1bb737d99fa"
		},
		{
			"deviceTime": "2014-08-24T06:05:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd8a55ba-4e6b-457a-ab0e-2bcf79c1a38d"
		},
		{
			"deviceTime": "2014-08-24T06:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cd6012c-115e-4abc-bcf5-2a8ecfee1a81"
		},
		{
			"deviceTime": "2014-08-24T06:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fc43618-f217-428a-b833-50dc7e440129"
		},
		{
			"deviceTime": "2014-08-24T06:20:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ceb24de-f8cb-40e8-9a9d-bedc172b63d3"
		},
		{
			"deviceTime": "2014-08-24T06:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a57a6830-7127-46a1-97d6-056bc2b4aa6d"
		},
		{
			"deviceTime": "2014-08-24T06:30:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a738888e-d278-4e4b-8fdb-6c7426adbae0"
		},
		{
			"deviceTime": "2014-08-24T06:35:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27e56d5d-2c81-47e8-ac83-31fd5f4ebcae"
		},
		{
			"deviceTime": "2014-08-24T07:05:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97cfbd79-fb9e-44ed-97e3-8a232fb77668"
		},
		{
			"end": "2014-08-24T10:06:01",
			"start": "2014-08-24T07:06:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "5c9d84a2-587b-49cd-b513-9a69e99f5e5c"
		},
		{
			"deviceTime": "2014-08-24T07:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ceaf480-5bc2-46be-9957-bdc4abc6e74a"
		},
		{
			"deviceTime": "2014-08-24T07:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24cb6f70-68b5-4949-a45f-1bed910d97ac"
		},
		{
			"deviceTime": "2014-08-24T07:20:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca499af8-d330-452c-a9f2-dddc4a2ee8af"
		},
		{
			"deviceTime": "2014-08-24T07:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1904e50b-a407-4879-a043-b1c7224621a5"
		},
		{
			"deviceTime": "2014-08-24T07:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fb43eb8-5cf9-4ce6-a9c8-e18b852e1c18"
		},
		{
			"deviceTime": "2014-08-24T07:35:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bb664a8-56a8-4b12-acd2-ef1c41568d6b"
		},
		{
			"deviceTime": "2014-08-24T07:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b04be177-b19c-4b76-92d0-4d7bdc64d228"
		},
		{
			"deviceTime": "2014-08-24T07:45:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2b0eb74-ca21-4ea0-a5e9-3ecafaf64e11"
		},
		{
			"deviceTime": "2014-08-24T07:50:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3b85138-1de6-4a13-b769-61628b984fad"
		},
		{
			"deviceTime": "2014-08-24T07:55:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f6f5196-5e76-4f49-9e68-46abdf3d0cf3"
		},
		{
			"deviceTime": "2014-08-24T08:00:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c71d5ca1-5e97-40e5-a7a4-304acb0771bf"
		},
		{
			"deviceTime": "2014-08-24T08:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd40f253-82c0-41c5-a111-59acc3819bcb"
		},
		{
			"deviceTime": "2014-08-24T08:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a265e44-d46b-4562-94aa-abc7d0075058"
		},
		{
			"deviceTime": "2014-08-24T08:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f57dfc9-5540-4c25-8d2f-5e03a4ff9635"
		},
		{
			"deviceTime": "2014-08-24T08:20:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "488a44f0-3e85-44b4-bb6a-5a9f6fcb672c"
		},
		{
			"deviceTime": "2014-08-24T08:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecd79009-340c-4194-98de-a9aca67a084b"
		},
		{
			"deviceTime": "2014-08-24T08:30:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8623d87-c505-4345-a0fc-9ecf1b5e5204"
		},
		{
			"deviceTime": "2014-08-24T08:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "338582ab-784d-4df6-8832-6aebffd7338b"
		},
		{
			"deviceTime": "2014-08-24T08:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "899cd174-1439-4564-8a9e-f992fd65ab15"
		},
		{
			"deviceTime": "2014-08-24T08:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d5c0c8f-9fdb-4819-9f91-aebea85ef5f3"
		},
		{
			"deviceTime": "2014-08-24T08:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cafc19c-c3fd-48fe-9bb7-6f9c68cef915"
		},
		{
			"deviceTime": "2014-08-24T08:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cc10fa9-769a-4d60-ba48-e22111ef50ce"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-24T15:00:00",
			"start": "2014-08-24T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "b77d3ed3-9c52-4319-a6a5-7cb96be8f8d9"
		},
		{
			"deviceTime": "2014-08-24T09:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f2a08b6-0d4a-46fe-bf28-b1e2825a67aa"
		},
		{
			"deviceTime": "2014-08-24T09:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94178dda-2052-4998-9dde-825feb1623fa"
		},
		{
			"deviceTime": "2014-08-24T09:09:52",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5b63fca3-296f-49ca-afd0-064d4ca2adca"
		},
		{
			"deviceTime": "2014-08-24T09:09:52",
			"value": 15,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "b63e394f-2f8b-4f74-880f-12934901cd7f"
		},
		{
			"deviceTime": "2014-08-24T09:09:52",
			"id": "b63e394f-2f8b-4f74-880f-12934901cd7f",
			"source": "demo",
			"joinKey": "2a6321e0-e172-4276-98df-1a103cec83f7",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 15
			}
		},
		{
			"deviceTime": "2014-08-24T09:09:52",
			"programmed": 1,
			"joinKey": "2a6321e0-e172-4276-98df-1a103cec83f7",
			"value": 1,
			"source": "demo",
			"recommended": 1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "720650d3-f0ed-4fc0-821f-25e1dec7a135"
		},
		{
			"deviceTime": "2014-08-24T09:10:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e1b4c54-e20f-46ce-b168-a70b76bc8f49"
		},
		{
			"deviceTime": "2014-08-24T09:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab2029dd-cb6e-4b62-b4f0-1a2dc32fa8ff"
		},
		{
			"deviceTime": "2014-08-24T09:20:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "475a7cc6-8827-4473-a3ee-f7b71c07870a"
		},
		{
			"deviceTime": "2014-08-24T09:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e1d8c91-6628-4d23-b04a-9d3899f51b56"
		},
		{
			"deviceTime": "2014-08-24T09:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d015af7-9ac0-45df-9d0f-2348ea8d0abb"
		},
		{
			"deviceTime": "2014-08-24T09:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17561146-b165-4383-87b8-0d7e1780ea7a"
		},
		{
			"deviceTime": "2014-08-24T09:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec1767ee-a016-4fe7-a1de-d63f514f845f"
		},
		{
			"deviceTime": "2014-08-24T09:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e4295ee-dad7-4c83-9e30-ca23692064ce"
		},
		{
			"deviceTime": "2014-08-24T09:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60d5a9fa-9061-4d9b-a76c-614a7d7b7b81"
		},
		{
			"deviceTime": "2014-08-24T09:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0d68072-9dfd-46d9-971a-3e5676bfda31"
		},
		{
			"deviceTime": "2014-08-24T10:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47206275-0c09-491f-87d0-46b31b76f65d"
		},
		{
			"deviceTime": "2014-08-24T10:05:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5b49271-0181-47ec-b782-bcb388916577"
		},
		{
			"deviceTime": "2014-08-24T10:10:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e83cd6bf-cad7-4d74-b5e8-177c6f9cd6ab"
		},
		{
			"deviceTime": "2014-08-24T10:15:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45d23026-7d87-4154-b193-55075ba43f10"
		},
		{
			"deviceTime": "2014-08-24T10:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a09852b-dedf-4ace-9b14-d1155e54f3ba"
		},
		{
			"deviceTime": "2014-08-24T10:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12351ea9-d0d8-4356-b2d5-8b22a73fcfae"
		},
		{
			"deviceTime": "2014-08-24T10:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bc42b56-c4d1-47c9-a39a-3dfc3a8dbac8"
		},
		{
			"deviceTime": "2014-08-24T10:35:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e55ccbb6-9de2-4b01-9dfc-cc2fe021466d"
		},
		{
			"deviceTime": "2014-08-24T10:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77615e8e-928b-458e-b8a4-911163666249"
		},
		{
			"deviceTime": "2014-08-24T10:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59ca1cf3-8e63-48df-aedc-7342a6051b58"
		},
		{
			"deviceTime": "2014-08-24T10:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddd4138b-f617-49b2-8fbf-317253c2871d"
		},
		{
			"deviceTime": "2014-08-24T10:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbd22d85-b0a1-4e13-9606-049ce8925241"
		},
		{
			"deviceTime": "2014-08-24T11:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59ccbc0c-23d3-474c-8cbc-ddf4f573ddd1"
		},
		{
			"deviceTime": "2014-08-24T11:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94306eca-252a-423c-8e41-128eb5cd09fb"
		},
		{
			"deviceTime": "2014-08-24T11:10:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "167b0b8b-228e-4f44-8b46-412f6b09fed4"
		},
		{
			"messageText": "Turkey ut sunt consectetur esse eu short ribs leberkas dolore pariatur cillum duis.",
			"parentMessage": "",
			"utcTime": "2014-08-24T11:17:44Z",
			"type": "message",
			"id": "83cccb8d-3305-45c1-aadb-3df73be400a8"
		},
		{
			"deviceTime": "2014-08-24T11:30:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8713d1c3-b80d-4a1d-8e2f-aa3392ed633d"
		},
		{
			"deviceTime": "2014-08-24T11:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e04b0ba0-5ab2-4e41-b216-3b0f47534568"
		},
		{
			"deviceTime": "2014-08-24T12:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb6e2159-5d84-4925-9a8a-40a0b16f78ec"
		},
		{
			"deviceTime": "2014-08-24T12:10:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc5693c8-3416-48c8-a5a2-1c532f78ee76"
		},
		{
			"deviceTime": "2014-08-24T12:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7150df58-04a8-4c95-b855-6da112a13069"
		},
		{
			"deviceTime": "2014-08-24T12:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f5acd47-c940-4c64-a1e7-db09b6f1c905"
		},
		{
			"deviceTime": "2014-08-24T12:25:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94109e7e-c33b-400f-9d3d-c2673296d4d4"
		},
		{
			"deviceTime": "2014-08-24T12:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3e69da7-70d8-4385-934a-57765ca3e7fe"
		},
		{
			"deviceTime": "2014-08-24T12:35:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c416511-acde-4e0d-b4bf-e93b48401e3f"
		},
		{
			"deviceTime": "2014-08-24T12:40:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8da6a7bc-27cb-4739-8c2d-79c0f735ccb8"
		},
		{
			"deviceTime": "2014-08-24T12:45:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f16fa80c-8a41-4d3b-85c2-b93a64fcf080"
		},
		{
			"deviceTime": "2014-08-24T12:50:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66743f78-e653-45a9-a1f6-8a628868628f"
		},
		{
			"deviceTime": "2014-08-24T12:55:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90514094-2cfc-465f-8805-9bd296e12b66"
		},
		{
			"deviceTime": "2014-08-24T13:00:22",
			"value": 219,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8447659f-9341-4aaa-a4c2-1ffc843a8d99"
		},
		{
			"end": "2014-08-24T15:32:01",
			"start": "2014-08-24T13:02:01",
			"percent": 1.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 9000000,
			"type": "basal-rate-segment",
			"id": "1fe75dcc-98da-4a4b-b7f8-c6ef7986eabf"
		},
		{
			"deviceTime": "2014-08-24T13:05:22",
			"value": 223,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b2b0fa9-004c-44eb-a523-20ca340ee494"
		},
		{
			"deviceTime": "2014-08-24T13:10:22",
			"value": 231,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "150527f1-4f7f-4fcc-bc4e-e6e44e8aa378"
		},
		{
			"deviceTime": "2014-08-24T13:15:22",
			"value": 234,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9695699a-fa78-4791-97bc-75a2b1c7e621"
		},
		{
			"deviceTime": "2014-08-24T13:20:22",
			"value": 229,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9ff92e1-8852-4a0a-bdb4-9bd5407c9d43"
		},
		{
			"deviceTime": "2014-08-24T13:25:22",
			"value": 232,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9cd9fc1-11c5-4343-8da6-ef5539f07bd9"
		},
		{
			"deviceTime": "2014-08-24T13:30:22",
			"value": 235,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19c96ac4-3e63-4a55-b93f-24b402bf4e5c"
		},
		{
			"deviceTime": "2014-08-24T13:42:19",
			"value": 218,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "f3f011d2-52af-43d8-af59-847f61f48bb8"
		},
		{
			"deviceTime": "2014-08-24T13:42:19",
			"value": 37,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "26e660da-318c-489b-872b-d23cc036998e"
		},
		{
			"deviceTime": "2014-08-24T13:42:19",
			"id": "26e660da-318c-489b-872b-d23cc036998e",
			"source": "demo",
			"joinKey": "67fedfa1-4ac3-4bf9-bfd4-0a72c80cbeb9",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 37
			}
		},
		{
			"deviceTime": "2014-08-24T13:42:19",
			"programmed": 2.5,
			"joinKey": "67fedfa1-4ac3-4bf9-bfd4-0a72c80cbeb9",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "cbaa2de9-ce80-4a21-94cf-d5c428d7b807"
		},
		{
			"deviceTime": "2014-08-24T13:55:22",
			"value": 234,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f80991e7-62c2-44a2-b540-2d6bf484717b"
		},
		{
			"deviceTime": "2014-08-24T14:00:22",
			"value": 230,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f1a90c6-a881-4cb5-b624-aa908c25d953"
		},
		{
			"deviceTime": "2014-08-24T14:05:22",
			"value": 231,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ca13970-5322-463a-a688-c1292d1c4c00"
		},
		{
			"deviceTime": "2014-08-24T14:10:22",
			"value": 227,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdd9c784-d80a-47fc-a473-9083ee287314"
		},
		{
			"deviceTime": "2014-08-24T14:15:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b89dc91-e9fc-4e35-924d-cef9b68c0b7f"
		},
		{
			"deviceTime": "2014-08-24T14:20:22",
			"value": 212,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8a2dac5-723a-4477-9b23-47beb982b647"
		},
		{
			"deviceTime": "2014-08-24T14:25:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40d9890f-1719-4090-b895-0409f7a6f998"
		},
		{
			"deviceTime": "2014-08-24T14:30:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfc3a318-edb2-49b1-9b2a-6b5859b9aeb5"
		},
		{
			"deviceTime": "2014-08-24T14:35:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d79d2b7b-2dbb-4003-b71d-4f2e6486cb5a"
		},
		{
			"deviceTime": "2014-08-24T14:40:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fb517eb-ec53-4d91-b112-a5168278e581"
		},
		{
			"deviceTime": "2014-08-24T14:45:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab8a0191-8c36-4dcd-963b-b3e4813a2bdf"
		},
		{
			"deviceTime": "2014-08-24T14:50:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "496dfc8d-be39-40e4-b1ae-a4aac05148b3"
		},
		{
			"deviceTime": "2014-08-24T14:55:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d1d62e9-e332-49d8-a11e-f0a7220822a8"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-24T20:00:00",
			"start": "2014-08-24T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "931db744-b427-4f05-a0ed-c7f7b46c69d3"
		},
		{
			"deviceTime": "2014-08-24T15:00:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e438ccc4-5f0a-4a35-b5cd-67a048c1d942"
		},
		{
			"deviceTime": "2014-08-24T15:05:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41e1007a-8949-461f-81af-0d217817ec0a"
		},
		{
			"deviceTime": "2014-08-24T15:10:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12c887ef-5aba-4855-b551-48a705491512"
		},
		{
			"deviceTime": "2014-08-24T15:15:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92378f2a-2762-481b-ab83-a03ceea1a0f3"
		},
		{
			"deviceTime": "2014-08-24T15:20:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7dec5a73-558f-432f-b8a7-5fef60367038"
		},
		{
			"deviceTime": "2014-08-24T15:25:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "855848f3-6556-400e-929c-333267f07961"
		},
		{
			"deviceTime": "2014-08-24T15:30:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7924a4c8-49cc-4f3d-bf4a-9a0c805eb657"
		},
		{
			"deviceTime": "2014-08-24T15:35:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "427ee3ec-e4d2-4136-9975-a9d449dc64bf"
		},
		{
			"deviceTime": "2014-08-24T15:40:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34adbd65-bd4e-4dec-89db-1aa262ffe588"
		},
		{
			"deviceTime": "2014-08-24T15:45:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5112ef1-4315-448f-9c24-c3a0ca725db7"
		},
		{
			"deviceTime": "2014-08-24T15:50:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61dc6329-701a-487b-a887-7bce0543ae99"
		},
		{
			"deviceTime": "2014-08-24T15:55:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db4035bb-b448-4d4e-91e8-e98a16cd9db2"
		},
		{
			"deviceTime": "2014-08-24T16:00:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "566ae0ac-a178-4526-902e-5caa3c5a74c1"
		},
		{
			"deviceTime": "2014-08-24T16:05:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edeb5f66-8c6c-4329-9899-16698cc5a6ba"
		},
		{
			"deviceTime": "2014-08-24T16:10:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c243b2e-f06e-4014-8a6a-ec82697253b6"
		},
		{
			"deviceTime": "2014-08-24T16:10:54",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4a461772-cf5e-4d13-97bd-addede08d3b9"
		},
		{
			"deviceTime": "2014-08-24T16:10:54",
			"value": 38,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fb194700-04fe-41de-9a40-19ef655be2a2"
		},
		{
			"deviceTime": "2014-08-24T16:10:54",
			"id": "fb194700-04fe-41de-9a40-19ef655be2a2",
			"source": "demo",
			"joinKey": "70e57137-6d2f-49ec-a495-0e5ace97a36f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 38
			}
		},
		{
			"deviceTime": "2014-08-24T16:10:54",
			"programmed": 2.5,
			"joinKey": "70e57137-6d2f-49ec-a495-0e5ace97a36f",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "97840b79-08df-4bea-a704-ffc054e44afb"
		},
		{
			"deviceTime": "2014-08-24T16:15:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "253eac24-bb24-4bee-8e84-6b3c98f98015"
		},
		{
			"deviceTime": "2014-08-24T16:20:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "515d0f1b-e65c-4c69-a1ca-281bd66bd04f"
		},
		{
			"deviceTime": "2014-08-24T16:25:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4700898-ead1-4a88-992d-6ed2be3a3802"
		},
		{
			"deviceTime": "2014-08-24T16:30:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "499c8085-1f2f-4f58-9d02-f58c129276ce"
		},
		{
			"deviceTime": "2014-08-24T16:35:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20fe16a3-599b-4905-a0c5-70e8a8772a2e"
		},
		{
			"deviceTime": "2014-08-24T16:40:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e91b5731-e795-4610-aa8a-e800842ac741"
		},
		{
			"deviceTime": "2014-08-24T16:45:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f278bc7-8199-41f1-9bca-a4fc995dcddd"
		},
		{
			"deviceTime": "2014-08-24T16:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1229d1e3-cf2b-4bf4-a8e5-00d5ecb676d4"
		},
		{
			"deviceTime": "2014-08-24T16:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90f2db06-79ae-4c7b-8a95-687e29b917ae"
		},
		{
			"deviceTime": "2014-08-24T17:00:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91178c34-9880-4c7b-9687-1e5302d1d2fa"
		},
		{
			"deviceTime": "2014-08-24T17:05:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ed45f98-621f-4eda-9a5e-1fd69c792067"
		},
		{
			"deviceTime": "2014-08-24T17:07:01",
			"value": 0.5,
			"source": "demo",
			"recommended": 0.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "fe06677c-0a2f-4843-a83d-77cac5591fa6"
		},
		{
			"deviceTime": "2014-08-24T17:10:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4077cf9e-c4a3-46ba-8494-59a4994e05e1"
		},
		{
			"deviceTime": "2014-08-24T17:15:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22c47212-d3be-49b1-9c4b-66ac645cf357"
		},
		{
			"deviceTime": "2014-08-24T17:40:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8525e247-6117-4178-981a-20a513d63f75"
		},
		{
			"deviceTime": "2014-08-24T17:45:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed58069e-50e4-4066-99fe-dc4a4dd14469"
		},
		{
			"deviceTime": "2014-08-24T17:50:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2db1906-570a-49fe-abf2-d2cf7472d549"
		},
		{
			"deviceTime": "2014-08-24T17:55:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d860092-7f18-4a99-948f-bcad6b72f233"
		},
		{
			"deviceTime": "2014-08-24T18:00:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a12598e0-610b-4e28-9c25-f1a8abf475fb"
		},
		{
			"deviceTime": "2014-08-24T18:05:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7535122f-4cb7-4bfb-8fc8-bf9f840fd67c"
		},
		{
			"deviceTime": "2014-08-24T18:10:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1dd52c7-3670-47c4-a4b5-0c95250e16e0"
		},
		{
			"deviceTime": "2014-08-24T18:15:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31b10e89-85a6-4695-80c2-cae17a96f979"
		},
		{
			"deviceTime": "2014-08-24T18:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "705dca28-ee50-4cc7-9f19-7685534e0e0e"
		},
		{
			"deviceTime": "2014-08-24T18:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57124a2a-3b83-44e0-a174-ac2730fc5bc9"
		},
		{
			"deviceTime": "2014-08-24T18:40:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59ca4e36-3df5-4633-87a3-f171a2c40bb3"
		},
		{
			"deviceTime": "2014-08-24T18:45:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eccd6ccd-25e8-4649-8b90-355b5cb23f57"
		},
		{
			"deviceTime": "2014-08-24T18:50:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e79c8e4-50ca-48bf-ba97-9b67355ff046"
		},
		{
			"deviceTime": "2014-08-24T18:55:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c12af593-2cc3-4150-a7d3-2acd3083c142"
		},
		{
			"deviceTime": "2014-08-24T19:00:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "965c0220-561e-4c3f-96ea-5a2f25bb051c"
		},
		{
			"deviceTime": "2014-08-24T19:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df920ff3-d3e4-410e-ba87-6dd5545545d7"
		},
		{
			"deviceTime": "2014-08-24T19:10:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "944df6ea-2254-48f5-ba6d-44ee7067c284"
		},
		{
			"deviceTime": "2014-08-24T19:15:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25f30c4b-b225-45bd-94d5-a36be6e19c17"
		},
		{
			"deviceTime": "2014-08-24T19:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f832a573-8f30-495b-9bd8-29ea4eaabffe"
		},
		{
			"deviceTime": "2014-08-24T19:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "635f6f3f-664a-4e24-8d4e-6a74f8ce8399"
		},
		{
			"deviceTime": "2014-08-24T19:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c939487-da07-4a86-9161-10842e79d88e"
		},
		{
			"deviceTime": "2014-08-24T19:35:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93155cd3-79f8-4830-8df7-3ad06f81d3f4"
		},
		{
			"deviceTime": "2014-08-24T19:40:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31df1eca-530b-4622-82ae-842a6521e935"
		},
		{
			"deviceTime": "2014-08-24T19:45:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf4a8e1e-d3c5-4992-add7-cd317126c07d"
		},
		{
			"deviceTime": "2014-08-24T19:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a26c3f74-97a7-4950-ae70-824c4bd50640"
		},
		{
			"deviceTime": "2014-08-24T19:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d906440-cc54-4be1-8244-ef3a90149eea"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-25T00:00:00",
			"start": "2014-08-24T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "178a25a6-65b3-4e94-b39e-1020269b1ba8"
		},
		{
			"deviceTime": "2014-08-24T20:00:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a66f595b-ea5d-4727-9e05-b6ebbe4f1bb6"
		},
		{
			"deviceTime": "2014-08-24T20:05:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bad8339-a172-47ba-ad1a-b32599553873"
		},
		{
			"deviceTime": "2014-08-24T20:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "374e8fab-fa8c-4c55-ac50-b6acf80626e7"
		},
		{
			"deviceTime": "2014-08-24T20:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1ba4e93-cfb7-4303-9fcb-80f569968035"
		},
		{
			"deviceTime": "2014-08-24T20:20:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3dfc239-b2ca-4d06-ade5-c86c0ff924df"
		},
		{
			"deviceTime": "2014-08-24T20:25:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2337bbce-c81e-4730-bf4b-08d96bf2b42e"
		},
		{
			"deviceTime": "2014-08-24T20:30:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b205a7e-b20e-4cd9-9e0e-2aa5bbf41c62"
		},
		{
			"deviceTime": "2014-08-24T20:35:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbc78b87-f6ae-4749-a5b2-1e5301faf3cb"
		},
		{
			"deviceTime": "2014-08-24T20:40:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec0e47ea-0494-4943-b158-bc3ece84ec07"
		},
		{
			"deviceTime": "2014-08-24T20:45:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb92d8c2-7791-4441-9505-f4477aaefeb1"
		},
		{
			"deviceTime": "2014-08-24T20:50:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23f334ef-7174-48e0-9293-942a50db102e"
		},
		{
			"deviceTime": "2014-08-24T20:55:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbb255a0-058d-4e94-89aa-dcf705186ae6"
		},
		{
			"deviceTime": "2014-08-24T21:00:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f77002d7-d17c-4458-8de8-3e71d18fe027"
		},
		{
			"deviceTime": "2014-08-24T21:05:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30ac4f64-c653-4cba-a91c-6a09edf2ae2c"
		},
		{
			"deviceTime": "2014-08-24T21:10:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1acc0d5-49b2-4fed-b3be-a67047d8899d"
		},
		{
			"deviceTime": "2014-08-24T21:15:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54584707-7c5b-45f1-8891-626f20bb5768"
		},
		{
			"deviceTime": "2014-08-24T21:20:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0499af40-7523-4cdd-a961-040a15a0dbd4"
		},
		{
			"deviceTime": "2014-08-24T21:25:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce954367-7613-4647-8cbb-a60af7f52e8b"
		},
		{
			"deviceTime": "2014-08-24T21:30:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f91758dc-64d6-4c3b-86b6-800bd47c11f7"
		},
		{
			"deviceTime": "2014-08-24T21:35:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f260f331-e143-42a5-a572-9001ade4ba11"
		},
		{
			"deviceTime": "2014-08-24T21:40:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0d1dea7-e9a6-4786-8781-7a843628ae1c"
		},
		{
			"deviceTime": "2014-08-24T21:45:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b32624d5-d359-4afc-8458-6ff73e34e7e4"
		},
		{
			"deviceTime": "2014-08-24T21:50:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5606d184-ee23-4758-9888-2f6b56ab7f64"
		},
		{
			"deviceTime": "2014-08-24T21:55:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c01a8e21-b07a-4218-a3c2-5dd350b1341d"
		},
		{
			"deviceTime": "2014-08-24T22:00:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b80e664e-c3ea-4d95-a67d-2877515d45af"
		},
		{
			"deviceTime": "2014-08-24T22:05:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc5f5c52-dc23-475e-b5f8-37651fc50599"
		},
		{
			"deviceTime": "2014-08-24T22:10:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb6cc3c9-6c52-452d-8412-e09167a3ab62"
		},
		{
			"deviceTime": "2014-08-24T22:15:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf8f6b5d-9201-47ff-ba4e-c8f3e9d31e34"
		},
		{
			"end": "2014-08-24T23:46:01",
			"start": "2014-08-24T22:16:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "10f72b64-3ea9-4453-b19d-0f928eae5c1a"
		},
		{
			"deviceTime": "2014-08-24T22:20:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1641230-ae64-45dd-870d-519da0fb83b8"
		},
		{
			"deviceTime": "2014-08-24T22:25:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29f65d03-6fe6-4440-9fa0-a0ea302f01e1"
		},
		{
			"deviceTime": "2014-08-24T22:30:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fe45895-d0a1-4ec1-bff6-ee0ca11aa1d8"
		},
		{
			"deviceTime": "2014-08-24T22:35:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2667dded-8436-4655-9608-0d7c27bab18d"
		},
		{
			"deviceTime": "2014-08-24T22:40:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1da59a7-389a-4527-8d8a-cf258df7b80a"
		},
		{
			"deviceTime": "2014-08-24T22:41:09",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "f785a3d5-ba41-4fdd-9203-9530a04260d0"
		},
		{
			"deviceTime": "2014-08-24T22:41:09",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "305c9ecc-d916-4d6b-bc95-0f32fa9dfb19"
		},
		{
			"deviceTime": "2014-08-24T22:41:09",
			"id": "305c9ecc-d916-4d6b-bc95-0f32fa9dfb19",
			"source": "demo",
			"joinKey": "a9a559e3-0bde-471a-9d2b-a8d4801d5d33",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 77
			}
		},
		{
			"deviceTime": "2014-08-24T22:45:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b8657a3-a376-48f8-80d3-2581a8a2245c"
		},
		{
			"deviceTime": "2014-08-24T22:50:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9418d516-8cf9-41b0-a3f6-66c90ef55702"
		},
		{
			"deviceTime": "2014-08-24T22:55:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1266e4a-c05d-4732-b89b-816a3186dfe8"
		},
		{
			"deviceTime": "2014-08-24T23:00:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22775d20-230d-40da-99a8-ffb765a76cb3"
		},
		{
			"deviceTime": "2014-08-24T23:05:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7cedff9-e3f0-4509-b9f2-30f30a3e23b4"
		},
		{
			"deviceTime": "2014-08-24T23:10:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10d71757-f5ec-4dc9-8dc1-e30c71002a95"
		},
		{
			"deviceTime": "2014-08-24T23:15:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "384e50a7-6515-46d9-974e-c809bf37f358"
		},
		{
			"deviceTime": "2014-08-24T23:20:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd7a0b67-6c93-4bc9-8a06-65badc4e22f6"
		},
		{
			"deviceTime": "2014-08-24T23:25:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bb313a3-51db-48e5-bf5f-bfa960d4ff21"
		},
		{
			"deviceTime": "2014-08-24T23:30:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e33bc9f-3150-4468-b6ff-0ebb13e73f50"
		},
		{
			"deviceTime": "2014-08-24T23:35:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "921e795c-0d82-4463-98cc-a3da5e7600b9"
		},
		{
			"deviceTime": "2014-08-24T23:40:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b40439d9-7a50-4ea2-9206-976a8cd7faea"
		},
		{
			"deviceTime": "2014-08-24T23:45:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68beb53f-0df9-4ee6-bb2a-86b8383136d3"
		},
		{
			"deviceTime": "2014-08-24T23:50:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37086175-0049-499c-bfe4-8ce3fca54607"
		},
		{
			"deviceTime": "2014-08-24T23:55:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "104d165d-d3f1-43f4-a5a5-d7e1eaad9b51"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-25T02:00:00",
			"start": "2014-08-25T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "ad8ae6e9-0b4f-4eb5-a556-660fb0ea4b4a"
		},
		{
			"deviceTime": "2014-08-25T00:00:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddc11cc3-7716-47d3-bddf-f05e4530f7bb"
		},
		{
			"deviceTime": "2014-08-25T00:05:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e23a3d8-010e-4c76-919d-a3ca91bcaab9"
		},
		{
			"deviceTime": "2014-08-25T00:10:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ba262eb-6dee-462c-8861-a1c962844450"
		},
		{
			"deviceTime": "2014-08-25T00:15:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "875f3352-7c45-4380-baf3-62575174cabd"
		},
		{
			"deviceTime": "2014-08-25T00:20:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17b10b6e-f030-462b-ad90-23ee2682f55b"
		},
		{
			"deviceTime": "2014-08-25T00:25:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc35a6eb-1a32-4336-a13a-a5bda47bb7ad"
		},
		{
			"deviceTime": "2014-08-25T00:30:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e5c15c9-eff4-49de-a846-9db6812d1e03"
		},
		{
			"deviceTime": "2014-08-25T00:35:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91fe75d6-555c-48b8-8b9e-d5221889d938"
		},
		{
			"deviceTime": "2014-08-25T00:40:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7dc75224-cd69-4f91-919a-9ba05b8a338e"
		},
		{
			"deviceTime": "2014-08-25T00:45:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcbf1b1d-0831-42d2-bb20-dddf1b235412"
		},
		{
			"deviceTime": "2014-08-25T00:50:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "318417a7-92ea-4bf4-8636-ec4c0bec1304"
		},
		{
			"deviceTime": "2014-08-25T00:55:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e8248e5-4f67-41af-a66c-ab1a0e8267d1"
		},
		{
			"deviceTime": "2014-08-25T01:00:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "010085d7-a3c5-470e-98f5-fa66cdc20798"
		},
		{
			"deviceTime": "2014-08-25T01:05:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc476d65-4e22-49f1-9286-d455bd0405bb"
		},
		{
			"deviceTime": "2014-08-25T01:10:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12548f5e-03f6-46e1-a2e5-7876e23fd1ec"
		},
		{
			"deviceTime": "2014-08-25T01:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93c4a1fb-a96e-4d47-802d-70079a7e166d"
		},
		{
			"deviceTime": "2014-08-25T01:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a650e219-273b-4b77-a87c-799303c33c12"
		},
		{
			"deviceTime": "2014-08-25T01:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cd80496-6bf6-41bd-b3db-7c93b349b501"
		},
		{
			"deviceTime": "2014-08-25T01:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "378ad117-3d29-4c84-b747-0e9fdb198953"
		},
		{
			"deviceTime": "2014-08-25T01:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96cd65e1-0507-4cc6-a00d-f6eefdc48b1d"
		},
		{
			"deviceTime": "2014-08-25T01:40:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38d55f32-be5a-4032-9d68-b9021d29570b"
		},
		{
			"deviceTime": "2014-08-25T01:45:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "544c2ca4-69e2-4c10-9c5a-c23ec45908be"
		},
		{
			"deviceTime": "2014-08-25T01:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8849c52c-e070-4f9e-bb1c-c34fef13fd8f"
		},
		{
			"deviceTime": "2014-08-25T01:55:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24f68101-52c4-457b-93e2-ba5df374e532"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-25T04:00:00",
			"start": "2014-08-25T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"id": "6061586c-024e-4407-ad64-f9a89a88c7a6",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-25T02:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d24713a-9175-4b56-8b19-953c3b92b651"
		},
		{
			"deviceTime": "2014-08-25T02:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "848b1665-9f37-4788-af5a-e478196e6237"
		},
		{
			"deviceTime": "2014-08-25T02:10:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f51d33b-7a5e-4ff1-9ce1-76f74bd32b07"
		},
		{
			"deviceTime": "2014-08-25T02:15:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d31231fd-2473-4569-bfa9-011117e21ade"
		},
		{
			"deviceTime": "2014-08-25T02:20:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7cb2f5a-7157-484d-a22f-466d5ba0b292"
		},
		{
			"deviceTime": "2014-08-25T02:25:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b4c78c5-b753-4b71-b625-a21ea65cbbff"
		},
		{
			"deviceTime": "2014-08-25T02:30:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5c762e4-ae1f-4961-b95d-337014245f1e"
		},
		{
			"deviceTime": "2014-08-25T02:35:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "551c836f-f9e9-4ba8-b1a2-c5d9dc1aa4b5"
		},
		{
			"deviceTime": "2014-08-25T02:40:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a76f6b7f-07ed-483f-bf34-cb576cd6a4eb"
		},
		{
			"deviceTime": "2014-08-25T02:45:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15924425-4f6c-4889-be9f-36603e5f9003"
		},
		{
			"deviceTime": "2014-08-25T02:50:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df5af4c1-6739-4d80-b028-a7fc4e9c30e4"
		},
		{
			"deviceTime": "2014-08-25T02:55:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25ebeb32-8445-4f92-b242-b93af3c0e067"
		},
		{
			"deviceTime": "2014-08-25T03:00:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "340c00a0-0cae-4e7c-9bf2-6f055c538cb3"
		},
		{
			"deviceTime": "2014-08-25T03:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3bf609e-f245-47f7-84b1-df77e41ad2d5"
		},
		{
			"deviceTime": "2014-08-25T03:10:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5dde1ec4-5ff8-4eae-834d-9d615692cb4b"
		},
		{
			"deviceTime": "2014-08-25T03:15:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a2df6bd-f03d-49ee-a5df-e2014bbdabdd"
		},
		{
			"deviceTime": "2014-08-25T03:20:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "917275c6-4145-4e28-971f-c041553b1288"
		},
		{
			"deviceTime": "2014-08-25T03:25:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02b60c3a-6bb6-49ac-827a-168c89952003"
		},
		{
			"deviceTime": "2014-08-25T03:30:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77c74705-d0ae-4830-b3dd-f3e4a8b1affb"
		},
		{
			"deviceTime": "2014-08-25T03:35:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "391161d0-7353-4684-8032-b375cc3c272e"
		},
		{
			"deviceTime": "2014-08-25T03:40:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed40695f-fb12-46f1-b712-a987081c8626"
		},
		{
			"deviceTime": "2014-08-25T03:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abd143d4-f8c4-42ff-b34e-b14ddaae8f54"
		},
		{
			"deviceTime": "2014-08-25T03:50:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62d0f5ce-21a0-402f-b734-1c55db0e318f"
		},
		{
			"deviceTime": "2014-08-25T03:55:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56188fa0-137c-4360-8d7e-770596947cf8"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-25T05:00:00",
			"start": "2014-08-25T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "461a8449-980c-460c-a1d9-003a2b094907"
		},
		{
			"deviceTime": "2014-08-25T04:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c43ca0c-7278-4818-8362-a1886e6c69f9"
		},
		{
			"deviceTime": "2014-08-25T04:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c5a5171-3338-4bfd-bb4a-f65935562134"
		},
		{
			"deviceTime": "2014-08-25T04:25:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "136ea8b8-8d3d-4f0f-8864-d736fe18fced"
		},
		{
			"deviceTime": "2014-08-25T04:30:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04e4289f-f7f9-426c-a057-bf1d72b49cc1"
		},
		{
			"deviceTime": "2014-08-25T04:35:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0f11424-6eaa-4ab6-b29e-81f2153a2196"
		},
		{
			"deviceTime": "2014-08-25T04:40:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0bf8c9d-ae2e-4c2e-a450-797083b34462"
		},
		{
			"deviceTime": "2014-08-25T04:45:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "853efc3a-c047-44fa-8f32-6accd4d371b8"
		},
		{
			"deviceTime": "2014-08-25T04:50:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "922d8aaa-2ab4-43dc-ad5f-c5a765f21bca"
		},
		{
			"deviceTime": "2014-08-25T04:55:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3302c42b-6014-47f1-ab19-39a041f486b6"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-25T06:00:00",
			"start": "2014-08-25T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "11a82fbc-e1db-4dfe-adbf-08a11d9d88f9"
		},
		{
			"deviceTime": "2014-08-25T05:00:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a99395f7-17d3-4c19-bc1f-66de1054dd5b"
		},
		{
			"deviceTime": "2014-08-25T05:08:01",
			"value": 2.5,
			"source": "demo",
			"recommended": 3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1ff2f1fa-eee4-420b-82cb-a349a61a006d"
		},
		{
			"deviceTime": "2014-08-25T05:35:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a1c8dcd-f815-4775-8499-a8b474078d55"
		},
		{
			"deviceTime": "2014-08-25T05:40:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "211b9f79-65d5-42e5-9cb0-9a3f3cc3c7dd"
		},
		{
			"deviceTime": "2014-08-25T05:45:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a697cff-f697-4a59-8865-2ef449fb4f2c"
		},
		{
			"deviceTime": "2014-08-25T05:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eee1536c-1e8c-4dcf-a13d-1c7facf985d6"
		},
		{
			"deviceTime": "2014-08-25T05:55:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e836663-3276-4351-9f17-f4379c161a6f"
		},
		{
			"delivered": 1,
			"end": "2014-08-25T09:00:00",
			"start": "2014-08-25T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "31b947e2-a8de-4cc7-b476-cfcb0713f31d"
		},
		{
			"deviceTime": "2014-08-25T06:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3883854a-d6d3-465a-a702-c3f5d1aa9f70"
		},
		{
			"deviceTime": "2014-08-25T06:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "094f144a-a3f5-4bac-a5a3-7a353afbaa19"
		},
		{
			"deviceTime": "2014-08-25T06:18:50",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d730af27-875e-4d56-8ff2-ef5bc3197548"
		},
		{
			"deviceTime": "2014-08-25T06:18:50",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "f770965f-d834-4ca3-b2fe-14c1ec7042ff"
		},
		{
			"deviceTime": "2014-08-25T06:18:50",
			"id": "f770965f-d834-4ca3-b2fe-14c1ec7042ff",
			"source": "demo",
			"joinKey": "a9e11edb-b100-48cb-b7f7-262340466fa5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 52
			}
		},
		{
			"deviceTime": "2014-08-25T06:18:50",
			"programmed": 3.5,
			"joinKey": "a9e11edb-b100-48cb-b7f7-262340466fa5",
			"value": 0.5,
			"source": "demo",
			"recommended": 3.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "37e86703-c1b1-4fb0-88cb-cc4944652842"
		},
		{
			"deviceTime": "2014-08-25T06:40:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34bc5936-2e0e-4228-8a64-0b67ac693acc"
		},
		{
			"deviceTime": "2014-08-25T06:45:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "303d2e8a-1b94-4093-b06f-89c4de5543d3"
		},
		{
			"deviceTime": "2014-08-25T06:50:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f00cd825-5514-4a05-b94d-28c51176bbd5"
		},
		{
			"deviceTime": "2014-08-25T06:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8c039ed-f9ab-4f45-bf90-0ef88c18b3e8"
		},
		{
			"deviceTime": "2014-08-25T07:00:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3a72f04-ba98-4141-bf67-e008b1701f9e"
		},
		{
			"deviceTime": "2014-08-25T07:05:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfcd2c43-71af-41a3-ade7-5c11693b3899"
		},
		{
			"deviceTime": "2014-08-25T07:10:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6108938f-9999-4cbe-b3ab-40ded22951be"
		},
		{
			"deviceTime": "2014-08-25T07:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39b22fe2-42ce-4b57-afa7-2d6c6ae4bf4d"
		},
		{
			"deviceTime": "2014-08-25T07:20:16",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "75420ee8-c261-47ba-adfb-81b4c8808187"
		},
		{
			"deviceTime": "2014-08-25T07:20:16",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1ed5a512-868a-4354-ae80-3861a4fab960"
		},
		{
			"deviceTime": "2014-08-25T07:20:16",
			"id": "1ed5a512-868a-4354-ae80-3861a4fab960",
			"source": "demo",
			"joinKey": "009b25a5-c649-466f-a530-74068170c039",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 47
			}
		},
		{
			"deviceTime": "2014-08-25T07:20:16",
			"programmed": 3.1,
			"joinKey": "009b25a5-c649-466f-a530-74068170c039",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"extendedDelivery": 2.8,
			"initialDelivery": 0.3,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "34a9dc68-a6ac-4b2a-8aa4-420047d91a7c",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-25T07:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68a224e3-3f01-44cd-84fa-0398a8dcd58d"
		},
		{
			"deviceTime": "2014-08-25T07:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc91dc5c-c9f9-46aa-86b2-52ffdb554506"
		},
		{
			"deviceTime": "2014-08-25T07:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2aad1a7-cf82-472e-8d4d-454f7501ee34"
		},
		{
			"deviceTime": "2014-08-25T07:35:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e04add28-9a11-41e3-8174-8f0310d6c255"
		},
		{
			"deviceTime": "2014-08-25T07:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7f0e462-af9e-4eaf-9f9d-6195ab450cd9"
		},
		{
			"deviceTime": "2014-08-25T07:45:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9e511fa-b7f2-4403-a875-a238bab22e45"
		},
		{
			"deviceTime": "2014-08-25T07:50:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f61004da-5aec-4dfe-aa00-7d45799894ea"
		},
		{
			"deviceTime": "2014-08-25T07:55:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d162245-0ba1-44e7-b069-b2ca004c9e82"
		},
		{
			"deviceTime": "2014-08-25T08:00:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fddbeb96-df51-41bb-b0f4-df579002ba3f"
		},
		{
			"deviceTime": "2014-08-25T08:05:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "769f7692-2bfa-4f69-bc3b-df0bc9effaa2"
		},
		{
			"deviceTime": "2014-08-25T08:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a7f1399-a95d-490c-97fd-bad7852c32fd"
		},
		{
			"deviceTime": "2014-08-25T08:15:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53ed8692-73d6-422f-bf1a-f87ef22e65a4"
		},
		{
			"deviceTime": "2014-08-25T08:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42ce6647-284f-4884-af16-79a4a8f45040"
		},
		{
			"deviceTime": "2014-08-25T08:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0af8ccff-14ba-4c13-9df1-60b049ed04e6"
		},
		{
			"deviceTime": "2014-08-25T08:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8a235b6-d5cc-4ca4-9e75-d476af078be8"
		},
		{
			"deviceTime": "2014-08-25T08:35:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b1af33c-486a-4150-8f98-e165af3236ee"
		},
		{
			"deviceTime": "2014-08-25T08:40:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99889f38-b041-4e8c-9d35-d37fad649525"
		},
		{
			"messageText": "Pancetta tenderloin velit chuck eiusmod id pork belly, sausage short ribs kevin.",
			"parentMessage": "",
			"utcTime": "2014-08-25T08:42:05Z",
			"type": "message",
			"id": "5786da3a-bd98-4f88-b58e-06b64ec7840b"
		},
		{
			"deviceTime": "2014-08-25T08:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ec9e524-0996-44d0-a898-e434d23c3126"
		},
		{
			"deviceTime": "2014-08-25T08:50:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d05228cf-54fa-4058-a55f-a5f7d51392e6"
		},
		{
			"messageText": "Officia biltong sirloin culpa, laboris kevin duis aliquip tail ham.",
			"parentMessage": "5786da3a-bd98-4f88-b58e-06b64ec7840b",
			"utcTime": "2014-08-25T08:52:05Z",
			"type": "message",
			"id": "ba3a652e-e824-4cf9-a411-cbb22ada337a"
		},
		{
			"messageText": "Shankle cupidatat salami velit filet mignon tongue drumstick hamburger chicken esse eu jerky kielbasa. Pig consequat shankle filet mignon duis. Ea duis flank spare ribs ball tip, do dolor frankfurter shankle pancetta.",
			"parentMessage": "5786da3a-bd98-4f88-b58e-06b64ec7840b",
			"utcTime": "2014-08-25T08:55:05Z",
			"type": "message",
			"id": "87dda23f-ab73-4877-b7b9-7ea76dcf46b0"
		},
		{
			"deviceTime": "2014-08-25T08:55:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c3d8184-b4ca-46c0-b671-300b84d9271c"
		},
		{
			"messageText": "Excepteur officia commodo enim bacon quis. Bacon incididunt fatback ad bresaola shank nostrud dolor. Tri-tip dolore filet mignon pariatur pork belly nostrud.",
			"parentMessage": "5786da3a-bd98-4f88-b58e-06b64ec7840b",
			"utcTime": "2014-08-25T08:56:05Z",
			"type": "message",
			"id": "1a75c371-1f1a-45bb-b63a-63b04e7be302"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-25T15:00:00",
			"start": "2014-08-25T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "808f612c-03ef-4da8-b484-f6778166e4f3"
		},
		{
			"deviceTime": "2014-08-25T09:00:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3740761-8405-42d0-8c82-e40ad364bde3"
		},
		{
			"deviceTime": "2014-08-25T09:05:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc651bb8-381c-4cec-ac17-575870c2b755"
		},
		{
			"deviceTime": "2014-08-25T09:10:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fde09653-a504-466a-b88f-806762c06d91"
		},
		{
			"deviceTime": "2014-08-25T09:15:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fdc2d0c1-b369-44b3-9000-610e65da25f1"
		},
		{
			"deviceTime": "2014-08-25T09:20:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9c0a250-eee1-4baa-bcdb-4fa295c8fe72"
		},
		{
			"deviceTime": "2014-08-25T09:25:22",
			"value": 212,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f081d8e5-882e-49b0-a422-11e46b830abc"
		},
		{
			"deviceTime": "2014-08-25T09:30:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cf53c43-727b-4af7-9e6a-9cfc4fd9847d"
		},
		{
			"deviceTime": "2014-08-25T09:35:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30c422ac-4cb4-4f38-8068-1925d1514253"
		},
		{
			"messageText": "Voluptate frankfurter qui eu reprehenderit doner cow short ribs proident adipisicing aliqua laboris nisi tenderloin pastrami.",
			"parentMessage": "5786da3a-bd98-4f88-b58e-06b64ec7840b",
			"utcTime": "2014-08-25T09:36:05Z",
			"type": "message",
			"id": "2fc567c2-951f-4589-a7e9-e86843037791"
		},
		{
			"deviceTime": "2014-08-25T10:02:42",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "30b87978-794b-4535-ab68-7f2bde670a5a"
		},
		{
			"deviceTime": "2014-08-25T10:02:42",
			"value": 38,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "bb64344b-2c88-43f5-9c3e-bbb42ade6be7"
		},
		{
			"deviceTime": "2014-08-25T10:02:42",
			"id": "bb64344b-2c88-43f5-9c3e-bbb42ade6be7",
			"source": "demo",
			"joinKey": "47e2c7e3-2c01-49d6-8a4c-f92a3f4d0656",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 38
			}
		},
		{
			"deviceTime": "2014-08-25T10:02:42",
			"programmed": 2.7,
			"joinKey": "47e2c7e3-2c01-49d6-8a4c-f92a3f4d0656",
			"value": 2.7,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "3eab216c-c314-4d24-982f-53acc435d28d"
		},
		{
			"deviceTime": "2014-08-25T10:05:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5d663b1-c41a-45b6-bb55-a382f88ab641"
		},
		{
			"deviceTime": "2014-08-25T10:10:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eca0c291-f39b-4ed8-acf9-38b9b38c0920"
		},
		{
			"deviceTime": "2014-08-25T10:15:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94bbfc43-3a6c-47c2-a2c1-fa0a9b86af2c"
		},
		{
			"deviceTime": "2014-08-25T10:20:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a310fab2-6841-4e23-b6a0-e030aeab5768"
		},
		{
			"deviceTime": "2014-08-25T10:25:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5753555e-0730-4049-97b0-54ccb8974780"
		},
		{
			"deviceTime": "2014-08-25T10:30:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "059cd916-1abc-437c-93c3-32d8f190a9b2"
		},
		{
			"deviceTime": "2014-08-25T10:35:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fa496cb-e6be-4ba8-a1b6-f0ca0306ba51"
		},
		{
			"deviceTime": "2014-08-25T10:40:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84590ee8-9475-4649-8083-1361c9237291"
		},
		{
			"deviceTime": "2014-08-25T10:45:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "981e0094-7e60-4753-9424-28d621413f22"
		},
		{
			"deviceTime": "2014-08-25T10:46:31",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "25060239-bc41-4874-a448-486d0bcd3bbc"
		},
		{
			"deviceTime": "2014-08-25T10:46:31",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "97f02850-3e4f-46f2-909e-a461e22ec71a"
		},
		{
			"deviceTime": "2014-08-25T10:46:31",
			"id": "97f02850-3e4f-46f2-909e-a461e22ec71a",
			"source": "demo",
			"joinKey": "233f87a8-54ea-4ca7-9721-303b8faee05f",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 74
			}
		},
		{
			"deviceTime": "2014-08-25T10:46:31",
			"suspendedAt": "2014-08-25T11:16:31",
			"programmed": 4.9,
			"joinKey": "233f87a8-54ea-4ca7-9721-303b8faee05f",
			"value": 4.9,
			"source": "demo",
			"recommended": 4.9,
			"extendedDelivery": 4.4,
			"initialDelivery": 0.5,
			"duration": 7200000,
			"extended": true,
			"type": "bolus",
			"id": "69d91f2f-a51a-47b7-a874-933f0e409a89",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-25T10:50:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5c122a3-c5c9-4c1c-b166-73bdbc18c50a"
		},
		{
			"deviceTime": "2014-08-25T10:55:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "146d403a-8786-4884-9295-713b422eca44"
		},
		{
			"deviceTime": "2014-08-25T11:00:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8dad031-301a-42a5-b193-0842979e84f9"
		},
		{
			"deviceTime": "2014-08-25T11:05:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d16a309c-fb2f-4675-9389-4fc9eb8f584c"
		},
		{
			"deviceTime": "2014-08-25T11:10:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1acc7df7-d90e-4fe7-9d4c-4f639241017c"
		},
		{
			"deviceTime": "2014-08-25T11:15:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d4aeeca-e422-4e36-98d3-cf7121818c55"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-25T11:16:31",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "659e1ac0-f3ae-4143-ae0f-8d880012af25"
		},
		{
			"deviceTime": "2014-08-25T11:20:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "664e5b8d-b3d7-4d14-9e14-aa5dadbd2de8"
		},
		{
			"deviceTime": "2014-08-25T11:25:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42e8d7b7-2752-4612-b02f-fe152a7cef21"
		},
		{
			"deviceTime": "2014-08-25T11:30:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "821387a6-0ca8-422f-843a-b500edc7d2a6"
		},
		{
			"deviceTime": "2014-08-25T11:35:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "866c9835-e646-4e5f-bc47-109bac5479e5"
		},
		{
			"deviceTime": "2014-08-25T11:40:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6508f4cf-f654-4c27-9ccc-06cd4626f72e"
		},
		{
			"deviceTime": "2014-08-25T11:45:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8baaf353-97e1-424c-bdfe-f36f82c14250"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-25T11:45:31",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "f201e275-6368-4a96-a1a6-9b7bc7e5c519",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-25T11:16:31",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "659e1ac0-f3ae-4143-ae0f-8d880012af25"
			}
		},
		{
			"deviceTime": "2014-08-25T11:45:50",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "db9c80bd-4f42-4963-831a-ec947f0b9428"
		},
		{
			"deviceTime": "2014-08-25T11:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "179adfc1-3bf8-4faf-8d3b-87c32543fc4b"
		},
		{
			"deviceTime": "2014-08-25T11:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "472a12f9-9c9b-4ed3-bbe8-f5a738dedbf1"
		},
		{
			"deviceTime": "2014-08-25T12:10:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2efb631e-0f6e-4893-8f1f-3f9eeed6bed0"
		},
		{
			"deviceTime": "2014-08-25T12:15:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43e49f73-c3e9-4702-a61d-d7dad16e40a7"
		},
		{
			"deviceTime": "2014-08-25T12:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2122e100-af2e-48cc-9a6a-0027092e105d"
		},
		{
			"deviceTime": "2014-08-25T12:25:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09887f55-2f63-453b-9d86-d6c797b9a665"
		},
		{
			"deviceTime": "2014-08-25T12:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1e19178-734d-4d80-b2a8-58ec8f6ea77d"
		},
		{
			"deviceTime": "2014-08-25T12:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "988c95e7-ca2d-46a1-87da-2b33ceca54a3"
		},
		{
			"deviceTime": "2014-08-25T12:40:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "057e44c9-b391-4daa-9380-dd7931774a54"
		},
		{
			"deviceTime": "2014-08-25T12:45:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a81d8a00-a855-4ded-8e54-14763a6cc6d2"
		},
		{
			"deviceTime": "2014-08-25T12:50:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a226f1c5-9d8b-4ee7-98db-52b84ca0c473"
		},
		{
			"deviceTime": "2014-08-25T12:55:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72278488-e499-4a8b-b77e-307062539fdd"
		},
		{
			"deviceTime": "2014-08-25T13:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcc07881-10df-4eea-9bb0-80de4a8ae4f3"
		},
		{
			"deviceTime": "2014-08-25T13:05:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f79e5807-1df6-4e2d-afe4-f930242ba5ec"
		},
		{
			"deviceTime": "2014-08-25T13:10:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e8cebbb-8886-422c-a989-1839bf33a80a"
		},
		{
			"deviceTime": "2014-08-25T13:15:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65faac0c-f255-4d9b-a72a-5bc911fd9a54"
		},
		{
			"deviceTime": "2014-08-25T13:20:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0fae7e0-184e-4d15-ad76-db83c80228db"
		},
		{
			"deviceTime": "2014-08-25T13:25:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d4f7cbf-25aa-46fa-8f20-37b13c5f29b5"
		},
		{
			"deviceTime": "2014-08-25T13:30:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ed58167-fe1b-4070-9493-e2dcb8e14e4d"
		},
		{
			"deviceTime": "2014-08-25T13:35:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "862753ac-3e15-4abe-af05-25a988c522bc"
		},
		{
			"deviceTime": "2014-08-25T13:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07b83967-072c-4fed-b768-d9f0f563e6cf"
		},
		{
			"deviceTime": "2014-08-25T13:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f3435cc-e535-4e38-bc2f-9a6c4f4a0717"
		},
		{
			"deviceTime": "2014-08-25T13:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0611cc86-1b2a-46b9-ad28-2f7d6cc88589"
		},
		{
			"deviceTime": "2014-08-25T13:55:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57d26f46-eae2-4e9c-821a-b53ac07dfe68"
		},
		{
			"deviceTime": "2014-08-25T14:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c463e16-d45f-4782-8206-c6877c8d061a"
		},
		{
			"deviceTime": "2014-08-25T14:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f2f8b70-0018-447c-ad80-de2d43df64b3"
		},
		{
			"deviceTime": "2014-08-25T14:10:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6aee7cb9-70d3-4eba-86b1-ebcbd2849221"
		},
		{
			"deviceTime": "2014-08-25T14:15:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92a86984-aba3-4e7b-be05-4df9592f2893"
		},
		{
			"deviceTime": "2014-08-25T14:20:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "874318d9-baf3-4289-a623-3848b3c8057e"
		},
		{
			"deviceTime": "2014-08-25T14:25:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0618544e-74b7-4540-85e1-0a0b91057d08"
		},
		{
			"deviceTime": "2014-08-25T14:30:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48de60b6-633e-4ba6-b435-1766a95ee6ad"
		},
		{
			"deviceTime": "2014-08-25T14:35:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84a5c1d2-9df3-4bc2-915b-8b4180eb1302"
		},
		{
			"deviceTime": "2014-08-25T14:40:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0de9b43-4df9-4bfb-a0a0-f293e734960e"
		},
		{
			"deviceTime": "2014-08-25T14:45:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c750b5cf-f625-42c1-a717-d6b6c23d61b7"
		},
		{
			"deviceTime": "2014-08-25T14:50:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9313f8df-3b98-4214-8bf5-a2aa4b4e5ec1"
		},
		{
			"deviceTime": "2014-08-25T14:55:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6774631d-c6fe-4019-b3f0-5ab8ac22a1eb"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-25T20:00:00",
			"start": "2014-08-25T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "c2005bfb-0ce6-418b-ab65-882c9d562373"
		},
		{
			"deviceTime": "2014-08-25T15:00:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf136f8e-0aba-4dfb-8db1-6c79e249edb0"
		},
		{
			"deviceTime": "2014-08-25T15:05:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "638100fc-29e9-423d-b568-3209d78abd17"
		},
		{
			"deviceTime": "2014-08-25T15:10:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62e3ecd5-09b2-4ac8-9fba-0be059e5f00f"
		},
		{
			"deviceTime": "2014-08-25T15:15:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a137ff0-700e-41b6-a063-58c7f8ca63f3"
		},
		{
			"deviceTime": "2014-08-25T15:20:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69dfd8e6-ffa7-4c3f-933a-7007fb031088"
		},
		{
			"deviceTime": "2014-08-25T15:22:11",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e36f185e-f710-49d4-b01f-91b6d67500c9"
		},
		{
			"deviceTime": "2014-08-25T15:25:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b2342f6-7a5d-4d2f-ae37-7f635907e94a"
		},
		{
			"deviceTime": "2014-08-25T15:30:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1605e6c6-8070-4a14-ab31-83496598915c"
		},
		{
			"deviceTime": "2014-08-25T15:35:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b89dda9e-ce30-4d17-a08e-eae7f306b088"
		},
		{
			"deviceTime": "2014-08-25T15:40:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "907bc85a-dc8e-44ac-bf2d-e4ef1b20b625"
		},
		{
			"deviceTime": "2014-08-25T15:45:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b39b329f-6b73-495a-a3e3-52ef3a3d510d"
		},
		{
			"deviceTime": "2014-08-25T15:50:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d45f71e-41d4-45b0-9b8a-09e4b617e4d7"
		},
		{
			"deviceTime": "2014-08-25T15:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9968adc4-372d-4e67-b61b-22a9d116d226"
		},
		{
			"deviceTime": "2014-08-25T16:00:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47e1b54c-9d69-4758-94b7-44b83d9879d0"
		},
		{
			"deviceTime": "2014-08-25T16:05:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9cefbaf-0a98-4c27-8717-489e457827d0"
		},
		{
			"deviceTime": "2014-08-25T16:10:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aeb9c8ac-0218-483a-8096-9306ed1222d1"
		},
		{
			"deviceTime": "2014-08-25T16:15:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "862aff38-c7b2-4dc8-8475-44d9762c7805"
		},
		{
			"deviceTime": "2014-08-25T16:20:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64838a4d-c853-41e7-934e-000638c6946e"
		},
		{
			"deviceTime": "2014-08-25T16:25:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54eb5a49-2af2-4295-8bfd-142e06fdd613"
		},
		{
			"deviceTime": "2014-08-25T16:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c2e2f3d-b91c-4d48-8810-543b88b5a8fb"
		},
		{
			"deviceTime": "2014-08-25T16:35:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35a0fe82-060d-4367-90d0-a78b19977cff"
		},
		{
			"deviceTime": "2014-08-25T16:40:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7219dac2-233b-47da-bbb8-e7097e8715a9"
		},
		{
			"deviceTime": "2014-08-25T16:45:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68532daf-353f-485b-a8aa-37378b7c2711"
		},
		{
			"deviceTime": "2014-08-25T16:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6654604a-9c01-41e9-8f35-86c62ee41dca"
		},
		{
			"deviceTime": "2014-08-25T16:55:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44566490-9c97-46eb-be88-e9539761ecbd"
		},
		{
			"deviceTime": "2014-08-25T17:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f97137cf-fe8a-4657-8cdf-7fc05819a225"
		},
		{
			"deviceTime": "2014-08-25T17:05:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ad81c79-7d71-4a41-b01e-ee85401e703e"
		},
		{
			"deviceTime": "2014-08-25T17:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "352fe719-05aa-4e61-a22c-359b367d9567"
		},
		{
			"deviceTime": "2014-08-25T17:12:01",
			"value": 1.5,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "9277e275-289c-4476-a702-e6e5b84724b8"
		},
		{
			"deviceTime": "2014-08-25T17:15:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f237a88-9277-41b5-8cef-6d29dedc65ab"
		},
		{
			"deviceTime": "2014-08-25T17:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3914e17-d7a0-4c68-bb99-89ae0a82b8fb"
		},
		{
			"deviceTime": "2014-08-25T17:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2a884f5-0d85-4c6c-94d5-6a90e78c1c23"
		},
		{
			"deviceTime": "2014-08-25T17:30:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5dfdd6e-8a94-4a6b-800b-c770b656f0d1"
		},
		{
			"deviceTime": "2014-08-25T17:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e7d72c9-0ac2-4f20-a274-2ba00c573fba"
		},
		{
			"deviceTime": "2014-08-25T17:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54084276-cc36-43e7-821f-115941ea76db"
		},
		{
			"deviceTime": "2014-08-25T17:45:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cdbbe7e-2039-4260-b058-559f27fc046f"
		},
		{
			"deviceTime": "2014-08-25T17:50:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb1c9026-5651-4d78-8aad-2fcbffbb0d54"
		},
		{
			"deviceTime": "2014-08-25T17:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd1f609f-3732-453c-aecd-8b0bd83d661b"
		},
		{
			"deviceTime": "2014-08-25T18:00:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3fb1325-5803-45b3-8901-d7673806cf04"
		},
		{
			"deviceTime": "2014-08-25T18:05:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "113b2efa-ebf5-4f9f-b641-46650e670719"
		},
		{
			"deviceTime": "2014-08-25T18:10:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f025d090-9f7d-4187-9795-ef5db63ca995"
		},
		{
			"deviceTime": "2014-08-25T18:15:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc1f9b7f-e574-4887-8162-9ef258e24d96"
		},
		{
			"deviceTime": "2014-08-25T18:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69758437-e9ac-49be-aa56-9b9a7502f985"
		},
		{
			"deviceTime": "2014-08-25T18:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7acca921-72b0-401a-be03-2640819af84a"
		},
		{
			"deviceTime": "2014-08-25T18:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cc5ea56-2982-4336-af11-f4de420fab57"
		},
		{
			"deviceTime": "2014-08-25T18:35:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7fe9dfd8-4b40-41d8-8846-a58a1740f69f"
		},
		{
			"deviceTime": "2014-08-25T18:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23c78d55-3e88-4807-958c-d53c4b3557ba"
		},
		{
			"deviceTime": "2014-08-25T18:45:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1388ca28-7111-4194-a1cf-c5775761fd97"
		},
		{
			"deviceTime": "2014-08-25T18:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26abb0f9-f82a-405e-ac66-d6041caab448"
		},
		{
			"deviceTime": "2014-08-25T18:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1870bd5c-5ac2-4bb4-8a37-f2172061b245"
		},
		{
			"deviceTime": "2014-08-25T19:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce6a044b-47fe-4e46-842b-f96a1cb1198d"
		},
		{
			"deviceTime": "2014-08-25T19:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9d58fe0-8776-4eb7-972f-323983240fb9"
		},
		{
			"deviceTime": "2014-08-25T19:10:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee22a1b5-6426-443e-bbac-15b26efcc163"
		},
		{
			"deviceTime": "2014-08-25T19:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88bcbc54-8948-44d0-b462-72fa2484e3f2"
		},
		{
			"deviceTime": "2014-08-25T19:20:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e355a07c-09c7-4071-913b-d83adcd758e7"
		},
		{
			"deviceTime": "2014-08-25T19:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a175ef9f-1012-45c0-947f-ca22102ce9f4"
		},
		{
			"deviceTime": "2014-08-25T19:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "554b4c33-aee1-4a98-b15b-7eeaa54cff9f"
		},
		{
			"deviceTime": "2014-08-25T19:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30db5d2b-cce9-4af1-9207-9516bde2e96a"
		},
		{
			"deviceTime": "2014-08-25T19:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ac6e4cc-c61a-46ba-a253-ddf6064a16a0"
		},
		{
			"deviceTime": "2014-08-25T19:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdafddf3-3aa3-4c73-8692-e2f0e70ae8ba"
		},
		{
			"deviceTime": "2014-08-25T19:50:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "844a91d3-c6cf-4a8d-a21a-6f8822deb113"
		},
		{
			"deviceTime": "2014-08-25T19:55:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32744ab6-772a-450b-a9df-a53cfef83038"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-26T00:00:00",
			"start": "2014-08-25T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "da588a7a-5875-41c5-bf82-dd66a97d09a7"
		},
		{
			"deviceTime": "2014-08-25T20:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1464c0c-8d04-4463-8c68-90d8c2bad543"
		},
		{
			"end": "2014-08-25T20:32:01",
			"start": "2014-08-25T20:02:01",
			"percent": 1.6,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"type": "basal-rate-segment",
			"id": "c7d8e7ed-f12d-4314-891e-84f39f44ad6c"
		},
		{
			"deviceTime": "2014-08-25T20:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fbbd8e18-bd17-4944-9544-a5c4e5d12d9e"
		},
		{
			"deviceTime": "2014-08-25T20:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7267fe3-810c-4436-892a-dd3ee499f57c"
		},
		{
			"deviceTime": "2014-08-25T20:15:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ec0e809-12af-42dc-bfe3-6a77c7654112"
		},
		{
			"deviceTime": "2014-08-25T20:20:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5e54f63-2257-4245-b0b4-fac35ed29d8a"
		},
		{
			"deviceTime": "2014-08-25T20:25:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6dda7e6f-f9f1-42c8-b436-5af44c9deb42"
		},
		{
			"deviceTime": "2014-08-25T20:30:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1598edde-0af0-4c8c-8d16-673507d795c2"
		},
		{
			"deviceTime": "2014-08-25T20:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee59cd65-a733-4a96-9295-2556fede6764"
		},
		{
			"deviceTime": "2014-08-25T20:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c017884-b0d8-4b8f-8933-bbcffeacdbf4"
		},
		{
			"deviceTime": "2014-08-25T20:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02b9a70e-98a0-4063-8001-55c0312b9b01"
		},
		{
			"deviceTime": "2014-08-25T20:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cf97ae5-01b2-4677-8938-a5ae5d713de1"
		},
		{
			"deviceTime": "2014-08-25T20:55:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec4eb62f-3a98-490f-81f0-d1767337baf7"
		},
		{
			"deviceTime": "2014-08-25T21:00:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40f25820-5390-4fcf-b8a3-047f1d92c8ea"
		},
		{
			"deviceTime": "2014-08-25T21:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eea0356c-a369-47eb-8445-a71865c3a9b0"
		},
		{
			"deviceTime": "2014-08-25T21:10:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1c4357d-b562-43d3-a75b-8c3b3f14496e"
		},
		{
			"deviceTime": "2014-08-25T21:15:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06915dde-ea0a-42b1-a17e-b8f688c3e134"
		},
		{
			"deviceTime": "2014-08-25T21:20:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c9839e4-88e3-46b5-a4dd-af8c783677aa"
		},
		{
			"deviceTime": "2014-08-25T21:25:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "086e5bd5-9d9d-4974-8f2a-fbafed4738df"
		},
		{
			"deviceTime": "2014-08-25T21:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfb3d04b-42c8-412c-9018-547169d5dd1a"
		},
		{
			"deviceTime": "2014-08-25T21:35:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7abba12a-39c1-402f-988d-b288bb3d2d21"
		},
		{
			"deviceTime": "2014-08-25T21:40:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "314d7f8e-8a3b-415d-ad9b-64219097d256"
		},
		{
			"deviceTime": "2014-08-25T21:45:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8dd186e-0988-4262-9255-447310e2e400"
		},
		{
			"deviceTime": "2014-08-25T21:50:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71296b21-5a6b-427f-ba49-0fb04b92fc61"
		},
		{
			"deviceTime": "2014-08-25T21:55:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2432961d-a5ab-4769-b99d-d73a2977292f"
		},
		{
			"deviceTime": "2014-08-25T22:00:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef1366e4-9cc7-4ea5-ad67-11fbd95859b6"
		},
		{
			"deviceTime": "2014-08-25T22:05:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5850b868-2944-4dae-b8ab-3f5200327d02"
		},
		{
			"deviceTime": "2014-08-25T22:10:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa98ffc1-16e1-49db-971a-30059ac1fac7"
		},
		{
			"deviceTime": "2014-08-25T22:15:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26da2bfb-0f6b-47ca-a460-004a352eb56c"
		},
		{
			"deviceTime": "2014-08-25T22:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60af86bb-4ed8-4dc0-9855-a35f9a456bd7"
		},
		{
			"deviceTime": "2014-08-25T22:25:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b271fd1-be2d-44e0-ae3c-fca53f0f9ba8"
		},
		{
			"deviceTime": "2014-08-25T22:30:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7f707e1-63f5-49b5-8088-688363f9ba83"
		},
		{
			"deviceTime": "2014-08-25T22:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c97fbeb8-0188-4ff1-8601-3d222fe9bece"
		},
		{
			"deviceTime": "2014-08-25T22:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d41fa80-9ec8-41f1-af78-10756938f1d5"
		},
		{
			"deviceTime": "2014-08-25T22:45:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e0a7542-1dd5-40b1-af8a-d34cc77f44a9"
		},
		{
			"deviceTime": "2014-08-25T22:50:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f90196c8-e3ee-4fcd-a40f-57c94c8f9708"
		},
		{
			"deviceTime": "2014-08-25T22:55:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "feb4bf9a-2c27-40b6-bcad-0fa9ce52b758"
		},
		{
			"deviceTime": "2014-08-25T23:00:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "837705d6-d3c7-42dd-9e47-ef80bd882b73"
		},
		{
			"deviceTime": "2014-08-25T23:05:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da611b0d-4848-4e94-ac85-14c982658a37"
		},
		{
			"deviceTime": "2014-08-25T23:10:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fa6f7ea-5e98-4e67-8168-4525539dc4f0"
		},
		{
			"deviceTime": "2014-08-25T23:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d899b0ce-ba38-4ccf-b942-e387699b8055"
		},
		{
			"deviceTime": "2014-08-25T23:20:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "996ffecd-a126-4c96-ada2-68d118e8a64d"
		},
		{
			"deviceTime": "2014-08-25T23:25:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fe39c3d-45df-45ba-b6cb-aa07579354d0"
		},
		{
			"deviceTime": "2014-08-25T23:30:07",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "596e27b0-acae-4b82-931b-8d37520d759f"
		},
		{
			"deviceTime": "2014-08-25T23:30:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59526c1e-c275-4588-a5fb-fb1a3545a8aa"
		},
		{
			"deviceTime": "2014-08-25T23:35:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9f1cb22-72bf-4e9f-8719-e8f4ad000019"
		},
		{
			"deviceTime": "2014-08-25T23:40:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5712880-c2c2-4965-9b87-5c3bc4c721e5"
		},
		{
			"deviceTime": "2014-08-25T23:45:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19c51f9b-c671-4ccb-a05f-1e7e1a0473bc"
		},
		{
			"deviceTime": "2014-08-25T23:50:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2038cbfa-e5b3-41dc-a42e-2936e132808d"
		},
		{
			"deviceTime": "2014-08-25T23:55:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9121cff-acd4-4f35-ad99-0237d9f604c0"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-26T02:00:00",
			"start": "2014-08-26T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "3f19e9c3-9edd-42ef-8667-f2a31437e448"
		},
		{
			"deviceTime": "2014-08-26T00:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e02b6948-f988-48a0-b261-3221328f7149"
		},
		{
			"deviceTime": "2014-08-26T00:05:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47a065da-c93e-4a91-91e8-91e4dc33382a"
		},
		{
			"deviceTime": "2014-08-26T00:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2506fa9-3aa9-4a30-8fc2-13ff0e42943c"
		},
		{
			"deviceTime": "2014-08-26T00:15:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2803ae0-a50d-4f4e-954c-a9af6bf8da4e"
		},
		{
			"deviceTime": "2014-08-26T00:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d32a0ae4-bd9f-4b5d-957a-0059483f5912"
		},
		{
			"deviceTime": "2014-08-26T00:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "401ce218-ff9a-49a6-a0cf-50a155954ef9"
		},
		{
			"deviceTime": "2014-08-26T00:30:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4406af3c-df71-4b38-9832-c29baf917a50"
		},
		{
			"deviceTime": "2014-08-26T00:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63b371e1-61a6-46bd-82c2-2a2519a02b25"
		},
		{
			"deviceTime": "2014-08-26T00:40:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c8aa8b3-4345-427e-8358-430224fa1f06"
		},
		{
			"deviceTime": "2014-08-26T00:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b29d0d3-6f26-4842-bc18-8a6dda72fb03"
		},
		{
			"deviceTime": "2014-08-26T00:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d69064dc-b311-475a-a6bf-2f692f8d279d"
		},
		{
			"deviceTime": "2014-08-26T00:55:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19f73d56-cf24-4aab-ade3-eec7bdf6cd8e"
		},
		{
			"deviceTime": "2014-08-26T01:00:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "634f4b75-4b66-4276-ab15-2b6e548522f5"
		},
		{
			"deviceTime": "2014-08-26T01:05:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc4d3837-798a-48d8-873a-22ef26fe4dcc"
		},
		{
			"deviceTime": "2014-08-26T01:10:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31d8a351-3975-4c76-b8dc-023d7931552b"
		},
		{
			"deviceTime": "2014-08-26T01:15:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5921a134-e7c5-4582-94a5-9f4171621007"
		},
		{
			"deviceTime": "2014-08-26T01:20:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "643e8737-76b3-4099-8173-30c172e17e06"
		},
		{
			"deviceTime": "2014-08-26T01:25:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "39949c6d-f3d6-4e20-891b-b30f365fcb62"
		},
		{
			"deviceTime": "2014-08-26T01:30:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fef02110-53b5-42cb-9cf4-81c5b2341b8a"
		},
		{
			"deviceTime": "2014-08-26T01:35:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af6e6eec-c963-4447-98fd-ec4d303608d9"
		},
		{
			"deviceTime": "2014-08-26T01:40:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "307dfa22-9a9d-44c2-94d9-3596bde0a4d4"
		},
		{
			"deviceTime": "2014-08-26T01:45:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be6a4d0d-3827-4392-b093-24b2d7821cfe"
		},
		{
			"deviceTime": "2014-08-26T01:50:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1ef9b9f-2585-491b-8d3e-fbc7fec4b765"
		},
		{
			"deviceTime": "2014-08-26T01:55:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b0db9de-1f4b-4939-bab4-40e290338df2"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-26T04:00:00",
			"start": "2014-08-26T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"id": "4eb02a46-96da-498d-a579-be14eb01e389",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-26T02:00:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efe4ecc9-68d4-42ba-9e1f-69a4366a0f17"
		},
		{
			"deviceTime": "2014-08-26T02:05:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4318f8e8-8224-4871-94ca-943328cd907c"
		},
		{
			"deviceTime": "2014-08-26T02:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ff6a2c7-4978-4e58-b0d1-2f6ef0c470f7"
		},
		{
			"deviceTime": "2014-08-26T02:15:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ed17e99-597e-4a72-8308-276a35d8ee94"
		},
		{
			"deviceTime": "2014-08-26T02:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24d096b3-61a7-4f10-b474-a062c8022bed"
		},
		{
			"deviceTime": "2014-08-26T02:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e420f24c-335c-4bc9-9ce4-1284d10d501d"
		},
		{
			"deviceTime": "2014-08-26T02:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb929972-6b02-4963-bc48-166d996ba91d"
		},
		{
			"deviceTime": "2014-08-26T02:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "935b48d0-ef02-4f89-bfb6-8bf3ede825cc"
		},
		{
			"deviceTime": "2014-08-26T02:40:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82d173a7-e400-4c95-b2c8-5f3cdac92a1d"
		},
		{
			"deviceTime": "2014-08-26T02:45:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6276c103-f217-4024-ad4c-e9642e74171c"
		},
		{
			"deviceTime": "2014-08-26T02:50:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "788efa56-4f6b-4bf8-858d-7fcb629d4e4b"
		},
		{
			"deviceTime": "2014-08-26T02:55:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "079d47d3-381d-432d-aa75-56e3c813d6a2"
		},
		{
			"deviceTime": "2014-08-26T03:00:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74befb77-7130-4100-8124-d18812b35d8e"
		},
		{
			"deviceTime": "2014-08-26T03:05:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6892c55e-cd98-426b-9729-373fbddd521f"
		},
		{
			"deviceTime": "2014-08-26T03:10:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20bf59fd-29d7-4762-bfd4-a5ced4c6c3b6"
		},
		{
			"deviceTime": "2014-08-26T03:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97af0019-27e9-47ce-8820-95a8423ddde6"
		},
		{
			"deviceTime": "2014-08-26T03:20:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38848e99-b87b-4baf-98fa-6c4caf86625f"
		},
		{
			"deviceTime": "2014-08-26T03:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7895ce59-ff1a-4a0f-b28b-30082f781b01"
		},
		{
			"deviceTime": "2014-08-26T03:30:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8dea3e67-fdfe-45b5-b1ee-3c62b7f55c48"
		},
		{
			"deviceTime": "2014-08-26T03:35:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a7faac6-3ab5-4bb3-b9c9-a1bb3c7adb0e"
		},
		{
			"deviceTime": "2014-08-26T03:40:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa7b2889-461c-41a8-bf2a-10e37393ddac"
		},
		{
			"deviceTime": "2014-08-26T03:45:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db5a0d9e-9a17-4a04-91ba-8836e320d466"
		},
		{
			"deviceTime": "2014-08-26T03:50:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7c476bc-c4ab-4552-a52e-b1a4aa05adc1"
		},
		{
			"deviceTime": "2014-08-26T03:55:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "349e57dd-3614-47c6-ab62-400834595c79"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-26T05:00:00",
			"start": "2014-08-26T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "48e6c6b6-b907-450d-bacd-b4592c283ba6"
		},
		{
			"deviceTime": "2014-08-26T04:00:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdfa8876-846b-49fd-83c3-e573d11d136a"
		},
		{
			"deviceTime": "2014-08-26T04:05:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b35c702a-fc64-4117-84ed-ece9972670b7"
		},
		{
			"deviceTime": "2014-08-26T04:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d04f5df9-a8d6-47ac-9fb3-ac8b23775ccf"
		},
		{
			"deviceTime": "2014-08-26T04:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40c1dbe5-07c8-40ca-b07f-661da55e6436"
		},
		{
			"deviceTime": "2014-08-26T04:20:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "949433a1-cc2b-4323-8d40-c3900d97b038"
		},
		{
			"deviceTime": "2014-08-26T04:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2913b131-8e89-4c80-9c63-5e13ccf3c339"
		},
		{
			"deviceTime": "2014-08-26T04:30:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "019a0654-0ac7-473e-a606-9f431f29718e"
		},
		{
			"deviceTime": "2014-08-26T04:35:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ad193a3-0bef-4b33-a74c-d30b636e2e25"
		},
		{
			"deviceTime": "2014-08-26T04:40:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6f528e0-e5d7-45c1-8fdd-bc1b919ad912"
		},
		{
			"deviceTime": "2014-08-26T04:45:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2178558a-8430-469f-978f-665fc6e66c38"
		},
		{
			"deviceTime": "2014-08-26T04:50:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9944465-71e7-4ef9-8675-48b8bc56f346"
		},
		{
			"deviceTime": "2014-08-26T04:55:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f783c1d-6a64-4144-8ae1-4f4d4ba5e6bc"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-26T06:00:00",
			"start": "2014-08-26T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "1569e25a-75bf-4bea-b5f5-12c61b6779c9"
		},
		{
			"deviceTime": "2014-08-26T05:00:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91594f2f-c8ec-404e-9cad-cb9279e20d9c"
		},
		{
			"deviceTime": "2014-08-26T05:05:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21efefb7-19d2-43c8-836e-0d645363b64a"
		},
		{
			"deviceTime": "2014-08-26T05:10:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33878051-f168-4a56-8f82-066ce53297f7"
		},
		{
			"deviceTime": "2014-08-26T05:16:01",
			"value": 2.1,
			"source": "demo",
			"recommended": 1.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "3c30c30b-6e2f-4c5e-83d2-5c2785bf4942"
		},
		{
			"deviceTime": "2014-08-26T05:20:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0ee4afb-8ef3-420b-b2ae-1f0af3b80595"
		},
		{
			"deviceTime": "2014-08-26T05:45:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1843577-cc72-48d3-8c98-64b7f4c2e852"
		},
		{
			"deviceTime": "2014-08-26T05:50:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0d27612-da6b-45cb-a2c1-4dcf6812ef64"
		},
		{
			"deviceTime": "2014-08-26T05:55:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f033fd56-3bde-47a3-a02b-f7231c1909fc"
		},
		{
			"delivered": 1,
			"end": "2014-08-26T09:00:00",
			"start": "2014-08-26T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "69037aa3-c875-4160-972b-6163763351b0"
		},
		{
			"deviceTime": "2014-08-26T06:00:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75b42057-4c54-4f57-803b-7217f33b9258"
		},
		{
			"deviceTime": "2014-08-26T06:05:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db6bd540-d61e-467d-a005-2097d16b8962"
		},
		{
			"deviceTime": "2014-08-26T06:10:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b26091aa-b687-4bd5-9071-9c3d51cb6198"
		},
		{
			"deviceTime": "2014-08-26T06:15:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc0a2634-30e5-4fc0-bde4-610203050e76"
		},
		{
			"deviceTime": "2014-08-26T06:20:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "722e1975-9812-4ba4-9241-fdbf4312c8c3"
		},
		{
			"deviceTime": "2014-08-26T06:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "893e1a1d-543f-4fcc-8081-175b6daa0d5f"
		},
		{
			"deviceTime": "2014-08-26T06:30:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ab87a1c-1945-4c2c-afbb-bae712078d75"
		},
		{
			"deviceTime": "2014-08-26T06:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7642d057-1496-4089-84b1-b2e645dad2be"
		},
		{
			"deviceTime": "2014-08-26T06:40:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "840f3f70-b7a7-4a99-9161-b2271ddc8646"
		},
		{
			"deviceTime": "2014-08-26T06:45:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c529536-2855-44c3-9990-c854fa0b7355"
		},
		{
			"deviceTime": "2014-08-26T06:50:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d72336f8-9480-4050-a3e2-de93aaa5004a"
		},
		{
			"deviceTime": "2014-08-26T06:55:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d9ed70d-cdd6-4ed4-b641-4669b513acbd"
		},
		{
			"deviceTime": "2014-08-26T07:00:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7b88f51-ee87-4169-b214-5c56aaa6f65c"
		},
		{
			"deviceTime": "2014-08-26T07:02:33",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "8eac937d-ecf5-43d5-9ad2-a25f4b1977ab"
		},
		{
			"deviceTime": "2014-08-26T07:02:33",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "3a4f4a9c-f098-457a-b0ef-e338b13fee50"
		},
		{
			"deviceTime": "2014-08-26T07:02:33",
			"id": "3a4f4a9c-f098-457a-b0ef-e338b13fee50",
			"source": "demo",
			"joinKey": "12c5e149-a5b1-4bc5-9d07-73826f0e80b1",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 55
			}
		},
		{
			"deviceTime": "2014-08-26T07:02:33",
			"programmed": 3.9,
			"joinKey": "12c5e149-a5b1-4bc5-9d07-73826f0e80b1",
			"value": 3.9,
			"source": "demo",
			"recommended": 3.7,
			"extendedDelivery": 3.9,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "23cfbd94-5931-4fe2-bfcf-12e4d7f07eaf"
		},
		{
			"deviceTime": "2014-08-26T07:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "636be2df-ee9e-4869-85fc-b60e7190f799"
		},
		{
			"deviceTime": "2014-08-26T07:10:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73640764-8548-4dcc-85ca-c03ad46dc91a"
		},
		{
			"deviceTime": "2014-08-26T07:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f79eb8a-d953-4250-b5ca-aa2e9804fe38"
		},
		{
			"deviceTime": "2014-08-26T07:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd2f8237-4df3-46d4-8579-51963eeef16f"
		},
		{
			"deviceTime": "2014-08-26T07:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ac90780-1d87-4682-b545-04a1c5db972a"
		},
		{
			"deviceTime": "2014-08-26T07:30:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7cff2d6d-c11f-45c5-aea8-881fabf768bf"
		},
		{
			"deviceTime": "2014-08-26T07:35:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f0bd279-c181-4733-a1de-182a2ced1df2"
		},
		{
			"deviceTime": "2014-08-26T07:40:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c35d69f-476d-4ff8-b2ad-35c66200ba5b"
		},
		{
			"deviceTime": "2014-08-26T07:45:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7c6afdf-9e5a-495e-9236-67792d6b1c9d"
		},
		{
			"deviceTime": "2014-08-26T07:50:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf88e059-e39c-403f-8352-1c33efa4ca30"
		},
		{
			"deviceTime": "2014-08-26T07:55:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62404fd8-3aea-4b4c-8f6b-cac8eaf2b02f"
		},
		{
			"end": "2014-08-26T10:59:01",
			"start": "2014-08-26T07:59:01",
			"percent": 1.3,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "8d922d5f-fda0-4ea1-a4ec-2a2814b7db5d"
		},
		{
			"deviceTime": "2014-08-26T08:00:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "552c9d77-7880-4d61-bec8-be4102da55f1"
		},
		{
			"deviceTime": "2014-08-26T08:10:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd1e8b1e-aeb9-496c-ac80-63b802b32bbb"
		},
		{
			"deviceTime": "2014-08-26T08:15:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "810cfea8-857a-414f-90ba-f06cbd531bc9"
		},
		{
			"deviceTime": "2014-08-26T08:18:22",
			"value": 30,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "aceef32a-eda4-4175-813b-2aa3c4f26b79"
		},
		{
			"deviceTime": "2014-08-26T08:18:22",
			"value": 9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "d5f79d47-9ff4-486f-873a-cae2dd58f19b"
		},
		{
			"deviceTime": "2014-08-26T08:18:22",
			"id": "d5f79d47-9ff4-486f-873a-cae2dd58f19b",
			"source": "demo",
			"joinKey": "eb565495-a903-4b2c-80fb-07fa12c1e0d3",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 9
			}
		},
		{
			"deviceTime": "2014-08-26T08:18:22",
			"programmed": 0.6,
			"joinKey": "eb565495-a903-4b2c-80fb-07fa12c1e0d3",
			"value": 0.6,
			"source": "demo",
			"recommended": 0.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1184b3cf-f6d1-421c-92fa-9510850b9424"
		},
		{
			"deviceTime": "2014-08-26T08:20:22",
			"value": 42,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22b536ae-d11e-46ab-b85e-b8b05ca8bb3f"
		},
		{
			"deviceTime": "2014-08-26T08:25:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ae6edaf-ed77-4c3f-98e5-71d69cb91085"
		},
		{
			"deviceTime": "2014-08-26T08:30:22",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72d8f941-ebcc-45fc-b518-2bb1d2c8978a"
		},
		{
			"deviceTime": "2014-08-26T08:33:41",
			"value": 25,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "1d6285f2-2ead-4a50-a3d0-90b84dbb222f"
		},
		{
			"deviceTime": "2014-08-26T08:33:41",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "14e2d851-3544-4047-8c2b-4ff2f7f7077a"
		},
		{
			"deviceTime": "2014-08-26T08:33:41",
			"id": "14e2d851-3544-4047-8c2b-4ff2f7f7077a",
			"source": "demo",
			"joinKey": "407c9ade-785f-4436-94b9-82b8061d1241",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 61
			}
		},
		{
			"deviceTime": "2014-08-26T08:33:41",
			"suspendedAt": "2014-08-26T08:41:11",
			"programmed": 4.7,
			"joinKey": "407c9ade-785f-4436-94b9-82b8061d1241",
			"value": 0.5,
			"source": "demo",
			"recommended": 4.1,
			"extendedDelivery": 4.7,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "8c86db80-f43c-4119-bdba-1c2f8b03116d"
		},
		{
			"deviceTime": "2014-08-26T08:35:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c38c3446-1246-4282-9a42-55b91871d3c9"
		},
		{
			"deviceTime": "2014-08-26T08:35:46",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0972751d-2578-44b6-a6a7-1fc20b546f5e"
		},
		{
			"deviceTime": "2014-08-26T08:35:46",
			"value": 28,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "26123672-2364-4b11-8582-5915d9696344"
		},
		{
			"deviceTime": "2014-08-26T08:35:46",
			"id": "26123672-2364-4b11-8582-5915d9696344",
			"source": "demo",
			"joinKey": "6b14a992-46ea-4cae-a5f3-8f6592dbfcde",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 28
			}
		},
		{
			"deviceTime": "2014-08-26T08:35:46",
			"programmed": 1.9,
			"joinKey": "6b14a992-46ea-4cae-a5f3-8f6592dbfcde",
			"value": 1.9,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c6a63a2d-75cc-46cd-bb19-bcbda2c705d0"
		},
		{
			"deviceTime": "2014-08-26T08:40:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f718c9b-f162-4987-8dce-bea4a7833cac"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-26T08:41:11",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "dc33aeb2-f6f0-4242-b147-3f695bea6520"
		},
		{
			"deviceTime": "2014-08-26T08:45:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f09d7654-5917-4f60-95ec-5ff0d9762315"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-26T08:47:41",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "bef28510-99dc-41c8-a8cb-e1857a1c9081",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-26T08:41:11",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "dc33aeb2-f6f0-4242-b147-3f695bea6520"
			}
		},
		{
			"deviceTime": "2014-08-26T08:50:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "753b44a6-5c6f-466e-b5ae-09413bf88227"
		},
		{
			"deviceTime": "2014-08-26T08:55:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "465f2269-2fcc-4386-a7e5-7a2997f77236"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-26T15:00:00",
			"start": "2014-08-26T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "850e289e-6389-41c4-9bb0-77666ebc7f35"
		},
		{
			"deviceTime": "2014-08-26T09:00:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28ee47e8-1364-4352-a01e-cc2155117930"
		},
		{
			"messageText": "Rump voluptate ullamco, consequat ut incididunt nisi kevin ad short ribs. Labore pork chop aliquip short loin rump esse jerky. Swine esse culpa filet mignon shankle tempor pork belly.",
			"parentMessage": "",
			"utcTime": "2014-08-26T09:05:04Z",
			"type": "message",
			"id": "7c6bb244-b2b6-4eb8-8579-e578c3661bf3"
		},
		{
			"deviceTime": "2014-08-26T09:05:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73f0a5d0-147a-484a-a4dc-dda07d676995"
		},
		{
			"deviceTime": "2014-08-26T09:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "389b2a68-2f2e-4088-8aca-f5aca1ae8c12"
		},
		{
			"deviceTime": "2014-08-26T09:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "276fa7ca-6516-49fb-8487-a93d805559d0"
		},
		{
			"deviceTime": "2014-08-26T09:26:55",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0db2d307-9908-423e-a75f-9754573a5603"
		},
		{
			"deviceTime": "2014-08-26T09:26:55",
			"value": 44,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "70257d4a-21c9-4fbf-a7b9-affbf69ccd8b"
		},
		{
			"deviceTime": "2014-08-26T09:26:55",
			"id": "70257d4a-21c9-4fbf-a7b9-affbf69ccd8b",
			"source": "demo",
			"joinKey": "2bf4afa1-65ac-45df-a990-001467397929",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 44
			}
		},
		{
			"deviceTime": "2014-08-26T09:26:55",
			"programmed": 2.9,
			"joinKey": "2bf4afa1-65ac-45df-a990-001467397929",
			"value": 2.9,
			"source": "demo",
			"recommended": 2.9,
			"extendedDelivery": 2.9,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "5a064fec-f48e-47cb-bdce-5ba996d7be1b"
		},
		{
			"deviceTime": "2014-08-26T09:33:56",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "8a9d8427-5773-4d36-b5c1-1408c0ad4732"
		},
		{
			"deviceTime": "2014-08-26T09:33:56",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "964c1419-adbf-4436-88df-78e3c10c3f79"
		},
		{
			"deviceTime": "2014-08-26T09:33:56",
			"id": "964c1419-adbf-4436-88df-78e3c10c3f79",
			"source": "demo",
			"joinKey": "3b754108-4bcc-4869-9c88-c49b3925234d",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 57
			}
		},
		{
			"deviceTime": "2014-08-26T09:33:56",
			"programmed": 4.1,
			"joinKey": "3b754108-4bcc-4869-9c88-c49b3925234d",
			"value": 4.1,
			"source": "demo",
			"recommended": 3.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "50015948-05d3-4d64-a975-0ca70d811576"
		},
		{
			"end": "2014-08-26T16:50:01",
			"start": "2014-08-26T09:50:01",
			"percent": 0.15,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 25200000,
			"type": "basal-rate-segment",
			"id": "f3559ffb-7be9-4c90-a991-503a79fe147a"
		},
		{
			"deviceTime": "2014-08-26T09:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f24d458-06b8-4a11-b8b6-6b5deca1413b"
		},
		{
			"deviceTime": "2014-08-26T10:25:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97f60f0e-4f78-4818-8bcb-b385d3ef095c"
		},
		{
			"deviceTime": "2014-08-26T10:30:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd51219f-8dd1-402f-b718-54bfdd7c6047"
		},
		{
			"deviceTime": "2014-08-26T10:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "076c7b83-c0a4-4f3b-8a04-29e24e4e8cf0"
		},
		{
			"deviceTime": "2014-08-26T10:40:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46e130da-65f8-475c-97ad-49c668047b16"
		},
		{
			"deviceTime": "2014-08-26T10:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c55790dd-2272-4b5d-a82f-b61610afdecf"
		},
		{
			"deviceTime": "2014-08-26T10:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "601b2dd9-41d5-480c-93d9-7023d4b78a9c"
		},
		{
			"deviceTime": "2014-08-26T10:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09fdee02-a88a-47ba-9c94-cce2e4429a83"
		},
		{
			"deviceTime": "2014-08-26T11:00:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1f9e6df-4c2b-45ee-aeec-f6d1ae14a502"
		},
		{
			"deviceTime": "2014-08-26T11:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7427c16-338c-463f-9a16-836e4f1aae1d"
		},
		{
			"deviceTime": "2014-08-26T11:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30596156-3654-4f4c-a2c1-dbbd9c41a7de"
		},
		{
			"deviceTime": "2014-08-26T11:15:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25a7e17d-bdc0-4897-af65-743b5907cbc5"
		},
		{
			"deviceTime": "2014-08-26T11:20:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6360fe2d-5ab6-490f-8c80-5c19927fbc86"
		},
		{
			"deviceTime": "2014-08-26T11:20:56",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3ed5157c-5dbf-4f6f-9bcd-8d288384dff0"
		},
		{
			"deviceTime": "2014-08-26T11:20:56",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "53cf3644-698e-4d66-92e7-11d3c89fe662"
		},
		{
			"deviceTime": "2014-08-26T11:20:56",
			"id": "53cf3644-698e-4d66-92e7-11d3c89fe662",
			"source": "demo",
			"joinKey": "28512457-87d1-4b60-bfc2-a4c520c37404",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 64
			}
		},
		{
			"deviceTime": "2014-08-26T11:20:56",
			"programmed": 4.3,
			"joinKey": "28512457-87d1-4b60-bfc2-a4c520c37404",
			"value": 4.3,
			"source": "demo",
			"recommended": 4.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "e5c456a1-1ea7-427f-8070-a9cf1fda7d28"
		},
		{
			"deviceTime": "2014-08-26T11:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a14a5275-957b-4c1b-b1e0-7944e9adbb81"
		},
		{
			"deviceTime": "2014-08-26T11:30:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc7054a8-9f0b-4924-bd33-8e803109ac31"
		},
		{
			"deviceTime": "2014-08-26T11:35:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09e4dba2-d56b-4cd5-a4bc-ca6c0752855d"
		},
		{
			"deviceTime": "2014-08-26T11:40:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2506fea5-c101-4e51-9b49-3838ad441d95"
		},
		{
			"deviceTime": "2014-08-26T11:45:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e58a94f-cc6e-41e4-9801-23ec5d09dc11"
		},
		{
			"deviceTime": "2014-08-26T11:50:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55ae8e20-9963-41e8-bc31-30abe1d93c61"
		},
		{
			"deviceTime": "2014-08-26T11:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2fb229f8-7238-4eff-a5fb-2a577288bc93"
		},
		{
			"deviceTime": "2014-08-26T12:00:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e542fa3-7d05-449c-a397-c0f0849b6ce6"
		},
		{
			"deviceTime": "2014-08-26T12:05:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98bfca97-0e1b-47f7-bc42-c84a1e7dc69b"
		},
		{
			"deviceTime": "2014-08-26T12:10:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f38b88d-79a7-4523-920e-44a094bac919"
		},
		{
			"deviceTime": "2014-08-26T12:15:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02052507-33e7-418b-b0c3-9472fe094131"
		},
		{
			"deviceTime": "2014-08-26T12:20:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6321c3c3-3828-49ee-aa5a-f1cc1461010f"
		},
		{
			"deviceTime": "2014-08-26T12:25:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6105d0a5-d549-435f-9beb-385376f0e932"
		},
		{
			"deviceTime": "2014-08-26T12:30:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29c2e97d-3563-48d9-83fb-f461a1aafd9d"
		},
		{
			"deviceTime": "2014-08-26T12:35:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75718a55-cae2-427b-9fae-93aa0c1c6449"
		},
		{
			"deviceTime": "2014-08-26T12:40:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7695d00-a54f-4a49-8c4d-5a2197c816eb"
		},
		{
			"deviceTime": "2014-08-26T12:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae59ed2e-6e05-4052-b75d-eb3ee84d7ea5"
		},
		{
			"deviceTime": "2014-08-26T12:50:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e93a2a0-f0b2-4429-a1a1-a384b6a1aa00"
		},
		{
			"deviceTime": "2014-08-26T12:55:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d3a1550-f350-4e99-aa85-73a8e589038a"
		},
		{
			"deviceTime": "2014-08-26T13:00:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90fa4af9-d91a-4f8b-893b-4ef87f12a452"
		},
		{
			"deviceTime": "2014-08-26T13:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1887e34c-c4ea-4278-8a5f-3ce0ecf6cb76"
		},
		{
			"deviceTime": "2014-08-26T13:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7babca8-37f8-49c5-a82d-e3ab17b0b37b"
		},
		{
			"deviceTime": "2014-08-26T13:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31c7faad-9557-4d84-8766-efe18f54d319"
		},
		{
			"deviceTime": "2014-08-26T13:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "478d6314-f989-4fe3-9b17-a425834ff69d"
		},
		{
			"deviceTime": "2014-08-26T13:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60fa2340-2e4c-420f-9bed-a4a6260b099d"
		},
		{
			"deviceTime": "2014-08-26T13:30:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52d5dc65-b1bc-4901-b76a-6ae6d05bb7a7"
		},
		{
			"deviceTime": "2014-08-26T13:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7a0a85a-f543-4dfa-ba7f-1ffd23eac790"
		},
		{
			"deviceTime": "2014-08-26T13:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2713beef-b17e-45d8-83e9-6bf8abd8a019"
		},
		{
			"deviceTime": "2014-08-26T13:45:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eeeac8f2-08ed-456d-9ab7-138ef60e2e16"
		},
		{
			"deviceTime": "2014-08-26T13:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcf4d0d3-6444-4415-9b10-161cb7b618f2"
		},
		{
			"deviceTime": "2014-08-26T13:55:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be5e61dc-b56e-45f5-91ed-f5cb53841fbb"
		},
		{
			"deviceTime": "2014-08-26T14:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64a1947d-a6bf-4e88-a2fe-e5616788cfe5"
		},
		{
			"deviceTime": "2014-08-26T14:05:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e1d8354-9dbd-4a61-8e00-109e957e8584"
		},
		{
			"end": "2014-08-26T20:10:01",
			"start": "2014-08-26T14:10:01",
			"percent": 0.35,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "53af9694-efa1-47e0-96f2-c3e8eb67b840"
		},
		{
			"deviceTime": "2014-08-26T14:10:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31a4c5ac-4208-487c-9d83-7a0a37c938a8"
		},
		{
			"deviceTime": "2014-08-26T14:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da1ca1f9-359a-432d-a383-53af32944b3b"
		},
		{
			"deviceTime": "2014-08-26T14:20:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c03a8ed-ccb1-4470-ad21-b93c5d4ad040"
		},
		{
			"deviceTime": "2014-08-26T14:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e92eacd-f6b5-4be6-b938-13bc215ba6c5"
		},
		{
			"deviceTime": "2014-08-26T14:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c45453fd-ee68-44b6-b868-5192465f135c"
		},
		{
			"deviceTime": "2014-08-26T14:35:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9bbff138-4a29-4d07-9093-efbf115bdee4"
		},
		{
			"deviceTime": "2014-08-26T14:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbf94737-8bfb-40a3-8948-bfb867ff7232"
		},
		{
			"deviceTime": "2014-08-26T14:45:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b62bc6d-8f3e-4bfe-85be-c85cf51907de"
		},
		{
			"deviceTime": "2014-08-26T14:50:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6398836-b70c-46ee-9a17-98f79d2059b1"
		},
		{
			"deviceTime": "2014-08-26T14:55:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e4b981e-12b1-40dd-ba1e-1ca7d3dc6911"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-26T20:00:00",
			"start": "2014-08-26T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "83b04d07-f740-4ccd-ac80-34f7897a56ed"
		},
		{
			"deviceTime": "2014-08-26T15:00:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd686aa0-0fef-4172-8654-f78cf2783747"
		},
		{
			"deviceTime": "2014-08-26T15:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b432d600-0a54-4668-9998-0aa1b3ebc0c9"
		},
		{
			"deviceTime": "2014-08-26T15:10:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e346c275-ff82-4bea-a759-fa265eb0ee17"
		},
		{
			"deviceTime": "2014-08-26T15:15:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e725dc8-9a14-431c-9dc8-f7dbad65ee2e"
		},
		{
			"deviceTime": "2014-08-26T15:20:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ea247a2-a329-4d21-92b3-b9dff9994918"
		},
		{
			"deviceTime": "2014-08-26T15:25:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "052cba8b-385d-4dc9-984e-be0ca0a21f71"
		},
		{
			"deviceTime": "2014-08-26T15:30:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9dacc11e-6fcb-4cc8-8a44-b8d4850895de"
		},
		{
			"deviceTime": "2014-08-26T15:35:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7765e059-5993-4f7a-8a3b-d868c24ad90a"
		},
		{
			"deviceTime": "2014-08-26T15:40:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbbbcaee-640d-4ffe-b69e-41133548d81b"
		},
		{
			"deviceTime": "2014-08-26T15:45:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb1ad56d-7bd6-4df0-85c6-a8e9e0c8a00a"
		},
		{
			"deviceTime": "2014-08-26T15:50:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53646b53-80ce-4fd7-b223-926ceeacbff6"
		},
		{
			"deviceTime": "2014-08-26T15:55:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2745949a-301c-4bb9-8c1c-ff2fc8e175b6"
		},
		{
			"deviceTime": "2014-08-26T16:00:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26bbe8a0-38b5-4b62-9478-8fb99ebf7a79"
		},
		{
			"deviceTime": "2014-08-26T16:05:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bbb9080-6103-49d8-93c5-67b26820b961"
		},
		{
			"deviceTime": "2014-08-26T16:10:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "168d4c09-fd96-4485-ab17-2355da7d7d23"
		},
		{
			"deviceTime": "2014-08-26T16:15:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e93a08ec-c413-4c2a-95b1-5276a1f61c66"
		},
		{
			"deviceTime": "2014-08-26T16:20:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edd93768-fa54-45a7-a0c8-00fb15123913"
		},
		{
			"deviceTime": "2014-08-26T16:25:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "361cf066-edf2-4171-bf75-b81beefc02c3"
		},
		{
			"deviceTime": "2014-08-26T16:30:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afa28462-a04a-4e0c-8150-d142f8b314b7"
		},
		{
			"deviceTime": "2014-08-26T16:35:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a46ea906-32a0-43f8-b1cb-75dcf85c5338"
		},
		{
			"deviceTime": "2014-08-26T16:40:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db61c215-33fb-4074-a34c-520d2036a6b5"
		},
		{
			"deviceTime": "2014-08-26T16:45:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8ac137c-5977-4d4f-b936-d63273d3e0aa"
		},
		{
			"deviceTime": "2014-08-26T16:50:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a44c6587-b675-49cc-865b-e899df680808"
		},
		{
			"deviceTime": "2014-08-26T16:55:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc8301c8-d0b7-497d-950a-4b5f3afe6df0"
		},
		{
			"deviceTime": "2014-08-26T17:00:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26232740-6111-4401-b340-af3d0bedc712"
		},
		{
			"deviceTime": "2014-08-26T17:05:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e178bea-301d-4cdd-a6a2-a55b7d9e9007"
		},
		{
			"deviceTime": "2014-08-26T17:10:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b4c3fe3-f2c6-4d50-baae-afecd4e010e3"
		},
		{
			"deviceTime": "2014-08-26T17:15:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d81a0645-5408-452d-81dd-b37f137c722b"
		},
		{
			"deviceTime": "2014-08-26T17:16:01",
			"value": 1.1,
			"source": "demo",
			"recommended": 2.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "be65fee0-211c-42a1-a1aa-967a74123baf"
		},
		{
			"deviceTime": "2014-08-26T17:20:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42579f50-e79b-4932-9506-c181a00d22b2"
		},
		{
			"deviceTime": "2014-08-26T17:25:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6a839be-9a1a-495d-928d-b9f65c6e7dd5"
		},
		{
			"deviceTime": "2014-08-26T17:30:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2515322d-9517-47e6-bdb8-b8b0f7c4f514"
		},
		{
			"deviceTime": "2014-08-26T17:35:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "494dd98d-ce9c-471a-a3ac-fb92f03807e2"
		},
		{
			"deviceTime": "2014-08-26T17:40:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b448e62-d65b-472a-8b9c-14f6c35fa39e"
		},
		{
			"deviceTime": "2014-08-26T17:45:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "237f15f2-6393-4bf5-a7b8-a780993077fc"
		},
		{
			"deviceTime": "2014-08-26T17:50:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f381e8d-1b2e-4d35-8175-a4a98359c8f2"
		},
		{
			"deviceTime": "2014-08-26T17:55:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ee6c4aa-c84f-4923-8323-c928b1da0e5e"
		},
		{
			"deviceTime": "2014-08-26T18:00:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "471a5efa-d2c1-4711-b3f7-0fcade8c96c8"
		},
		{
			"deviceTime": "2014-08-26T18:05:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8131e62-044e-4039-b646-eb3e3462e04d"
		},
		{
			"deviceTime": "2014-08-26T18:10:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fec43fea-0071-42d2-9f16-811a9160613f"
		},
		{
			"deviceTime": "2014-08-26T18:15:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86df3651-8050-4e97-833d-42cb0e27e874"
		},
		{
			"deviceTime": "2014-08-26T18:20:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0a667fb-ad92-4e30-b526-8616267f8296"
		},
		{
			"deviceTime": "2014-08-26T18:25:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc55ef85-4608-4d27-a8f4-9ce79a3bf3b1"
		},
		{
			"deviceTime": "2014-08-26T18:30:22",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d20517f-8b0e-462b-8738-7d596825e396"
		},
		{
			"deviceTime": "2014-08-26T18:35:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f0d4586-f867-4100-8982-847cd8b8a532"
		},
		{
			"deviceTime": "2014-08-26T18:40:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5dd98ebd-6a06-4697-8b0c-5f1fb1ec3b8d"
		},
		{
			"deviceTime": "2014-08-26T18:45:22",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9f3f853-a484-4380-9180-59e3c096f640"
		},
		{
			"end": "2014-08-26T21:19:01",
			"start": "2014-08-26T18:49:01",
			"percent": 1.35,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 9000000,
			"type": "basal-rate-segment",
			"id": "a99050e3-fefc-441b-b852-1a7ea7cd6174"
		},
		{
			"deviceTime": "2014-08-26T18:50:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e0f9ec7-0e19-46d0-ae22-a45e65f5be17"
		},
		{
			"deviceTime": "2014-08-26T18:55:22",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ef176e3-7637-4631-81e8-54d9814f959a"
		},
		{
			"deviceTime": "2014-08-26T19:00:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9eb2282-7bf3-4c1b-8dd5-f47130b51a54"
		},
		{
			"deviceTime": "2014-08-26T19:05:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac7e9abc-eba0-4c3e-9faf-b0de6d1c38a0"
		},
		{
			"deviceTime": "2014-08-26T19:10:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e91ff63f-b6b8-4c39-a99a-bdd82b4b9c5f"
		},
		{
			"deviceTime": "2014-08-26T19:15:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae77cfcf-1459-4537-a87c-e66ff1a01732"
		},
		{
			"deviceTime": "2014-08-26T19:20:22",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c74a3522-60dc-4321-828a-afd492b268c0"
		},
		{
			"deviceTime": "2014-08-26T19:25:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c12d0396-0df9-40f2-a355-2a7246e406d5"
		},
		{
			"deviceTime": "2014-08-26T19:30:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c31d6867-dec9-41f9-a81b-2921757915be"
		},
		{
			"deviceTime": "2014-08-26T19:35:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b406e05-ca7a-40cc-84b7-43cb82ab0b53"
		},
		{
			"deviceTime": "2014-08-26T19:40:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e5824c2-06c5-4c98-83a6-3290b5b40991"
		},
		{
			"deviceTime": "2014-08-26T19:45:22",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74768e3b-796e-4fa3-a4d4-9bfbdc713cf9"
		},
		{
			"deviceTime": "2014-08-26T19:50:22",
			"value": 53,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3be88022-9d96-45ee-b595-8100893340a0"
		},
		{
			"deviceTime": "2014-08-26T19:55:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fc105b4-2e47-4649-a367-4542a0ac113b"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-27T00:00:00",
			"start": "2014-08-26T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "db365eb6-ae3c-432b-8893-af87a6ed957b"
		},
		{
			"deviceTime": "2014-08-26T20:00:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8706343-f573-409b-89fe-973361ab3d0b"
		},
		{
			"deviceTime": "2014-08-26T20:05:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0dd8d777-b7ed-46c6-be76-5d630294843c"
		},
		{
			"deviceTime": "2014-08-26T20:10:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0d93cfc-87c0-4468-b347-8f79d5de5265"
		},
		{
			"deviceTime": "2014-08-26T20:15:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78307105-3a42-44fb-a543-56ac024edfc2"
		},
		{
			"deviceTime": "2014-08-26T20:20:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b783cb1f-f301-4cb2-b5df-250293369bba"
		},
		{
			"deviceTime": "2014-08-26T20:25:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2bbf6dfb-e209-401b-b369-27fb70eb35ef"
		},
		{
			"deviceTime": "2014-08-26T20:30:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab9a2ecc-b70d-4528-94b7-85b92cac1877"
		},
		{
			"deviceTime": "2014-08-26T20:35:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7222911f-3a2f-4f85-a911-367cc09ec166"
		},
		{
			"deviceTime": "2014-08-26T20:40:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af0d886d-b490-4b8a-9e91-1a92e43a32c3"
		},
		{
			"deviceTime": "2014-08-26T20:45:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5d353bc-7ffe-41cc-9517-20f492b18f7f"
		},
		{
			"deviceTime": "2014-08-26T20:50:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53930245-5748-454e-96d3-e3ccc01de8d8"
		},
		{
			"deviceTime": "2014-08-26T20:55:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eae09b69-ab80-4978-942d-4f96535df2a5"
		},
		{
			"deviceTime": "2014-08-26T21:00:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96e47c21-2a8f-45c3-adb5-967edfb9a5dd"
		},
		{
			"deviceTime": "2014-08-26T21:05:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e49b4863-058f-4bff-9ed6-6b7cad9b3010"
		},
		{
			"deviceTime": "2014-08-26T21:10:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ef20fe6-ffe7-42c4-89dd-b53e58b17c27"
		},
		{
			"deviceTime": "2014-08-26T21:15:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc093f75-a2ce-4c77-9053-06b44d5db943"
		},
		{
			"deviceTime": "2014-08-26T21:20:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdbbe2f5-bb72-49ba-affb-d0849be52245"
		},
		{
			"deviceTime": "2014-08-26T21:25:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "129e3b73-c5d3-4930-aa5e-c4d464d84868"
		},
		{
			"deviceTime": "2014-08-26T21:30:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15ddc070-1da4-4883-a893-ae8478dbdf8f"
		},
		{
			"deviceTime": "2014-08-26T21:35:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87d12fbd-3b5f-4c43-838f-b12f99f92438"
		},
		{
			"deviceTime": "2014-08-26T21:40:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab4d40d6-987e-458f-9682-ee7bbc041dd8"
		},
		{
			"deviceTime": "2014-08-26T21:45:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0bfe8a99-9525-413b-a3f5-0d6679dd0fe4"
		},
		{
			"deviceTime": "2014-08-26T21:50:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c759a46a-fe55-449c-a27d-c57465be3169"
		},
		{
			"deviceTime": "2014-08-26T21:55:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9acc0149-7422-4bab-a956-816ec136cdbb"
		},
		{
			"deviceTime": "2014-08-26T22:00:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "465e9078-eb7e-4cd8-834e-7c928371e307"
		},
		{
			"deviceTime": "2014-08-26T22:05:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c8ca1f2-d1a8-46d5-ae9b-21703926b639"
		},
		{
			"deviceTime": "2014-08-26T22:10:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8e865be-d663-4698-99c5-e3184a409d46"
		},
		{
			"deviceTime": "2014-08-26T22:15:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e66b25c-0d78-49b0-89e1-a06875f42f51"
		},
		{
			"deviceTime": "2014-08-26T22:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d2dc9f8-7a31-44b0-a475-c301b09be080"
		},
		{
			"deviceTime": "2014-08-26T22:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9bf6cdff-f54d-44c9-b381-54cce99dfbb2"
		},
		{
			"deviceTime": "2014-08-26T22:30:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89c61b65-5660-4ec9-b522-0a178051c0b5"
		},
		{
			"deviceTime": "2014-08-26T22:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3556ed6f-e02e-48a9-ba70-62daefbd58b7"
		},
		{
			"deviceTime": "2014-08-26T22:40:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15806309-54fe-4102-8f7d-42b063728984"
		},
		{
			"deviceTime": "2014-08-26T22:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21e1a461-0cc6-44de-8049-f81717f01875"
		},
		{
			"deviceTime": "2014-08-26T22:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "746d0612-fab2-4fe8-a8e3-5179bb9a2188"
		},
		{
			"deviceTime": "2014-08-26T22:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f9a0a05-b208-48e1-9911-463c1cbff1b8"
		},
		{
			"deviceTime": "2014-08-26T23:00:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9849c7b3-6139-45e4-b996-9cd94191ba62"
		},
		{
			"deviceTime": "2014-08-26T23:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e956c33-7dae-4f6d-8a0e-72feb24865ed"
		},
		{
			"deviceTime": "2014-08-26T23:10:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32f89ebb-49df-42c0-b8e1-4dcb1b5bcb99"
		},
		{
			"deviceTime": "2014-08-26T23:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73fea5c1-8dbc-4f1f-af42-5d8a5f2c208e"
		},
		{
			"deviceTime": "2014-08-26T23:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9ad65c8-229f-44c8-8da6-fff6cf67b0ec"
		},
		{
			"deviceTime": "2014-08-26T23:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60f9c951-2119-4ac5-bfaf-27089a5a15fa"
		},
		{
			"deviceTime": "2014-08-26T23:30:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fab7bc6-854a-46f9-aa29-87f586e89b6c"
		},
		{
			"deviceTime": "2014-08-26T23:35:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b60711b6-25d2-420b-b3b2-f27e2a060d39"
		},
		{
			"deviceTime": "2014-08-26T23:40:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ed1146a-4b0a-4010-8c0f-e79424fc2756"
		},
		{
			"deviceTime": "2014-08-26T23:45:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba596843-fdb7-4549-a704-d0d5b07c1bcb"
		},
		{
			"deviceTime": "2014-08-26T23:50:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71ff5a5f-3001-4394-a4d4-b05fda78a21d"
		},
		{
			"deviceTime": "2014-08-26T23:55:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4dfe65c9-0b62-45d1-8723-887801a7b839"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-27T02:00:00",
			"start": "2014-08-27T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "e8f2ef15-eda1-48dd-bdb3-337c37461a46"
		},
		{
			"deviceTime": "2014-08-27T00:00:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0e760fb-5799-42ac-ac69-731851ff59df"
		},
		{
			"deviceTime": "2014-08-27T00:05:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8435113b-bd00-4af1-971c-6ffb42be8994"
		},
		{
			"deviceTime": "2014-08-27T00:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2cef268-033c-471c-9e3f-90e37992fd2b"
		},
		{
			"deviceTime": "2014-08-27T00:15:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c1b9196-4f58-4140-b232-ba0d9c5fefc1"
		},
		{
			"deviceTime": "2014-08-27T00:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c73b28e-1d4f-4385-9f8b-2c2579355462"
		},
		{
			"deviceTime": "2014-08-27T00:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e21cad6-9b1a-4876-afb8-e8612db4649d"
		},
		{
			"deviceTime": "2014-08-27T00:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "065a0022-470d-4389-9e85-83b5540fc1b3"
		},
		{
			"deviceTime": "2014-08-27T00:35:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2cab475-7689-4d10-9b7d-2d0e7737b8a1"
		},
		{
			"deviceTime": "2014-08-27T00:40:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "193f147a-ac5a-4ffe-8476-4153688d6d4a"
		},
		{
			"deviceTime": "2014-08-27T00:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89ebff38-5e76-4c1f-8258-beea423ebbb4"
		},
		{
			"deviceTime": "2014-08-27T00:50:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1aed018-2234-40fd-9d17-c0939bdf9904"
		},
		{
			"deviceTime": "2014-08-27T00:55:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a8f7edd-d076-4808-89e7-3d0183f67627"
		},
		{
			"deviceTime": "2014-08-27T01:00:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1de72c4e-63b5-43ed-82aa-5ee42f9eb6ee"
		},
		{
			"deviceTime": "2014-08-27T01:05:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d25ca125-463d-4e6b-9cdb-9cd2c78cbed1"
		},
		{
			"deviceTime": "2014-08-27T01:10:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb8f5228-632e-4b25-ad35-d9516f453e8e"
		},
		{
			"deviceTime": "2014-08-27T01:15:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a743da59-68a4-4753-8f35-47f84376883b"
		},
		{
			"deviceTime": "2014-08-27T01:20:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e8837fb-c8e3-4ff3-88d2-0b3815741d28"
		},
		{
			"deviceTime": "2014-08-27T01:25:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6215483c-ecc6-4b95-acca-17e33a713d5f"
		},
		{
			"deviceTime": "2014-08-27T01:30:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a798ac69-5714-4811-b988-d23666a9e439"
		},
		{
			"deviceTime": "2014-08-27T01:35:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16c51e1b-1df8-4d4e-8939-e5400bbf609f"
		},
		{
			"deviceTime": "2014-08-27T01:40:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3af541c4-b7e6-4aee-b55a-58834cc717a9"
		},
		{
			"deviceTime": "2014-08-27T01:45:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a38904b2-10c2-4d42-b307-03b90942a87c"
		},
		{
			"deviceTime": "2014-08-27T01:50:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04edaa11-2b93-4653-b51a-b3b5d88cbd63"
		},
		{
			"deviceTime": "2014-08-27T01:55:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "508384f6-124b-409d-a9a4-31aab8021e51"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-27T04:00:00",
			"start": "2014-08-27T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "dbee787a-8d40-427c-859e-0e1ceced3f61"
		},
		{
			"deviceTime": "2014-08-27T02:00:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f67a5be-04e6-4d7f-8185-d2f9e3855e64"
		},
		{
			"deviceTime": "2014-08-27T02:05:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f8f7179-c4dd-48e2-ab53-d23f03952528"
		},
		{
			"deviceTime": "2014-08-27T02:10:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3624513-c3f2-4be9-9fa1-4b58b579bf40"
		},
		{
			"deviceTime": "2014-08-27T02:15:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebd39968-91ac-4a5d-b2f8-ae9458949003"
		},
		{
			"deviceTime": "2014-08-27T02:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af1fb954-760b-4fff-b69c-243c9fd57243"
		},
		{
			"deviceTime": "2014-08-27T02:25:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1aabbb81-6b10-4c8e-bf13-7f5faafdcff4"
		},
		{
			"deviceTime": "2014-08-27T02:30:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b92952f9-54e5-4c6c-93c7-8ddfa62006f4"
		},
		{
			"deviceTime": "2014-08-27T02:35:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8409dd45-d6d6-4fbd-84d4-99ef424254dd"
		},
		{
			"deviceTime": "2014-08-27T02:40:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "089e5e97-80e3-4341-9735-d87e731024ea"
		},
		{
			"deviceTime": "2014-08-27T02:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73c92cdd-d8d9-4cba-8faf-4e38a10216a5"
		},
		{
			"deviceTime": "2014-08-27T02:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aa8714c-93fe-42f4-abf2-64dc195507b2"
		},
		{
			"deviceTime": "2014-08-27T02:55:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2f68916-3ccd-4d1b-ab0a-0ef6de8886e5"
		},
		{
			"deviceTime": "2014-08-27T03:00:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "883a4deb-5be0-4d32-b263-33b50f5acdae"
		},
		{
			"deviceTime": "2014-08-27T03:05:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "317a9342-4ac7-4011-a422-9162e5b5b8bd"
		},
		{
			"deviceTime": "2014-08-27T03:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f54b6573-880c-4e47-98e1-c8da7e6e131a"
		},
		{
			"deviceTime": "2014-08-27T03:15:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "333a10e5-84ba-47cd-9238-e0fadbfe6677"
		},
		{
			"deviceTime": "2014-08-27T03:20:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f2a9cf9-9373-45c1-90ac-7ccdcf74a32b"
		},
		{
			"deviceTime": "2014-08-27T03:25:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ee6a6e9-5482-4ed9-bf40-dfa3c477da73"
		},
		{
			"deviceTime": "2014-08-27T03:30:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acb16421-465e-4129-b1c9-07e55910729b"
		},
		{
			"deviceTime": "2014-08-27T03:35:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56a00acb-6141-4cd6-877a-4775d980fe07"
		},
		{
			"deviceTime": "2014-08-27T03:40:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4cb8a4c-2a89-4733-9ad1-9993e8759e5c"
		},
		{
			"deviceTime": "2014-08-27T03:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c644d076-ea96-45b5-ab9c-4e72add9888d"
		},
		{
			"deviceTime": "2014-08-27T03:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9510931-f6b7-4dc1-80d0-c0df48f6146a"
		},
		{
			"deviceTime": "2014-08-27T03:55:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53beb1a8-361f-403d-b5d6-d36116064ad8"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-27T05:00:00",
			"start": "2014-08-27T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "8b2c06b7-353b-4f02-8d12-e1cb5823d621"
		},
		{
			"deviceTime": "2014-08-27T04:00:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1916e0f7-4b24-4d8b-a2fd-03e9a89c5dd2"
		},
		{
			"deviceTime": "2014-08-27T04:05:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c79cbeed-5b52-48b7-b2a3-0f098b028d20"
		},
		{
			"deviceTime": "2014-08-27T04:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fec58e3e-7f00-4775-85c1-2b6830b0ebf1"
		},
		{
			"deviceTime": "2014-08-27T04:15:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bee647f-b4df-457d-bda0-96d9e8aba267"
		},
		{
			"deviceTime": "2014-08-27T04:20:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76bff81c-eb86-4224-9fbc-bdca20d575fc"
		},
		{
			"deviceTime": "2014-08-27T04:21:28",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "a251207c-0f22-4463-b0fd-d0d18ee8d2b1"
		},
		{
			"deviceTime": "2014-08-27T04:21:28",
			"value": 52,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "81ca094d-82c4-4a78-9174-9aa72ff92abf"
		},
		{
			"deviceTime": "2014-08-27T04:21:28",
			"id": "81ca094d-82c4-4a78-9174-9aa72ff92abf",
			"source": "demo",
			"joinKey": "f55ac912-fd81-44f3-91c2-6164ad0ae777",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 52
			}
		},
		{
			"deviceTime": "2014-08-27T04:21:28",
			"suspendedAt": "2014-08-27T04:41:28",
			"programmed": 3.5,
			"joinKey": "f55ac912-fd81-44f3-91c2-6164ad0ae777",
			"value": 0.7,
			"id": "3ec8b333-af5a-414c-8e12-da58600306bb",
			"source": "demo",
			"recommended": 3.5,
			"extendedDelivery": 2.4,
			"initialDelivery": 1.1,
			"duration": 3600000,
			"extended": true,
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			],
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-27T04:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40dbfb6f-1474-4635-9177-5be9550acf35"
		},
		{
			"deviceTime": "2014-08-27T04:30:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59891d11-40a1-442a-a1ef-d2aa0b983640"
		},
		{
			"deviceTime": "2014-08-27T04:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "978bf1a1-38b1-4c69-9a2b-dc4ed31b0da0"
		},
		{
			"deviceTime": "2014-08-27T04:40:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1585f462-39cc-47c9-a857-d7e97f0c4cc5"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-27T04:41:28",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "3631eef9-2a0d-42b1-835d-a6abc1547544"
		},
		{
			"deviceTime": "2014-08-27T04:45:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e32f21f7-ba5b-4c4f-94d5-a4f418e5baad"
		},
		{
			"deviceTime": "2014-08-27T04:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00196cf1-28d2-4c02-8ccc-5d4a0fb282ef"
		},
		{
			"deviceTime": "2014-08-27T04:55:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "796ea02b-4e43-44f0-8cb5-757075b0cece"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-27T06:00:00",
			"start": "2014-08-27T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "86ce4e0c-396f-4f67-a37c-764d5ff8a449"
		},
		{
			"deviceTime": "2014-08-27T05:00:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5850da6-ca9d-418d-a9c8-afb13ac7d74a"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-27T05:01:28",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "50166ad8-7f49-450a-b184-90ea011f2594",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-27T04:41:28",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "3631eef9-2a0d-42b1-835d-a6abc1547544"
			}
		},
		{
			"deviceTime": "2014-08-27T05:05:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc72e779-3410-4bc9-a0f2-ff327446155c"
		},
		{
			"deviceTime": "2014-08-27T05:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdbd23f1-d8d8-4b0d-be42-5a1cbba54c28"
		},
		{
			"deviceTime": "2014-08-27T05:15:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07e8b3e0-23c9-48d3-a5a8-d84c579ad988"
		},
		{
			"deviceTime": "2014-08-27T05:17:01",
			"value": 3.6,
			"source": "demo",
			"recommended": 3.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "51bb050d-eafd-491d-905d-51daab5a5d18"
		},
		{
			"deviceTime": "2014-08-27T05:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f21e42d-a649-47d1-8b92-dbe494919d05"
		},
		{
			"deviceTime": "2014-08-27T05:25:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0499c19-90c1-4f94-8908-2936d0122f73"
		},
		{
			"deviceTime": "2014-08-27T05:30:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7bf73ab-2199-4d53-940f-4b5d11d049bf"
		},
		{
			"deviceTime": "2014-08-27T05:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab80d11e-4075-40e4-8771-0c3bf764b82e"
		},
		{
			"deviceTime": "2014-08-27T05:40:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f1b7554-03fc-4a7b-acb3-05756d6bed11"
		},
		{
			"deviceTime": "2014-08-27T05:45:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb4fe803-70a3-4eff-9a8e-561b01cbeee5"
		},
		{
			"deviceTime": "2014-08-27T05:50:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "246ea70b-d561-44f6-82e2-3f62c04aa5eb"
		},
		{
			"deviceTime": "2014-08-27T05:55:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e3718b9-1172-4dcb-a365-5542d2d0cfcd"
		},
		{
			"delivered": 1,
			"end": "2014-08-27T09:00:00",
			"start": "2014-08-27T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "1528445f-a111-44ad-82b5-d09fa47f157a"
		},
		{
			"deviceTime": "2014-08-27T06:00:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3ae6618-4808-4ddc-ae4a-b6c18fd14484"
		},
		{
			"deviceTime": "2014-08-27T06:05:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "558a1bb2-c9ae-4eae-819e-d084d837d82b"
		},
		{
			"end": "2014-08-27T13:40:01",
			"start": "2014-08-27T06:10:01",
			"percent": 0.05,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 27000000,
			"type": "basal-rate-segment",
			"id": "67ee60e3-81ba-425b-a4a3-e7a923187637"
		},
		{
			"deviceTime": "2014-08-27T06:10:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd2300bf-8ab8-4154-8059-222c0fe2e576"
		},
		{
			"deviceTime": "2014-08-27T06:15:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e8d1c03-69a6-4dca-a580-a768a8249654"
		},
		{
			"deviceTime": "2014-08-27T06:20:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73680ea4-6e35-45b8-bdb9-b387837b6979"
		},
		{
			"deviceTime": "2014-08-27T06:25:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d9808ee-8095-43a1-8e21-212d865fa2b1"
		},
		{
			"deviceTime": "2014-08-27T06:30:22",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "942da8f1-a2dc-4ece-8c30-acf8ee46c4c3"
		},
		{
			"deviceTime": "2014-08-27T06:35:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6903bce5-fa79-495c-824d-14eae418b681"
		},
		{
			"deviceTime": "2014-08-27T06:40:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab8703cc-7844-4e4c-8023-9dbe5abf2eff"
		},
		{
			"deviceTime": "2014-08-27T06:45:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1bc80d6-b059-4535-86e1-cdf95c65b52c"
		},
		{
			"deviceTime": "2014-08-27T06:50:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "917c1025-b290-42d5-9905-b4e00dcef2e3"
		},
		{
			"deviceTime": "2014-08-27T06:55:22",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f0730f2c-2471-4859-9ed4-a63965de2fcc"
		},
		{
			"deviceTime": "2014-08-27T07:00:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6940c8ce-a034-4c37-a42c-8223bd85a882"
		},
		{
			"deviceTime": "2014-08-27T07:05:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06e3158f-888e-4fb5-bd41-58539b6fd09a"
		},
		{
			"deviceTime": "2014-08-27T07:10:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60d4ded7-07d6-4ed5-a938-5b813ca95785"
		},
		{
			"deviceTime": "2014-08-27T07:15:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c65ef7e7-9fdb-47fc-a079-ff8592ead192"
		},
		{
			"deviceTime": "2014-08-27T07:20:22",
			"value": 66,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d562e535-438b-4a23-930a-e47bfceb5eb9"
		},
		{
			"deviceTime": "2014-08-27T07:25:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd8d2277-ab53-4c4a-919e-28d42aebdb6e"
		},
		{
			"deviceTime": "2014-08-27T07:30:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11e736f8-0741-499c-970f-cfc8559fd7ce"
		},
		{
			"deviceTime": "2014-08-27T07:35:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5dd54e7e-b977-4aee-a92e-54c2549676a2"
		},
		{
			"deviceTime": "2014-08-27T07:40:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f30d5c09-fa69-4e28-a23b-03da65a18b8c"
		},
		{
			"deviceTime": "2014-08-27T07:45:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00ea62bc-23fb-4d7b-8b6c-ac03e27a996c"
		},
		{
			"deviceTime": "2014-08-27T07:50:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bd6b332-b507-44c2-b8a2-bac2fab97fd2"
		},
		{
			"deviceTime": "2014-08-27T07:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a08fd61-a454-4b62-babd-871f3963b19a"
		},
		{
			"deviceTime": "2014-08-27T08:00:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "064db932-f0f9-405e-b0a2-63a7c1402a3d"
		},
		{
			"deviceTime": "2014-08-27T08:03:31",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "39330325-db97-4bd2-9c7e-58bb71bb83e4"
		},
		{
			"deviceTime": "2014-08-27T08:03:31",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "37e822e8-5119-4109-bdf9-91a228583ae5"
		},
		{
			"deviceTime": "2014-08-27T08:03:31",
			"id": "37e822e8-5119-4109-bdf9-91a228583ae5",
			"source": "demo",
			"joinKey": "7b2e1b82-37ec-4a6d-aade-90cb38d311a5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 63
			}
		},
		{
			"deviceTime": "2014-08-27T08:03:31",
			"programmed": 4.2,
			"joinKey": "7b2e1b82-37ec-4a6d-aade-90cb38d311a5",
			"value": 4.2,
			"source": "demo",
			"recommended": 4.2,
			"extendedDelivery": 4.2,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "c1c459e0-370e-4515-bf88-782dad757f5a"
		},
		{
			"deviceTime": "2014-08-27T08:05:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "248efd03-fe75-4f57-8c4a-0b343d9d4cb4"
		},
		{
			"deviceTime": "2014-08-27T08:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7284311-020a-4486-8eb8-79ed80f7e684"
		},
		{
			"deviceTime": "2014-08-27T08:15:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0755a1bc-e50d-4871-9ea1-daa2928df329"
		},
		{
			"deviceTime": "2014-08-27T08:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d3e7eed-1457-43fe-a5f5-fbffa8a0b986"
		},
		{
			"deviceTime": "2014-08-27T08:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2a5f31c-e186-46c7-b1f8-c05a97be87dc"
		},
		{
			"deviceTime": "2014-08-27T08:30:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eeb6f26-2541-4383-b46f-dc76e1fc099f"
		},
		{
			"deviceTime": "2014-08-27T08:35:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e002f48-734c-491d-942e-ab49e14036da"
		},
		{
			"deviceTime": "2014-08-27T08:40:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7d05eb2-6a31-4715-8770-9fd52563fda4"
		},
		{
			"deviceTime": "2014-08-27T08:45:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67f8321d-3899-49b9-94d1-2ad34ed5af3e"
		},
		{
			"deviceTime": "2014-08-27T08:50:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cfd4cd3-942b-4167-9775-c79545d29e29"
		},
		{
			"deviceTime": "2014-08-27T08:55:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49964aab-d439-458f-b4ba-b71b252fafcb"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-27T15:00:00",
			"start": "2014-08-27T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "e249955f-28ae-4a4f-a4e1-2ae5f8959005"
		},
		{
			"deviceTime": "2014-08-27T09:00:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d1d740f6-c05a-4b06-abeb-088f755a8984"
		},
		{
			"deviceTime": "2014-08-27T09:05:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2485ff1f-d7e3-46db-b20b-aab7af640829"
		},
		{
			"deviceTime": "2014-08-27T09:10:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6cd8951-0634-4666-ac07-df3073a90f77"
		},
		{
			"deviceTime": "2014-08-27T09:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62528d14-976a-4d14-b4ea-6b073d104840"
		},
		{
			"deviceTime": "2014-08-27T09:20:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afd66c04-f5c5-4a07-8a91-b73e517e36ad"
		},
		{
			"deviceTime": "2014-08-27T09:25:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98de199d-1913-41ef-8f42-af7373a5ed38"
		},
		{
			"deviceTime": "2014-08-27T09:30:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4acb417-b0cc-4eb1-bb19-e59118199b19"
		},
		{
			"deviceTime": "2014-08-27T09:35:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7343e542-70f9-444f-b270-d61ea21b3147"
		},
		{
			"deviceTime": "2014-08-27T09:40:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41c66b82-5973-4799-9537-8303a94469b7"
		},
		{
			"messageText": "T-bone pastrami et esse.",
			"parentMessage": "",
			"utcTime": "2014-08-27T09:41:46Z",
			"type": "message",
			"id": "469c6464-3e9d-4204-a7f3-51024644dfdc"
		},
		{
			"deviceTime": "2014-08-27T09:45:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "006680d2-81fa-4020-91f2-ba6f41fab853"
		},
		{
			"deviceTime": "2014-08-27T09:50:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb68a5bf-ee84-4cad-b58f-2a5293500241"
		},
		{
			"deviceTime": "2014-08-27T09:53:32",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4067a28a-4221-4232-8caf-9d28943943b4"
		},
		{
			"deviceTime": "2014-08-27T09:53:32",
			"value": 26,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a1e758a9-6aaf-4203-821e-6945efc16205"
		},
		{
			"deviceTime": "2014-08-27T09:53:32",
			"id": "a1e758a9-6aaf-4203-821e-6945efc16205",
			"source": "demo",
			"joinKey": "ad361993-9089-496d-a711-8242c291bf8d",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 26
			}
		},
		{
			"deviceTime": "2014-08-27T09:53:32",
			"programmed": 1.7,
			"joinKey": "ad361993-9089-496d-a711-8242c291bf8d",
			"value": 1.7,
			"source": "demo",
			"recommended": 1.7,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "d0c61db7-870b-4cb8-af94-deee9350ff2e"
		},
		{
			"deviceTime": "2014-08-27T09:55:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1063f406-9ad7-4ea7-8bfe-ea5f65029274"
		},
		{
			"deviceTime": "2014-08-27T10:00:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cb3b6b7-848c-42c3-9acb-81611231c3e1"
		},
		{
			"deviceTime": "2014-08-27T10:05:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b522327c-f869-4ead-b326-118b2ae0a55d"
		},
		{
			"deviceTime": "2014-08-27T10:10:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47775caa-9c32-4f37-9f0b-b654caddd7c7"
		},
		{
			"deviceTime": "2014-08-27T10:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7612c51f-bebe-4ffc-a6c1-1e2c57816a8c"
		},
		{
			"deviceTime": "2014-08-27T10:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03243de1-c280-438a-801d-2f7f08e1b01c"
		},
		{
			"deviceTime": "2014-08-27T10:40:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2fdc7434-16d6-4d57-a1d9-655c3f985d06"
		},
		{
			"deviceTime": "2014-08-27T10:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19396c43-1f4a-4fa3-a9fa-a1bd9d2882e9"
		},
		{
			"deviceTime": "2014-08-27T10:50:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a04f78b5-f554-44c5-a00a-5179c7b820f2"
		},
		{
			"deviceTime": "2014-08-27T10:55:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b64d8b0a-93ab-4029-85de-b394510a3b99"
		},
		{
			"deviceTime": "2014-08-27T11:00:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4bd15e6-fe0f-4704-9ccb-f482986be355"
		},
		{
			"deviceTime": "2014-08-27T11:05:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c35ec64-b360-4600-8bc6-b94539455ccb"
		},
		{
			"deviceTime": "2014-08-27T11:10:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a7cf9a3-2fba-41ef-8d9a-ffdb9bdfed3d"
		},
		{
			"deviceTime": "2014-08-27T11:15:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aa01de8-7d47-43a6-b14c-75029e52a1f9"
		},
		{
			"deviceTime": "2014-08-27T11:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4711697-66d1-4b68-9282-0c38bed4b2ca"
		},
		{
			"deviceTime": "2014-08-27T11:25:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6e36c40-5d3c-4a97-94a5-84aea06266c2"
		},
		{
			"deviceTime": "2014-08-27T11:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1fd0abb-0ec1-4cdb-b6be-f881bfc5a58a"
		},
		{
			"deviceTime": "2014-08-27T11:35:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d9a42cb-9b6d-40f2-bf36-af14b31a6528"
		},
		{
			"deviceTime": "2014-08-27T11:40:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f117571-9d2f-4433-9d09-e6a8b55e0b0d"
		},
		{
			"deviceTime": "2014-08-27T11:45:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "841e9b4b-c8f8-439a-86aa-ab3798743633"
		},
		{
			"deviceTime": "2014-08-27T11:50:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd2a1258-898b-4365-891b-f6eb4728cba1"
		},
		{
			"deviceTime": "2014-08-27T12:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "696b12e5-82a9-4859-999a-5a62fc9ae1b0"
		},
		{
			"deviceTime": "2014-08-27T12:30:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98a2d0e0-7ecc-4feb-b924-5dc1fd9281bb"
		},
		{
			"deviceTime": "2014-08-27T12:35:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb5b348d-ad48-4508-90b1-af4fec5191fa"
		},
		{
			"deviceTime": "2014-08-27T12:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7fd968d-0f96-459f-a9cc-4f669b71b85a"
		},
		{
			"deviceTime": "2014-08-27T12:45:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60c7cf10-b5ad-4735-86a0-44194cf66ae1"
		},
		{
			"deviceTime": "2014-08-27T12:50:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d22f1f7a-ffa9-4511-a352-f26cb6e784b3"
		},
		{
			"deviceTime": "2014-08-27T12:55:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32c9dab5-aeb4-49e3-b5cc-e2f16509cb66"
		},
		{
			"deviceTime": "2014-08-27T13:00:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2d30807-93ce-47c0-94df-5efdc8e26778"
		},
		{
			"deviceTime": "2014-08-27T13:05:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58edd784-feaf-4aea-b341-5083b112bf34"
		},
		{
			"deviceTime": "2014-08-27T13:10:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2915ba5e-c0b2-41b8-8f68-65426b15a11d"
		},
		{
			"deviceTime": "2014-08-27T13:15:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38d7a774-f67b-4c7d-b557-9b6a1245b8b7"
		},
		{
			"deviceTime": "2014-08-27T13:20:10",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "331707f8-1086-4ffc-a5aa-8ea3d1ce59fa"
		},
		{
			"deviceTime": "2014-08-27T13:20:10",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "2e966f2c-3a5c-427c-adeb-8547edfce1fe"
		},
		{
			"deviceTime": "2014-08-27T13:20:10",
			"id": "2e966f2c-3a5c-427c-adeb-8547edfce1fe",
			"source": "demo",
			"joinKey": "11732650-c0e7-4a2d-88a5-872edc9f2ea9",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 48
			}
		},
		{
			"deviceTime": "2014-08-27T13:20:10",
			"suspendedAt": "2014-08-27T13:30:10",
			"programmed": 3.2,
			"joinKey": "11732650-c0e7-4a2d-88a5-872edc9f2ea9",
			"value": 3.2,
			"source": "demo",
			"recommended": 3.2,
			"extendedDelivery": 3.2,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "ac410cd7-5df1-46e5-a1f7-e5b1b2a63a33"
		},
		{
			"deviceTime": "2014-08-27T13:20:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a05fa8b7-5b67-4850-9043-0e39ac161e56"
		},
		{
			"deviceTime": "2014-08-27T13:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b39c9333-dd5e-4afe-9e70-ac577bb24d3c"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-27T13:30:10",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "156f3524-4bff-4994-a1ad-10e8b4abcc27"
		},
		{
			"deviceTime": "2014-08-27T13:30:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "419505e4-38d4-497c-8045-e3bef10f5b97"
		},
		{
			"deviceTime": "2014-08-27T13:35:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68dd9062-eb84-4e5e-87e5-b75faee6f01e"
		},
		{
			"deviceTime": "2014-08-27T13:40:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbce9803-34c7-4689-b78b-78d040f40840"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-27T13:42:10",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "8e08aa0a-a02b-47d2-b52a-294c4138da1e",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-27T13:30:10",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "156f3524-4bff-4994-a1ad-10e8b4abcc27"
			}
		},
		{
			"deviceTime": "2014-08-27T13:45:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b4660fd-d368-4802-a66a-e37e6e7ce7ea"
		},
		{
			"deviceTime": "2014-08-27T13:50:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7eb20f8-33a8-499d-9603-9715b837b6c4"
		},
		{
			"deviceTime": "2014-08-27T13:55:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a973eb4f-b45d-479f-a7a8-e1ceb7358878"
		},
		{
			"deviceTime": "2014-08-27T14:00:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6de7d792-dbc9-4db5-9a42-be1e2c7b8011"
		},
		{
			"deviceTime": "2014-08-27T14:05:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa87b2a9-4268-45e6-b6ff-ed4745de047d"
		},
		{
			"deviceTime": "2014-08-27T14:10:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05e2af3c-17e2-499a-8099-7e4aeb60b514"
		},
		{
			"deviceTime": "2014-08-27T14:15:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54f9efa7-3fb1-4a70-8c95-fa68f8803d9c"
		},
		{
			"deviceTime": "2014-08-27T14:20:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe6659c3-bdbe-4af5-827c-a47104eb80e8"
		},
		{
			"deviceTime": "2014-08-27T14:25:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ed68b60-6b5b-489f-83e5-9a087a6ecaa1"
		},
		{
			"deviceTime": "2014-08-27T14:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "add9c97a-1d06-4037-bfff-b0a9519abf30"
		},
		{
			"deviceTime": "2014-08-27T14:35:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14c0d917-bd8c-49b7-a964-3dbf6960504e"
		},
		{
			"deviceTime": "2014-08-27T14:40:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98aef48f-9c17-4538-8798-4dc5e2886d7f"
		},
		{
			"deviceTime": "2014-08-27T14:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab3973a1-49e9-4718-a8bf-2153d8b4813e"
		},
		{
			"deviceTime": "2014-08-27T14:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4dddaa9-a738-46b1-ae0e-f761f9c2c86a"
		},
		{
			"deviceTime": "2014-08-27T14:55:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2dd7a01-56d3-4d5f-b02d-83350bc81a99"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-27T20:00:00",
			"start": "2014-08-27T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "b1d0e096-2b8e-4211-8b15-650c2e2000e6"
		},
		{
			"deviceTime": "2014-08-27T15:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01c47cb1-649d-4892-a4d6-6ddf5d77bf3d"
		},
		{
			"deviceTime": "2014-08-27T15:05:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66c35a45-5fa0-4bed-bebf-0371942b462f"
		},
		{
			"deviceTime": "2014-08-27T15:05:42",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ab1e21a0-3822-4b81-882a-7946e509ef8d"
		},
		{
			"deviceTime": "2014-08-27T15:05:42",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "96e84b4c-0c47-4ae3-9e2e-6718a43bd12d"
		},
		{
			"deviceTime": "2014-08-27T15:05:42",
			"id": "96e84b4c-0c47-4ae3-9e2e-6718a43bd12d",
			"source": "demo",
			"joinKey": "b1b220e2-54b8-43d2-bbc8-e3d49c97d583",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 87
			}
		},
		{
			"deviceTime": "2014-08-27T15:05:42",
			"programmed": 5.8,
			"joinKey": "b1b220e2-54b8-43d2-bbc8-e3d49c97d583",
			"value": 0.6,
			"source": "demo",
			"recommended": 5.8,
			"extendedDelivery": 2.3,
			"initialDelivery": 3.5,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "27fda781-5210-46c3-aee4-418cb3494b00",
			"deviceId": "Demo - 123"
		},
		{
			"end": "2014-08-27T16:39:01",
			"start": "2014-08-27T15:09:01",
			"percent": 0.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "5f70fb6e-ec13-4191-87f5-22a5a6bb9f5c"
		},
		{
			"deviceTime": "2014-08-27T15:10:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c7bcfc1-0da6-4c53-816c-3a508e01cee0"
		},
		{
			"deviceTime": "2014-08-27T15:15:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "818e219a-73e2-4288-88bc-febde1d2c032"
		},
		{
			"deviceTime": "2014-08-27T15:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b82ce1e7-7f6a-4083-828d-6f7139ab03ce"
		},
		{
			"deviceTime": "2014-08-27T15:25:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "539b9783-2113-4177-85d9-211586f1affc"
		},
		{
			"end": "2014-08-27T16:57:01",
			"start": "2014-08-27T15:27:01",
			"percent": 0.7,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "f1d98880-017d-4d89-bd7c-9fae03a7a81e"
		},
		{
			"deviceTime": "2014-08-27T15:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba5d7704-0ec5-49df-acdf-771a58839c8f"
		},
		{
			"deviceTime": "2014-08-27T15:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5b2270d-187c-4dd4-840f-e4648b0c1358"
		},
		{
			"deviceTime": "2014-08-27T15:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ef3302a7-971d-44ee-93d8-c3c87cf99947"
		},
		{
			"deviceTime": "2014-08-27T15:45:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7db5700f-64fb-4430-8773-eb0c6ed8f08d"
		},
		{
			"deviceTime": "2014-08-27T15:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06bfe745-4d14-470f-b699-dbd1c4c94631"
		},
		{
			"deviceTime": "2014-08-27T15:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78269a4a-abef-413b-8a4d-f40f2220ee3f"
		},
		{
			"deviceTime": "2014-08-27T16:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f81301c4-1c85-4fc7-82cb-544e01eecb5f"
		},
		{
			"deviceTime": "2014-08-27T16:05:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d81002cf-a605-4d87-9768-ae49a3ccaf49"
		},
		{
			"deviceTime": "2014-08-27T16:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d5b622e-d1aa-4780-aad0-ee78166f2a2b"
		},
		{
			"deviceTime": "2014-08-27T16:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f3153d6-fc6e-49df-9944-46a51c506731"
		},
		{
			"deviceTime": "2014-08-27T16:20:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2905998d-9e3b-4092-b8df-3a78c99f14fa"
		},
		{
			"deviceTime": "2014-08-27T16:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2ee83ca-11dd-44e6-a900-715c3b3996d6"
		},
		{
			"deviceTime": "2014-08-27T16:30:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e5cdefd-1043-4fcd-b2e4-b2ff5c449a71"
		},
		{
			"deviceTime": "2014-08-27T16:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18cdb5c1-1dbe-4a30-814a-ff696a8cb7fd"
		},
		{
			"deviceTime": "2014-08-27T16:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a0ffe58-db56-444f-8c31-6064290d0123"
		},
		{
			"deviceTime": "2014-08-27T16:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69e226c1-38bf-48e3-a3ef-27484d36cfa8"
		},
		{
			"deviceTime": "2014-08-27T16:47:24",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "46a76857-6ef4-4205-ad02-c75084da9321"
		},
		{
			"deviceTime": "2014-08-27T16:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9186e639-636a-4dc9-b491-b65f93aa976d"
		},
		{
			"deviceTime": "2014-08-27T16:55:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0b8dd86-21b9-43ea-b27b-d6cf9ab1cc6d"
		},
		{
			"deviceTime": "2014-08-27T17:00:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "377ffc6c-655c-409c-b7af-a4f23be5ff1a"
		},
		{
			"deviceTime": "2014-08-27T17:05:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c0c6eb4-3c4a-4f08-81f4-edeab2b8bf03"
		},
		{
			"deviceTime": "2014-08-27T17:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61d3fd04-b07c-4851-80a4-87dd186262ea"
		},
		{
			"deviceTime": "2014-08-27T17:15:01",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1c834407-21da-4a7f-bb4e-25f0124d688c"
		},
		{
			"deviceTime": "2014-08-27T17:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0156df2d-4ed0-4d04-8f97-03bc510f6f3b"
		},
		{
			"deviceTime": "2014-08-27T17:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd11c402-1257-4f4e-bc2b-568b585638cf"
		},
		{
			"deviceTime": "2014-08-27T17:25:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2ff0dc7-d970-4011-a764-043430c4443c"
		},
		{
			"deviceTime": "2014-08-27T17:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32ede194-1df6-4651-945e-fb619cf44ce4"
		},
		{
			"deviceTime": "2014-08-27T17:35:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edafa3b8-116a-4f74-bab6-0efd1b02686b"
		},
		{
			"end": "2014-08-27T21:36:01",
			"start": "2014-08-27T17:36:01",
			"percent": 1.6,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "3cfcafcb-ad00-4027-850d-56ca558a52c1"
		},
		{
			"deviceTime": "2014-08-27T17:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47544a81-0903-44a1-91e2-6ea07383bb4d"
		},
		{
			"deviceTime": "2014-08-27T17:45:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77ee3e94-09d5-4f30-8efb-8fa49df55930"
		},
		{
			"deviceTime": "2014-08-27T17:50:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd15861d-34d6-46dd-8c60-8729ac077d8b"
		},
		{
			"deviceTime": "2014-08-27T17:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "984b2a17-b0d7-43e0-8e8d-e17118ef401f"
		},
		{
			"deviceTime": "2014-08-27T18:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "443e7bc6-e2ee-4de5-8a1a-73926992165f"
		},
		{
			"deviceTime": "2014-08-27T18:05:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5758d91b-f0b4-4c50-902a-25f4ba20755a"
		},
		{
			"deviceTime": "2014-08-27T18:10:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a409fc32-4952-400a-88f1-4ca206c67448"
		},
		{
			"deviceTime": "2014-08-27T18:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cd24c97-c6e2-4329-b9c1-cc21e4717756"
		},
		{
			"deviceTime": "2014-08-27T18:20:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78b02702-f219-437b-97aa-76c514bd4dc8"
		},
		{
			"deviceTime": "2014-08-27T18:25:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e798be33-b3fa-4a95-9408-f758f4f0ad92"
		},
		{
			"deviceTime": "2014-08-27T18:30:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e3c58b4-6c6d-4818-9db1-3404fd9da094"
		},
		{
			"deviceTime": "2014-08-27T18:35:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf54dedc-1939-4070-8dd4-dcc55c107ed9"
		},
		{
			"deviceTime": "2014-08-27T18:40:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19765249-d44a-41e5-aff3-84d073b82982"
		},
		{
			"deviceTime": "2014-08-27T18:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e1c3247-8b82-4021-91b0-ea0f5262f8cf"
		},
		{
			"deviceTime": "2014-08-27T18:50:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7e22bb1-e372-484c-9a33-2f0438bb5d4d"
		},
		{
			"deviceTime": "2014-08-27T18:55:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2313c9f2-a253-4968-82d2-f959eecc7ea7"
		},
		{
			"deviceTime": "2014-08-27T19:00:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "283a8088-3549-4594-b8b9-471ac8177858"
		},
		{
			"deviceTime": "2014-08-27T19:05:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c40c6ca1-5d72-4f48-9761-8efaea8e8d56"
		},
		{
			"deviceTime": "2014-08-27T19:10:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47a949d8-b1ff-41c2-8659-cc1703380249"
		},
		{
			"deviceTime": "2014-08-27T19:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a5fff77-5cd3-42fa-840e-fa20b780b433"
		},
		{
			"deviceTime": "2014-08-27T19:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4caad31f-eb8b-42e4-839c-01c75de046ef"
		},
		{
			"deviceTime": "2014-08-27T19:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5938d3d0-8955-48ff-aaab-0cdef41e61b8"
		},
		{
			"deviceTime": "2014-08-27T19:30:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "901c25e7-b4b8-4111-80ac-8315b90ddbe2"
		},
		{
			"deviceTime": "2014-08-27T19:35:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65612954-4c89-45b9-9c6e-10c61eb1dfa4"
		},
		{
			"deviceTime": "2014-08-27T19:40:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61fab7e4-a815-472b-b327-d31fe87843b0"
		},
		{
			"deviceTime": "2014-08-27T19:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c560907f-170e-4044-8ad7-95a882da665a"
		},
		{
			"deviceTime": "2014-08-27T19:50:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5d381ed-1465-4736-8ed2-25bb7fc4d2a9"
		},
		{
			"deviceTime": "2014-08-27T19:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4766942a-b89e-43b2-8f27-2064722c9fa6"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-28T00:00:00",
			"start": "2014-08-27T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "96c9adb9-0a39-4bc5-a84f-9a931bf1316c"
		},
		{
			"deviceTime": "2014-08-27T20:00:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ab6781c-660b-44f0-b473-2ea6dde530ff"
		},
		{
			"deviceTime": "2014-08-27T20:05:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "022285c3-b9e9-446a-af62-2c79a5d9664a"
		},
		{
			"deviceTime": "2014-08-27T20:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c4f15da-2c64-43f1-a47b-c3742e4e05e7"
		},
		{
			"deviceTime": "2014-08-27T20:15:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f80ad3d0-9d3b-41e8-b4d9-63d931dbe28e"
		},
		{
			"deviceTime": "2014-08-27T20:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0f2f97a-e942-49fd-b396-7bcbfc6d8b9c"
		},
		{
			"deviceTime": "2014-08-27T20:25:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d3ae747-235b-4595-bf16-56fa0585742c"
		},
		{
			"deviceTime": "2014-08-27T20:30:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9598f077-80aa-49d7-b893-0e9a9f7ffa04"
		},
		{
			"deviceTime": "2014-08-27T20:35:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d7c9d2e-d177-4ec7-814c-c6268c4aa5ee"
		},
		{
			"deviceTime": "2014-08-27T20:40:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a78c9b9e-51fa-4c10-9139-f58850fc3740"
		},
		{
			"deviceTime": "2014-08-27T20:44:04",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "65dcfe1c-ae24-42a0-a7c1-6e094bbc0e32"
		},
		{
			"deviceTime": "2014-08-27T20:44:04",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1e17b9e3-9908-4a5e-a2f0-3649954a40ae"
		},
		{
			"deviceTime": "2014-08-27T20:44:04",
			"id": "1e17b9e3-9908-4a5e-a2f0-3649954a40ae",
			"source": "demo",
			"joinKey": "fa415588-e634-4f13-ba08-9eea4efdcda5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 54
			}
		},
		{
			"deviceTime": "2014-08-27T20:44:04",
			"programmed": 3.6,
			"joinKey": "fa415588-e634-4f13-ba08-9eea4efdcda5",
			"value": 3.6,
			"source": "demo",
			"recommended": 3.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "83cac7c7-9c13-4cf9-a2b1-6ac53c3bec08"
		},
		{
			"deviceTime": "2014-08-27T20:45:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "832aeeac-8080-4ab9-912f-54c8e02db068"
		},
		{
			"deviceTime": "2014-08-27T20:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d278ce46-f60f-4954-9a31-cfc69c358ec7"
		},
		{
			"deviceTime": "2014-08-27T20:55:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3abfddd-96dd-40fb-944a-db8e8d596c33"
		},
		{
			"deviceTime": "2014-08-27T21:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e729249-41d1-4ee4-8972-e411b7e4790a"
		},
		{
			"deviceTime": "2014-08-27T21:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8628218-7eef-47df-832f-35d8f59defa4"
		},
		{
			"deviceTime": "2014-08-27T21:10:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4be2d032-1f0d-4839-b434-f89640fc4c54"
		},
		{
			"deviceTime": "2014-08-27T21:15:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36f8f5dc-27bf-4c39-a32d-398bc8662dc7"
		},
		{
			"deviceTime": "2014-08-27T21:20:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edf3f7ea-a973-4336-af97-96328cd70a55"
		},
		{
			"deviceTime": "2014-08-27T21:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85a984c7-e3a7-469c-bbfb-f703495b2f2a"
		},
		{
			"deviceTime": "2014-08-27T21:30:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b49cd17d-95e8-4710-ab50-52b0e8147bce"
		},
		{
			"deviceTime": "2014-08-27T21:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "02182006-fb01-4e9e-9636-ba68a02bd671"
		},
		{
			"deviceTime": "2014-08-27T21:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e0c13fa-f6e2-438d-8e3e-154133f3bf49"
		},
		{
			"deviceTime": "2014-08-27T21:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb4f4b41-872b-4e06-9512-c694431bc891"
		},
		{
			"deviceTime": "2014-08-27T21:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "348e37a8-0b4d-4ac0-9109-7b0770b551a2"
		},
		{
			"deviceTime": "2014-08-27T21:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8281135d-ff81-47b0-88f0-5e482cbb6370"
		},
		{
			"deviceTime": "2014-08-27T22:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f3488ff-5fa4-4bd7-8cb4-3b0fb7eca45c"
		},
		{
			"deviceTime": "2014-08-27T22:05:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec542e26-0dd6-4c29-b1ed-4737960bc75f"
		},
		{
			"deviceTime": "2014-08-27T22:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e858a789-dd1b-49e7-8486-e1be878cffeb"
		},
		{
			"deviceTime": "2014-08-27T22:15:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4492cedb-a140-4e4f-88c3-af8e03c4a8ba"
		},
		{
			"deviceTime": "2014-08-27T22:20:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1af152d7-9c21-497a-aef0-abe1d2593c11"
		},
		{
			"deviceTime": "2014-08-27T22:25:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4baf9e5a-53f8-4619-9a82-811ee4fe7f99"
		},
		{
			"deviceTime": "2014-08-27T22:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93840a1d-f635-4a2e-ade2-2e024ae918d1"
		},
		{
			"deviceTime": "2014-08-27T22:35:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8af8b9d2-6e1a-41ee-a0ec-de44601789d3"
		},
		{
			"deviceTime": "2014-08-27T22:40:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3186f5c-6742-4c42-932d-5a9629059ae2"
		},
		{
			"deviceTime": "2014-08-27T22:45:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b87813ee-8d2d-4e46-87ec-220adffd9a6e"
		},
		{
			"deviceTime": "2014-08-27T22:50:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a519147-f5d3-45a8-9591-ba0ca2b7ee83"
		},
		{
			"deviceTime": "2014-08-27T22:55:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa264a21-307a-431f-b142-0524a65f8e7d"
		},
		{
			"deviceTime": "2014-08-27T23:00:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5bb292c6-f13c-4fea-ae5a-326896bb8262"
		},
		{
			"deviceTime": "2014-08-27T23:05:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "432c13d4-88fa-476f-b7fc-514ddea34bbe"
		},
		{
			"deviceTime": "2014-08-27T23:10:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f68a3945-1372-4044-8e2e-15a0f9fcb55b"
		},
		{
			"deviceTime": "2014-08-27T23:15:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7196fa97-ed50-44e4-8ce6-2a937cac9d28"
		},
		{
			"deviceTime": "2014-08-27T23:20:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d82d1c0d-2da7-4e5b-9897-3c716522d186"
		},
		{
			"deviceTime": "2014-08-27T23:25:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "592283cb-495a-424d-a1ef-a599caf8283b"
		},
		{
			"deviceTime": "2014-08-27T23:30:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "918422ea-37a4-4cb3-957a-0af60f42fa35"
		},
		{
			"deviceTime": "2014-08-27T23:35:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "563eed5e-f269-48a8-b9ab-2ab774141cd2"
		},
		{
			"end": "2014-08-28T02:38:01",
			"start": "2014-08-27T23:38:01",
			"percent": 0.05,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "69021f2a-9137-4d45-9a4a-476fce3dc9b1"
		},
		{
			"deviceTime": "2014-08-27T23:40:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5b40e20-0003-447e-890a-e612ef8ed374"
		},
		{
			"deviceTime": "2014-08-27T23:45:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52f2c364-e753-4ebe-9d50-1e850f9100cf"
		},
		{
			"deviceTime": "2014-08-27T23:50:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14bcf239-91d8-4378-8ad4-25445dd87a78"
		},
		{
			"deviceTime": "2014-08-27T23:55:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60f69519-4590-410d-895b-1809f5da52c3"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-28T02:00:00",
			"start": "2014-08-28T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "c792e403-110c-478d-aa7f-1530be2859ea"
		},
		{
			"deviceTime": "2014-08-28T00:00:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "843bc747-765e-46f3-9fd0-acb4c5c4d0f2"
		},
		{
			"deviceTime": "2014-08-28T00:05:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "176215f3-371b-4643-86a1-bea058fbd1c1"
		},
		{
			"deviceTime": "2014-08-28T00:09:54",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ccbe36be-4d2a-40bd-b89c-9dbf9d523788"
		},
		{
			"deviceTime": "2014-08-28T00:09:54",
			"value": 47,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "113ccbc6-2d31-4294-aff7-450e1ddd3b99"
		},
		{
			"deviceTime": "2014-08-28T00:09:54",
			"id": "113ccbc6-2d31-4294-aff7-450e1ddd3b99",
			"source": "demo",
			"joinKey": "b2979cdb-a317-4dd1-8d88-8eff48e3d082",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 47
			}
		},
		{
			"deviceTime": "2014-08-28T00:09:54",
			"suspendedAt": "2014-08-28T01:09:54",
			"programmed": 3.1,
			"joinKey": "b2979cdb-a317-4dd1-8d88-8eff48e3d082",
			"value": 3.1,
			"source": "demo",
			"recommended": 3.1,
			"extendedDelivery": 3.1,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "bbebecd6-a235-42b3-998d-eb6eb895e2b0"
		},
		{
			"deviceTime": "2014-08-28T00:10:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b6afa6b-4134-42e3-be66-95d5f6b7d17d"
		},
		{
			"deviceTime": "2014-08-28T00:15:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf77e0c6-6141-4ee3-81d6-86e5cca09f03"
		},
		{
			"deviceTime": "2014-08-28T00:20:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eee07140-7098-4d67-9959-af1202859ea9"
		},
		{
			"deviceTime": "2014-08-28T00:25:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20391094-7d0c-43b1-afe2-3f67336bfd97"
		},
		{
			"deviceTime": "2014-08-28T00:30:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "617dc899-6df2-450d-b128-d0a613a8af2e"
		},
		{
			"deviceTime": "2014-08-28T00:35:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94218b7e-10c6-4a72-9e6a-8be9864fc8e5"
		},
		{
			"deviceTime": "2014-08-28T00:40:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcee0913-a59c-47f1-914d-619e1c73273e"
		},
		{
			"deviceTime": "2014-08-28T00:45:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4395ddc3-974b-41bc-b3fa-6c49233114fa"
		},
		{
			"deviceTime": "2014-08-28T00:50:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49251107-c9c5-4e9e-9e15-be789c864b0d"
		},
		{
			"deviceTime": "2014-08-28T00:55:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85402297-4c7b-4f29-b267-6b6abf152066"
		},
		{
			"deviceTime": "2014-08-28T01:00:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e8c23db-c741-4927-a70e-4eb44737a13d"
		},
		{
			"deviceTime": "2014-08-28T01:05:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca7e6ebc-7945-46d9-a05c-ce7c5f6bbf1e"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-28T01:09:54",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "42b9a230-ef17-41f6-a625-f6ddbbfc540b"
		},
		{
			"deviceTime": "2014-08-28T01:10:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a23dc4e-642c-46a5-bfc5-0164f4d6a75c"
		},
		{
			"deviceTime": "2014-08-28T01:15:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2ec2c69-8e44-44cd-9ef7-b7048da65509"
		},
		{
			"deviceTime": "2014-08-28T01:20:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "220c47d5-f49d-4521-a099-e55ab9066774"
		},
		{
			"deviceTime": "2014-08-28T01:25:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bba77cf1-ab50-4d33-ba6a-ac0c7bf57ce8"
		},
		{
			"deviceTime": "2014-08-28T01:30:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf5432e4-424b-48a3-b55c-3c9054d3cf52"
		},
		{
			"deviceTime": "2014-08-28T01:35:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2564e73-5a72-473c-95c4-cf42f4b4e4f9"
		},
		{
			"deviceTime": "2014-08-28T01:40:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0304d3fd-7c32-4f6c-92df-1c825a48be91"
		},
		{
			"deviceTime": "2014-08-28T01:45:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "437b87fb-f88e-4e5f-9b85-587c1b573e8e"
		},
		{
			"deviceTime": "2014-08-28T01:50:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "502638c0-bdfe-4c39-8700-e08c99a46834"
		},
		{
			"deviceTime": "2014-08-28T01:55:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1810cce2-4f74-4fdd-8a14-a0543be7c606"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-28T04:00:00",
			"start": "2014-08-28T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "cebc6a9b-67d5-4f0f-9aaf-986ee053186a"
		},
		{
			"deviceTime": "2014-08-28T02:00:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b24a5f3-57b2-4027-a69f-9b2e654f8156"
		},
		{
			"deviceTime": "2014-08-28T02:05:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3135fcd-a220-4698-8953-d54d4c993f80"
		},
		{
			"deviceTime": "2014-08-28T02:10:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3dcaa75-7d0e-49a9-9f41-0f4ac5413441"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-28T02:12:54",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "c7aa16b5-41ba-433a-a60e-69f1ccd185ca",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-28T01:09:54",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "42b9a230-ef17-41f6-a625-f6ddbbfc540b"
			}
		},
		{
			"deviceTime": "2014-08-28T02:15:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6066a23-91b3-42e7-a6ca-8ba9f7e92ce6"
		},
		{
			"deviceTime": "2014-08-28T02:20:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fdad209-af8f-41de-8bd6-1926aab22697"
		},
		{
			"deviceTime": "2014-08-28T02:40:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a7d2830-cb81-4ce3-a845-47569a96172d"
		},
		{
			"deviceTime": "2014-08-28T02:45:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "980186fb-ba1b-441b-983f-bf35931feb39"
		},
		{
			"deviceTime": "2014-08-28T02:50:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6a37c32-c0de-4cc3-8f11-a115d4f005d4"
		},
		{
			"deviceTime": "2014-08-28T02:55:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a582c221-9608-4c9b-975e-7abc4be4066f"
		},
		{
			"deviceTime": "2014-08-28T03:00:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69dcf489-0ab3-4a4d-be5d-08462e3a6349"
		},
		{
			"deviceTime": "2014-08-28T03:05:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58403d37-4df5-4ff2-ac33-c407f724a644"
		},
		{
			"deviceTime": "2014-08-28T03:10:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca1e7509-b952-489a-b406-2e8281edef7a"
		},
		{
			"deviceTime": "2014-08-28T03:40:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d832dc7a-d5b7-4ffe-b215-07c8f29baf99"
		},
		{
			"deviceTime": "2014-08-28T03:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69eef48f-e58a-4b54-83f2-0d99b2835425"
		},
		{
			"deviceTime": "2014-08-28T03:50:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "68d9a1d3-35f7-4516-9905-13442105026e"
		},
		{
			"deviceTime": "2014-08-28T03:55:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24fb86ca-1ad5-43c5-8db4-9dd8a82d9a54"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-28T05:00:00",
			"start": "2014-08-28T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "956c33ca-656a-4d5a-af72-c2f119665616"
		},
		{
			"deviceTime": "2014-08-28T04:00:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a03e6ceb-ce09-4a9c-b3cb-bc943fc92e83"
		},
		{
			"deviceTime": "2014-08-28T04:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9dad043-afe5-4400-8b99-e1b9f9f139c8"
		},
		{
			"deviceTime": "2014-08-28T04:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c593973a-b45b-40ba-bd63-b66eab47511a"
		},
		{
			"deviceTime": "2014-08-28T04:15:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d04bea8-204b-40e3-ad58-287a52524b41"
		},
		{
			"deviceTime": "2014-08-28T04:20:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c0cb856-326a-4e15-9b77-e361bf12a133"
		},
		{
			"deviceTime": "2014-08-28T04:25:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ae88d26-f15d-43b0-bfd8-01a1a22fec98"
		},
		{
			"deviceTime": "2014-08-28T04:30:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e5038b9-3380-483c-8e68-132d70409727"
		},
		{
			"deviceTime": "2014-08-28T04:35:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a92d432-b7a1-4c0e-85e5-885db30218e4"
		},
		{
			"deviceTime": "2014-08-28T04:40:08",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ed7f896e-da92-4fdb-942c-095196f2a97f"
		},
		{
			"deviceTime": "2014-08-28T04:40:08",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "9ac3c0f7-e361-431a-9893-af13a8a16da5"
		},
		{
			"deviceTime": "2014-08-28T04:40:08",
			"id": "9ac3c0f7-e361-431a-9893-af13a8a16da5",
			"source": "demo",
			"joinKey": "79a64821-804b-4cb5-b644-4fbd0317c1d5",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 51
			}
		},
		{
			"deviceTime": "2014-08-28T04:40:08",
			"programmed": 3.4,
			"joinKey": "79a64821-804b-4cb5-b644-4fbd0317c1d5",
			"value": 3.4,
			"source": "demo",
			"recommended": 3.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "d3e17803-6866-45f5-bde5-15036cfc7d2e"
		},
		{
			"deviceTime": "2014-08-28T04:40:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05f17543-a4fb-4edb-b39e-fcf94de1c6e3"
		},
		{
			"deviceTime": "2014-08-28T04:45:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "41048814-66ce-4a20-90ea-0c5f2b01d7fe"
		},
		{
			"deviceTime": "2014-08-28T04:50:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3583b0e-320c-41ce-b7ef-a025f4eb7614"
		},
		{
			"deviceTime": "2014-08-28T04:55:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6825ae91-9f9e-41cd-995f-a767bfc63bc9"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-28T06:00:00",
			"start": "2014-08-28T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "59f52670-81bf-4e2b-8068-5ee374a199cb"
		},
		{
			"deviceTime": "2014-08-28T05:00:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7571023c-eca5-4389-b71e-efa447349f94"
		},
		{
			"deviceTime": "2014-08-28T05:05:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec830e51-8ab5-4ba9-899b-a5765ccf7a29"
		},
		{
			"deviceTime": "2014-08-28T05:10:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5f4c854-d49e-47f0-b96f-759117422db1"
		},
		{
			"deviceTime": "2014-08-28T05:15:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "702bcd89-c184-447a-af3e-9cc545e0c7da"
		},
		{
			"deviceTime": "2014-08-28T05:17:01",
			"value": 1,
			"source": "demo",
			"recommended": 1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "58a43bc9-f785-472e-8196-0d36efbc5d68"
		},
		{
			"deviceTime": "2014-08-28T05:20:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "242acf52-d08c-410a-8e2a-da3c646aac78"
		},
		{
			"deviceTime": "2014-08-28T05:25:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9a8ee41-b420-473a-93d1-5142959d9c2c"
		},
		{
			"deviceTime": "2014-08-28T05:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5960ca4c-6d18-419c-b62c-b27e700cd17a"
		},
		{
			"deviceTime": "2014-08-28T05:35:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f63f221-32c4-420d-87be-2ebd4e2b036e"
		},
		{
			"deviceTime": "2014-08-28T05:40:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30200a26-c33a-4281-87c9-2bbdc8918d66"
		},
		{
			"deviceTime": "2014-08-28T05:45:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "115b8e7e-c5f6-4b4c-a820-0ba711871128"
		},
		{
			"deviceTime": "2014-08-28T05:50:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df2627f5-302d-457d-8237-eb8016ed6a30"
		},
		{
			"deviceTime": "2014-08-28T05:55:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a45e40d-e440-4c03-ab1c-dd56b580e951"
		},
		{
			"delivered": 1,
			"end": "2014-08-28T09:00:00",
			"start": "2014-08-28T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "9f64633c-1113-46ba-9b29-6889f3ad282e"
		},
		{
			"deviceTime": "2014-08-28T06:00:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d1aa6d2-42c7-4708-9b7b-ec13202a608d"
		},
		{
			"deviceTime": "2014-08-28T06:05:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcb235ab-ddc5-43d9-ada3-64b16cc357a3"
		},
		{
			"deviceTime": "2014-08-28T06:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fdf0adaa-b3bd-4d9d-af86-db6c705ee7d3"
		},
		{
			"deviceTime": "2014-08-28T06:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64233019-e726-4185-9341-6aaaff4ab8b9"
		},
		{
			"deviceTime": "2014-08-28T06:20:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbfc432a-c99e-426a-8322-19dc069e33a8"
		},
		{
			"deviceTime": "2014-08-28T06:25:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3d0055d-d852-4488-8c56-ce5062caa551"
		},
		{
			"deviceTime": "2014-08-28T06:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac920da1-2c09-4979-8771-f89db4271c93"
		},
		{
			"deviceTime": "2014-08-28T06:35:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1feebb38-149d-4446-836b-c932d572a27d"
		},
		{
			"deviceTime": "2014-08-28T06:40:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69f79849-87cf-40b5-a776-24475a0f7e3d"
		},
		{
			"deviceTime": "2014-08-28T06:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0514d44c-1437-4f2d-9dd4-15494b301a17"
		},
		{
			"deviceTime": "2014-08-28T06:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "263dffb4-c4ed-4e85-a0c3-32d1f5024b25"
		},
		{
			"deviceTime": "2014-08-28T06:55:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3741bcec-bc6d-443b-b15e-d456b8a961c9"
		},
		{
			"deviceTime": "2014-08-28T07:00:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae5480e2-cb1a-4ad1-a6e7-50a24029b9c4"
		},
		{
			"deviceTime": "2014-08-28T07:05:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a08ee6ae-e40b-4174-9873-e8bea5fcc074"
		},
		{
			"deviceTime": "2014-08-28T07:10:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a570d080-0ea2-447a-9de1-229f99729079"
		},
		{
			"deviceTime": "2014-08-28T07:15:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca668e37-b574-4506-a59c-bcb232df1bf8"
		},
		{
			"deviceTime": "2014-08-28T07:20:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acd214d2-711e-4f0e-b545-525d2be235e1"
		},
		{
			"deviceTime": "2014-08-28T07:25:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "782241c6-19b1-4a2e-be25-41e3f4690d44"
		},
		{
			"deviceTime": "2014-08-28T07:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8219f1d7-3dce-4000-a70f-59769b3ed8d7"
		},
		{
			"deviceTime": "2014-08-28T07:35:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54b1c1d0-f6b5-483b-8eea-fbcb2433e590"
		},
		{
			"deviceTime": "2014-08-28T07:39:21",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "addb8fd1-3898-40c3-acfa-2c92bab9fd61"
		},
		{
			"deviceTime": "2014-08-28T07:39:21",
			"value": 32,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "bf3884a2-0421-4197-9eb0-cab730a2ecbe"
		},
		{
			"deviceTime": "2014-08-28T07:39:21",
			"id": "bf3884a2-0421-4197-9eb0-cab730a2ecbe",
			"source": "demo",
			"joinKey": "c7994f3b-4040-43b4-b863-e2e43b43473c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 32
			}
		},
		{
			"deviceTime": "2014-08-28T07:39:21",
			"programmed": 2.1,
			"joinKey": "c7994f3b-4040-43b4-b863-e2e43b43473c",
			"value": 2.1,
			"source": "demo",
			"recommended": 2.1,
			"extendedDelivery": 2.1,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "b970af14-f1fa-4268-93d0-d6048e9ba2aa"
		},
		{
			"deviceTime": "2014-08-28T07:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a02c34e7-980c-4507-81de-4d0685456914"
		},
		{
			"deviceTime": "2014-08-28T07:45:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de69e426-ea33-44b4-a71c-978fee82ecd5"
		},
		{
			"end": "2014-08-28T15:20:01",
			"start": "2014-08-28T07:50:01",
			"percent": 0.75,
			"deliveryType": "temp",
			"id": "1051041a-0767-4f83-9fdc-b57f03592dca",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 27000000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-28T07:50:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d6ff1077-2516-4d30-8c14-d1dd8b55f84b"
		},
		{
			"deviceTime": "2014-08-28T07:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b64ddb9-48b0-4ac9-b157-8931c261c69d"
		},
		{
			"deviceTime": "2014-08-28T08:10:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2da9412c-341e-4d20-9847-02014002af63"
		},
		{
			"deviceTime": "2014-08-28T08:15:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b9e0644-0efd-40ad-913e-9427c455531c"
		},
		{
			"deviceTime": "2014-08-28T08:15:33",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "68304612-a7b9-4510-a662-1134d82ff32a"
		},
		{
			"deviceTime": "2014-08-28T08:15:33",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e081815c-af62-4265-a408-3535e51dc653"
		},
		{
			"deviceTime": "2014-08-28T08:15:33",
			"id": "e081815c-af62-4265-a408-3535e51dc653",
			"source": "demo",
			"joinKey": "33d795cb-1e04-4d67-bb0f-8ba08cc85797",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 74
			}
		},
		{
			"deviceTime": "2014-08-28T08:15:33",
			"programmed": 5.3,
			"joinKey": "33d795cb-1e04-4d67-bb0f-8ba08cc85797",
			"value": 5.3,
			"source": "demo",
			"recommended": 4.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "d32ecb62-3e16-4025-9613-a4d26321f8f6"
		},
		{
			"deviceTime": "2014-08-28T08:50:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff0db4b2-bfd6-4d0c-970c-ca8737149c01"
		},
		{
			"deviceTime": "2014-08-28T08:55:05",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "285c854d-1414-4dfc-8bb8-a800cdd9820a"
		},
		{
			"deviceTime": "2014-08-28T08:55:05",
			"value": 58,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "959ae660-c9ee-4f1d-845e-71cda0ef674b"
		},
		{
			"deviceTime": "2014-08-28T08:55:05",
			"id": "959ae660-c9ee-4f1d-845e-71cda0ef674b",
			"source": "demo",
			"joinKey": "4f977879-a705-4248-b036-2d1a8fd6ee7c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 58
			}
		},
		{
			"deviceTime": "2014-08-28T08:55:05",
			"programmed": 3.9,
			"joinKey": "4f977879-a705-4248-b036-2d1a8fd6ee7c",
			"value": 3.9,
			"source": "demo",
			"recommended": 3.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "3849655f-8705-40a6-a62c-5f2a31087fec"
		},
		{
			"deviceTime": "2014-08-28T08:55:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09f20df5-9465-4618-b494-4e577724f1df"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-28T15:00:00",
			"start": "2014-08-28T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "8ea1ca46-fd6d-4a4b-844c-e4e6cabe3dbd"
		},
		{
			"deviceTime": "2014-08-28T09:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57b644a7-3799-41fa-8fee-c25468f96bed"
		},
		{
			"deviceTime": "2014-08-28T09:05:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7a4ebd1-4614-4bb2-8d8b-fbb9258f3e49"
		},
		{
			"deviceTime": "2014-08-28T09:10:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "106403f9-2f49-48e7-b241-47ce226044f8"
		},
		{
			"deviceTime": "2014-08-28T09:15:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56273776-6225-49be-ae3c-29fdad0c3533"
		},
		{
			"deviceTime": "2014-08-28T09:20:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "712a64cb-e863-455e-915d-7d1ca26f47bd"
		},
		{
			"deviceTime": "2014-08-28T09:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "423c5708-214b-41f4-a3af-235cc86dea14"
		},
		{
			"deviceTime": "2014-08-28T09:28:04",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "c158f62e-5045-47ff-9b24-169e6e0813ea"
		},
		{
			"deviceTime": "2014-08-28T09:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d17c71fd-adb1-4e76-a316-9af416c600ab"
		},
		{
			"deviceTime": "2014-08-28T09:35:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e494959c-ee20-4797-a9ec-128da6f9e472"
		},
		{
			"deviceTime": "2014-08-28T09:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63cfe548-f070-48bd-94e2-1a48e36b1df5"
		},
		{
			"deviceTime": "2014-08-28T09:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11473829-24b6-48a6-aa10-9d0eebbfddad"
		},
		{
			"deviceTime": "2014-08-28T09:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6beb53d9-4ebb-4140-bf86-14315d108c1c"
		},
		{
			"deviceTime": "2014-08-28T09:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb39e0b7-05a2-437e-b378-5a6d5a212266"
		},
		{
			"deviceTime": "2014-08-28T10:00:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80d055ea-5b6d-48cc-8dd4-762103c3763c"
		},
		{
			"deviceTime": "2014-08-28T10:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2c97cd7-340e-4bda-9946-c62b76f1c4ec"
		},
		{
			"deviceTime": "2014-08-28T10:10:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e31ef03-9df4-4f89-afcb-9ada13e1a50c"
		},
		{
			"deviceTime": "2014-08-28T10:15:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "711cbc96-5c4e-44b1-a3bb-d349c173e264"
		},
		{
			"deviceTime": "2014-08-28T10:20:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f81908d8-de3f-42d5-afc8-92ab74523a94"
		},
		{
			"deviceTime": "2014-08-28T10:25:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a6b075f-19aa-4b5a-a2a7-b296e649d2dd"
		},
		{
			"deviceTime": "2014-08-28T10:30:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc7dc9b6-2a53-4185-a4ff-ad84a0790a9b"
		},
		{
			"deviceTime": "2014-08-28T10:35:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5bde84ec-8630-4ce8-82d6-5f38a8673e18"
		},
		{
			"deviceTime": "2014-08-28T10:40:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f9a4fae-707c-447d-9f6c-3b9b71fe5f81"
		},
		{
			"deviceTime": "2014-08-28T10:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1a99b96-348e-485b-b853-90561c55cdb9"
		},
		{
			"deviceTime": "2014-08-28T10:50:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b6417e1-019b-402b-9c54-e1cca78ed8bb"
		},
		{
			"deviceTime": "2014-08-28T10:55:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "781ef169-1df6-4570-8d8d-d6bddfac8470"
		},
		{
			"deviceTime": "2014-08-28T11:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf184424-ab70-4b6b-a976-54fe09aa55ee"
		},
		{
			"deviceTime": "2014-08-28T11:05:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42b780d8-7817-432f-9f34-48f618004218"
		},
		{
			"end": "2014-08-28T12:09:01",
			"start": "2014-08-28T11:09:01",
			"percent": 0.95,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "0ed3407d-eae7-4eb4-92f5-1888ebb8254e"
		},
		{
			"deviceTime": "2014-08-28T11:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa4c8287-b93a-4656-b168-b684decc1d12"
		},
		{
			"deviceTime": "2014-08-28T11:12:48",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "9f6f6a38-c440-479d-a9f0-4d48a374917a"
		},
		{
			"deviceTime": "2014-08-28T11:12:48",
			"value": 28,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "85d44449-bb40-4f58-944d-a50ab596bd55"
		},
		{
			"deviceTime": "2014-08-28T11:12:48",
			"id": "85d44449-bb40-4f58-944d-a50ab596bd55",
			"source": "demo",
			"joinKey": "ce806298-a75a-4004-b9a9-45758bb67a62",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 28
			}
		},
		{
			"deviceTime": "2014-08-28T11:12:48",
			"suspendedAt": "2014-08-28T11:27:48",
			"programmed": 2.2,
			"joinKey": "ce806298-a75a-4004-b9a9-45758bb67a62",
			"value": 2.2,
			"source": "demo",
			"recommended": 1.9,
			"extendedDelivery": 0.7,
			"initialDelivery": 1.5,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "edbaada4-2b46-41ce-a15c-cb1e8e674386",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-28T11:15:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0647cb11-7628-4d99-acf7-67478926e40b"
		},
		{
			"deviceTime": "2014-08-28T11:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "366bc97a-7438-4322-879d-50eaa67a9f07"
		},
		{
			"deviceTime": "2014-08-28T11:25:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d267c44-0c3d-4571-8593-c2c51e5225fc"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-28T11:27:48",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "3d9d0839-d9be-4d52-bc41-c51e14fd3890"
		},
		{
			"deviceTime": "2014-08-28T11:30:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3af148f9-3954-4b32-962e-3ecacdbec74b"
		},
		{
			"deviceTime": "2014-08-28T11:35:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4af5176-3eb1-4357-8168-75cd12478241"
		},
		{
			"deviceTime": "2014-08-28T11:40:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83969891-e99c-404f-bda2-c6cf1f7ef80b"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-28T11:42:48",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "6d3d5ad6-9c08-46a1-94cc-07e96a380938",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-28T11:27:48",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "3d9d0839-d9be-4d52-bc41-c51e14fd3890"
			}
		},
		{
			"deviceTime": "2014-08-28T11:45:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17fc41c7-ea3b-4b02-b44e-51d2ba9f493d"
		},
		{
			"deviceTime": "2014-08-28T11:50:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a8ce5c4-ad78-4f29-890e-583cceb949ed"
		},
		{
			"deviceTime": "2014-08-28T11:55:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c4a71d3-ad80-463d-a47e-a3b310bdb7f9"
		},
		{
			"deviceTime": "2014-08-28T12:00:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "178a71fb-7072-46d9-909e-578bef493e40"
		},
		{
			"deviceTime": "2014-08-28T12:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ea45767-2a94-42bf-8a72-461c67f8d7aa"
		},
		{
			"deviceTime": "2014-08-28T12:10:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffc8b1ca-19b7-4d5d-8d72-a5b78d2e7809"
		},
		{
			"deviceTime": "2014-08-28T12:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63682269-69e1-4f14-aa95-6502c9375c88"
		},
		{
			"deviceTime": "2014-08-28T12:20:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdb12c74-73e5-4863-b23a-b5705f905f21"
		},
		{
			"deviceTime": "2014-08-28T12:25:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f44f563c-a532-43d1-9380-5bffd7a298b1"
		},
		{
			"deviceTime": "2014-08-28T12:30:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d5ca1d2-2066-4cdb-84cd-85def874ebfa"
		},
		{
			"deviceTime": "2014-08-28T12:35:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c844709-c012-4f34-b59a-99055f5cd343"
		},
		{
			"deviceTime": "2014-08-28T12:40:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "914817ad-c3e5-4c2e-9b76-d5ab8f1e62da"
		},
		{
			"deviceTime": "2014-08-28T12:45:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcb72ba0-2015-44a1-936c-56fba7542906"
		},
		{
			"deviceTime": "2014-08-28T12:50:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f95d4e12-ee6d-4a34-9db2-1ea50bc58b4a"
		},
		{
			"deviceTime": "2014-08-28T12:55:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7950fa9-a594-4d1d-b129-b322fba7eb88"
		},
		{
			"deviceTime": "2014-08-28T13:00:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f50e08f-c729-407e-ae59-84bfc44994a1"
		},
		{
			"deviceTime": "2014-08-28T13:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f621eb36-37bf-4484-bcb9-b0394568afeb"
		},
		{
			"deviceTime": "2014-08-28T13:10:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9108bd65-b24e-4b68-a75c-f9936247819e"
		},
		{
			"deviceTime": "2014-08-28T13:15:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9863bd86-3f17-4caa-b5cf-b31eb655016d"
		},
		{
			"deviceTime": "2014-08-28T13:20:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bca3a4fc-59c5-48e8-bbd9-ffb08487227f"
		},
		{
			"deviceTime": "2014-08-28T13:25:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4dc744b-d49f-4b9f-9ba3-c6585c091e17"
		},
		{
			"deviceTime": "2014-08-28T13:30:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f2b6938-6233-462b-9a41-5c14bb458b33"
		},
		{
			"deviceTime": "2014-08-28T13:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58e0332d-1f26-405e-a13e-9f0d4bf953bc"
		},
		{
			"deviceTime": "2014-08-28T13:40:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbb0662e-5f96-4fba-b7c1-593ebd189fe3"
		},
		{
			"deviceTime": "2014-08-28T13:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcd62322-6aba-4e1a-8074-123b3517602a"
		},
		{
			"deviceTime": "2014-08-28T13:50:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "115ff4b0-ffa6-4ce1-b4fd-cfcd14637da2"
		},
		{
			"deviceTime": "2014-08-28T13:55:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afd7063b-9cce-427c-81a3-31f43d8d1034"
		},
		{
			"deviceTime": "2014-08-28T14:00:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5501e53-cd24-417c-b0bf-fc390f59c525"
		},
		{
			"deviceTime": "2014-08-28T14:05:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "836f13ad-e697-4e6a-9f6e-525f054d98ac"
		},
		{
			"deviceTime": "2014-08-28T14:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b869ca3-91b6-485c-b622-21be3ef7ae50"
		},
		{
			"deviceTime": "2014-08-28T14:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6feabb07-651e-460c-9891-b953a53b65ee"
		},
		{
			"deviceTime": "2014-08-28T14:25:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "203da061-6d24-4b25-9adf-5f801576b24a"
		},
		{
			"deviceTime": "2014-08-28T14:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb594da8-aed5-4817-8669-5c1b7ec2b3ca"
		},
		{
			"deviceTime": "2014-08-28T14:35:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94babc25-87f4-45fc-b9fd-34ebee37fa93"
		},
		{
			"messageText": "Shankle aliqua meatloaf ham hock fugiat ham ball tip ribeye hamburger.",
			"parentMessage": "",
			"utcTime": "2014-08-28T14:44:48Z",
			"type": "message",
			"id": "21e1a411-cf52-4abc-acf5-54aeb7f8079b"
		},
		{
			"deviceTime": "2014-08-28T14:55:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59f72ae0-8e75-4ece-9d5e-ff505993da18"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-28T20:00:00",
			"start": "2014-08-28T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "8ed360f1-94d8-43e5-be25-e3afdb55372f"
		},
		{
			"deviceTime": "2014-08-28T15:30:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a6e01c2-eae3-46d0-a849-a6c02eaa404d"
		},
		{
			"deviceTime": "2014-08-28T15:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71b82f6a-1e6a-4310-8274-bef294c0961b"
		},
		{
			"deviceTime": "2014-08-28T15:40:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca9b8e22-badd-464b-85a7-00cfe90fcf6b"
		},
		{
			"deviceTime": "2014-08-28T15:50:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f27821da-554a-4934-9824-57baa73336a9"
		},
		{
			"deviceTime": "2014-08-28T15:55:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7ee7af6-6154-4539-a1ef-e4a62be3f035"
		},
		{
			"deviceTime": "2014-08-28T16:00:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a671886-7a84-4c93-8ddb-52bef8fc603c"
		},
		{
			"deviceTime": "2014-08-28T16:10:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf30cf91-79cc-407c-a5ee-528b8d7b44ce"
		},
		{
			"deviceTime": "2014-08-28T16:15:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0467f734-2476-47ce-bbb6-d2f851d13a21"
		},
		{
			"deviceTime": "2014-08-28T16:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e538785-ae6a-42e9-9756-e264064c3f87"
		},
		{
			"deviceTime": "2014-08-28T16:25:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8715f6cf-5a9b-4bfe-9480-d828e2fdb3df"
		},
		{
			"deviceTime": "2014-08-28T16:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ffa86bb-eba1-4e67-85d1-56942364346e"
		},
		{
			"deviceTime": "2014-08-28T16:35:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d95a40f7-a2f4-443c-8abf-95247480b56c"
		},
		{
			"deviceTime": "2014-08-28T16:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50b8b9f5-bf75-4aaf-815c-01db7a5f523a"
		},
		{
			"deviceTime": "2014-08-28T16:45:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19ac2c9c-b2f9-4b89-8861-3e297af4162e"
		},
		{
			"deviceTime": "2014-08-28T16:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "182a3f40-88db-4ac7-842f-2534b981acd7"
		},
		{
			"deviceTime": "2014-08-28T16:55:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "270c1fc4-149b-40b8-917f-bbb789799cef"
		},
		{
			"deviceTime": "2014-08-28T17:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "637278db-6800-4bef-97ba-f41ed005719b"
		},
		{
			"deviceTime": "2014-08-28T17:05:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9b19b41-4cc4-4fdb-9622-9c920894bc2a"
		},
		{
			"deviceTime": "2014-08-28T17:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab495c5e-7151-4982-a058-237c92588e8e"
		},
		{
			"deviceTime": "2014-08-28T17:15:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3dacc17-d6f3-4346-b39d-8a8baac03d33"
		},
		{
			"deviceTime": "2014-08-28T17:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ad302c0-194b-47af-8594-938a89155365"
		},
		{
			"deviceTime": "2014-08-28T17:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11151eec-0529-4230-add1-7c28ebde211e"
		},
		{
			"deviceTime": "2014-08-28T17:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f70ca53e-a2c2-4ddf-82a4-a96e01e9e62a"
		},
		{
			"deviceTime": "2014-08-28T17:35:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "556c2aae-ba0c-4db7-aea1-798a16ad1bf1"
		},
		{
			"deviceTime": "2014-08-28T17:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11637bdc-6ee8-42e8-b09c-6fd3999ede39"
		},
		{
			"deviceTime": "2014-08-28T17:45:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a2ea565-a9ac-4799-84b9-fa460735b781"
		},
		{
			"deviceTime": "2014-08-28T17:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3630f8f3-1084-405f-a218-ccd69cde5958"
		},
		{
			"deviceTime": "2014-08-28T17:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac19ade7-0c09-4099-956b-2a203ccf0881"
		},
		{
			"deviceTime": "2014-08-28T18:00:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4233f19b-e7c0-47ed-a6ae-addae63d4825"
		},
		{
			"deviceTime": "2014-08-28T18:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0732df68-0ce8-4f98-ade6-060bec5f90cc"
		},
		{
			"deviceTime": "2014-08-28T18:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8d68745-4079-4610-9320-1e80f875f47a"
		},
		{
			"deviceTime": "2014-08-28T18:15:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6da88b4c-84a2-4b6d-9a86-a034e54d4c35"
		},
		{
			"deviceTime": "2014-08-28T18:20:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f6a0246-3fdd-41ef-8e43-13149dfb465d"
		},
		{
			"deviceTime": "2014-08-28T18:25:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4631d53e-4c5a-486d-9ea2-fae81e39897d"
		},
		{
			"deviceTime": "2014-08-28T18:30:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2df3b38f-de85-4614-8183-62e569d9604d"
		},
		{
			"deviceTime": "2014-08-28T18:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0eb31408-cc6f-4821-9192-50a83a978cf6"
		},
		{
			"deviceTime": "2014-08-28T18:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "326baf7b-a6ed-4d76-ad1a-1416e705a309"
		},
		{
			"deviceTime": "2014-08-28T18:45:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "411db06f-5f9f-4ef4-8f4c-5e2069a21fe4"
		},
		{
			"deviceTime": "2014-08-28T18:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cb62ead-d7ba-457f-b1e6-8e4eb752b05f"
		},
		{
			"deviceTime": "2014-08-28T18:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a13247f2-e89c-470a-b608-e45d23603e93"
		},
		{
			"deviceTime": "2014-08-28T19:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce184567-8dd7-48dc-855b-ab1fea451a8b"
		},
		{
			"deviceTime": "2014-08-28T19:05:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1cfa950-0a10-43bc-a425-504deccd57a9"
		},
		{
			"deviceTime": "2014-08-28T19:10:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a552723d-e68f-42a9-b296-e0dccf806a3d"
		},
		{
			"deviceTime": "2014-08-28T19:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cdb83a6-1c03-4916-a597-0677275265da"
		},
		{
			"deviceTime": "2014-08-28T19:20:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a2ae8b8-8b8e-460d-bcd2-0733f6f5d2df"
		},
		{
			"deviceTime": "2014-08-28T19:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f418c79-c152-439c-b0dc-0feb498706ec"
		},
		{
			"deviceTime": "2014-08-28T19:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d6c5683-dde7-4255-a945-899a0fb2913d"
		},
		{
			"deviceTime": "2014-08-28T19:35:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78c7209e-5b8d-40a1-8e38-a5884811306c"
		},
		{
			"deviceTime": "2014-08-28T19:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1497c1e9-088e-4914-b94d-ea680bba6638"
		},
		{
			"deviceTime": "2014-08-28T19:45:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a48d93d-09cd-410f-b9e9-ee1dfe0131b9"
		},
		{
			"deviceTime": "2014-08-28T19:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fd0ccd6-b22f-4e08-8e29-8067a5ec44c6"
		},
		{
			"deviceTime": "2014-08-28T19:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24b64486-0f93-4161-9e41-cf78df9ee4fd"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-29T00:00:00",
			"start": "2014-08-28T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "ad16aebe-ad7b-4f3e-aa78-997f77b67d8b"
		},
		{
			"deviceTime": "2014-08-28T20:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb6e770e-b782-4485-9216-5883528b2187"
		},
		{
			"deviceTime": "2014-08-28T20:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7316e14-53e6-495b-879f-abf2aebc828b"
		},
		{
			"deviceTime": "2014-08-28T20:10:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae6bc874-bedd-4ee0-9996-9fc50ca0446f"
		},
		{
			"deviceTime": "2014-08-28T20:15:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f06d5b7e-a143-4f7e-a633-b1530e693338"
		},
		{
			"deviceTime": "2014-08-28T20:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8b861e67-8c6c-4be0-9c68-fcb027b8ffe9"
		},
		{
			"deviceTime": "2014-08-28T20:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9ece6c8-8f71-405c-965e-6cda15c2335f"
		},
		{
			"deviceTime": "2014-08-28T20:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bdaedcf9-6be2-45ff-bba1-962dfe36bcbd"
		},
		{
			"deviceTime": "2014-08-28T20:35:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a220f68-db15-4d87-8db1-d8dfc9d7dcd8"
		},
		{
			"deviceTime": "2014-08-28T20:40:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aee4e5ba-d5ba-4f94-a26a-748bc5fbd22b"
		},
		{
			"deviceTime": "2014-08-28T20:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c09ee43f-cfef-403b-89ba-26d872398e71"
		},
		{
			"deviceTime": "2014-08-28T20:50:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7cbacbae-eea2-4704-962f-d42122b70711"
		},
		{
			"deviceTime": "2014-08-28T20:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84ba35f0-153a-455e-a2f1-e1d6b850f8d7"
		},
		{
			"deviceTime": "2014-08-28T21:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8405ae1-3ee3-4378-a4fe-cfd1343f427f"
		},
		{
			"deviceTime": "2014-08-28T21:05:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19928cee-5708-4b6a-9d3a-361748095c9e"
		},
		{
			"deviceTime": "2014-08-28T21:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ed1af41-634f-4ccf-8c6c-bde2471e1b37"
		},
		{
			"deviceTime": "2014-08-28T21:15:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf89d9e1-87c0-40b0-b385-b515f3618926"
		},
		{
			"deviceTime": "2014-08-28T21:20:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8921932c-875a-4f54-9209-6bd1e7ef9d14"
		},
		{
			"deviceTime": "2014-08-28T21:25:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55dc4b42-786f-45a7-bba8-c5d02f6f7885"
		},
		{
			"deviceTime": "2014-08-28T21:30:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11760249-8d7c-4fb7-875b-a1cb3236de4a"
		},
		{
			"deviceTime": "2014-08-28T21:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac07d661-3f4e-4fdc-ae1c-22d95e4b7521"
		},
		{
			"deviceTime": "2014-08-28T21:40:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "184a1e21-c41f-448c-ad34-78ae103abdaa"
		},
		{
			"deviceTime": "2014-08-28T21:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8815fde-33c6-4f9a-a2ca-a3e41886ddef"
		},
		{
			"deviceTime": "2014-08-28T21:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6e1a5a2-5811-4a9e-b004-6a8a5bd9d1a4"
		},
		{
			"deviceTime": "2014-08-28T21:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1d041b2-76f5-4c42-8b1d-cff4760ce243"
		},
		{
			"deviceTime": "2014-08-28T22:00:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e67a6413-5423-4fe2-9f2f-c120e612c573"
		},
		{
			"deviceTime": "2014-08-28T22:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "633d80fe-f078-40aa-bcfe-8a80eab81c82"
		},
		{
			"deviceTime": "2014-08-28T22:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8789974-416f-448b-85da-0d8ac4c96996"
		},
		{
			"deviceTime": "2014-08-28T22:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a10faa5-2602-4682-a118-62169a8240a7"
		},
		{
			"deviceTime": "2014-08-28T22:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6871013-c94d-42d5-a5fb-1c5ff9682c45"
		},
		{
			"deviceTime": "2014-08-28T22:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92083ff8-e4b9-46dc-98d1-bcfe7bc103bc"
		},
		{
			"deviceTime": "2014-08-28T22:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c73344b-428f-4a4a-8319-1ab7c48892e1"
		},
		{
			"deviceTime": "2014-08-28T22:35:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ea9b8792-76ab-4754-a1b2-00a9ebcea216"
		},
		{
			"deviceTime": "2014-08-28T22:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b36f2162-91e2-414a-afd4-402885fbf81d"
		},
		{
			"deviceTime": "2014-08-28T22:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e65212b7-0a16-430b-841b-e8689c0ea481"
		},
		{
			"deviceTime": "2014-08-28T22:50:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13db4a1a-e2c4-48af-a977-5d196227149e"
		},
		{
			"deviceTime": "2014-08-28T22:55:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c528ac10-31f8-4f20-b849-25a8e4f506eb"
		},
		{
			"deviceTime": "2014-08-28T23:00:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "129b170d-80ad-4318-99c3-c0b7379824c2"
		},
		{
			"deviceTime": "2014-08-28T23:05:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3deff591-8b50-47c0-9906-e3f669f60ad5"
		},
		{
			"deviceTime": "2014-08-28T23:10:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49f6ab6c-e118-4417-b12e-cd7fc0e90852"
		},
		{
			"deviceTime": "2014-08-28T23:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "845682a8-a0a4-4ff8-a39d-4e33d0845240"
		},
		{
			"deviceTime": "2014-08-28T23:20:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c35b414-302d-4cc8-ad12-c5276c38914d"
		},
		{
			"deviceTime": "2014-08-28T23:25:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1431c7da-460b-423a-b85f-c9b9c115e814"
		},
		{
			"deviceTime": "2014-08-28T23:30:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b86ac1c8-ccff-4243-a186-becd3de551e7"
		},
		{
			"deviceTime": "2014-08-28T23:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d1628fb-4cb4-4b25-a54f-2e5aa6ffcf7a"
		},
		{
			"deviceTime": "2014-08-28T23:40:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7aaa26d0-b0ac-4fab-b28e-09ee257c6e94"
		},
		{
			"deviceTime": "2014-08-28T23:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e374bea9-b5f7-4c00-9005-e06af2d76d5f"
		},
		{
			"deviceTime": "2014-08-28T23:50:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47c4b64a-e8ca-4002-8db7-5d12f1519982"
		},
		{
			"deviceTime": "2014-08-28T23:55:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8af73e97-5372-4d75-b3c9-daa9053d1cfd"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-29T02:00:00",
			"start": "2014-08-29T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "94520b1b-3f66-4720-abef-d2600ade8c11"
		},
		{
			"deviceTime": "2014-08-29T00:00:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4446569-b948-4758-83cc-9a6ca6eaeeda"
		},
		{
			"deviceTime": "2014-08-29T00:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c66dc15f-e11a-4bcc-b612-e95f44a22475"
		},
		{
			"deviceTime": "2014-08-29T00:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b310ba0-6e45-4509-b8bc-63c1ebd2a79c"
		},
		{
			"messageText": "Commodo doner adipisicing exercitation laboris, tri-tip id shoulder short loin pork loin. Kevin aute doner ut ut.",
			"parentMessage": "",
			"utcTime": "2014-08-29T00:11:01Z",
			"type": "message",
			"id": "bd14b897-0a46-4afc-9825-3b3c87b32c0e"
		},
		{
			"messageText": "Voluptate duis short ribs tempor, pariatur mollit nulla rump tongue nostrud enim jowl pancetta dolore et. Salami porchetta ut tail proident. Et meatloaf turducken culpa tri-tip cow anim voluptate do.",
			"parentMessage": "bd14b897-0a46-4afc-9825-3b3c87b32c0e",
			"utcTime": "2014-08-29T00:15:01Z",
			"type": "message",
			"id": "dfda42d9-760e-4625-a79e-8fda56dfdad5"
		},
		{
			"deviceTime": "2014-08-29T00:15:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89f41895-a79a-41e0-b982-03d8b7d70849"
		},
		{
			"end": "2014-08-29T01:48:01",
			"start": "2014-08-29T00:18:01",
			"percent": 1.55,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "7f18a292-0eaf-4fdb-8da9-1c12f45ceda7"
		},
		{
			"deviceTime": "2014-08-29T00:20:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "986945c3-8dc0-4235-bfd1-571eeae5e500"
		},
		{
			"messageText": "In eiusmod tenderloin brisket velit non irure prosciutto.",
			"parentMessage": "bd14b897-0a46-4afc-9825-3b3c87b32c0e",
			"utcTime": "2014-08-29T00:22:01Z",
			"type": "message",
			"id": "69d32db2-49da-4231-bd69-93e88ea03192"
		},
		{
			"deviceTime": "2014-08-29T00:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8774c2e3-ba51-4eae-af26-f7081b9bc185"
		},
		{
			"deviceTime": "2014-08-29T00:30:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2910c3f-4357-4cb3-bf5d-3c95b23ead78"
		},
		{
			"messageText": "Sunt ham hock kevin prosciutto, ut laboris elit sint. Cillum et sausage incididunt.",
			"parentMessage": "bd14b897-0a46-4afc-9825-3b3c87b32c0e",
			"utcTime": "2014-08-29T00:31:01Z",
			"type": "message",
			"id": "9ca9e9b0-55ef-42f7-ae03-82de41c72181"
		},
		{
			"deviceTime": "2014-08-29T00:35:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8bc121d-e9ba-434e-9aa4-5ed716916d04"
		},
		{
			"messageText": "Bresaola doner magna commodo shank venison filet mignon hamburger turkey occaecat ea labore. Eu cupidatat elit nostrud.",
			"parentMessage": "bd14b897-0a46-4afc-9825-3b3c87b32c0e",
			"utcTime": "2014-08-29T00:37:01Z",
			"type": "message",
			"id": "d628d6f9-f8c9-418b-bbb8-a6209930c36a"
		},
		{
			"messageText": "Meatball elit t-bone leberkas, eu reprehenderit in chicken duis excepteur venison do shoulder ground round.",
			"parentMessage": "bd14b897-0a46-4afc-9825-3b3c87b32c0e",
			"utcTime": "2014-08-29T00:37:01Z",
			"type": "message",
			"id": "fc838c91-9ff5-4f33-8c33-0df63052e70b"
		},
		{
			"deviceTime": "2014-08-29T00:40:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce7b3aa0-8619-4787-8a44-7c329066bd80"
		},
		{
			"deviceTime": "2014-08-29T00:45:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9db4eca8-537b-41b5-823c-f2a455d07f83"
		},
		{
			"deviceTime": "2014-08-29T00:50:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "677e8e34-e08e-464f-a083-aa7ecc6c61b5"
		},
		{
			"deviceTime": "2014-08-29T00:55:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1376e049-192a-4e00-8e73-841a4be54971"
		},
		{
			"deviceTime": "2014-08-29T01:00:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f66f05e-a227-4181-b3ab-157724a9f77b"
		},
		{
			"deviceTime": "2014-08-29T01:05:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e6b01ee-dd1e-40c0-9fbd-9ba563cfa5ce"
		},
		{
			"deviceTime": "2014-08-29T01:10:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73dd14c2-163d-4cf9-a79b-46888521e912"
		},
		{
			"messageText": "Sirloin occaecat cow nostrud porchetta. Prosciutto in laborum, commodo meatloaf veniam sirloin consectetur spare ribs kevin capicola eiusmod shoulder. Venison pork anim duis.",
			"parentMessage": "bd14b897-0a46-4afc-9825-3b3c87b32c0e",
			"utcTime": "2014-08-29T01:11:01Z",
			"type": "message",
			"id": "7b93692e-18e7-4f60-a090-23b982b31689"
		},
		{
			"deviceTime": "2014-08-29T01:15:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3e7ffe3-2e73-4aae-9279-476123d6b786"
		},
		{
			"deviceTime": "2014-08-29T01:20:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "acdfbc99-e4b7-4348-9ed2-ec3b65b49554"
		},
		{
			"deviceTime": "2014-08-29T01:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b34ab9bb-6d39-4291-a129-a5d0228469c5"
		},
		{
			"deviceTime": "2014-08-29T01:30:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42e4b43f-53b9-4212-8a9e-dd9c1afa2179"
		},
		{
			"deviceTime": "2014-08-29T01:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adfdd33b-7a8d-47d8-b2f3-8f3fda7da831"
		},
		{
			"deviceTime": "2014-08-29T01:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47ed493d-fc95-4c55-932f-60e23611d9bc"
		},
		{
			"deviceTime": "2014-08-29T01:45:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e90f2472-3d8f-44ce-942b-bffb95716b40"
		},
		{
			"deviceTime": "2014-08-29T01:50:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eea45542-fc74-45d8-87a2-84347efe30e0"
		},
		{
			"deviceTime": "2014-08-29T01:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7dce721-5f8e-45a5-b731-c06e36013ca2"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-29T04:00:00",
			"start": "2014-08-29T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "9a9c56e1-f65e-49aa-8dc0-c9a82da2427d"
		},
		{
			"deviceTime": "2014-08-29T02:00:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc602f0a-63cf-44fa-b3cb-5f3c851036b5"
		},
		{
			"deviceTime": "2014-08-29T02:05:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e8815a6-aa95-4d63-9a75-dba073594af4"
		},
		{
			"deviceTime": "2014-08-29T02:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20113494-e880-45bb-9632-f7ea27ee86f3"
		},
		{
			"deviceTime": "2014-08-29T02:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c76ce5f6-33ca-4bc3-a2ca-2c188fb5b1cb"
		},
		{
			"deviceTime": "2014-08-29T02:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "249f7f52-860e-4395-b9d5-a3973645da0f"
		},
		{
			"deviceTime": "2014-08-29T02:25:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a96a78e1-8086-470f-b830-d68690a7ccb3"
		},
		{
			"deviceTime": "2014-08-29T02:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8737948e-4965-4ae9-a04b-37a6552ed1b7"
		},
		{
			"deviceTime": "2014-08-29T02:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3896131-0c2b-4831-8d02-3c096ea892e0"
		},
		{
			"deviceTime": "2014-08-29T02:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e200e9ce-2349-4e1a-a008-8a92726941e0"
		},
		{
			"deviceTime": "2014-08-29T02:45:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "600f74de-38a0-447f-9fe6-a86434544957"
		},
		{
			"deviceTime": "2014-08-29T02:50:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc0c78db-406a-476c-b3ac-8bfa2043e17f"
		},
		{
			"deviceTime": "2014-08-29T02:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7444f6e-b04b-4df6-9272-23483dd7b389"
		},
		{
			"deviceTime": "2014-08-29T03:00:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f724fc57-6345-42af-98a1-4dfd1d47ad7a"
		},
		{
			"deviceTime": "2014-08-29T03:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2a6506d-73d0-4408-8feb-329c885507d5"
		},
		{
			"deviceTime": "2014-08-29T03:10:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71c2b8dd-8483-4e1d-94ff-e335a58080a5"
		},
		{
			"deviceTime": "2014-08-29T03:15:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e5ba874-d7e4-4e9e-8372-b09c79297061"
		},
		{
			"deviceTime": "2014-08-29T03:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c523409-ca6e-4359-963b-f03cca6a51ca"
		},
		{
			"deviceTime": "2014-08-29T03:25:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23ff7018-47e0-4331-be7d-5bc06388be30"
		},
		{
			"deviceTime": "2014-08-29T03:30:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "83b6276d-ce04-46da-86d4-f55c0da3c446"
		},
		{
			"deviceTime": "2014-08-29T03:35:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d7bd9aa-da65-43fd-8ab8-4dd81636564b"
		},
		{
			"deviceTime": "2014-08-29T03:40:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9df17eb0-73f3-4699-82b1-881a8a96d447"
		},
		{
			"deviceTime": "2014-08-29T03:42:48",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d403dc38-664a-4b28-99e0-ce2473cff82a"
		},
		{
			"deviceTime": "2014-08-29T03:42:48",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "9d3255d5-ffa9-451c-a284-3019cf41a778"
		},
		{
			"deviceTime": "2014-08-29T03:42:48",
			"id": "9d3255d5-ffa9-451c-a284-3019cf41a778",
			"source": "demo",
			"joinKey": "166d3fef-7b07-4fb3-b9ad-7abfe8114306",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 43
			}
		},
		{
			"deviceTime": "2014-08-29T03:42:48",
			"programmed": 2.9,
			"joinKey": "166d3fef-7b07-4fb3-b9ad-7abfe8114306",
			"value": 2.9,
			"source": "demo",
			"recommended": 2.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "38824db4-c91f-4f0e-86dd-dbc128ac996b"
		},
		{
			"deviceTime": "2014-08-29T03:45:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bd7161b-085c-47fe-b814-f714989e5518"
		},
		{
			"deviceTime": "2014-08-29T03:50:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71237190-6da7-498d-a08b-158dc5f50bf7"
		},
		{
			"deviceTime": "2014-08-29T03:55:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d5c12bd-483f-4963-b2e2-fc5642f29a58"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-29T05:00:00",
			"start": "2014-08-29T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "8603d306-14c5-4fde-a790-bc8f38abe27f"
		},
		{
			"deviceTime": "2014-08-29T04:00:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b65b00e3-fa67-4ee6-8e5f-80e571d3512b"
		},
		{
			"deviceTime": "2014-08-29T04:05:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1762bc05-f474-4c3d-aec1-ad1007a10866"
		},
		{
			"deviceTime": "2014-08-29T04:10:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4a6064d-14b4-4705-aa5e-d9a49fa4be43"
		},
		{
			"deviceTime": "2014-08-29T04:15:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be5668e9-6f3c-47ac-8f36-4a940b3c08ac"
		},
		{
			"deviceTime": "2014-08-29T04:20:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fe98c9b-ec8a-4104-8eab-fbce0865c84b"
		},
		{
			"deviceTime": "2014-08-29T04:25:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bfed1d13-0e46-4071-a357-963679182253"
		},
		{
			"deviceTime": "2014-08-29T04:30:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66c8c4c9-f3d5-4340-8a7e-f95963df0742"
		},
		{
			"deviceTime": "2014-08-29T04:35:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "348def52-483c-40a2-a582-b724b9a8e864"
		},
		{
			"deviceTime": "2014-08-29T04:40:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "251b9c74-9cc2-49a0-8064-0e78b164fa04"
		},
		{
			"deviceTime": "2014-08-29T04:40:28",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "2c1825ab-032c-42a6-9abd-4c4e232dbe8a"
		},
		{
			"deviceTime": "2014-08-29T04:40:28",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "d7228a5d-6d37-4000-b7fd-3eacd9f0778c"
		},
		{
			"deviceTime": "2014-08-29T04:40:28",
			"id": "d7228a5d-6d37-4000-b7fd-3eacd9f0778c",
			"source": "demo",
			"joinKey": "f14fc3cc-f761-4519-9e52-198e14ea50f0",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 60
			}
		},
		{
			"deviceTime": "2014-08-29T04:40:28",
			"suspendedAt": "2014-08-29T04:55:28",
			"programmed": 4,
			"joinKey": "f14fc3cc-f761-4519-9e52-198e14ea50f0",
			"value": 0.3,
			"source": "demo",
			"recommended": 4,
			"extendedDelivery": 1.2,
			"initialDelivery": 2.8,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "0b40580b-9602-44f2-8d2a-aa7f2eae3282",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-29T04:45:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e5b08aa-65a1-4a45-b245-796afe70d95c"
		},
		{
			"deviceTime": "2014-08-29T04:50:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d44e666b-4ce9-4ec3-b08d-bad28c30457b"
		},
		{
			"deviceTime": "2014-08-29T04:55:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66ecfd7f-9c4b-442a-b34a-6f0c83d8da7e"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-29T04:55:28",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "f616a09c-3537-46f3-b4b6-c7ca013b78a4"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-29T06:00:00",
			"start": "2014-08-29T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "c6829a53-c324-4242-91a5-cae454b96f27"
		},
		{
			"deviceTime": "2014-08-29T05:00:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ea0682d-e104-49dc-b613-b6b20bfb13a2"
		},
		{
			"deviceTime": "2014-08-29T05:05:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a0ba56a-75f6-4b55-ae9b-566b9478a76a"
		},
		{
			"deviceTime": "2014-08-29T05:10:01",
			"value": 2.5,
			"source": "demo",
			"recommended": 2.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "8c7dd456-8517-4426-8e3c-078517e4aa71"
		},
		{
			"deviceTime": "2014-08-29T05:10:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9de2ef0-8f9b-4c34-a797-28cc46dcb11a"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-29T05:10:28",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "76b262f7-bcdf-4cec-815a-8e9c6a3add4a",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-29T04:55:28",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "f616a09c-3537-46f3-b4b6-c7ca013b78a4"
			}
		},
		{
			"deviceTime": "2014-08-29T05:15:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a11e2d6d-9ad8-4033-8a40-a72edc2a251c"
		},
		{
			"deviceTime": "2014-08-29T05:20:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dd41d04-0f0e-47fa-9e66-7148f4156a70"
		},
		{
			"deviceTime": "2014-08-29T05:25:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7238e930-f019-492d-b018-e4649a2d7ab4"
		},
		{
			"deviceTime": "2014-08-29T05:25:45",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b9e287e3-32e4-473d-93ec-6742aa9b60d2"
		},
		{
			"deviceTime": "2014-08-29T05:30:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e23f2ae-76b5-4e0d-8d22-204878f3d44c"
		},
		{
			"deviceTime": "2014-08-29T05:35:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e0b1c4f-2103-4fe5-baa0-f2df74294846"
		},
		{
			"deviceTime": "2014-08-29T05:40:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "799f92a4-f894-4a12-9e3c-20c03438a210"
		},
		{
			"deviceTime": "2014-08-29T05:45:22",
			"value": 216,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "643f612e-50cd-4c34-8a04-9ad44a09bb95"
		},
		{
			"deviceTime": "2014-08-29T05:50:22",
			"value": 225,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c79adec6-be35-43a2-b7ed-1f08c6922762"
		},
		{
			"deviceTime": "2014-08-29T05:55:22",
			"value": 226,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2f792fb-ce58-4e18-a0ba-b57691b15064"
		},
		{
			"delivered": 1,
			"end": "2014-08-29T09:00:00",
			"start": "2014-08-29T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "7626d789-3cdf-44c9-821e-011fe570f72c"
		},
		{
			"deviceTime": "2014-08-29T06:00:22",
			"value": 223,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63fe8865-f18e-4ce2-bc4a-0ad14bc08b4a"
		},
		{
			"deviceTime": "2014-08-29T06:05:22",
			"value": 221,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "006c0e2b-34ef-4a5f-acd2-fd302b3cf728"
		},
		{
			"deviceTime": "2014-08-29T06:10:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "005d6441-0acf-4dcc-bb3f-e8de9a7cce0d"
		},
		{
			"deviceTime": "2014-08-29T06:11:52",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "a7f85909-b411-40b7-a90b-f90d41fb64c2"
		},
		{
			"deviceTime": "2014-08-29T06:15:22",
			"value": 211,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c13599ae-49f9-4b26-8d31-563520817269"
		},
		{
			"deviceTime": "2014-08-29T06:15:47",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ce55b90e-7e86-4452-bca7-d5775fed3bf6"
		},
		{
			"deviceTime": "2014-08-29T06:20:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f0abe29-5483-47d5-9249-1b04d0041dfd"
		},
		{
			"deviceTime": "2014-08-29T06:25:22",
			"value": 212,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "217f2dad-a2a2-4450-a309-3815e24e9ca6"
		},
		{
			"deviceTime": "2014-08-29T06:30:22",
			"value": 210,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7df5d4aa-1620-4487-9cdb-5f0e3d41a340"
		},
		{
			"deviceTime": "2014-08-29T06:35:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54bc4035-d0ab-44af-a840-62f0a98ab916"
		},
		{
			"deviceTime": "2014-08-29T06:40:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be4ebe92-7d12-4cfd-a81c-5272c8ade4d5"
		},
		{
			"deviceTime": "2014-08-29T06:45:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93dd83e6-b21a-4b36-8ee2-a74739b6110d"
		},
		{
			"deviceTime": "2014-08-29T06:50:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9662b158-63bb-4471-abba-c5100b87df0a"
		},
		{
			"deviceTime": "2014-08-29T06:55:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "023bef50-c578-4e00-8628-a22cf1db771a"
		},
		{
			"deviceTime": "2014-08-29T07:00:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "808503be-4ebf-4c57-aac6-d03d648df7d2"
		},
		{
			"deviceTime": "2014-08-29T07:05:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "164cf8b8-f9d4-4291-afcc-f603f04a6288"
		},
		{
			"deviceTime": "2014-08-29T07:10:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc17141e-cb4e-4ee7-973c-ad7db78c19ec"
		},
		{
			"deviceTime": "2014-08-29T07:15:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2b83e8a-0094-47b2-bd64-42b1c156b5cc"
		},
		{
			"deviceTime": "2014-08-29T07:20:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3426a706-19da-4369-bf8b-b3d6107c488e"
		},
		{
			"deviceTime": "2014-08-29T07:25:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3a895c4-f08c-4485-aed1-30435e4ed0dd"
		},
		{
			"deviceTime": "2014-08-29T07:30:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8c422fb-2d44-4f9f-8b83-038b0f5541a8"
		},
		{
			"deviceTime": "2014-08-29T07:35:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c86f3c76-7e6a-445a-bc8b-4cffc95c3fb3"
		},
		{
			"deviceTime": "2014-08-29T07:40:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df80fe69-b2d5-4473-b830-597ccee05898"
		},
		{
			"deviceTime": "2014-08-29T07:45:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ea0bc25-be3a-48df-95ab-7c5767a478ff"
		},
		{
			"deviceTime": "2014-08-29T07:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9ca5a10-9421-475d-835f-081842e1e794"
		},
		{
			"deviceTime": "2014-08-29T07:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "711dba56-9ef1-4c2f-a0ee-790323076a7b"
		},
		{
			"deviceTime": "2014-08-29T08:00:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57c4741d-1370-4a32-a2a6-19efd9ff6339"
		},
		{
			"deviceTime": "2014-08-29T08:05:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "808e25c0-771b-4f7f-84da-7759b543da52"
		},
		{
			"deviceTime": "2014-08-29T08:10:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b9f44d8-9e9e-4401-a8d1-9e10878dd901"
		},
		{
			"deviceTime": "2014-08-29T08:15:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65b11c2a-824e-4118-8a73-35776be4f953"
		},
		{
			"deviceTime": "2014-08-29T08:20:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51e046bd-64dd-44c2-b150-85a51492e2e9"
		},
		{
			"deviceTime": "2014-08-29T08:25:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ad4abdc-bc6e-46cc-8f66-06bdb74e3327"
		},
		{
			"deviceTime": "2014-08-29T08:30:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c3434cf-af1c-44a7-84cb-a20accd06b58"
		},
		{
			"deviceTime": "2014-08-29T08:35:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f88ab6e7-d207-4201-8c36-59228f8299da"
		},
		{
			"deviceTime": "2014-08-29T08:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb4d5c83-d93b-40ca-9ea0-317c39c10b30"
		},
		{
			"deviceTime": "2014-08-29T08:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a1832c5-1035-4b3f-9800-85a8cb030a83"
		},
		{
			"deviceTime": "2014-08-29T08:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b4de2f7-1b33-4477-8acc-128232a5a972"
		},
		{
			"deviceTime": "2014-08-29T08:55:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d7d1217-c765-4479-bf7f-b9bc5239fb59"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-29T15:00:00",
			"start": "2014-08-29T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "49f697c9-a290-47ac-ad5f-be3329a185e1"
		},
		{
			"deviceTime": "2014-08-29T09:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3945de0-2af2-455f-abc2-14272a6e9aa6"
		},
		{
			"deviceTime": "2014-08-29T09:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60a5ee37-127b-4151-89c1-025f8cc06934"
		},
		{
			"deviceTime": "2014-08-29T09:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73ce4106-fb82-4779-b080-5a4c280282c1"
		},
		{
			"deviceTime": "2014-08-29T09:30:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20160bc4-72aa-4258-85b7-8ace222bb664"
		},
		{
			"end": "2014-08-29T13:31:01",
			"start": "2014-08-29T09:31:01",
			"percent": 0.45,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "160cdc48-421c-4e4d-97c1-0fe6837d775f"
		},
		{
			"deviceTime": "2014-08-29T09:35:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8bb69f47-1e3c-430f-b6b2-236f15d96784"
		},
		{
			"deviceTime": "2014-08-29T09:40:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eedf05a2-d111-47a9-8168-33e87730b240"
		},
		{
			"deviceTime": "2014-08-29T09:45:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "714c8b26-4968-4fae-a832-8c4921e26679"
		},
		{
			"deviceTime": "2014-08-29T09:50:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3502d1a1-aa09-4f8e-9e20-87a4cdb38f4c"
		},
		{
			"deviceTime": "2014-08-29T09:55:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5d66490-9ea8-46fe-a9a8-113f9a59e2ac"
		},
		{
			"deviceTime": "2014-08-29T10:00:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "217d6b08-3e5b-46f4-abe1-45278ba03fdb"
		},
		{
			"deviceTime": "2014-08-29T10:05:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3bd9fb83-0500-4ed2-9cbc-c6ecf8e0ff72"
		},
		{
			"deviceTime": "2014-08-29T10:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2609ab42-9e8f-442c-826b-81273788bdf6"
		},
		{
			"deviceTime": "2014-08-29T10:15:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b30973f4-1bdc-4073-b610-ff65d6cd479f"
		},
		{
			"deviceTime": "2014-08-29T10:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43ed0d85-fc71-4421-8f6e-ca406704de73"
		},
		{
			"deviceTime": "2014-08-29T10:25:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c66f8bb0-c227-4865-8e14-291d42ea17ae"
		},
		{
			"deviceTime": "2014-08-29T10:30:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "741dc129-d5da-493f-9754-5b8d403ad64b"
		},
		{
			"deviceTime": "2014-08-29T10:35:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aeadd609-9d0d-47c6-bce4-178ec6f6452f"
		},
		{
			"deviceTime": "2014-08-29T10:40:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a2ae7ef-b44d-40f9-9270-553682d98b76"
		},
		{
			"deviceTime": "2014-08-29T10:45:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f99abc54-4690-41ba-9249-5c43e4e0a230"
		},
		{
			"deviceTime": "2014-08-29T10:50:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "359a56e7-16f7-4e69-b8e4-4b6224832b31"
		},
		{
			"deviceTime": "2014-08-29T10:55:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58375455-19e0-4718-9935-2b41df1770aa"
		},
		{
			"deviceTime": "2014-08-29T11:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee8aa03c-0dae-4855-8c30-4da9fd1ae426"
		},
		{
			"deviceTime": "2014-08-29T11:05:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6856cea4-ac89-46ca-b8b7-84589670f5b1"
		},
		{
			"deviceTime": "2014-08-29T11:10:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbf8777e-b2d2-4fbf-aba3-1ffe5b1576d9"
		},
		{
			"deviceTime": "2014-08-29T11:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4230859-6f73-4f6d-b34e-fbf250c4bcab"
		},
		{
			"deviceTime": "2014-08-29T11:20:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2a27978-a608-410a-9618-8d4ae4288d49"
		},
		{
			"deviceTime": "2014-08-29T11:25:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a77bc962-f034-401a-a64e-0041b759badd"
		},
		{
			"deviceTime": "2014-08-29T11:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edc11478-f4c5-4c07-8753-c5774b857a03"
		},
		{
			"deviceTime": "2014-08-29T11:35:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "997af2f5-2969-45d2-bfab-d2d577c6d6cd"
		},
		{
			"deviceTime": "2014-08-29T11:40:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "875208f0-d1a6-475c-908c-7c758ec6034a"
		},
		{
			"deviceTime": "2014-08-29T11:45:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15a5fbdd-a3bc-45ef-bf74-219547dcdf71"
		},
		{
			"deviceTime": "2014-08-29T11:50:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e82d6c49-ce11-42b8-9d1f-cc6810f97b4e"
		},
		{
			"deviceTime": "2014-08-29T11:55:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d0b3ab5-d8dd-4fae-8296-d8178d88d73c"
		},
		{
			"deviceTime": "2014-08-29T12:00:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "392257c5-439f-48a8-81a6-acbcc75372b2"
		},
		{
			"deviceTime": "2014-08-29T12:05:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76d4ff54-2745-4e1d-b8e7-66ca3e8781ac"
		},
		{
			"deviceTime": "2014-08-29T12:10:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "004c14cb-0755-4149-8416-1d12f5603765"
		},
		{
			"deviceTime": "2014-08-29T12:15:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "971cc239-9fb6-44f7-97da-9ab405987689"
		},
		{
			"deviceTime": "2014-08-29T12:20:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "debb713c-2767-44d7-8841-a56da962a4f2"
		},
		{
			"deviceTime": "2014-08-29T12:25:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d058e44-7929-4ef9-8889-9eb08ece7a21"
		},
		{
			"deviceTime": "2014-08-29T12:30:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe4202da-648b-4969-8fed-37977b0d7651"
		},
		{
			"deviceTime": "2014-08-29T12:35:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8b69938-3d68-41a2-9d23-1af2179af136"
		},
		{
			"deviceTime": "2014-08-29T12:40:11",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "2f465847-74a6-4d98-b075-a0f99177a7a6"
		},
		{
			"deviceTime": "2014-08-29T12:40:11",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "989310be-e2c3-4dec-a82e-bb00e29e63b4"
		},
		{
			"deviceTime": "2014-08-29T12:40:11",
			"id": "989310be-e2c3-4dec-a82e-bb00e29e63b4",
			"source": "demo",
			"joinKey": "243498aa-cd0c-4690-b68b-e5068b2e4554",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 68
			}
		},
		{
			"deviceTime": "2014-08-29T12:40:11",
			"suspendedAt": "2014-08-29T12:55:11",
			"programmed": 4.5,
			"joinKey": "243498aa-cd0c-4690-b68b-e5068b2e4554",
			"value": 4.5,
			"id": "480e1ae9-731b-42b5-aa5e-6b99dbaaf395",
			"source": "demo",
			"recommended": 4.5,
			"extendedDelivery": 4.5,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-29T12:55:11",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "ff999107-0c76-4539-b55b-295da1b7603c"
		},
		{
			"deviceTime": "2014-08-29T12:55:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8aa231ab-65e4-4e6f-af11-d2eb8c8e0795"
		},
		{
			"deviceTime": "2014-08-29T13:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58c70d76-244b-42f4-b322-d92840afab22"
		},
		{
			"deviceTime": "2014-08-29T13:04:03",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4aada4e8-0598-4cb8-b1fd-99699fce57c3"
		},
		{
			"deviceTime": "2014-08-29T13:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "106c891c-0584-48b9-a16a-696bfcae5702"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-29T13:10:11",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "ac7e4188-5c6b-43e6-8e3a-ece8a23c7be8",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-29T12:55:11",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "ff999107-0c76-4539-b55b-295da1b7603c"
			}
		},
		{
			"deviceTime": "2014-08-29T13:10:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "528e3011-3451-4c89-8e18-a496b07fb294"
		},
		{
			"deviceTime": "2014-08-29T13:15:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e8f08c2-b8c2-4db8-9498-4077b59932c4"
		},
		{
			"deviceTime": "2014-08-29T13:20:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a70a522c-b489-4339-8b84-4907d6c11e57"
		},
		{
			"deviceTime": "2014-08-29T13:25:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a2caa5f-3a39-4397-a3d8-f36c3aaa0704"
		},
		{
			"deviceTime": "2014-08-29T13:30:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4951d635-5073-4c65-ab67-48c2c32f33d7"
		},
		{
			"deviceTime": "2014-08-29T13:35:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50c5ffcf-5197-4978-b240-4551eb12bd3f"
		},
		{
			"deviceTime": "2014-08-29T13:40:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "baa57376-0b4a-49c1-8170-c8c32747fdcd"
		},
		{
			"deviceTime": "2014-08-29T13:45:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a5ee5e8-dbec-4a7e-8c7a-6960644d6df5"
		},
		{
			"deviceTime": "2014-08-29T13:50:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "738515a6-3d67-461a-8bdf-95032470996f"
		},
		{
			"deviceTime": "2014-08-29T13:55:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e52f8383-14b8-4465-abfb-5f28e2d21328"
		},
		{
			"deviceTime": "2014-08-29T14:00:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b24fecee-7628-47e7-a4d1-5d48f5a3c194"
		},
		{
			"deviceTime": "2014-08-29T14:05:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "250064ff-b70a-4601-9390-d949ae1e2144"
		},
		{
			"deviceTime": "2014-08-29T14:10:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b68d5401-6f9b-4386-be95-928687d55314"
		},
		{
			"deviceTime": "2014-08-29T14:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "110441f8-4c9b-4be3-bcc1-f0b3941e2b38"
		},
		{
			"deviceTime": "2014-08-29T14:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "287f55b0-1189-4098-a5a8-0dc00a901d33"
		},
		{
			"deviceTime": "2014-08-29T14:25:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7368a99-8f52-4ebb-b04b-b81cc32e437f"
		},
		{
			"deviceTime": "2014-08-29T14:30:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6093707-f585-41fd-a259-3d83b20e52c7"
		},
		{
			"deviceTime": "2014-08-29T14:35:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32f4a7f7-792a-4826-b287-c32016000fc2"
		},
		{
			"deviceTime": "2014-08-29T14:40:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce89a697-47ac-469f-806e-8ed9663a5a0f"
		},
		{
			"deviceTime": "2014-08-29T14:45:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80714c79-8801-4821-9186-1a0904cf174a"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-29T20:00:00",
			"start": "2014-08-29T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "de3d6fa3-4a21-49c4-94f0-ff0dfdec6580"
		},
		{
			"deviceTime": "2014-08-29T15:20:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18de0bb9-b605-473b-bdcb-90b62fa6fa64"
		},
		{
			"deviceTime": "2014-08-29T15:25:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a984c0b-11d3-41ce-9d32-2fcf85b2eb1b"
		},
		{
			"deviceTime": "2014-08-29T15:30:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8a271373-03f6-4cb2-a003-65233b3c2149"
		},
		{
			"deviceTime": "2014-08-29T15:35:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15dbd2c0-bc7c-4684-a1d6-83ae3dce5348"
		},
		{
			"deviceTime": "2014-08-29T15:40:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb1247b8-e9f6-4e3e-a120-d18a3798d5c3"
		},
		{
			"deviceTime": "2014-08-29T15:45:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29ec57a0-2b4f-4f00-9994-c055577925a5"
		},
		{
			"deviceTime": "2014-08-29T15:50:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "079065a4-2cac-42cf-826e-cfc2f878070d"
		},
		{
			"deviceTime": "2014-08-29T15:55:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be23f020-f64a-434a-a90b-1a4e544c985c"
		},
		{
			"deviceTime": "2014-08-29T16:00:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ea4d03d-f49e-4ef4-88a3-77f4f85cc441"
		},
		{
			"deviceTime": "2014-08-29T16:05:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91296c4f-f8b2-497b-ab1b-31e0035bdf53"
		},
		{
			"deviceTime": "2014-08-29T16:10:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "beedf4d1-cb45-4f8b-9e33-60c9b18c0c8c"
		},
		{
			"deviceTime": "2014-08-29T16:15:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c834437e-1e91-4096-ad6a-8388e50a27fc"
		},
		{
			"deviceTime": "2014-08-29T16:20:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d9870ea-4415-4cd0-b7e6-039666a056b2"
		},
		{
			"deviceTime": "2014-08-29T16:25:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "721653f2-fa59-4684-846c-b4850afc6251"
		},
		{
			"deviceTime": "2014-08-29T16:30:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6e2976a-f46a-4071-b29d-f809b707eead"
		},
		{
			"deviceTime": "2014-08-29T16:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eeb9e64f-fbe6-44a6-b071-1257f10538ef"
		},
		{
			"deviceTime": "2014-08-29T16:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71bfacec-e1fb-4f2a-a0b4-6c05e548e3f6"
		},
		{
			"deviceTime": "2014-08-29T16:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb746611-e552-4ab9-a8d6-4c16068f1faa"
		},
		{
			"deviceTime": "2014-08-29T17:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "573bc105-c10a-4acf-8dcf-3a842aff310b"
		},
		{
			"deviceTime": "2014-08-29T17:05:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81818764-6582-4cf5-bd89-8abf4cc4d56d"
		},
		{
			"deviceTime": "2014-08-29T17:10:01",
			"value": 3.3,
			"source": "demo",
			"recommended": 3.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "b9f396fa-b5ac-402f-b3d9-74e90c7d8194"
		},
		{
			"deviceTime": "2014-08-29T17:10:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4eac166-a7d7-487d-916a-228d17b7ab62"
		},
		{
			"deviceTime": "2014-08-29T17:15:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57e787aa-2b48-479f-89dc-2eda6be641b1"
		},
		{
			"deviceTime": "2014-08-29T17:20:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "843c5dcf-703c-4d18-8c34-4bc80933800a"
		},
		{
			"deviceTime": "2014-08-29T17:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1faeedbd-1292-4086-b37a-3b5c2b924334"
		},
		{
			"deviceTime": "2014-08-29T17:30:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "287f5716-a043-4695-9a1e-baf16230e679"
		},
		{
			"deviceTime": "2014-08-29T17:35:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d22cd4a1-2abc-4ff9-87b5-305c7d4d8603"
		},
		{
			"deviceTime": "2014-08-29T17:40:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66a6c466-7eac-43c9-b9f2-b8b67de50601"
		},
		{
			"deviceTime": "2014-08-29T17:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30743fc3-4e77-4914-96e1-83250c1fa215"
		},
		{
			"deviceTime": "2014-08-29T17:50:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "309a2956-a610-4fe6-bc5b-f449708efa89"
		},
		{
			"deviceTime": "2014-08-29T17:55:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06538f6a-0fb5-4346-83de-e8e6fa87e314"
		},
		{
			"deviceTime": "2014-08-29T18:05:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55c803a6-7604-4cdf-aee7-8c025c6db28e"
		},
		{
			"deviceTime": "2014-08-29T18:10:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a434974-47c7-4911-9246-1865b48da809"
		},
		{
			"deviceTime": "2014-08-29T18:15:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22a4708b-4153-4d06-8631-67b0db10def4"
		},
		{
			"deviceTime": "2014-08-29T18:20:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "559cdf60-8de2-4146-b600-da5540809f60"
		},
		{
			"deviceTime": "2014-08-29T18:25:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78cc9de5-e3e1-4ada-b962-fe420671dc90"
		},
		{
			"deviceTime": "2014-08-29T18:30:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28d5e1ef-7d15-456b-8050-b8e817d5a02a"
		},
		{
			"deviceTime": "2014-08-29T18:35:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c3052ba8-e03a-44f3-98ec-f66aeb92d569"
		},
		{
			"deviceTime": "2014-08-29T18:40:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af06a092-c91a-4264-9e63-6ddc6a6ff680"
		},
		{
			"deviceTime": "2014-08-29T18:45:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2c22ce6-8ac1-4fd3-a7ac-d2cfd7d54cc3"
		},
		{
			"deviceTime": "2014-08-29T18:50:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a26e3da-2fcd-4903-98ea-3ae668fe204b"
		},
		{
			"deviceTime": "2014-08-29T18:55:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f669219-ea31-4a73-9510-5ce0dd3ab683"
		},
		{
			"deviceTime": "2014-08-29T19:00:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71a36386-bfee-4b0a-b1fb-6a836e6ccb55"
		},
		{
			"deviceTime": "2014-08-29T19:05:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a59723bc-1089-4b20-8ba1-86e427ca5c34"
		},
		{
			"deviceTime": "2014-08-29T19:10:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ea8cbd6-6013-4ffd-9976-4d255ee4fb7d"
		},
		{
			"deviceTime": "2014-08-29T19:15:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8966786e-cd63-4019-b51d-3847b4163589"
		},
		{
			"deviceTime": "2014-08-29T19:20:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18ee35b5-a69f-4f03-bbd1-d65ba8a83a52"
		},
		{
			"deviceTime": "2014-08-29T19:25:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0798793-eef3-4e7e-8364-0fe18c70aa96"
		},
		{
			"deviceTime": "2014-08-29T19:30:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0db90ca5-1bdc-4ece-8a5c-b6d55ce0a4fb"
		},
		{
			"deviceTime": "2014-08-29T19:35:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "137ef196-3a79-4cfd-912c-cd89b4cb33c6"
		},
		{
			"deviceTime": "2014-08-29T19:40:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d4a8dc7-3645-4955-aae5-20a80c8383c2"
		},
		{
			"deviceTime": "2014-08-29T19:45:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "395a27d9-39dc-4246-85b0-7383fee9a612"
		},
		{
			"deviceTime": "2014-08-29T19:50:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "883dc8f8-f809-4a8a-82ac-b9c587560d00"
		},
		{
			"deviceTime": "2014-08-29T19:55:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2ed3e5d-6b37-44c7-9ea8-0b429bafc06b"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-30T00:00:00",
			"start": "2014-08-29T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "1d6feb22-1a9f-4504-abd7-5206f247ae90"
		},
		{
			"deviceTime": "2014-08-29T20:00:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "22f699b5-aa06-4211-82c8-8fef0eb429cd"
		},
		{
			"deviceTime": "2014-08-29T20:05:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56973517-f86f-4d13-bb3f-ad4c98556668"
		},
		{
			"deviceTime": "2014-08-29T20:10:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f42a3fe1-a43b-4ffc-93eb-c383088d5f20"
		},
		{
			"deviceTime": "2014-08-29T20:15:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49efd32a-0235-43f1-9b7c-c3c19eaa511b"
		},
		{
			"deviceTime": "2014-08-29T20:20:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03a54d15-140d-455d-bd13-8cc61b8a6256"
		},
		{
			"deviceTime": "2014-08-29T20:25:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d39d4e06-d92c-4646-865c-df20933ba950"
		},
		{
			"deviceTime": "2014-08-29T20:30:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a66d1b1-2b9c-427e-a044-9abe57c646a3"
		},
		{
			"deviceTime": "2014-08-29T20:35:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b1742f7-0a43-4c93-b611-2dcba578ebb2"
		},
		{
			"deviceTime": "2014-08-29T20:40:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32e85ca0-484b-4ca7-b76b-84f0dee50828"
		},
		{
			"deviceTime": "2014-08-29T20:45:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5034c95-909f-401e-ae0e-f01b56dc6ccf"
		},
		{
			"end": "2014-08-29T23:16:01",
			"start": "2014-08-29T20:46:01",
			"percent": 0.6,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 9000000,
			"type": "basal-rate-segment",
			"id": "62f2e00a-597b-4dd1-b8dd-3b974d877be6"
		},
		{
			"deviceTime": "2014-08-29T20:50:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d05fb474-c1ab-4f6f-8742-66a238fbccc9"
		},
		{
			"deviceTime": "2014-08-29T20:55:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f12a353-0805-482a-8d82-cb5bc4010143"
		},
		{
			"deviceTime": "2014-08-29T21:00:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d75768b-fbd1-4071-afb1-2b9393df5d3b"
		},
		{
			"deviceTime": "2014-08-29T21:05:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "762c5e4c-c5a4-40ea-8c27-12f5ac1315d1"
		},
		{
			"deviceTime": "2014-08-29T21:10:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "680bdf76-7359-425f-a4c9-c4c486ea9136"
		},
		{
			"deviceTime": "2014-08-29T21:15:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bd64633-402a-437e-9d71-2a3e2425f58f"
		},
		{
			"deviceTime": "2014-08-29T21:20:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28d6931c-cfd9-4261-ae43-b2ae7f82ab39"
		},
		{
			"deviceTime": "2014-08-29T21:25:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ccb4d745-cc5f-466f-871e-cd11b734c212"
		},
		{
			"deviceTime": "2014-08-29T21:30:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "768cc8ce-dec8-4e4d-a3b7-8e2f0a7ec899"
		},
		{
			"deviceTime": "2014-08-29T21:35:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04094170-f708-4f53-938b-9b2a248579ff"
		},
		{
			"deviceTime": "2014-08-29T21:40:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a486f12-20a0-4d4c-b959-444432a47032"
		},
		{
			"deviceTime": "2014-08-29T21:45:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40e1410d-8b95-4635-8fc6-3d19168fd03e"
		},
		{
			"deviceTime": "2014-08-29T21:50:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2dcc6821-f388-43ae-ac3f-3f58fadfeb71"
		},
		{
			"deviceTime": "2014-08-29T21:55:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16738df4-7ad9-4c10-bcc3-2733aa9f35db"
		},
		{
			"deviceTime": "2014-08-29T22:00:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f103e15-96d7-4ba4-b6f4-1a2c5ce83533"
		},
		{
			"deviceTime": "2014-08-29T22:05:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77f5367f-5993-496e-8fc9-cd1fe7c7da8d"
		},
		{
			"deviceTime": "2014-08-29T22:10:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed875472-a25f-42a3-b2ed-6174126ed6f5"
		},
		{
			"deviceTime": "2014-08-29T22:15:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6447e89e-9a1a-4fdb-92c0-0e8abef97533"
		},
		{
			"deviceTime": "2014-08-29T22:20:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afade312-5783-4562-a5cf-51abf1bb4afa"
		},
		{
			"deviceTime": "2014-08-29T22:25:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12a021d2-37b1-4982-9874-282e470c6646"
		},
		{
			"deviceTime": "2014-08-29T22:30:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "806f3085-be0b-4937-b9bb-ec2ca60d33fe"
		},
		{
			"deviceTime": "2014-08-29T22:35:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "706b7196-79d2-4ff2-a1ef-cffa76f215f6"
		},
		{
			"deviceTime": "2014-08-29T22:40:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35484008-6d00-4eb9-90c2-063e2520d63c"
		},
		{
			"deviceTime": "2014-08-29T22:45:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55e4a9dc-ec67-40a1-aba2-265001d2a081"
		},
		{
			"deviceTime": "2014-08-29T22:50:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1c47cdd8-7793-4e91-908d-b50744b4e5b8"
		},
		{
			"deviceTime": "2014-08-29T22:55:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "752c5fb5-0960-4397-b308-3ec3b579f835"
		},
		{
			"deviceTime": "2014-08-29T23:00:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b9e076b-d5c0-4326-998d-a317eae507ff"
		},
		{
			"deviceTime": "2014-08-29T23:05:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67099a67-9bc3-44f5-b5c9-9e71a2aaaaa1"
		},
		{
			"deviceTime": "2014-08-29T23:10:22",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0a5f024-ae0d-47ec-8926-fe28d227b7ae"
		},
		{
			"deviceTime": "2014-08-29T23:15:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7776e25f-8c21-428b-b679-84cd823733cc"
		},
		{
			"deviceTime": "2014-08-29T23:20:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce1fc604-dc3e-4f85-b500-4158e1e21678"
		},
		{
			"deviceTime": "2014-08-29T23:25:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8cd2eaf-2f5e-42d1-a094-1959c12360cd"
		},
		{
			"deviceTime": "2014-08-29T23:30:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d200dcaf-069d-4f53-96c4-5d09eaa7c6fc"
		},
		{
			"deviceTime": "2014-08-29T23:35:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94e73e55-cfd0-4ed4-bffa-77d08de5374c"
		},
		{
			"deviceTime": "2014-08-29T23:40:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b064f1a-266a-48cb-9d72-d45c41a4d790"
		},
		{
			"deviceTime": "2014-08-29T23:45:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9c51a3d-1f90-443c-945a-db8bffc3e206"
		},
		{
			"deviceTime": "2014-08-29T23:50:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c61dcd99-7f3a-4b81-b9f3-b69df4662742"
		},
		{
			"deviceTime": "2014-08-29T23:55:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a59a3a3c-7a57-4aa7-beff-e3910fae68c7"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-30T02:00:00",
			"start": "2014-08-30T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"id": "e73187b7-43ce-4906-9ccf-ec729b8c47c4",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-30T00:00:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "547ca651-09cc-4423-a3f1-7653df732183"
		},
		{
			"deviceTime": "2014-08-30T00:04:49",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "e63625db-0c47-4df8-8980-8a3f12d3cd15"
		},
		{
			"deviceTime": "2014-08-30T00:04:49",
			"value": 43,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "9e7ea09c-359a-4226-a2c9-fc0fab0cb94b"
		},
		{
			"deviceTime": "2014-08-30T00:04:49",
			"id": "9e7ea09c-359a-4226-a2c9-fc0fab0cb94b",
			"source": "demo",
			"joinKey": "320d2861-01a4-4c27-a481-34cb2a1009e1",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 43
			}
		},
		{
			"deviceTime": "2014-08-30T00:04:49",
			"programmed": 2.9,
			"joinKey": "320d2861-01a4-4c27-a481-34cb2a1009e1",
			"value": 2.9,
			"source": "demo",
			"recommended": 2.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "88b179b3-920d-4049-af1f-81237689dc2a"
		},
		{
			"deviceTime": "2014-08-30T00:05:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d123dd40-4675-4531-afb3-90c8b93b542a"
		},
		{
			"deviceTime": "2014-08-30T00:10:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da2c0c0f-0b8a-4b82-828d-da508ad55dac"
		},
		{
			"deviceTime": "2014-08-30T00:15:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38194b7f-d12c-44f1-85d9-dc05d07834ad"
		},
		{
			"deviceTime": "2014-08-30T00:20:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "609ecc62-3f1b-45e9-aa30-3802acf394d2"
		},
		{
			"deviceTime": "2014-08-30T00:25:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdde0332-ac29-492b-92b2-af93317196b5"
		},
		{
			"deviceTime": "2014-08-30T00:30:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e36aac89-0b8e-40a4-b0aa-035e3ee67e0c"
		},
		{
			"deviceTime": "2014-08-30T00:35:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06dcafc5-7a8f-4cea-b779-82a1fe187cbc"
		},
		{
			"deviceTime": "2014-08-30T00:40:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d3d91b4-4721-49d2-b4a5-c0d3340e2df1"
		},
		{
			"deviceTime": "2014-08-30T00:45:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fbdab43-e789-4ffd-bfff-8b50546ef55a"
		},
		{
			"deviceTime": "2014-08-30T00:50:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42a05d43-f7c8-42db-b443-14b243656347"
		},
		{
			"deviceTime": "2014-08-30T00:55:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "219cb7b5-ff9e-4b33-995b-8ac71efaf211"
		},
		{
			"deviceTime": "2014-08-30T01:00:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a726e76-9650-4dcc-978e-0172bdac389c"
		},
		{
			"deviceTime": "2014-08-30T01:05:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20dea6e9-b885-4fdc-a168-781606e1f5eb"
		},
		{
			"deviceTime": "2014-08-30T01:10:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e8efed8-5660-418a-aac8-51bb9e07080e"
		},
		{
			"deviceTime": "2014-08-30T01:15:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8efdba66-ef85-4da4-926c-e990f82e2bcf"
		},
		{
			"deviceTime": "2014-08-30T01:20:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69853e2b-464e-4af3-babc-1da6bd2f249e"
		},
		{
			"deviceTime": "2014-08-30T01:25:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "116adf6a-f958-42c7-844a-49da72876b97"
		},
		{
			"deviceTime": "2014-08-30T01:30:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b3f0cda-49e5-4596-be61-c5ba11d54c02"
		},
		{
			"deviceTime": "2014-08-30T01:35:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71dfbfe1-92e1-46ef-a231-2451be278fa6"
		},
		{
			"deviceTime": "2014-08-30T01:40:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad613745-289e-4f46-80c3-bcd276490765"
		},
		{
			"deviceTime": "2014-08-30T01:45:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd610426-c5cb-411f-9491-73ebd251ef6a"
		},
		{
			"deviceTime": "2014-08-30T01:50:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac78fb8a-de83-43c1-bc5c-141590233106"
		},
		{
			"deviceTime": "2014-08-30T01:55:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2ef6760-d245-4d91-80a2-20868d0ffa0f"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-30T04:00:00",
			"start": "2014-08-30T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "5417df42-853c-464b-aeaa-9bf8d9cbbd01"
		},
		{
			"deviceTime": "2014-08-30T02:00:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "795f026e-b3e9-469c-84d6-0ec25dd66583"
		},
		{
			"deviceTime": "2014-08-30T02:05:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62fec56a-3242-4385-9ce4-9ff2fa4ac99d"
		},
		{
			"deviceTime": "2014-08-30T02:10:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6704541f-cde8-4a34-b02f-9e46e262e900"
		},
		{
			"deviceTime": "2014-08-30T02:15:22",
			"value": 188,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65f92d72-2c5a-4927-9644-85e39da171ba"
		},
		{
			"deviceTime": "2014-08-30T02:20:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d760f13-6ed1-4cfe-bfad-86c314d5fb2e"
		},
		{
			"deviceTime": "2014-08-30T02:25:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4647c2b6-34bf-4754-8127-91d7fbe81eea"
		},
		{
			"deviceTime": "2014-08-30T02:30:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e5a3372-76a3-4895-8ea5-9c21a8fefbaa"
		},
		{
			"deviceTime": "2014-08-30T02:35:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5d7cb6e-0274-4d4c-845c-4a81a9ae8c51"
		},
		{
			"deviceTime": "2014-08-30T02:40:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aa87ec62-9d6f-4f2c-8c33-b61a6396de2f"
		},
		{
			"deviceTime": "2014-08-30T02:45:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6776bead-716b-4a79-81d9-4181190a5bf1"
		},
		{
			"deviceTime": "2014-08-30T02:50:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34c20d6b-1ab3-4661-a8aa-9f7d690892b6"
		},
		{
			"deviceTime": "2014-08-30T02:55:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75694db7-8f66-49c9-83ec-264a14342b97"
		},
		{
			"deviceTime": "2014-08-30T03:00:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2ae0541-bdd8-48e6-a6d0-a1c6b6d0a819"
		},
		{
			"deviceTime": "2014-08-30T03:05:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "582ecb9e-8ef7-4f15-80b0-cea5c23ce06a"
		},
		{
			"deviceTime": "2014-08-30T03:10:22",
			"value": 208,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e826b4e9-09c7-4677-8684-3b231ce863dd"
		},
		{
			"deviceTime": "2014-08-30T03:15:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34511fc3-35af-4b96-863b-55f4da6bbb45"
		},
		{
			"deviceTime": "2014-08-30T03:20:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56affc9f-a038-4810-bf84-7a2c7ba4a27b"
		},
		{
			"deviceTime": "2014-08-30T03:25:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40a477e3-d8f1-4e01-9264-0e2ca4a5dc35"
		},
		{
			"deviceTime": "2014-08-30T03:30:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "495fc808-4c76-4042-a0dc-0680ad13fffa"
		},
		{
			"deviceTime": "2014-08-30T03:35:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8409a72-2270-4907-a18d-6799163b101a"
		},
		{
			"deviceTime": "2014-08-30T03:40:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37f87629-092c-4781-aff5-c60fb0d5926b"
		},
		{
			"deviceTime": "2014-08-30T03:45:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3135a3f3-954a-46f2-8945-113cc771ad60"
		},
		{
			"deviceTime": "2014-08-30T03:50:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7c59b44-cd0a-4512-9779-fc3f0d24c3c6"
		},
		{
			"deviceTime": "2014-08-30T03:55:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8723000-cb0e-4aa6-afe5-31cf9abde90a"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-30T05:00:00",
			"start": "2014-08-30T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "249cbef2-228c-4368-a188-4ca650d22bc2"
		},
		{
			"deviceTime": "2014-08-30T04:00:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75164fc4-ac95-41b0-9f4a-ac52bc5398e2"
		},
		{
			"deviceTime": "2014-08-30T04:05:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbd90623-ab66-466b-9601-daf4aa66752d"
		},
		{
			"deviceTime": "2014-08-30T04:10:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a03a49d2-5a6d-4173-8d70-2888c131cd23"
		},
		{
			"deviceTime": "2014-08-30T04:15:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e693550-2aa6-4eb0-94c1-c1f293029093"
		},
		{
			"deviceTime": "2014-08-30T04:20:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec2f73d7-c3c7-453e-b9db-106fc15e69a4"
		},
		{
			"deviceTime": "2014-08-30T04:25:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fae34e2f-fbd5-4328-9607-c0fd1862fb22"
		},
		{
			"deviceTime": "2014-08-30T04:30:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7eb9625c-14a0-4b41-adb1-a11796a888a1"
		},
		{
			"deviceTime": "2014-08-30T04:35:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "176da41d-4a07-4a3c-a0f4-c62ca04f903b"
		},
		{
			"deviceTime": "2014-08-30T04:40:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65b36cc7-7a7e-4734-9d37-16d78e3895ce"
		},
		{
			"deviceTime": "2014-08-30T04:45:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ae9db20-e5f8-4e40-bbfa-0b579662914e"
		},
		{
			"deviceTime": "2014-08-30T04:50:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e333e9e-c793-4af2-9e43-51830a021075"
		},
		{
			"deviceTime": "2014-08-30T04:55:22",
			"value": 219,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d368c6a-745d-498a-a989-42098365191a"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-30T06:00:00",
			"start": "2014-08-30T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "703fda34-d371-438c-9081-fd02bdf3fc71"
		},
		{
			"deviceTime": "2014-08-30T05:00:22",
			"value": 219,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51867b93-b8cc-4919-8d0e-354e776b6b4c"
		},
		{
			"deviceTime": "2014-08-30T05:05:22",
			"value": 217,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dedc6da2-a737-44b9-8e65-b118f9276ee7"
		},
		{
			"deviceTime": "2014-08-30T05:10:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "103ad10e-b836-4e26-8601-3d0a79ba4c18"
		},
		{
			"deviceTime": "2014-08-30T05:15:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b06ce3f5-e10f-4174-b275-c971f9ab316a"
		},
		{
			"deviceTime": "2014-08-30T05:20:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d53f8f61-02ca-498d-9d9e-cf1e2a7195ef"
		},
		{
			"deviceTime": "2014-08-30T05:25:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb7959b9-4468-434d-8e66-85b2230c040b"
		},
		{
			"deviceTime": "2014-08-30T05:30:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6a2f695-1ba8-4a93-9a28-02e2bbc3501f"
		},
		{
			"deviceTime": "2014-08-30T05:35:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa77e783-8233-4a55-9e9a-f4eb792b6b2a"
		},
		{
			"deviceTime": "2014-08-30T05:40:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5efcd0e1-bb21-4756-a6e4-aa53e580ca23"
		},
		{
			"deviceTime": "2014-08-30T05:45:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5769d66d-6bf0-4167-a7a1-581644aeade0"
		},
		{
			"deviceTime": "2014-08-30T05:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64147de3-0a4d-4e4d-897f-6ead8b546fd3"
		},
		{
			"deviceTime": "2014-08-30T05:55:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e94ef03c-ff4f-4a44-bc63-3090ea70123e"
		},
		{
			"delivered": 1,
			"end": "2014-08-30T09:00:00",
			"start": "2014-08-30T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "5580cad0-506d-4304-84cd-399eaf643bbd"
		},
		{
			"deviceTime": "2014-08-30T06:00:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8858ebd-3c63-46e6-b478-9bca27f3edd1"
		},
		{
			"deviceTime": "2014-08-30T06:05:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4683af81-80b3-4d74-8a48-7031b2649770"
		},
		{
			"deviceTime": "2014-08-30T06:10:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb83c55b-5d65-4f86-8416-5e4cbfa51a91"
		},
		{
			"deviceTime": "2014-08-30T06:15:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d4daf36-bf33-4e9b-9211-7c1d2ed2aa93"
		},
		{
			"deviceTime": "2014-08-30T06:20:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "311e0d9f-53f9-440d-b3ac-2b4eaa7c5f8a"
		},
		{
			"deviceTime": "2014-08-30T06:25:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26cb246f-8390-47b6-ba25-aaf9b358b959"
		},
		{
			"deviceTime": "2014-08-30T06:30:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "939b8db1-e827-4f33-b2e3-2123e92a011f"
		},
		{
			"deviceTime": "2014-08-30T06:35:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "339e95f4-8d31-4123-9c91-9300857ad744"
		},
		{
			"deviceTime": "2014-08-30T06:35:42",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0107bd02-7e68-4ee6-89a3-8e525b975439"
		},
		{
			"deviceTime": "2014-08-30T06:35:42",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a40749f5-bd09-4b09-bbe5-457b5c702788"
		},
		{
			"deviceTime": "2014-08-30T06:35:42",
			"id": "a40749f5-bd09-4b09-bbe5-457b5c702788",
			"source": "demo",
			"joinKey": "9b3c19de-5ccd-49a3-899a-652927a9fb65",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 60
			}
		},
		{
			"deviceTime": "2014-08-30T06:35:42",
			"suspendedAt": "2014-08-30T07:20:42",
			"programmed": 4,
			"joinKey": "9b3c19de-5ccd-49a3-899a-652927a9fb65",
			"value": 4,
			"source": "demo",
			"recommended": 4,
			"extendedDelivery": 4,
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"extended": true,
			"type": "bolus",
			"id": "99a5d29f-3e1a-4341-8e17-52ad3fb69a9e"
		},
		{
			"deviceTime": "2014-08-30T06:37:20",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5c37b953-489d-4411-bb22-df1899f73872"
		},
		{
			"deviceTime": "2014-08-30T06:37:20",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "e5f7cad8-841c-4539-a8c7-9d907e8344eb"
		},
		{
			"deviceTime": "2014-08-30T06:37:20",
			"id": "e5f7cad8-841c-4539-a8c7-9d907e8344eb",
			"source": "demo",
			"joinKey": "1134a0ae-0221-4a62-abe8-4856a247f4e8",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 39
			}
		},
		{
			"deviceTime": "2014-08-30T06:37:20",
			"programmed": 3,
			"joinKey": "1134a0ae-0221-4a62-abe8-4856a247f4e8",
			"value": 3,
			"source": "demo",
			"recommended": 2.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "5d059c64-3482-4ad0-b1b3-59688b774661"
		},
		{
			"deviceTime": "2014-08-30T06:40:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e5cc514-868b-4a2e-a831-3915875065d9"
		},
		{
			"deviceTime": "2014-08-30T06:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fdb190c9-39ba-4434-a4a6-c34953a715d2"
		},
		{
			"deviceTime": "2014-08-30T06:50:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5175c5b-4354-410f-99a2-0a9a51c7c56e"
		},
		{
			"deviceTime": "2014-08-30T06:55:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dba91ac1-307d-4055-affd-04e64967c898"
		},
		{
			"deviceTime": "2014-08-30T07:00:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0d8eddf-efb3-4f14-9c8c-894f2d176601"
		},
		{
			"deviceTime": "2014-08-30T07:05:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0214732f-a3e1-481f-b285-a4306200db6d"
		},
		{
			"deviceTime": "2014-08-30T07:10:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8007fddf-7360-4e78-908e-b4e6eecf281a"
		},
		{
			"deviceTime": "2014-08-30T07:15:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4d05b8b-09dc-4ec6-9019-02819c221a6a"
		},
		{
			"deviceTime": "2014-08-30T07:20:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69016c19-13da-40f9-9a99-da812bf302b7"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-30T07:20:42",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "0e8720da-3e1d-4957-9972-fef7d12809a9"
		},
		{
			"deviceTime": "2014-08-30T07:25:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e8bf9e8-599f-4cc6-b959-88b93a51274c"
		},
		{
			"deviceTime": "2014-08-30T07:30:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f0284ea-8b74-4968-b0d6-679d87d00b4c"
		},
		{
			"deviceTime": "2014-08-30T07:35:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ff4e94e-f485-4b10-a734-e6cccd0a7310"
		},
		{
			"deviceTime": "2014-08-30T07:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53a8b09f-a352-4efa-a313-8bf06287d61f"
		},
		{
			"deviceTime": "2014-08-30T07:45:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c7c59086-f6f5-4f9c-b8fc-30c828108cf4"
		},
		{
			"deviceTime": "2014-08-30T07:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84ea7578-0f0e-4316-aa5d-8f6a15fa31f2"
		},
		{
			"deviceTime": "2014-08-30T07:55:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4636d514-01cb-4766-be77-2c6445dc58cf"
		},
		{
			"deviceTime": "2014-08-30T08:00:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5997d84f-b706-4e97-b3f2-35fbe528efc6"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-30T08:01:42",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "ddf93dbc-999a-42ed-a256-08f31a3575c2",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-30T07:20:42",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "0e8720da-3e1d-4957-9972-fef7d12809a9"
			}
		},
		{
			"deviceTime": "2014-08-30T08:05:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c212a25-324c-4270-b171-8581c8918c95"
		},
		{
			"deviceTime": "2014-08-30T08:10:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "949d70f1-e808-4432-b803-25b35d166581"
		},
		{
			"deviceTime": "2014-08-30T08:15:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20b3a2fe-4705-4aa4-b8aa-a02d12a21c2f"
		},
		{
			"deviceTime": "2014-08-30T08:20:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2d4cd74-3e6c-4a33-a832-84a2d13b8fa9"
		},
		{
			"deviceTime": "2014-08-30T08:25:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c544744f-f29c-4536-bfee-6d4611548b7e"
		},
		{
			"deviceTime": "2014-08-30T08:30:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de992050-d51f-4580-9f34-5f0e75305042"
		},
		{
			"deviceTime": "2014-08-30T08:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7abed4c5-c9ab-4e47-95f7-ea59ceead99b"
		},
		{
			"deviceTime": "2014-08-30T08:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcb6ca1c-e65e-4e37-a9c7-b7ec8048f2f0"
		},
		{
			"end": "2014-08-30T09:43:01",
			"start": "2014-08-30T08:43:01",
			"percent": 0.8,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "564f9130-0f01-4e45-88d7-4b7d3090f4dd"
		},
		{
			"deviceTime": "2014-08-30T08:45:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c40ae17-2ebc-46bd-a918-09296734971c"
		},
		{
			"deviceTime": "2014-08-30T08:50:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3165bf08-c8da-4210-9d54-a11dd9920aff"
		},
		{
			"deviceTime": "2014-08-30T08:55:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0913f159-9a28-4699-8c17-fdf42dece131"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-30T15:00:00",
			"start": "2014-08-30T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "34cab1f7-45ee-438b-842a-37bb73fdcecd"
		},
		{
			"deviceTime": "2014-08-30T09:00:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a2201ad-e8b5-4484-847b-a95cd47f7119"
		},
		{
			"deviceTime": "2014-08-30T09:05:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "207e8f27-c74c-4803-80c9-93a1d77d3207"
		},
		{
			"deviceTime": "2014-08-30T09:10:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67acba7e-c189-4337-bc6c-da0294c3b321"
		},
		{
			"deviceTime": "2014-08-30T09:15:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fda8aad5-5eac-4175-95b9-12a435aff473"
		},
		{
			"deviceTime": "2014-08-30T09:20:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d934cc7-ff43-47bf-b523-072650fe2bb9"
		},
		{
			"deviceTime": "2014-08-30T09:25:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72fd1ef3-31b6-41c5-971e-2ec25ef5d6be"
		},
		{
			"deviceTime": "2014-08-30T09:30:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "504bd5d2-6b6d-4a20-a931-c72a85604d54"
		},
		{
			"deviceTime": "2014-08-30T09:35:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c11204e-bffa-4de1-ac3d-d0a153670e15"
		},
		{
			"deviceTime": "2014-08-30T09:40:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b130ea3d-e4e5-4a4f-ac79-290e79947f71"
		},
		{
			"deviceTime": "2014-08-30T09:45:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f00fa83-92db-4484-8bce-fc722f3b92c8"
		},
		{
			"deviceTime": "2014-08-30T09:50:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38376219-5d5d-4d04-a7e9-c87eaa60ebdf"
		},
		{
			"deviceTime": "2014-08-30T09:55:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e39c8cf-b84b-49b6-8913-296480cd1571"
		},
		{
			"deviceTime": "2014-08-30T10:00:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2c90077-ddbe-4ac1-bb26-a3b7cab905c8"
		},
		{
			"deviceTime": "2014-08-30T10:05:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1fc884d1-af7e-471a-9e12-183c5d5c15d5"
		},
		{
			"deviceTime": "2014-08-30T10:10:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3c80d7ba-745f-408f-b667-4e571f040f7e"
		},
		{
			"deviceTime": "2014-08-30T10:15:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0fcade9-330d-4066-9af8-0f7fcc57508c"
		},
		{
			"deviceTime": "2014-08-30T10:20:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2b94768-cbfb-43f9-adc1-91d45c7cc72b"
		},
		{
			"deviceTime": "2014-08-30T10:20:29",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "c897b8ea-dc89-4bc6-9bde-f6f96d70f8e9"
		},
		{
			"deviceTime": "2014-08-30T10:20:29",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "eaa0807a-bed8-4b3e-a623-e28fd67b4dcc"
		},
		{
			"deviceTime": "2014-08-30T10:20:29",
			"id": "eaa0807a-bed8-4b3e-a623-e28fd67b4dcc",
			"source": "demo",
			"joinKey": "ea949c6f-6a0e-4250-9a65-224f0b6283f8",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 67
			}
		},
		{
			"deviceTime": "2014-08-30T10:20:29",
			"programmed": 4.5,
			"joinKey": "ea949c6f-6a0e-4250-9a65-224f0b6283f8",
			"value": 4.5,
			"id": "22fb8613-d3b6-4e37-b20b-b7ea7b1e118d",
			"source": "demo",
			"recommended": 4.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-08-30T10:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9e7c7ae-476e-4681-97be-5343c71b54a1"
		},
		{
			"deviceTime": "2014-08-30T10:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "801b165b-b394-43c9-b98a-bd7479e8bbc6"
		},
		{
			"deviceTime": "2014-08-30T10:35:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "725eff1a-7272-4b83-b596-080998df4c5f"
		},
		{
			"deviceTime": "2014-08-30T10:40:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae02a497-166f-4321-8e2c-8688f663917f"
		},
		{
			"deviceTime": "2014-08-30T10:45:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc1be565-8659-45b0-8870-bf6403f87796"
		},
		{
			"deviceTime": "2014-08-30T10:50:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15e98262-7765-48a8-b712-a5246a61bf61"
		},
		{
			"deviceTime": "2014-08-30T10:55:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c1db204-ef6b-40cd-a1e0-a0877b19cf10"
		},
		{
			"deviceTime": "2014-08-30T11:00:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe19079f-b40e-4d7a-8012-087d2d3d971f"
		},
		{
			"deviceTime": "2014-08-30T11:05:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f7256aed-1212-4279-9863-fa0fd38ec69d"
		},
		{
			"deviceTime": "2014-08-30T11:10:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fa14e84-c845-4239-b00f-f93d2b838480"
		},
		{
			"deviceTime": "2014-08-30T11:15:22",
			"value": 218,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fe8a7bc-b017-4f63-9396-e04a28864b78"
		},
		{
			"deviceTime": "2014-08-30T11:20:22",
			"value": 224,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "feaa00f2-144c-4777-a395-318059d57e66"
		},
		{
			"deviceTime": "2014-08-30T11:25:22",
			"value": 221,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eaed073-87a3-429a-83d9-777af33c6bac"
		},
		{
			"deviceTime": "2014-08-30T11:30:22",
			"value": 229,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1d36f5d7-434c-4839-a300-30fb872ced21"
		},
		{
			"deviceTime": "2014-08-30T11:35:22",
			"value": 239,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "722cdb58-c961-4c64-b4e8-e06f8e540806"
		},
		{
			"deviceTime": "2014-08-30T11:40:22",
			"value": 255,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bda2e337-d126-4efc-b7fc-2238277f0928"
		},
		{
			"deviceTime": "2014-08-30T11:45:22",
			"value": 265,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1cfcf10-047f-453a-8021-eee66e9275b7"
		},
		{
			"deviceTime": "2014-08-30T11:50:22",
			"value": 275,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2cd708e6-e38d-4b38-9b7b-3bb41f150a5e"
		},
		{
			"deviceTime": "2014-08-30T11:55:22",
			"value": 279,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9827e91c-8d58-47a4-824c-d3198739571b"
		},
		{
			"messageText": "Nulla nisi eu, filet mignon shank spare ribs elit boudin ut dolore sirloin jerky consectetur ex swine. Landjaeger bresaola andouille id anim ad turkey tempor nisi voluptate duis chuck magna irure. Dolor excepteur ut meatball, tongue duis proident cow ham.",
			"parentMessage": "",
			"utcTime": "2014-08-30T11:55:25Z",
			"type": "message",
			"id": "e81d6dec-0d0f-4a64-a00e-1b4e2e02969c"
		},
		{
			"deviceTime": "2014-08-30T12:00:22",
			"value": 280,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80f8017d-73f0-40b5-bd6e-e1250e171055"
		},
		{
			"deviceTime": "2014-08-30T12:05:22",
			"value": 277,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1755af27-225a-456c-96c7-ce3acaa1f263"
		},
		{
			"deviceTime": "2014-08-30T12:10:22",
			"value": 288,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b3154d8-66a5-4735-961f-06109faaa2dc"
		},
		{
			"deviceTime": "2014-08-30T12:15:22",
			"value": 296,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc2c9a09-dc96-4110-9f19-cca243aef5c1"
		},
		{
			"deviceTime": "2014-08-30T12:20:22",
			"value": 302,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9426f81-3940-4911-9d38-2c083443c954"
		},
		{
			"deviceTime": "2014-08-30T12:25:22",
			"value": 305,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f59feffb-395a-4286-8590-99e411c66f9d"
		},
		{
			"deviceTime": "2014-08-30T12:30:22",
			"value": 313,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d55c67d-a0e5-4893-a2ab-95cddb50f463"
		},
		{
			"deviceTime": "2014-08-30T12:35:22",
			"value": 320,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2b0c65c1-4863-4403-a392-07404b348569"
		},
		{
			"deviceTime": "2014-08-30T12:40:22",
			"value": 324,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8853f02f-a330-407b-8a4b-490903d09ef4"
		},
		{
			"deviceTime": "2014-08-30T12:45:22",
			"value": 325,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54c080b5-e25f-4e58-b812-0314646833ba"
		},
		{
			"deviceTime": "2014-08-30T12:50:22",
			"value": 325,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33f92e29-3bb4-4634-b9ff-ab09b693d8dd"
		},
		{
			"deviceTime": "2014-08-30T12:55:22",
			"value": 324,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e7bc817-6f08-46b2-b906-079b9d83876b"
		},
		{
			"deviceTime": "2014-08-30T13:00:22",
			"value": 326,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2e5b301-f4c8-4bf2-abdc-916359f4db54"
		},
		{
			"deviceTime": "2014-08-30T13:05:22",
			"value": 326,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "020b5220-0e34-4840-bc1d-9adac6e25469"
		},
		{
			"deviceTime": "2014-08-30T13:10:22",
			"value": 325,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db1f2663-c33b-4edc-bf40-e27f8a40478e"
		},
		{
			"deviceTime": "2014-08-30T13:15:22",
			"value": 322,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9055faaf-77d4-4b74-b607-07a04e6b9c86"
		},
		{
			"deviceTime": "2014-08-30T13:20:22",
			"value": 320,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c730d2ba-665a-4bc3-a28a-85c2052f9124"
		},
		{
			"deviceTime": "2014-08-30T13:25:22",
			"value": 326,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca015f9f-5387-4bc9-adee-760a2e8d248a"
		},
		{
			"deviceTime": "2014-08-30T13:30:22",
			"value": 332,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6335690d-fa9a-4fbd-9c2f-3cc8a6133356"
		},
		{
			"deviceTime": "2014-08-30T13:35:22",
			"value": 336,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "140b179c-b506-4897-b384-1b31a7f4d09c"
		},
		{
			"deviceTime": "2014-08-30T13:40:22",
			"value": 336,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18ba9974-703a-4d67-a37c-24660fd574fc"
		},
		{
			"deviceTime": "2014-08-30T13:45:22",
			"value": 342,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cddc3824-eab7-4780-be81-03ef1ae24d94"
		},
		{
			"deviceTime": "2014-08-30T13:50:22",
			"value": 342,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d5fa3e9f-1d17-4b0d-966f-e254de80ba07"
		},
		{
			"deviceTime": "2014-08-30T13:52:30",
			"value": 333,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ffecd15c-d824-4f37-a158-9fc58cc6e11d"
		},
		{
			"deviceTime": "2014-08-30T13:52:30",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a205f40e-2532-4b6d-b387-1203a817ba77"
		},
		{
			"deviceTime": "2014-08-30T13:52:30",
			"id": "a205f40e-2532-4b6d-b387-1203a817ba77",
			"source": "demo",
			"joinKey": "1e63a5a8-0c0b-4422-b315-8d52bb93ff96",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 63
			}
		},
		{
			"deviceTime": "2014-08-30T13:52:30",
			"programmed": 4.2,
			"joinKey": "1e63a5a8-0c0b-4422-b315-8d52bb93ff96",
			"value": 4.2,
			"source": "demo",
			"recommended": 4.2,
			"extendedDelivery": 0.4,
			"initialDelivery": 3.8,
			"duration": 3600000,
			"extended": true,
			"type": "bolus",
			"id": "0744a82e-30ab-4460-9162-dc36e5fd092a",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-08-30T13:55:22",
			"value": 344,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4824f31-3c06-48be-b865-458f450ddc89"
		},
		{
			"deviceTime": "2014-08-30T14:00:05",
			"value": 267,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "99b5541b-5076-4f96-b0a9-92f9828b6cd4"
		},
		{
			"deviceTime": "2014-08-30T14:00:05",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "7cef41a0-50b8-4b1b-aca3-6f0ed5ff74e3"
		},
		{
			"deviceTime": "2014-08-30T14:00:05",
			"id": "7cef41a0-50b8-4b1b-aca3-6f0ed5ff74e3",
			"source": "demo",
			"joinKey": "a751f9b7-6f76-4caa-9fcd-3c158503076c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 81
			}
		},
		{
			"deviceTime": "2014-08-30T14:00:05",
			"suspendedAt": "2014-08-30T15:30:05",
			"programmed": 5.4,
			"joinKey": "a751f9b7-6f76-4caa-9fcd-3c158503076c",
			"value": 5.4,
			"source": "demo",
			"recommended": 5.4,
			"extendedDelivery": 5.4,
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"extended": true,
			"type": "bolus",
			"id": "22ed8504-86a7-469d-bf70-55ddf836a2b1"
		},
		{
			"deviceTime": "2014-08-30T14:00:22",
			"value": 342,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "21badef7-36a8-4533-88b5-a942b91cf418"
		},
		{
			"deviceTime": "2014-08-30T14:05:22",
			"value": 339,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08c20076-5d3a-4e48-b51e-e1c6a2e1217e"
		},
		{
			"deviceTime": "2014-08-30T14:10:22",
			"value": 338,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "646aa61e-0cb1-430e-ba8a-7730287a5775"
		},
		{
			"deviceTime": "2014-08-30T14:15:22",
			"value": 330,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "585c6c41-0b97-4b9e-a789-d4abaa09a8b9"
		},
		{
			"deviceTime": "2014-08-30T14:20:22",
			"value": 316,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90c0e961-332c-4b8d-a779-adb3d7213a8e"
		},
		{
			"deviceTime": "2014-08-30T14:25:22",
			"value": 304,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7579b8ee-aea4-4934-968f-7ea620507c3c"
		},
		{
			"deviceTime": "2014-08-30T14:30:22",
			"value": 293,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "945beee1-4303-4229-a0b3-ab4441360d35"
		},
		{
			"deviceTime": "2014-08-30T14:35:22",
			"value": 283,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c63edcbd-ddc0-4dec-90f9-3177a6140db6"
		},
		{
			"deviceTime": "2014-08-30T14:40:22",
			"value": 270,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "642731c9-3a06-49fe-9c98-546e76d7d7d8"
		},
		{
			"deviceTime": "2014-08-30T14:45:22",
			"value": 256,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc805f06-e548-402b-aebd-761b0e0e7b90"
		},
		{
			"deviceTime": "2014-08-30T14:50:22",
			"value": 242,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fc2947f8-b2c6-488d-b189-2dbaaea7bc59"
		},
		{
			"deviceTime": "2014-08-30T14:55:22",
			"value": 228,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff748775-1740-46f5-a2d6-e18f423a9146"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-30T20:00:00",
			"start": "2014-08-30T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "77d850d7-d344-45b7-ba4f-aeea50b7fc21"
		},
		{
			"deviceTime": "2014-08-30T15:00:22",
			"value": 214,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1710446-eb07-4c92-8af5-17275a274374"
		},
		{
			"deviceTime": "2014-08-30T15:05:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20c53059-1f92-4ea9-9259-aa7c3088b2df"
		},
		{
			"deviceTime": "2014-08-30T15:10:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f62df99-8ce4-44de-b300-c8b8a0e05f29"
		},
		{
			"deviceTime": "2014-08-30T15:15:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e587543-a960-4524-bf72-b3d8e1974a66"
		},
		{
			"deviceTime": "2014-08-30T15:20:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5cfca5c-00a9-4180-bf1a-b3b3eb4f361f"
		},
		{
			"end": "2014-08-30T19:23:01",
			"start": "2014-08-30T15:23:01",
			"percent": 0.35,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "ca898f42-46dc-42ed-825e-8c25daa72105"
		},
		{
			"deviceTime": "2014-08-30T15:25:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cfafbb2-3662-4ccd-9606-72e1a5c7e41f"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-30T15:30:05",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "f7fdea30-a113-44a7-ae04-33bae687829f"
		},
		{
			"deviceTime": "2014-08-30T15:30:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f00fb08-0400-44e1-b04a-d7047f978bf5"
		},
		{
			"deviceTime": "2014-08-30T15:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a2bc74d4-26a6-4911-a8e4-1cb6a0df7d07"
		},
		{
			"deviceTime": "2014-08-30T15:40:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba45e1bb-a659-4774-b7a7-52bd92dccee7"
		},
		{
			"deviceTime": "2014-08-30T15:45:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9022cd4c-1f73-42f1-96ea-4a3477a3670e"
		},
		{
			"deviceTime": "2014-08-30T15:50:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddf69159-d3e4-4809-8ea7-fa2ed89bb012"
		},
		{
			"deviceTime": "2014-08-30T15:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6d36902-f714-4a37-85a6-771c28b8d9b0"
		},
		{
			"deviceTime": "2014-08-30T16:00:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29a55126-0464-459a-bcbf-940ee2d63044"
		},
		{
			"deviceTime": "2014-08-30T16:05:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fddcc4c7-dc26-41ce-aaa9-48df4bc214d1"
		},
		{
			"deviceTime": "2014-08-30T16:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "affc2634-22f2-4b65-847f-54ee5c0bdf6a"
		},
		{
			"deviceTime": "2014-08-30T16:15:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bce2b296-a6b8-4579-beb6-9332bea9b670"
		},
		{
			"deviceTime": "2014-08-30T16:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10c7709b-851c-411f-a26e-e18ab7442fc7"
		},
		{
			"deviceTime": "2014-08-30T16:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5526946d-11f4-479f-bd67-1c64160a5af2"
		},
		{
			"deviceTime": "2014-08-30T16:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01f03a7f-f1df-4f4c-9f94-f94accaf8a6e"
		},
		{
			"deviceTime": "2014-08-30T16:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "040cf34a-3421-4fb3-91ad-51748d35f754"
		},
		{
			"deviceTime": "2014-08-30T16:40:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4d53baa8-06b1-46cd-a463-964f90dbf0c2"
		},
		{
			"deviceTime": "2014-08-30T16:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06beaf65-2245-4c6b-8ad9-d139cbecb6fe"
		},
		{
			"deviceTime": "2014-08-30T16:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1570b935-275e-407d-8d0d-c72a350503c5"
		},
		{
			"deviceTime": "2014-08-30T16:55:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "212f3782-a077-4a00-9f02-ed851a88eb45"
		},
		{
			"deviceTime": "2014-08-30T17:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f4325da-092a-402f-acb9-d82671dac7a7"
		},
		{
			"deviceTime": "2014-08-30T17:02:01",
			"value": 2.4,
			"source": "demo",
			"recommended": 2.4,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c63dc0cb-50cb-49bf-b7bd-91191c8f0c4b"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-30T17:04:05",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "b4685271-a268-47eb-ad07-9e2afbb05750",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-30T15:30:05",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "f7fdea30-a113-44a7-ae04-33bae687829f"
			}
		},
		{
			"deviceTime": "2014-08-30T17:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b70ff277-3933-4c2d-95e2-40af7b29f109"
		},
		{
			"deviceTime": "2014-08-30T17:10:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "469d180c-4cf5-4795-8c55-aa314c7d2db7"
		},
		{
			"deviceTime": "2014-08-30T17:15:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af35cb01-0501-4ea3-8fe2-fa7a2c0a3e81"
		},
		{
			"deviceTime": "2014-08-30T17:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f71e9fe-9a0d-4289-ad49-5a230dded4ee"
		},
		{
			"deviceTime": "2014-08-30T17:25:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7b0ea4b-a6e6-4e6c-978f-71f0e48176d5"
		},
		{
			"deviceTime": "2014-08-30T17:30:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69f15e5e-d4bd-4548-bb26-e2c9ed8ecfee"
		},
		{
			"deviceTime": "2014-08-30T17:35:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b87e2f28-de3c-4de3-8bec-b973c7c5344f"
		},
		{
			"deviceTime": "2014-08-30T17:40:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85e71129-571e-45de-8902-8a892c26e1dd"
		},
		{
			"deviceTime": "2014-08-30T17:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c8920cad-599d-4159-a488-3332fc4ed757"
		},
		{
			"deviceTime": "2014-08-30T17:50:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98e99172-b312-4385-b405-37c22f4995e4"
		},
		{
			"deviceTime": "2014-08-30T17:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91541389-943a-4735-a75c-05aa979d17e3"
		},
		{
			"deviceTime": "2014-08-30T18:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e2fc56ec-65d1-41a9-bcdb-e64ccfd79641"
		},
		{
			"deviceTime": "2014-08-30T18:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da40f273-c283-4875-a092-65875869c1ae"
		},
		{
			"deviceTime": "2014-08-30T18:25:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1711f298-bd84-48c3-8c45-ce76f2bee3d4"
		},
		{
			"deviceTime": "2014-08-30T18:30:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58e2de97-0a98-498d-b96c-afb5793049a8"
		},
		{
			"deviceTime": "2014-08-30T18:35:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7dcc044-90c2-4f09-a08e-4f461c968401"
		},
		{
			"deviceTime": "2014-08-30T18:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aee19c6-a8c0-41b2-8e67-24d25cb0cde3"
		},
		{
			"deviceTime": "2014-08-30T18:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "705ce0c7-3626-4346-85bc-e07e80528c4d"
		},
		{
			"deviceTime": "2014-08-30T18:50:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63c4ace6-c8f6-4efb-be9a-252fc4f85662"
		},
		{
			"deviceTime": "2014-08-30T19:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40ef9cd5-6afa-4c53-8464-f7e116d278ac"
		},
		{
			"deviceTime": "2014-08-30T19:25:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26d1b5a3-1d64-43bb-ba51-05e92e6d3ffa"
		},
		{
			"deviceTime": "2014-08-30T19:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48e0fbc9-10ae-4fee-9913-73ea22331796"
		},
		{
			"deviceTime": "2014-08-30T19:35:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce204a55-15f8-420a-8c05-57e28be7f7cb"
		},
		{
			"deviceTime": "2014-08-30T19:40:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79624c3f-af46-4457-b079-96d8b17fa5a6"
		},
		{
			"deviceTime": "2014-08-30T19:45:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0045e6b-1889-4843-8597-a2e7486976bf"
		},
		{
			"deviceTime": "2014-08-30T19:50:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4af4dcb5-caeb-4589-afba-ebfaf2e483c3"
		},
		{
			"deviceTime": "2014-08-30T19:55:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb4a4435-678a-46b6-bf68-f5f7c56512f7"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-31T00:00:00",
			"start": "2014-08-30T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "a0b4cf92-1036-4c41-8d35-c39daeb1bd0d"
		},
		{
			"deviceTime": "2014-08-30T20:00:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "568f3b04-35eb-468b-948f-a67400a936d9"
		},
		{
			"deviceTime": "2014-08-30T20:05:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76f00a52-cbac-432d-abf3-f22b09eb4457"
		},
		{
			"deviceTime": "2014-08-30T20:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6254952e-e51a-4dcb-8b31-75843e30c6f7"
		},
		{
			"deviceTime": "2014-08-30T20:15:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b0e70fe-2564-422e-9440-a87ca5137329"
		},
		{
			"deviceTime": "2014-08-30T20:20:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75a9d1e9-23cc-4116-82b9-e48482e67f29"
		},
		{
			"deviceTime": "2014-08-30T20:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a36edda5-b647-435a-a7d6-e3758072547a"
		},
		{
			"deviceTime": "2014-08-30T20:30:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a7b4c27-545b-4d4d-8d05-ab84e4b890e4"
		},
		{
			"deviceTime": "2014-08-30T20:35:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5cef13c-62ec-4e99-a64d-2573ae696de5"
		},
		{
			"deviceTime": "2014-08-30T20:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b120c249-6c13-416b-af0c-1a3e50544d81"
		},
		{
			"deviceTime": "2014-08-30T20:45:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "109c32c6-5236-4aa5-8202-545a929652f9"
		},
		{
			"deviceTime": "2014-08-30T20:50:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "668adfb5-6b10-4a88-afa5-6a959fed8ce7"
		},
		{
			"deviceTime": "2014-08-30T20:55:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e2cc292-b151-4f88-90ab-a4b8b9cc1c80"
		},
		{
			"deviceTime": "2014-08-30T21:00:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd280c08-ba71-4d88-b502-fc477da4153d"
		},
		{
			"deviceTime": "2014-08-30T21:05:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50340702-8244-4cc0-9973-a518196bf262"
		},
		{
			"deviceTime": "2014-08-30T21:10:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf1b74c5-8966-4bdd-a9d7-f338856cf129"
		},
		{
			"deviceTime": "2014-08-30T21:15:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24074b0a-915f-4160-97dd-b28b528a438a"
		},
		{
			"deviceTime": "2014-08-30T21:20:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f61f6603-f799-4873-8916-68dd9fe36eeb"
		},
		{
			"deviceTime": "2014-08-30T21:25:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f48a2ff9-366a-4108-a1d0-bd9c8c4cab19"
		},
		{
			"deviceTime": "2014-08-30T21:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5046e359-983c-47c5-a1df-88ed08da3a34"
		},
		{
			"deviceTime": "2014-08-30T21:35:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63d4ebcf-ecc3-464b-9797-da4c0fa1bd14"
		},
		{
			"deviceTime": "2014-08-30T21:40:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9a39bbb2-5995-41f8-aa3f-66fe0289eb52"
		},
		{
			"deviceTime": "2014-08-30T21:45:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bca52832-7af6-44af-aae7-3243a1185eac"
		},
		{
			"deviceTime": "2014-08-30T21:50:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19d65506-e932-4781-b7be-215e0ad90249"
		},
		{
			"deviceTime": "2014-08-30T21:55:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ab9a225-83b5-4b62-8ac7-569fbb62f5a1"
		},
		{
			"deviceTime": "2014-08-30T22:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3026b4b9-e85c-4064-a183-3e1cb4c52380"
		},
		{
			"deviceTime": "2014-08-30T22:05:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53b32861-4cdc-480a-a0ad-dd394d9564cc"
		},
		{
			"deviceTime": "2014-08-30T22:10:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cd8b304-62d3-46de-a554-32c2d5e18f11"
		},
		{
			"deviceTime": "2014-08-30T22:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e239be72-6208-423b-9fd8-b5e16558fc56"
		},
		{
			"deviceTime": "2014-08-30T22:20:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e955b92-4c75-428c-a8c1-4785944d5428"
		},
		{
			"deviceTime": "2014-08-30T22:25:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "911f77db-cd68-432b-b0dc-dfa248ea4245"
		},
		{
			"deviceTime": "2014-08-30T22:30:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcf8e18d-ef0c-4e2d-b170-5aac3fbfd79b"
		},
		{
			"deviceTime": "2014-08-30T22:35:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de1a687e-ee39-42c3-b60d-2de2045e22ea"
		},
		{
			"deviceTime": "2014-08-30T22:50:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b711042-9139-4e48-966c-294161b29929"
		},
		{
			"deviceTime": "2014-08-30T22:55:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f07a8900-9f93-4700-8c43-0c8f0b2aa6b2"
		},
		{
			"deviceTime": "2014-08-30T23:00:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74882036-0201-4f9a-892f-da782895b134"
		},
		{
			"deviceTime": "2014-08-30T23:05:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6390241-5860-455d-8a52-159e125677c2"
		},
		{
			"deviceTime": "2014-08-30T23:10:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b16355a3-7b5c-4058-a318-cd7e3254d46d"
		},
		{
			"deviceTime": "2014-08-30T23:15:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f9d37720-f16c-4b78-9675-d7cd97e0ce79"
		},
		{
			"deviceTime": "2014-08-30T23:20:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abf9baa6-8823-4367-98bd-cdc03c640b9c"
		},
		{
			"deviceTime": "2014-08-30T23:25:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f504b604-bb13-46d2-a339-ee2861d85948"
		},
		{
			"deviceTime": "2014-08-30T23:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9f2e15c-1fd2-43e7-8bbe-c26b21054a9f"
		},
		{
			"deviceTime": "2014-08-30T23:35:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7485a90-6081-4e36-98cb-9c19e79cb917"
		},
		{
			"deviceTime": "2014-08-30T23:40:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f351b77-3e2f-4c23-8fb3-296440e8f808"
		},
		{
			"deviceTime": "2014-08-30T23:44:05",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "03a2c36d-502c-48f8-8547-64bfa243179d"
		},
		{
			"deviceTime": "2014-08-30T23:44:05",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "f8fd7ed4-9e95-4a9d-9a0f-18ad7f1f5afa"
		},
		{
			"deviceTime": "2014-08-30T23:44:05",
			"id": "f8fd7ed4-9e95-4a9d-9a0f-18ad7f1f5afa",
			"source": "demo",
			"joinKey": "4eee8dbc-342f-42ca-923c-d0a08f63bd51",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 76
			}
		},
		{
			"deviceTime": "2014-08-30T23:44:05",
			"programmed": 5.1,
			"joinKey": "4eee8dbc-342f-42ca-923c-d0a08f63bd51",
			"value": 0.9,
			"source": "demo",
			"recommended": 5.1,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "605bacae-2c42-4956-97fc-71c030e52f99"
		},
		{
			"deviceTime": "2014-08-30T23:45:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27389af8-00f5-4fda-ae37-dc8f326435df"
		},
		{
			"deviceTime": "2014-08-30T23:50:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05710bfb-a105-4972-a862-7d0b42611312"
		},
		{
			"deviceTime": "2014-08-30T23:55:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e00db9bf-fd7f-4d0e-9554-9886119f38bb"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-31T02:00:00",
			"start": "2014-08-31T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "38c48058-2234-4d95-bd1c-3fccd05090ad"
		},
		{
			"deviceTime": "2014-08-31T00:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f226247-9527-4211-916a-d8cbd6d5951b"
		},
		{
			"deviceTime": "2014-08-31T00:05:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0db935d8-e3b4-4e55-afc6-7e7a958bf3a8"
		},
		{
			"deviceTime": "2014-08-31T00:10:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd8d7c7c-b886-46a6-8679-a087a6d840bb"
		},
		{
			"deviceTime": "2014-08-31T00:15:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f08316f5-6d6b-49ab-84cd-7e9d2bf6ba75"
		},
		{
			"deviceTime": "2014-08-31T00:20:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f62af81-295b-4b28-b409-2b32ba2782c9"
		},
		{
			"deviceTime": "2014-08-31T00:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de5ab230-c191-4709-9079-50dd2f885a37"
		},
		{
			"deviceTime": "2014-08-31T00:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6da82093-28b0-4a75-9e06-c41d350bb0c4"
		},
		{
			"deviceTime": "2014-08-31T00:35:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90e36356-634f-4bc2-8392-77d346d84370"
		},
		{
			"deviceTime": "2014-08-31T00:40:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a69aede4-7ee3-4614-8a09-6f1af01f0073"
		},
		{
			"deviceTime": "2014-08-31T00:50:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5436291f-e05d-48cc-8e40-049b56ab7cc1"
		},
		{
			"deviceTime": "2014-08-31T00:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ab89135-7d3f-46b3-9efc-299eb5ac8a5d"
		},
		{
			"deviceTime": "2014-08-31T01:00:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42f8655e-5568-4a67-a425-6c7541e49930"
		},
		{
			"end": "2014-08-31T05:01:01",
			"start": "2014-08-31T01:01:01",
			"percent": 0.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "8c990b2c-3fcf-43fe-a246-4643520cba58"
		},
		{
			"deviceTime": "2014-08-31T01:05:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce0ccb46-5a08-4fef-82e4-3aa78e5a3237"
		},
		{
			"deviceTime": "2014-08-31T01:10:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "58086b06-8349-4014-b4e0-8103f79e8b06"
		},
		{
			"deviceTime": "2014-08-31T01:15:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82f117b4-1305-4757-bbdb-29c48378589c"
		},
		{
			"deviceTime": "2014-08-31T01:50:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b13b6246-573c-418a-b5a4-871ac32a64d9"
		},
		{
			"deviceTime": "2014-08-31T01:55:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07ed36e4-d332-4a8d-89dc-82625fe903da"
		},
		{
			"delivered": 0.65,
			"end": "2014-08-31T04:00:00",
			"start": "2014-08-31T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "558a4c4b-70e2-4e0f-a999-2a75b96d4f58"
		},
		{
			"deviceTime": "2014-08-31T02:00:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcc9dbae-de80-49a8-8a2b-626d67f543f1"
		},
		{
			"deviceTime": "2014-08-31T02:05:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ad1a108-7aa0-4018-b684-c0476e510528"
		},
		{
			"deviceTime": "2014-08-31T02:10:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9ed1091-3ddc-409e-b3a6-8ca99a6d1408"
		},
		{
			"deviceTime": "2014-08-31T02:15:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "286e1b6d-c4c6-4290-b3b6-2b64c82079c6"
		},
		{
			"deviceTime": "2014-08-31T02:20:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cb95cdb-06c0-48b7-a336-1cbc7d93649e"
		},
		{
			"deviceTime": "2014-08-31T02:25:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e19c92c1-c47a-48ec-9c22-2eb62d85a775"
		},
		{
			"deviceTime": "2014-08-31T02:30:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09ffe644-182e-4614-bd62-642dc8bb2649"
		},
		{
			"deviceTime": "2014-08-31T02:35:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5df52be2-9d56-4a98-b58c-79d268ac2d2d"
		},
		{
			"deviceTime": "2014-08-31T02:40:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0baea96-aac3-46f4-b218-8a4434d61c1b"
		},
		{
			"deviceTime": "2014-08-31T03:00:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0f64ccc-97c8-4798-9215-c6b72d736ca0"
		},
		{
			"deviceTime": "2014-08-31T03:05:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "514a7662-587f-426e-a846-984bf49679c1"
		},
		{
			"deviceTime": "2014-08-31T03:10:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71d37027-1e25-4fa5-a8cc-598077e53f8a"
		},
		{
			"deviceTime": "2014-08-31T03:15:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "323a00ac-898b-4104-abdf-65d4538619a9"
		},
		{
			"deviceTime": "2014-08-31T03:20:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a859f86d-bd5c-4aa0-b918-b25f9c8c2ef2"
		},
		{
			"deviceTime": "2014-08-31T03:25:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca80becd-cb16-4243-9a63-ffd92760e453"
		},
		{
			"deviceTime": "2014-08-31T03:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1b8cebbd-5fef-4f3c-93c6-002be942b53a"
		},
		{
			"deviceTime": "2014-08-31T03:35:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46269b37-fbda-454d-9e85-a09ab1c409ec"
		},
		{
			"deviceTime": "2014-08-31T03:40:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1cbee394-3d55-43e7-a3c2-f2594e42cb4b"
		},
		{
			"deviceTime": "2014-08-31T03:45:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c3d9e94-e0ef-414b-ad3d-ec23d07209b5"
		},
		{
			"deviceTime": "2014-08-31T03:50:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4c4dbde-2573-47b5-85a0-0d437c9e9f43"
		},
		{
			"deviceTime": "2014-08-31T03:55:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "43f548ce-13d5-44a6-9bfc-6a9b188a6675"
		},
		{
			"delivered": 0.75,
			"end": "2014-08-31T05:00:00",
			"start": "2014-08-31T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "66989e4b-c0fa-4f4d-864b-52fc7d6719cb"
		},
		{
			"deviceTime": "2014-08-31T04:00:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48418c55-1609-4d98-8f31-39162be831f2"
		},
		{
			"deviceTime": "2014-08-31T04:05:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e58a327-3201-4c3b-802e-a452fd4ca050"
		},
		{
			"deviceTime": "2014-08-31T04:10:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13a7201e-2af0-45c9-871f-42330a4c579f"
		},
		{
			"deviceTime": "2014-08-31T04:15:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebda5411-b88b-4a0d-8d40-f9bbdb560229"
		},
		{
			"deviceTime": "2014-08-31T04:20:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e1d6840-752d-4e66-a034-5f4eb48e47ab"
		},
		{
			"deviceTime": "2014-08-31T04:25:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8765b565-9ee5-45e6-a2f8-cc835590812a"
		},
		{
			"deviceTime": "2014-08-31T04:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d55866fb-72ec-4098-8e83-7aeb2b403c95"
		},
		{
			"deviceTime": "2014-08-31T04:35:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eecd7f64-3258-46a4-8c17-390b598876ac"
		},
		{
			"deviceTime": "2014-08-31T04:40:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da373006-f215-4808-a89a-0d8407545012"
		},
		{
			"deviceTime": "2014-08-31T04:45:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95fdafae-0754-4dd3-8bd4-ccefc6e01446"
		},
		{
			"deviceTime": "2014-08-31T04:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "265e9745-5c70-4f88-a97d-8c242668882c"
		},
		{
			"deviceTime": "2014-08-31T04:55:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26d5179c-678b-4202-b534-f4d0c3ffde73"
		},
		{
			"delivered": 0.85,
			"end": "2014-08-31T06:00:00",
			"start": "2014-08-31T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "2e78c254-3f2b-4cd9-a83d-3ea9558b2e80"
		},
		{
			"deviceTime": "2014-08-31T05:01:01",
			"value": 1.8,
			"source": "demo",
			"recommended": 3.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "5da98098-9119-4586-b976-b289bc559ef4"
		},
		{
			"deviceTime": "2014-08-31T05:25:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82ee1c27-8813-4634-96b8-2314dded36f2"
		},
		{
			"deviceTime": "2014-08-31T05:25:52",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b3611361-db71-4ac6-a79b-3364bc032372"
		},
		{
			"messageText": "Sirloin jowl boudin, est pork loin laboris non beef ribs excepteur ex cupidatat cillum eu.",
			"parentMessage": "",
			"utcTime": "2014-08-31T05:38:33Z",
			"type": "message",
			"id": "538e50b6-0474-411a-8afd-a097081ae83a"
		},
		{
			"deviceTime": "2014-08-31T05:45:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "289c99e8-6b6d-4cc6-9ca8-8a4560095bc7"
		},
		{
			"end": "2014-08-31T11:46:01",
			"start": "2014-08-31T05:46:01",
			"percent": 1.7,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "103ecc55-bdcc-4536-bcb4-9fb18f6c29ed"
		},
		{
			"deviceTime": "2014-08-31T05:50:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2fe7d79d-75d9-4358-aff6-b0eb3194d48a"
		},
		{
			"delivered": 1,
			"end": "2014-08-31T09:00:00",
			"start": "2014-08-31T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "a2f67c43-3d05-4376-b8c2-3a8f54a9d3b9"
		},
		{
			"deviceTime": "2014-08-31T06:00:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93a0fd99-fcba-470d-994b-4f00d488be88"
		},
		{
			"deviceTime": "2014-08-31T06:05:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "33c13b6a-a271-403a-9a4c-0cf46272f423"
		},
		{
			"deviceTime": "2014-08-31T06:10:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "332cebd1-8708-4c3c-b417-7435d80e08c4"
		},
		{
			"deviceTime": "2014-08-31T06:15:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "604ad250-7330-4ec2-b655-05d8be0a4c16"
		},
		{
			"deviceTime": "2014-08-31T06:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b92219d2-16fa-4319-86ba-36a55eba6e48"
		},
		{
			"deviceTime": "2014-08-31T06:50:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "073b7c2c-0fc8-4009-960e-035c67112770"
		},
		{
			"deviceTime": "2014-08-31T06:55:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75b94790-819c-4821-aa8f-87de97b12dc6"
		},
		{
			"deviceTime": "2014-08-31T07:00:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99e8d138-4a2b-43c6-ac2e-dd2f9470bb7f"
		},
		{
			"deviceTime": "2014-08-31T07:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66159404-6518-4eb9-9765-19ad8b4b725b"
		},
		{
			"deviceTime": "2014-08-31T07:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e2e825e-af16-41fd-9ed0-491326dd6fe5"
		},
		{
			"deviceTime": "2014-08-31T07:15:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b450916c-982b-4eea-ad75-619c99efef91"
		},
		{
			"deviceTime": "2014-08-31T07:20:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "276dec34-cfda-4f30-9cec-a28a139c65bd"
		},
		{
			"deviceTime": "2014-08-31T07:23:41",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d8410053-cac1-49d8-8cd5-de9ca2572721"
		},
		{
			"deviceTime": "2014-08-31T07:23:41",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "0a4c6c6a-8499-464c-9a22-3f2df4dad910"
		},
		{
			"deviceTime": "2014-08-31T07:23:41",
			"id": "0a4c6c6a-8499-464c-9a22-3f2df4dad910",
			"source": "demo",
			"joinKey": "8ca6a531-b99c-4143-bc0c-96026f026f64",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 54
			}
		},
		{
			"deviceTime": "2014-08-31T07:23:41",
			"suspendedAt": "2014-08-31T07:38:41",
			"programmed": 3.9,
			"joinKey": "8ca6a531-b99c-4143-bc0c-96026f026f64",
			"value": 3.9,
			"source": "demo",
			"recommended": 3.6,
			"extendedDelivery": 3.9,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "37131707-c3b7-4478-9e87-a829fb7fd006"
		},
		{
			"deviceTime": "2014-08-31T07:25:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0effcaee-2568-4a28-906c-de8b21f96cc8"
		},
		{
			"deviceTime": "2014-08-31T07:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "06236590-b34f-4197-a72b-905805e82406"
		},
		{
			"deviceTime": "2014-08-31T07:35:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd3514fd-b1d6-4616-90d7-8cfc345bd7f5"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-31T07:38:41",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "16a1e845-d8a1-4697-92a1-a93f5707bf1d"
		},
		{
			"deviceTime": "2014-08-31T07:45:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9048935b-be51-42a0-88ac-da60039d6fdc"
		},
		{
			"deviceTime": "2014-08-31T07:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dee378a-64dd-4121-b0c3-6ff24b56de1b"
		},
		{
			"deviceTime": "2014-08-31T07:55:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "738bea8e-2f45-435b-a4d1-e1dcc6132d54"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-31T07:55:41",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "bff485d3-b311-4ab6-a9db-7f6d875245c1",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-08-31T07:38:41",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "16a1e845-d8a1-4697-92a1-a93f5707bf1d"
			}
		},
		{
			"deviceTime": "2014-08-31T08:00:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8af6eba0-0932-4a4d-8c71-7fef7e0dc4ec"
		},
		{
			"deviceTime": "2014-08-31T08:05:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78fefc29-8996-4dfc-909e-a15461dfefb5"
		},
		{
			"deviceTime": "2014-08-31T08:10:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "44575ca7-d2da-4643-bf57-7ea4fb9dddf3"
		},
		{
			"deviceTime": "2014-08-31T08:40:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca803205-aeb0-4150-b2ac-30f610585c0a"
		},
		{
			"deviceTime": "2014-08-31T08:45:22",
			"value": 168,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb28a9b6-8971-4351-b1a1-fbc7e23e0e4b"
		},
		{
			"deviceTime": "2014-08-31T08:50:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7f70f1a-4a63-4fe3-b7be-f28d824f3586"
		},
		{
			"delivered": 0.8,
			"end": "2014-08-31T15:00:00",
			"start": "2014-08-31T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "46d0bde3-6001-4683-bd27-6c2b84e4835d"
		},
		{
			"deviceTime": "2014-08-31T09:04:17",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "fd1687c6-8cad-4c65-b9aa-5a67ea49d46b"
		},
		{
			"deviceTime": "2014-08-31T09:04:17",
			"value": 54,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "356405dd-999e-49d9-8558-efe98bf6f65c"
		},
		{
			"deviceTime": "2014-08-31T09:04:17",
			"id": "356405dd-999e-49d9-8558-efe98bf6f65c",
			"source": "demo",
			"joinKey": "479d70b8-e288-4b2e-802f-48630272601a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 54
			}
		},
		{
			"deviceTime": "2014-08-31T09:04:17",
			"suspendedAt": "2014-08-31T10:24:17",
			"programmed": 3.6,
			"joinKey": "479d70b8-e288-4b2e-802f-48630272601a",
			"value": 3.6,
			"source": "demo",
			"recommended": 3.6,
			"extendedDelivery": 3.6,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "a6429906-feb4-45a6-b889-6630bcad46b1"
		},
		{
			"deviceTime": "2014-08-31T09:05:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90729389-672f-4e11-828b-6717281f4ebc"
		},
		{
			"deviceTime": "2014-08-31T09:10:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8586197b-a552-4eff-b3e0-d1297423186d"
		},
		{
			"deviceTime": "2014-08-31T09:15:22",
			"value": 206,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d66bf23d-6c28-4191-8f49-a2b947cc3754"
		},
		{
			"deviceTime": "2014-08-31T09:20:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "599eb3c0-6c4e-4ab3-8010-d2bff7e4ab25"
		},
		{
			"deviceTime": "2014-08-31T09:25:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64793acd-664e-4475-bc11-833ba387c2d8"
		},
		{
			"deviceTime": "2014-08-31T09:25:55",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "dcb61454-c69d-49d3-9d62-b91f36e6b123"
		},
		{
			"deviceTime": "2014-08-31T09:30:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "803ea99a-df4e-491f-8d4b-c101a67accff"
		},
		{
			"deviceTime": "2014-08-31T09:35:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "480a2f7c-bc2b-4898-b1bc-6be07f279311"
		},
		{
			"deviceTime": "2014-08-31T09:40:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "448debd0-e789-4772-bf8e-d0485eec095a"
		},
		{
			"deviceTime": "2014-08-31T09:45:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ee48823-7842-4b88-9533-fd0be0259a07"
		},
		{
			"deviceTime": "2014-08-31T09:50:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7783a378-9568-498f-ab0e-a2d5536adddc"
		},
		{
			"deviceTime": "2014-08-31T09:55:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38dd954b-bccc-4144-8310-46722dd70cbc"
		},
		{
			"deviceTime": "2014-08-31T10:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "174e84e7-e7f6-4856-85a7-ba136b08055f"
		},
		{
			"deviceTime": "2014-08-31T10:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2ef13b9f-d17d-4592-8d37-665317cbc38a"
		},
		{
			"deviceTime": "2014-08-31T10:10:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "191905c8-8be3-408a-9f89-311ce7dcba9f"
		},
		{
			"end": "2014-08-31T12:15:01",
			"start": "2014-08-31T10:15:01",
			"percent": 1.55,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "cb5ebe50-77df-4bdd-ab50-4f7d9e688c0c"
		},
		{
			"deviceTime": "2014-08-31T10:15:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "09a8ec49-57f2-4afb-84bb-e2791559a0b3"
		},
		{
			"deviceTime": "2014-08-31T10:20:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6400485-3233-4004-a5fa-d9848c4db54b"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-31T10:24:17",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "8c70e384-10b5-4f22-a533-dfe045164f44"
		},
		{
			"deviceTime": "2014-08-31T10:25:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24b52e6b-d7de-43eb-8364-ee1dc5dc2877"
		},
		{
			"deviceTime": "2014-08-31T10:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab540741-7e10-47dc-b369-17ddc1adb61e"
		},
		{
			"deviceTime": "2014-08-31T10:35:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cf3c5e6-d4d5-4280-ac54-f65ae1c88edf"
		},
		{
			"deviceTime": "2014-08-31T10:37:18",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b1bd808c-0e34-44f2-8a82-49fdb9f691b1"
		},
		{
			"deviceTime": "2014-08-31T10:37:18",
			"value": 12,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "10df454e-336c-48ad-8b68-05dd15566314"
		},
		{
			"deviceTime": "2014-08-31T10:37:18",
			"id": "10df454e-336c-48ad-8b68-05dd15566314",
			"source": "demo",
			"joinKey": "0d061c4c-dc78-425c-b070-b60d5476c099",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 12
			}
		},
		{
			"deviceTime": "2014-08-31T10:37:18",
			"programmed": 0.7,
			"joinKey": "0d061c4c-dc78-425c-b070-b60d5476c099",
			"value": 0.7,
			"source": "demo",
			"recommended": 0.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "f74fdd14-72bb-4afa-bdbb-002d3cd9cb3c"
		},
		{
			"deviceTime": "2014-08-31T10:40:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14a939c5-faaf-40b0-9ac2-83519894c690"
		},
		{
			"deviceTime": "2014-08-31T10:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f15d09a3-aa64-41a7-b358-c6bb94bc91dd"
		},
		{
			"deviceTime": "2014-08-31T10:50:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80db8805-99ed-4726-ac01-ec85bd3c702e"
		},
		{
			"deviceTime": "2014-08-31T10:55:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "92108fa4-168c-4e13-9fa1-ffa090d6bfe7"
		},
		{
			"deviceTime": "2014-08-31T11:00:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5757d82-7180-47a5-b0d8-ff88dea58948"
		},
		{
			"deviceTime": "2014-08-31T11:05:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcb9d6f8-0217-4aee-ab06-8dbd81f51e3d"
		},
		{
			"deviceTime": "2014-08-31T11:06:40",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "daa32508-1f5d-4cfd-975f-a24d5f341924"
		},
		{
			"deviceTime": "2014-08-31T11:06:40",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "1d4d8605-c7d9-41ab-ba31-93ecddbb3d61"
		},
		{
			"deviceTime": "2014-08-31T11:06:40",
			"id": "1d4d8605-c7d9-41ab-ba31-93ecddbb3d61",
			"source": "demo",
			"joinKey": "70be4c77-d552-46fc-be14-c44032f88682",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 92
			}
		},
		{
			"deviceTime": "2014-08-31T11:06:40",
			"programmed": 6.1,
			"joinKey": "70be4c77-d552-46fc-be14-c44032f88682",
			"value": 6.1,
			"source": "demo",
			"recommended": 6.1,
			"extendedDelivery": 6.1,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "2ea589a4-76cb-4b9d-b33a-53a66671edba"
		},
		{
			"deviceTime": "2014-08-31T11:10:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8fc31db-086f-487c-a88a-56d7fb0ecd93"
		},
		{
			"deviceTime": "2014-08-31T11:15:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88363d3f-59d4-41ff-a070-e5bad8fd9db1"
		},
		{
			"deviceTime": "2014-08-31T11:20:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cfdeb4f3-e2be-4e45-9448-84a2b1773ed3"
		},
		{
			"deviceTime": "2014-08-31T11:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b90ac747-d7f7-4d66-8fd1-175799c756c9"
		},
		{
			"deviceTime": "2014-08-31T11:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "364866c6-5732-4ce3-b711-14ce76307b17"
		},
		{
			"deviceTime": "2014-08-31T11:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9bbfb48-2f2d-4d82-a55d-5d904053762f"
		},
		{
			"deviceTime": "2014-08-31T11:40:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "876bf964-ad7b-4eac-8eb2-7b66ef47a67c"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-31T11:41:17",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "e383e3dc-c229-4ea2-84da-97baa07bd09b",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-08-31T10:24:17",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "8c70e384-10b5-4f22-a533-dfe045164f44"
			}
		},
		{
			"deviceTime": "2014-08-31T11:45:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbbab9b5-3068-49f5-b880-8a640cded837"
		},
		{
			"deviceTime": "2014-08-31T12:00:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af1248fa-186e-4d56-ac6f-fee915bcd687"
		},
		{
			"deviceTime": "2014-08-31T12:05:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fff8674a-3293-4f46-9ce1-4d9b1a537716"
		},
		{
			"deviceTime": "2014-08-31T12:10:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91eb7547-3d1c-46f6-9173-551446a8c933"
		},
		{
			"deviceTime": "2014-08-31T12:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9bd18ba-e9b0-4125-beda-2bfd1b8ddc47"
		},
		{
			"deviceTime": "2014-08-31T12:20:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6408f21d-0637-455f-ab3b-b10524c91edf"
		},
		{
			"deviceTime": "2014-08-31T12:25:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67cab2bc-f086-41ca-ae26-c2f40a68716d"
		},
		{
			"deviceTime": "2014-08-31T12:30:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00ae0aa2-6916-4cfe-9184-04f978fc39a5"
		},
		{
			"deviceTime": "2014-08-31T12:35:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "486bf1ea-fcd5-488b-895f-b8998ad92f60"
		},
		{
			"deviceTime": "2014-08-31T12:40:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36807872-491c-4665-adc5-079f57a0199b"
		},
		{
			"deviceTime": "2014-08-31T12:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3daedcec-aae2-4590-b0d6-53bea2af6790"
		},
		{
			"deviceTime": "2014-08-31T12:50:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a20c8fcc-982f-446f-a392-d5c2c0bcc1bf"
		},
		{
			"deviceTime": "2014-08-31T12:55:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55c58c56-f429-45c8-b376-b18b55f46997"
		},
		{
			"deviceTime": "2014-08-31T13:00:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d37d4a68-d3da-488c-8539-9f24776878a2"
		},
		{
			"deviceTime": "2014-08-31T13:05:22",
			"value": 59,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc5e86b1-c784-4759-be05-5a12b48dbb42"
		},
		{
			"deviceTime": "2014-08-31T13:10:22",
			"value": 57,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87c498bc-d832-487b-bfc3-684cc36e81f2"
		},
		{
			"deviceTime": "2014-08-31T13:15:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "77825a5a-255a-4b8f-8ed5-afd1b81b0941"
		},
		{
			"deviceTime": "2014-08-31T13:20:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2841295d-b7f1-4714-be80-cab07fdc62f0"
		},
		{
			"deviceTime": "2014-08-31T13:25:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "52ea3ca6-ceb1-4f82-baba-0729398b0139"
		},
		{
			"deviceTime": "2014-08-31T13:30:22",
			"value": 56,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "205b7f51-430b-4546-994c-52d5237323a4"
		},
		{
			"deviceTime": "2014-08-31T13:35:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b30cd21-640e-4061-810c-f3152a8d4429"
		},
		{
			"deviceTime": "2014-08-31T13:40:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eb4bbc7-44f2-472e-a78f-06a11188a902"
		},
		{
			"deviceTime": "2014-08-31T13:45:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53b55df9-6b97-4414-b0f6-941d4731a634"
		},
		{
			"deviceTime": "2014-08-31T13:50:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b23c45d8-a4f3-4cc7-8f35-6634594fbdf2"
		},
		{
			"deviceTime": "2014-08-31T13:55:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8c2e69f7-9ecd-4194-93d0-00be55aca7c0"
		},
		{
			"deviceTime": "2014-08-31T14:00:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "033d3584-ef2a-47ed-9e0b-e69ea7b45f36"
		},
		{
			"deviceTime": "2014-08-31T14:05:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6d4b53c-edc1-4f0f-8b20-ce05bd92e74f"
		},
		{
			"deviceTime": "2014-08-31T14:10:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7e063a2a-b253-431c-81fa-d3e1a1493a7b"
		},
		{
			"deviceTime": "2014-08-31T14:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e48840d6-b66e-4418-ae50-c5065eb4bc55"
		},
		{
			"deviceTime": "2014-08-31T14:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ce9a946-6271-4d2d-bbad-773177f89e5d"
		},
		{
			"deviceTime": "2014-08-31T14:25:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "078ad9c1-5f95-45e4-8d6c-dc5e0800f9fb"
		},
		{
			"deviceTime": "2014-08-31T14:30:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01a35fc0-9ec1-4fb6-814e-2adfd77460dd"
		},
		{
			"deviceTime": "2014-08-31T14:35:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b488b42-d1fc-4a24-ae8a-53c3c417bbd5"
		},
		{
			"deviceTime": "2014-08-31T14:40:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9df1405e-5e15-40bb-b5e3-693fd7eb1e19"
		},
		{
			"deviceTime": "2014-08-31T14:45:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34ce5654-737b-4268-9360-2e37e9ea8340"
		},
		{
			"deviceTime": "2014-08-31T14:50:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46574b54-2de8-42c5-8141-b9306c1cd24e"
		},
		{
			"deviceTime": "2014-08-31T14:55:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3d60283-6760-4796-90fe-a892edd6e9d7"
		},
		{
			"delivered": 0.9,
			"end": "2014-08-31T20:00:00",
			"start": "2014-08-31T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "879931c5-b992-4c36-9ec0-09e94b484cf2"
		},
		{
			"deviceTime": "2014-08-31T15:00:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eba71be4-77e7-4df5-b86f-237c84868448"
		},
		{
			"deviceTime": "2014-08-31T15:05:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "232c4f4e-2d24-4d68-b260-d6413f78fdce"
		},
		{
			"deviceTime": "2014-08-31T15:10:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7aca479-ee3f-43f9-ab89-f1d340abd145"
		},
		{
			"deviceTime": "2014-08-31T15:15:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d69f598-d3dc-4a59-9f7a-ef7eeeba5619"
		},
		{
			"deviceTime": "2014-08-31T15:20:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dca72510-02a0-4d02-be82-6403e7124948"
		},
		{
			"deviceTime": "2014-08-31T15:25:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "40cb7d6a-6d6e-49d4-875a-9a63f73ee2df"
		},
		{
			"deviceTime": "2014-08-31T15:30:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb573467-0b34-4c92-b038-a2a39a141fab"
		},
		{
			"deviceTime": "2014-08-31T15:35:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b76a11f-f33f-43b5-98c4-f67bfcf38319"
		},
		{
			"deviceTime": "2014-08-31T15:40:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c9c77909-24f9-4dd2-bba5-f6e8e1099da6"
		},
		{
			"deviceTime": "2014-08-31T15:45:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "57da1002-4c2d-4297-b20a-e2fe39dde5d8"
		},
		{
			"deviceTime": "2014-08-31T15:50:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d51ee1b-2046-4dd4-ae3e-96e58bdc4498"
		},
		{
			"deviceTime": "2014-08-31T15:55:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "10a3842f-b80a-494a-9624-cc63578df5ec"
		},
		{
			"deviceTime": "2014-08-31T16:00:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "caf11040-2b92-4906-850a-00a5348a0221"
		},
		{
			"deviceTime": "2014-08-31T16:05:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7d74135a-218e-4856-8f23-afc2e6b2b445"
		},
		{
			"deviceTime": "2014-08-31T16:10:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c821e09-c228-43bc-a97c-55397b2a98d5"
		},
		{
			"deviceTime": "2014-08-31T16:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94f02e8e-b737-4b6d-881f-ba96bb1f43ed"
		},
		{
			"deviceTime": "2014-08-31T16:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e71acdeb-772e-464f-96f0-6864e14834bd"
		},
		{
			"deviceTime": "2014-08-31T16:25:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c34c8db-6f94-47cf-83fe-32e8e7d598a1"
		},
		{
			"end": "2014-08-31T21:56:01",
			"start": "2014-08-31T16:26:01",
			"percent": 1.25,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 19800000,
			"type": "basal-rate-segment",
			"id": "b7818ce7-5cc1-4b1e-8d67-53318d828076"
		},
		{
			"deviceTime": "2014-08-31T16:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01788b69-4c37-43c9-bf66-f54331334ec6"
		},
		{
			"deviceTime": "2014-08-31T16:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5a7906c-977c-4ec2-961b-0a7e8b758961"
		},
		{
			"deviceTime": "2014-08-31T16:40:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ff75115-232e-444a-abad-1ab6eab7e1d6"
		},
		{
			"deviceTime": "2014-08-31T16:45:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "562c1201-cb55-4eda-81da-326ccea3589f"
		},
		{
			"deviceTime": "2014-08-31T16:50:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae7b401a-08ba-46a2-acba-78145675f91c"
		},
		{
			"deviceTime": "2014-08-31T16:55:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd265a48-6894-4f4c-a00c-f02bd9b5d440"
		},
		{
			"deviceTime": "2014-08-31T17:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1092995-c5ec-4bbd-ad59-9fe86ae217c8"
		},
		{
			"deviceTime": "2014-08-31T17:01:01",
			"value": 4.4,
			"source": "demo",
			"recommended": 5.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "1cd5a471-6a78-4c2b-b20d-5c6b1681bef8"
		},
		{
			"deviceTime": "2014-08-31T17:05:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6b3c494d-0a9b-4dbb-94c5-8a77d34ae35f"
		},
		{
			"deviceTime": "2014-08-31T17:10:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ced627c4-9a20-4532-9182-709cbe5d3e3c"
		},
		{
			"deviceTime": "2014-08-31T17:15:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c028ce8d-8ac1-4c1f-9761-e969381bedf7"
		},
		{
			"deviceTime": "2014-08-31T17:20:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb370fdb-7a86-4073-9c41-14eb1324c507"
		},
		{
			"deviceTime": "2014-08-31T17:25:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad12c93a-7be2-4e42-9514-0352d02b2608"
		},
		{
			"deviceTime": "2014-08-31T17:26:07",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ac0196fc-9122-4ab4-980a-657533f281af"
		},
		{
			"deviceTime": "2014-08-31T17:26:07",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "ebb5228b-ab51-404c-90c2-867a3c23d7e8"
		},
		{
			"deviceTime": "2014-08-31T17:26:07",
			"id": "ebb5228b-ab51-404c-90c2-867a3c23d7e8",
			"source": "demo",
			"joinKey": "450aaf3b-2be1-4ff6-a7e7-58822e2b11a1",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 39
			}
		},
		{
			"deviceTime": "2014-08-31T17:26:07",
			"suspendedAt": "2014-08-31T17:36:07",
			"programmed": 2.6,
			"joinKey": "450aaf3b-2be1-4ff6-a7e7-58822e2b11a1",
			"value": 0.1,
			"source": "demo",
			"recommended": 2.6,
			"extendedDelivery": 2.6,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "c06ec324-c0e0-4d50-8117-6a1da8f02d4d"
		},
		{
			"deviceTime": "2014-08-31T17:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd4513bc-0ff1-486d-86cd-9609838bc38b"
		},
		{
			"deviceTime": "2014-08-31T17:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d0b6fb1-d818-4da4-81cd-7ce96685dd20"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-08-31T17:36:07",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "c12746c1-c72d-430b-828e-c8479d91c57b"
		},
		{
			"deviceTime": "2014-08-31T17:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "799d4647-bf6e-49f6-a5d9-7a719a5a8d3b"
		},
		{
			"deviceTime": "2014-08-31T17:45:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "794d3696-9dd7-4b5e-a48c-1046bf07c99d"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-08-31T17:47:07",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "6e42b0c6-4372-42e6-bfa5-c83672de51f6",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-08-31T17:36:07",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "c12746c1-c72d-430b-828e-c8479d91c57b"
			}
		},
		{
			"deviceTime": "2014-08-31T17:50:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0b32661-d4bb-4b1d-bda3-0462c50c631c"
		},
		{
			"deviceTime": "2014-08-31T17:55:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fffb6700-36d6-480b-8deb-6bf300e87784"
		},
		{
			"deviceTime": "2014-08-31T18:00:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05590942-07bf-4090-986a-4992de43a22b"
		},
		{
			"deviceTime": "2014-08-31T18:05:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8287a674-a196-4b03-bc7d-af0756fa870b"
		},
		{
			"deviceTime": "2014-08-31T18:10:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3124414f-c6a1-48ba-8de1-a2e6e1977327"
		},
		{
			"deviceTime": "2014-08-31T18:15:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "840fce8c-541b-4a9b-bbbe-a98133788036"
		},
		{
			"deviceTime": "2014-08-31T18:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07e76b9b-090d-49ed-92a8-ca262a7d0260"
		},
		{
			"deviceTime": "2014-08-31T18:25:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "603217a5-5c65-4aa1-bac9-1776127228c2"
		},
		{
			"deviceTime": "2014-08-31T18:30:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79c98400-379e-4380-a1fa-da9eee4fd4ea"
		},
		{
			"deviceTime": "2014-08-31T18:35:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8d802434-1b66-4369-9f2e-f88bdee9885a"
		},
		{
			"deviceTime": "2014-08-31T18:40:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf7fa88b-74ef-4d82-a3da-4e3b8a42b399"
		},
		{
			"deviceTime": "2014-08-31T18:45:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32032766-a6f8-4920-b3a6-3c95dfcfa946"
		},
		{
			"deviceTime": "2014-08-31T18:50:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "796b0e44-c716-4bab-aa46-ceb4c2fca5fd"
		},
		{
			"deviceTime": "2014-08-31T18:55:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0163ff7-dff5-4c4c-827c-33941c2b62a7"
		},
		{
			"deviceTime": "2014-08-31T19:00:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d3f157e6-6318-46f9-a770-d909b18daf71"
		},
		{
			"deviceTime": "2014-08-31T19:05:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8cf3dd62-4e36-440b-b13e-be40583de5f0"
		},
		{
			"deviceTime": "2014-08-31T19:10:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b043bcc0-fff3-423b-9496-a61af122cd4a"
		},
		{
			"deviceTime": "2014-08-31T19:15:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "04915ab7-7450-4f6a-8d2e-2bb0cfb0690b"
		},
		{
			"deviceTime": "2014-08-31T19:50:22",
			"value": 71,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c071b04c-f0c1-4286-8dd7-9712db2da0da"
		},
		{
			"deviceTime": "2014-08-31T19:55:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2116f80b-f8a9-4c2d-96a5-bb6ce867b08f"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-01T00:00:00",
			"start": "2014-08-31T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "5488dc41-d55b-49e8-9fc9-a4f564ff94ab"
		},
		{
			"deviceTime": "2014-08-31T20:00:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45f4afa7-52ee-477c-a48c-f705d2167d3e"
		},
		{
			"deviceTime": "2014-08-31T20:05:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "659c86ac-754d-4b9d-8497-cf3e246084b8"
		},
		{
			"deviceTime": "2014-08-31T20:10:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "381c94d0-fe53-4003-9c1c-e021cd0a8564"
		},
		{
			"deviceTime": "2014-08-31T20:15:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cbab365-85eb-4c23-a50f-e5110c2927f4"
		},
		{
			"deviceTime": "2014-08-31T20:20:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "524ba43a-b3c3-4f04-bde8-ff32441a7958"
		},
		{
			"deviceTime": "2014-08-31T20:25:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e16f697b-7ae6-4863-b029-85df4916ce16"
		},
		{
			"deviceTime": "2014-08-31T20:30:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00ca2b8c-6ddc-47c2-98f0-8db6512beea8"
		},
		{
			"deviceTime": "2014-08-31T20:35:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a772ab8b-2db7-4144-bd6b-a133a4edbbce"
		},
		{
			"deviceTime": "2014-08-31T20:40:22",
			"value": 69,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e5400ef0-f36f-4938-adb5-0484521aa490"
		},
		{
			"deviceTime": "2014-08-31T20:45:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b040db09-36f5-48d8-8fb0-6671beb56b9a"
		},
		{
			"deviceTime": "2014-08-31T20:50:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "228158ae-a852-44ce-ab47-91520aef1b3b"
		},
		{
			"deviceTime": "2014-08-31T20:55:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "742ac723-005a-4452-9864-8eda35aa6afe"
		},
		{
			"deviceTime": "2014-08-31T21:00:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71ca08c2-647b-4772-9689-97f469ff0fc0"
		},
		{
			"deviceTime": "2014-08-31T21:05:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4c7c022-b155-415d-b593-d9b95f6ce256"
		},
		{
			"deviceTime": "2014-08-31T21:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "583e9f68-bee2-4d4f-85c9-15868628a9b7"
		},
		{
			"deviceTime": "2014-08-31T21:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db54d42e-514b-4dff-b835-7e90f5fec073"
		},
		{
			"deviceTime": "2014-08-31T21:20:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f753fe44-4121-4cbc-baa4-3ed083f73ae4"
		},
		{
			"deviceTime": "2014-08-31T21:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e071f972-59f0-4c37-a198-e0ab5a5be0ec"
		},
		{
			"deviceTime": "2014-08-31T21:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c10e575-d9df-49d3-8f95-26aa965cba3a"
		},
		{
			"deviceTime": "2014-08-31T21:35:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7c7ca585-4492-4930-9790-934e33c2b7d2"
		},
		{
			"deviceTime": "2014-08-31T21:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7dff24f4-7321-47c9-a35a-5a6a06d4b6f2"
		},
		{
			"deviceTime": "2014-08-31T21:45:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67ace14d-0f9c-4b3d-8f85-a416a24cc1e5"
		},
		{
			"deviceTime": "2014-08-31T21:50:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddd19533-b395-4679-8398-63921a4ee01a"
		},
		{
			"deviceTime": "2014-08-31T21:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4bf00131-ccf7-4108-a052-cc225a5bd96c"
		},
		{
			"deviceTime": "2014-08-31T22:00:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2f8274e2-d4af-4005-9c97-10d169ed54ce"
		},
		{
			"deviceTime": "2014-08-31T22:05:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8ea4fc5-f088-42a2-b9b2-5570c4a9e878"
		},
		{
			"deviceTime": "2014-08-31T22:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "161994b1-5c66-4042-af80-e2fc32debf24"
		},
		{
			"deviceTime": "2014-08-31T22:15:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "966891b9-7871-4ffb-aac1-2f32c157c1b7"
		},
		{
			"deviceTime": "2014-08-31T22:20:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d990bbb-d134-4f0c-bc01-7ff632f2e309"
		},
		{
			"deviceTime": "2014-08-31T22:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bd3fdc59-29ba-4c6b-b5d8-fe9e57a6735a"
		},
		{
			"deviceTime": "2014-08-31T22:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54fc241f-bcb4-4fd1-94a7-58b618260ae6"
		},
		{
			"deviceTime": "2014-08-31T22:35:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c72fb81-a61c-400e-abe0-074d06ea3bbc"
		},
		{
			"deviceTime": "2014-08-31T22:40:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54b83609-58e9-4486-90e3-0d369394092c"
		},
		{
			"deviceTime": "2014-08-31T22:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81e865ce-68b1-473a-9628-21901d07c1e6"
		},
		{
			"deviceTime": "2014-08-31T22:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7ebfa9e3-e3b8-4cd5-bc03-982f827f453d"
		},
		{
			"deviceTime": "2014-08-31T22:55:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f27c79d-5594-4ae9-ab24-4775f42984c1"
		},
		{
			"deviceTime": "2014-08-31T23:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b851c879-f270-45f8-a31a-a83c884ffdbf"
		},
		{
			"deviceTime": "2014-08-31T23:05:22",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6d76b17-4bcc-4b52-824e-1d5800df4eaa"
		},
		{
			"deviceTime": "2014-08-31T23:10:22",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "225550f1-6c2a-4418-95de-81f619165d3e"
		},
		{
			"deviceTime": "2014-08-31T23:15:22",
			"value": 50,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a696acd0-4328-497c-b0b2-f7f7409c722f"
		},
		{
			"deviceTime": "2014-08-31T23:20:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7ead09e-211e-4932-8f73-2cf792d8b3ec"
		},
		{
			"deviceTime": "2014-08-31T23:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ceca738c-5cd7-46e6-97c5-14679dbfdc0a"
		},
		{
			"deviceTime": "2014-08-31T23:30:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5c159cd-6598-4810-bc21-2335b48276e2"
		},
		{
			"deviceTime": "2014-08-31T23:35:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97bec709-8d89-4a82-b057-d40ec02050c4"
		},
		{
			"deviceTime": "2014-08-31T23:40:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e37a5d7c-0669-44b3-8485-6764e6906eba"
		},
		{
			"deviceTime": "2014-08-31T23:45:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "462adc14-d655-4175-b75a-8f6d9518daaa"
		},
		{
			"deviceTime": "2014-08-31T23:50:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f020db78-8aa2-4b98-be22-bd10bd469c75"
		},
		{
			"deviceTime": "2014-08-31T23:55:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9dfb8b1f-7211-4ad7-8b7c-623e64af7931"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-01T02:00:00",
			"start": "2014-09-01T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "45629578-592f-4f35-807e-533a881b3f91"
		},
		{
			"deviceTime": "2014-09-01T00:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6188dd86-652f-4126-84b2-593bfbd0b880"
		},
		{
			"deviceTime": "2014-09-01T00:05:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "179db532-9a44-474e-8462-7f5c20ff2b32"
		},
		{
			"deviceTime": "2014-09-01T00:10:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "99401898-092c-41da-a738-421bb42c7920"
		},
		{
			"deviceTime": "2014-09-01T00:15:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b462b105-5ae4-48f2-9a80-ae1dc6c299d2"
		},
		{
			"deviceTime": "2014-09-01T00:20:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6d02cae4-1859-4f8e-bb21-af17b6957810"
		},
		{
			"deviceTime": "2014-09-01T00:25:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6097698-ed2d-4952-9a1a-5c3563d94b67"
		},
		{
			"deviceTime": "2014-09-01T00:30:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9c567c4-cdf5-44b0-b066-7663bc08b368"
		},
		{
			"deviceTime": "2014-09-01T00:35:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f1b774f-8ec3-4dc0-8b64-b8ea400641da"
		},
		{
			"deviceTime": "2014-09-01T00:40:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8ad2c742-e011-4d64-9e8f-e7f52ec97032"
		},
		{
			"deviceTime": "2014-09-01T00:42:03",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4afaff12-433d-4ea5-a979-4c8d8eda2770"
		},
		{
			"deviceTime": "2014-09-01T00:42:03",
			"value": 48,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "65ab93a4-21b4-4e74-bf6c-5eb92e6acd86"
		},
		{
			"deviceTime": "2014-09-01T00:42:03",
			"id": "65ab93a4-21b4-4e74-bf6c-5eb92e6acd86",
			"source": "demo",
			"joinKey": "30a4c5f9-2d7a-4782-b8f8-13536e7d773a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 48
			}
		},
		{
			"deviceTime": "2014-09-01T00:42:03",
			"suspendedAt": "2014-09-01T00:57:03",
			"programmed": 3.2,
			"joinKey": "30a4c5f9-2d7a-4782-b8f8-13536e7d773a",
			"value": 3.2,
			"source": "demo",
			"recommended": 3.2,
			"extendedDelivery": 2.9,
			"initialDelivery": 0.3,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "71863b0c-0533-432f-91df-35a888c40510",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-09-01T00:45:22",
			"value": 166,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72f445cc-ba12-41bb-bf80-49b7f1722b0b"
		},
		{
			"deviceTime": "2014-09-01T00:50:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecddb7eb-3c0a-4c9f-b03c-2384a50c5083"
		},
		{
			"deviceTime": "2014-09-01T00:55:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f421d2d9-97e3-4a60-9667-96cb015537d2"
		},
		{
			"end": "2014-09-01T01:56:01",
			"start": "2014-09-01T00:56:01",
			"percent": 1.9,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "a3d8c138-6ee1-458c-b9eb-dc55694dc624"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-01T00:57:03",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "b7934446-94d6-405c-8533-a71f51d3c97b"
		},
		{
			"deviceTime": "2014-09-01T01:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4977db3-2d24-4f3e-85e0-175bbe2a2c5f"
		},
		{
			"deviceTime": "2014-09-01T01:05:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46b9adff-071a-4fb0-a592-5c7d63b55291"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-01T01:09:03",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "4327bee6-a6f6-4495-8fd2-f02351e09ca4",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-09-01T00:57:03",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "b7934446-94d6-405c-8533-a71f51d3c97b"
			}
		},
		{
			"deviceTime": "2014-09-01T01:10:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97c12fd5-c4dd-48ed-922c-08403e75fce1"
		},
		{
			"deviceTime": "2014-09-01T01:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88e0bd38-da80-4432-9a3e-a1db72ef7b0d"
		},
		{
			"deviceTime": "2014-09-01T01:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "89967b2f-15b2-42b7-8ad3-7cdee6bd18e5"
		},
		{
			"deviceTime": "2014-09-01T01:25:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eb5fc7de-8914-4948-aec6-238ed4b7b2c2"
		},
		{
			"deviceTime": "2014-09-01T01:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8423a921-398c-47cc-903e-173873ae363b"
		},
		{
			"deviceTime": "2014-09-01T01:35:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f171237f-2a21-4e4c-8c85-20875c7a410c"
		},
		{
			"deviceTime": "2014-09-01T01:40:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3bf2f157-35fa-492b-8f75-761f47e5007c"
		},
		{
			"deviceTime": "2014-09-01T01:45:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3ef70a5-deae-4c66-b80a-534a03ff5dd6"
		},
		{
			"deviceTime": "2014-09-01T01:50:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "444d9327-96f1-447d-a80c-193864898193"
		},
		{
			"deviceTime": "2014-09-01T01:55:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7889d2b8-3a2d-494e-8a8d-3d5c18fde8b9"
		},
		{
			"delivered": 0.65,
			"end": "2014-09-01T04:00:00",
			"start": "2014-09-01T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "2ce40c5c-0a0f-4a73-842f-09a1a0971a53"
		},
		{
			"deviceTime": "2014-09-01T02:00:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82626d39-a7a8-41e6-8891-2088bffb9367"
		},
		{
			"deviceTime": "2014-09-01T02:05:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3596f9e1-34d2-4121-86d6-a0fded65bd65"
		},
		{
			"deviceTime": "2014-09-01T02:10:22",
			"value": 179,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "72120432-9a70-43f9-98e1-4c562d1888ad"
		},
		{
			"deviceTime": "2014-09-01T02:15:22",
			"value": 182,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ede9affe-dc06-406e-be4e-5f374117cf0c"
		},
		{
			"deviceTime": "2014-09-01T02:20:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2523285-84e8-4ca4-81e9-a516bbfff1ff"
		},
		{
			"deviceTime": "2014-09-01T02:25:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34c2529f-7ac3-4827-b153-5885c6e1a90f"
		},
		{
			"deviceTime": "2014-09-01T02:30:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "670a3cb3-2b94-493d-a3db-91914c8748b9"
		},
		{
			"deviceTime": "2014-09-01T02:35:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c36654f-dc60-44e5-9681-e2ebe42650f6"
		},
		{
			"deviceTime": "2014-09-01T02:40:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afbba522-9160-41c6-b19d-65a325eba3ad"
		},
		{
			"deviceTime": "2014-09-01T02:45:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85b1ab25-adc2-48d0-833f-c74da1339eb5"
		},
		{
			"deviceTime": "2014-09-01T02:50:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f57c10cc-2c01-4997-906f-33357b51ab1a"
		},
		{
			"deviceTime": "2014-09-01T02:55:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "067a84db-816d-43ab-addc-6e7f7792c743"
		},
		{
			"deviceTime": "2014-09-01T03:00:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "252e4bfc-177f-42ac-b70c-e8f668d01950"
		},
		{
			"deviceTime": "2014-09-01T03:05:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37ef8238-1003-4504-94fa-a66ebe5dc7c8"
		},
		{
			"deviceTime": "2014-09-01T03:10:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3c5ac41-1825-4fee-a12c-3e70228c7425"
		},
		{
			"deviceTime": "2014-09-01T03:15:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f4d64a00-9215-4227-ae69-8f22741a9c9f"
		},
		{
			"deviceTime": "2014-09-01T03:20:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f886fa11-b94b-4478-b1f0-df68d96cc4d2"
		},
		{
			"deviceTime": "2014-09-01T03:25:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "afa9689c-3651-4aee-9f10-8c03d67972ab"
		},
		{
			"deviceTime": "2014-09-01T03:30:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f6480eb-dc60-408e-a5da-84491edd090b"
		},
		{
			"deviceTime": "2014-09-01T03:35:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "875c48e5-dc0f-462e-80cf-bfce4f9e3e68"
		},
		{
			"deviceTime": "2014-09-01T03:40:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13ea9758-be29-41a4-bf52-d4bca3e22631"
		},
		{
			"deviceTime": "2014-09-01T03:45:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcb70c1a-4b13-4c9e-9773-f60c9a3fa3f1"
		},
		{
			"deviceTime": "2014-09-01T03:50:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1f525d5d-d89f-4b28-b8e7-f4edce963e1a"
		},
		{
			"deviceTime": "2014-09-01T03:55:22",
			"value": 196,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74646ed7-183b-4493-a54f-116052c2abf5"
		},
		{
			"delivered": 0.75,
			"end": "2014-09-01T05:00:00",
			"start": "2014-09-01T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "2884fe9c-1c02-4a10-a5ad-e937f7e5792c"
		},
		{
			"deviceTime": "2014-09-01T04:00:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1de9e74-6f1d-4168-827f-84dde6bc0e5c"
		},
		{
			"deviceTime": "2014-09-01T04:05:22",
			"value": 192,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5538b119-5511-4496-bfa8-72fe600289e1"
		},
		{
			"deviceTime": "2014-09-01T04:10:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dc01c3af-4c34-4f6a-8620-d77daee44f7b"
		},
		{
			"deviceTime": "2014-09-01T04:15:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6733430-c49b-4ef3-8af4-b5d4759703dc"
		},
		{
			"deviceTime": "2014-09-01T04:20:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df81070d-e6fe-4d30-9e93-1fa92be08dfa"
		},
		{
			"deviceTime": "2014-09-01T04:25:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddb5c107-0750-43f3-bad4-320f8eb6dd7d"
		},
		{
			"deviceTime": "2014-09-01T04:30:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d58228fd-a221-4229-a364-0514e151c52a"
		},
		{
			"deviceTime": "2014-09-01T04:35:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a61bd490-dbc9-4c6b-a8e0-39945bf29d6d"
		},
		{
			"deviceTime": "2014-09-01T04:40:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8681eb26-1282-4df0-817d-b8ad5f25ba04"
		},
		{
			"deviceTime": "2014-09-01T04:45:22",
			"value": 193,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "703173a1-18c6-474f-9d28-6eedc9f2c9f8"
		},
		{
			"deviceTime": "2014-09-01T04:50:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f405a38e-e3ba-4d2c-810f-7bd68468129f"
		},
		{
			"deviceTime": "2014-09-01T04:55:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "abb51e71-2d70-4045-aef8-79541da59e19"
		},
		{
			"delivered": 0.85,
			"end": "2014-09-01T06:00:00",
			"start": "2014-09-01T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"id": "739cac8f-ec9f-4087-8084-f347311c41e0",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-09-01T05:00:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3077c026-61d8-430c-9010-45fb1ac0b0d1"
		},
		{
			"deviceTime": "2014-09-01T05:04:01",
			"value": 2.6,
			"source": "demo",
			"recommended": 2.6,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "103fae0c-4759-41b2-b777-20131b429ec9"
		},
		{
			"deviceTime": "2014-09-01T05:05:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "432ab928-0cd1-4322-9de2-af671f8ee0bb"
		},
		{
			"deviceTime": "2014-09-01T05:10:22",
			"value": 180,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df628ee2-543d-4350-acb9-1032a67782aa"
		},
		{
			"deviceTime": "2014-09-01T05:15:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6261bd0a-c365-4652-8d76-874c923ee2e3"
		},
		{
			"deviceTime": "2014-09-01T05:20:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7538d2fe-e637-4cad-880e-741178af6638"
		},
		{
			"deviceTime": "2014-09-01T05:25:22",
			"value": 178,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74bd5679-45e7-439f-8050-1d0409ee329c"
		},
		{
			"deviceTime": "2014-09-01T05:30:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd1e5788-6d7c-47dd-94f3-f0d49ec08c3c"
		},
		{
			"deviceTime": "2014-09-01T05:35:22",
			"value": 176,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0f267f8-ec1a-4ab1-ae10-be0f66e1781c"
		},
		{
			"deviceTime": "2014-09-01T05:40:22",
			"value": 175,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e3f3bd7-0d0a-4785-84c0-a364799c7e44"
		},
		{
			"deviceTime": "2014-09-01T05:45:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f607bde-053e-49ac-a005-2b5d670f146f"
		},
		{
			"deviceTime": "2014-09-01T05:46:06",
			"value": 194,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "93a388fb-1432-4284-a2ec-4477985218b4"
		},
		{
			"deviceTime": "2014-09-01T05:46:06",
			"value": 39,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "39490585-8876-4edc-afca-7b5e403cad0e"
		},
		{
			"deviceTime": "2014-09-01T05:46:06",
			"id": "39490585-8876-4edc-afca-7b5e403cad0e",
			"source": "demo",
			"joinKey": "a95a8c7a-62df-4275-a4a3-35a231a67e98",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 39
			}
		},
		{
			"deviceTime": "2014-09-01T05:46:06",
			"suspendedAt": "2014-09-01T06:46:06",
			"programmed": 2.6,
			"joinKey": "a95a8c7a-62df-4275-a4a3-35a231a67e98",
			"value": 0.5,
			"source": "demo",
			"recommended": 2.6,
			"extendedDelivery": 0.5,
			"initialDelivery": 2.1,
			"duration": 7200000,
			"extended": true,
			"type": "bolus",
			"id": "65eed044-6088-4714-9dc9-9ddafb96141b",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-09-01T05:50:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5a30a687-4b94-46c9-8126-26d96468c298"
		},
		{
			"deviceTime": "2014-09-01T05:55:22",
			"value": 169,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71eea092-ff71-4963-9c50-217a957cae88"
		},
		{
			"delivered": 1,
			"end": "2014-09-01T09:00:00",
			"start": "2014-09-01T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "18a629ec-8625-460c-959b-bb2690eccf4c"
		},
		{
			"deviceTime": "2014-09-01T06:00:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2326f079-be3f-4f64-9004-e7c9c86d9148"
		},
		{
			"deviceTime": "2014-09-01T06:05:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2fac22e1-7cdb-49ee-b484-4a0c9dbbc032"
		},
		{
			"deviceTime": "2014-09-01T06:10:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d81e1933-8279-443c-bb8f-04b8c7b83991"
		},
		{
			"deviceTime": "2014-09-01T06:15:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ea79aec-b57d-4a3f-ab29-133eb74df0ef"
		},
		{
			"deviceTime": "2014-09-01T06:20:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eebb51eb-75a2-4c32-8674-07a2f64bc9ad"
		},
		{
			"deviceTime": "2014-09-01T06:25:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0dddd6db-bba5-4659-8536-a9786cf3afff"
		},
		{
			"deviceTime": "2014-09-01T06:30:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "050ffda7-6212-433d-9eef-17ef878d16f9"
		},
		{
			"deviceTime": "2014-09-01T06:31:19",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ab3819f0-85e6-4e65-aa45-634e5f3d800c"
		},
		{
			"deviceTime": "2014-09-01T06:31:19",
			"value": 62,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "8b52e760-3cc6-48a8-a35d-b4863feda610"
		},
		{
			"deviceTime": "2014-09-01T06:31:19",
			"id": "8b52e760-3cc6-48a8-a35d-b4863feda610",
			"source": "demo",
			"joinKey": "642d2160-c573-4372-9c48-6504450cfc55",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 62
			}
		},
		{
			"deviceTime": "2014-09-01T06:31:19",
			"programmed": 4.1,
			"joinKey": "642d2160-c573-4372-9c48-6504450cfc55",
			"value": 0.6,
			"source": "demo",
			"recommended": 4.1,
			"extendedDelivery": 0.4,
			"initialDelivery": 3.7,
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "84252507-72ed-4f85-9ca0-d9fe777523dc",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-09-01T06:35:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "223ce249-4076-4fa1-9390-5ab7d78ac426"
		},
		{
			"deviceTime": "2014-09-01T06:40:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f0c32fe-a137-4853-9f84-098bba42ceb4"
		},
		{
			"deviceTime": "2014-09-01T06:45:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4c5f15f-ced2-4411-bef9-e8b24b34f756"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-01T06:46:06",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "6d573247-f32c-44f9-a3e3-62b7290bd33a"
		},
		{
			"deviceTime": "2014-09-01T06:50:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "af774bb9-65fc-425b-8ac0-50c18f974dac"
		},
		{
			"deviceTime": "2014-09-01T06:55:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b28ee9f2-03dd-44e8-a595-fd51b5049207"
		},
		{
			"deviceTime": "2014-09-01T07:00:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "18b0ccfb-7d2f-4611-9348-faef6945f312"
		},
		{
			"deviceTime": "2014-09-01T07:05:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7bab666c-0e9c-4e5e-8ab4-8c6de00a2fea"
		},
		{
			"deviceTime": "2014-09-01T07:10:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4eff4d71-6be0-4628-a86f-e7c6a9182bff"
		},
		{
			"deviceTime": "2014-09-01T07:15:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dddebfb3-082c-4b7f-90a9-9f8e35edfc50"
		},
		{
			"deviceTime": "2014-09-01T07:20:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e48239e6-db2b-43f3-873b-6868f00d192b"
		},
		{
			"deviceTime": "2014-09-01T07:25:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "999db37f-6d07-4ffe-8215-3ca6a9844c2d"
		},
		{
			"deviceTime": "2014-09-01T07:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84702e17-731d-410e-8f84-f34409552c8e"
		},
		{
			"deviceTime": "2014-09-01T07:35:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96a330ba-ea35-474d-8592-c97ba8b1f14b"
		},
		{
			"deviceTime": "2014-09-01T07:40:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f62ba6c-565f-467e-8110-7cad78454359"
		},
		{
			"deviceTime": "2014-09-01T07:45:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8376a7d0-b54b-4fb8-a642-e561a10095ad"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-01T07:48:06",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "61759d3b-7e0f-4004-b567-87503c9bec9b",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-09-01T06:46:06",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "6d573247-f32c-44f9-a3e3-62b7290bd33a"
			}
		},
		{
			"deviceTime": "2014-09-01T07:50:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4692a2e8-5742-4e63-a7cc-6144a433c101"
		},
		{
			"deviceTime": "2014-09-01T07:55:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f2faa41a-d38b-4865-a29f-acde4ded3b99"
		},
		{
			"deviceTime": "2014-09-01T08:00:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9d791de-edcc-4272-b11f-a9858d518638"
		},
		{
			"deviceTime": "2014-09-01T08:05:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d08ad331-1c16-4772-b8fc-1a70a165e835"
		},
		{
			"deviceTime": "2014-09-01T08:10:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5029b324-cbae-41af-bb4b-b5860d6b2685"
		},
		{
			"deviceTime": "2014-09-01T08:15:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71f75cc7-4991-476a-845d-71aca272deb4"
		},
		{
			"deviceTime": "2014-09-01T08:20:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e361521-8b81-4ac1-9fdb-fffa5728738c"
		},
		{
			"deviceTime": "2014-09-01T08:25:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e9e0bd89-eab0-4ebe-930e-817af9380404"
		},
		{
			"deviceTime": "2014-09-01T08:30:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db68fb31-b442-48ac-9ed0-d8ae48758e05"
		},
		{
			"deviceTime": "2014-09-01T08:35:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f8d4d82-8efe-4ad0-a7df-ab0ba90247f0"
		},
		{
			"deviceTime": "2014-09-01T08:40:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b61bd4e-ce5c-4692-bec8-ef940a1be1a3"
		},
		{
			"deviceTime": "2014-09-01T08:45:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01345392-46c4-43b6-a5b3-3b33858cc8e5"
		},
		{
			"deviceTime": "2014-09-01T08:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b60b4ac-175e-40dd-b2e0-fa06ec55cff6"
		},
		{
			"deviceTime": "2014-09-01T08:55:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0ee89f29-000e-4ef4-8634-93d528f8a114"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-01T15:00:00",
			"start": "2014-09-01T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "42248d78-c0ae-4ff7-ae95-bf5a34fd66e7"
		},
		{
			"deviceTime": "2014-09-01T09:00:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c42359de-57ac-4cc5-8ab3-59dfec296bdc"
		},
		{
			"deviceTime": "2014-09-01T09:05:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b4d67c3d-6afe-4bcc-90e0-0e2c72848d5b"
		},
		{
			"deviceTime": "2014-09-01T09:10:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8260e469-5d9d-4757-a796-517bedd8f46a"
		},
		{
			"deviceTime": "2014-09-01T09:15:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6db984a-bbdc-4a77-823c-762572d86f29"
		},
		{
			"deviceTime": "2014-09-01T09:20:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8976054a-da3c-4e31-83a3-64f12a979e16"
		},
		{
			"messageText": "In elit jowl pork loin, proident jerky veniam pork t-bone beef. Consequat meatball enim cow jowl shankle pastrami, pork flank chicken pariatur andouille est.",
			"parentMessage": "",
			"utcTime": "2014-09-01T09:24:12Z",
			"type": "message",
			"id": "a33944be-076c-4af1-9e24-cd7bd55bdc0c"
		},
		{
			"deviceTime": "2014-09-01T09:25:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9a2d1bd-abe3-4516-8a49-ddaef71d11a0"
		},
		{
			"deviceTime": "2014-09-01T09:30:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "79e3b0eb-db69-4274-a478-fd725e2f06ad"
		},
		{
			"deviceTime": "2014-09-01T09:35:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca4b2129-c2c4-412c-82ca-70e344e3ec82"
		},
		{
			"deviceTime": "2014-09-01T09:40:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b27e6b1f-58dc-450c-a218-4815d3173c5f"
		},
		{
			"deviceTime": "2014-09-01T09:45:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8154250-bfaa-45a3-b182-94bfad5e9569"
		},
		{
			"deviceTime": "2014-09-01T09:50:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de8a7e5d-c88a-45b9-8617-72382218bf15"
		},
		{
			"deviceTime": "2014-09-01T09:55:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c94432e8-6dac-45a0-b65a-5fa1a6845796"
		},
		{
			"deviceTime": "2014-09-01T10:00:22",
			"value": 157,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ba151aa-5266-4051-bde9-02f393dc5b3e"
		},
		{
			"deviceTime": "2014-09-01T10:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "80e5c67d-4991-4cb5-8c2f-de18bc2bdc8d"
		},
		{
			"deviceTime": "2014-09-01T10:10:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6e07a17f-7d7a-4f6e-8f85-cb269b0d0461"
		},
		{
			"deviceTime": "2014-09-01T10:15:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f590836-31fb-424d-8e1b-8d9a61c72655"
		},
		{
			"deviceTime": "2014-09-01T10:20:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fdf4bdf-c797-4db6-8a61-482362a75736"
		},
		{
			"deviceTime": "2014-09-01T10:25:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27327e62-1cfe-489e-b1dc-591cca9ff2b1"
		},
		{
			"deviceTime": "2014-09-01T10:30:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b561785-786c-42f5-a1c6-8f12e230934b"
		},
		{
			"deviceTime": "2014-09-01T11:00:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98032421-3473-47bc-80db-f567cc2c7184"
		},
		{
			"deviceTime": "2014-09-01T11:03:51",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "1513d5b8-648a-4ec5-a791-92d2e3813e97"
		},
		{
			"deviceTime": "2014-09-01T11:03:51",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "6a2d0f33-6f82-4f41-af98-a3d12e4cbce7"
		},
		{
			"deviceTime": "2014-09-01T11:03:51",
			"id": "6a2d0f33-6f82-4f41-af98-a3d12e4cbce7",
			"source": "demo",
			"joinKey": "d5043636-3cbe-42c4-87a1-4f718a5d60e6",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 72
			}
		},
		{
			"deviceTime": "2014-09-01T11:03:51",
			"programmed": 4.8,
			"joinKey": "d5043636-3cbe-42c4-87a1-4f718a5d60e6",
			"value": 4.8,
			"source": "demo",
			"recommended": 4.8,
			"extendedDelivery": 3.4,
			"initialDelivery": 1.4,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "9117c761-b799-41e9-ba1c-84417fe5d62f",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-09-01T11:05:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15db7d5e-fa49-4713-997b-c6aa6a495de1"
		},
		{
			"deviceTime": "2014-09-01T11:10:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d033ec7-70e6-4d8a-ab7e-1c218f19571d"
		},
		{
			"deviceTime": "2014-09-01T11:15:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb07016c-1f22-4abe-91a0-849aa2f3d0b2"
		},
		{
			"deviceTime": "2014-09-01T11:20:22",
			"value": 163,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcbe0211-a38b-4c35-8e56-4d9bbaf18ecb"
		},
		{
			"deviceTime": "2014-09-01T11:38:20",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3bfc8aa9-efc9-44bc-87dc-1c354a83b6ae"
		},
		{
			"deviceTime": "2014-09-01T11:38:20",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "21284977-cecf-4bd9-9edd-e89d782a1099"
		},
		{
			"deviceTime": "2014-09-01T11:38:20",
			"id": "21284977-cecf-4bd9-9edd-e89d782a1099",
			"source": "demo",
			"joinKey": "43dfca18-3df5-4825-99f1-5ceba0b6c6f3",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 61
			}
		},
		{
			"deviceTime": "2014-09-01T11:38:20",
			"programmed": 4.1,
			"joinKey": "43dfca18-3df5-4825-99f1-5ceba0b6c6f3",
			"value": 4.1,
			"source": "demo",
			"recommended": 4.1,
			"extendedDelivery": 4.1,
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"extended": true,
			"type": "bolus",
			"id": "72ad040c-5bfb-43c3-a049-8fa83d18adef"
		},
		{
			"deviceTime": "2014-09-01T11:40:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74f85c2e-5e6a-47e4-ba35-60e06779282c"
		},
		{
			"deviceTime": "2014-09-01T11:45:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65dace5a-cd58-4557-8f13-6e9c15e3ed28"
		},
		{
			"deviceTime": "2014-09-01T11:50:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca49909e-552e-46c0-8ba8-f9fd63c5ef98"
		},
		{
			"deviceTime": "2014-09-01T11:55:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96e2e005-1354-4c70-bf75-9e78a9eeee42"
		},
		{
			"deviceTime": "2014-09-01T12:00:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8221cfd8-3b46-4f38-bbc2-c378ea9bc02d"
		},
		{
			"deviceTime": "2014-09-01T12:05:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec9ef268-0f03-4405-a934-1b2371c1b12a"
		},
		{
			"deviceTime": "2014-09-01T12:10:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a52ad618-3bfc-4b4e-9eef-e2364b33660d"
		},
		{
			"deviceTime": "2014-09-01T12:15:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f82200f-48be-4b64-b835-e7a3f6c1dff2"
		},
		{
			"deviceTime": "2014-09-01T12:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8aa50e6d-f918-40b4-9cb6-fbe62ff128b6"
		},
		{
			"deviceTime": "2014-09-01T12:25:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "546f1427-1b9d-48f0-a4ec-d77b122501ed"
		},
		{
			"end": "2014-09-01T15:29:01",
			"start": "2014-09-01T12:29:01",
			"percent": 1.5,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "b3827344-7882-4f29-8bdd-ada850e68351"
		},
		{
			"deviceTime": "2014-09-01T13:00:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "65f4d767-badd-4700-adfe-a3386376a2f9"
		},
		{
			"deviceTime": "2014-09-01T13:05:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "00c07273-8f08-4150-aefa-afe9dc8adb31"
		},
		{
			"deviceTime": "2014-09-01T13:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3f92e8c-c9c4-4b46-a35e-c586ee290b01"
		},
		{
			"deviceTime": "2014-09-01T13:30:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1ae3cfea-2dd2-4d3c-8d3b-8fc3b9214e96"
		},
		{
			"deviceTime": "2014-09-01T13:35:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3f1443a4-47fd-4c25-a436-94fc7dc810bb"
		},
		{
			"deviceTime": "2014-09-01T13:40:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b535ccdf-80f4-4d71-9e6c-ed55006da1ec"
		},
		{
			"deviceTime": "2014-09-01T13:45:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f8f921a5-b5c3-493f-813e-a88f2340cbf8"
		},
		{
			"deviceTime": "2014-09-01T13:50:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86b1a702-fe4e-43f7-bffa-37f8974fc8a2"
		},
		{
			"deviceTime": "2014-09-01T13:55:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e0545a1-61e4-4487-8db9-00b2eede39fc"
		},
		{
			"deviceTime": "2014-09-01T14:00:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f702601a-e134-4011-92db-8bf8c4ffa0c1"
		},
		{
			"deviceTime": "2014-09-01T14:05:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61504946-0ae3-430b-9204-75c74fce3f74"
		},
		{
			"deviceTime": "2014-09-01T14:10:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "958cd1c1-2255-4dcb-b371-0bb1b3ccfa4e"
		},
		{
			"deviceTime": "2014-09-01T14:15:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67133385-d34e-41ff-a839-d9dfdee2695f"
		},
		{
			"deviceTime": "2014-09-01T14:19:04",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "d76fcea4-fc15-47af-9961-c61df2a28372"
		},
		{
			"deviceTime": "2014-09-01T14:19:04",
			"value": 55,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "74ae7b8f-5750-466e-bcb3-823f62afe1cc"
		},
		{
			"deviceTime": "2014-09-01T14:19:04",
			"id": "74ae7b8f-5750-466e-bcb3-823f62afe1cc",
			"source": "demo",
			"joinKey": "bd8497c6-074f-4b64-9b79-46f5c90566d4",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 55
			}
		},
		{
			"deviceTime": "2014-09-01T14:19:04",
			"suspendedAt": "2014-09-01T16:19:04",
			"programmed": 3.7,
			"joinKey": "bd8497c6-074f-4b64-9b79-46f5c90566d4",
			"value": 0.9,
			"source": "demo",
			"recommended": 3.7,
			"extendedDelivery": 3.7,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "11aec15b-2424-47e3-969d-1d115fe016f5"
		},
		{
			"deviceTime": "2014-09-01T14:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20fe937e-79b5-443f-a64c-b64cb9d93697"
		},
		{
			"deviceTime": "2014-09-01T14:25:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6de9cc2-8b06-490e-a074-fb6fd751279f"
		},
		{
			"deviceTime": "2014-09-01T14:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6005907-2ff1-407e-a813-f4dda2d8db7a"
		},
		{
			"deviceTime": "2014-09-01T14:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4552b118-9ee8-4ff4-8745-3d523213300d"
		},
		{
			"deviceTime": "2014-09-01T14:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74108b89-e6c4-4296-a23d-9f876dea4174"
		},
		{
			"deviceTime": "2014-09-01T14:45:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3312256c-0b53-4977-b5de-a48b1c0093c6"
		},
		{
			"deviceTime": "2014-09-01T14:50:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e9b53ec-db64-48e1-b445-4d090868feff"
		},
		{
			"deviceTime": "2014-09-01T14:55:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ca67525d-2d70-4554-87dd-b60851e563df"
		},
		{
			"delivered": 0.9,
			"end": "2014-09-01T20:00:00",
			"start": "2014-09-01T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "e241c066-ab34-40ba-9e16-95e2d4bcf744"
		},
		{
			"deviceTime": "2014-09-01T15:00:22",
			"value": 65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0053957-2b9f-4905-9e28-10d4be3a8c1b"
		},
		{
			"deviceTime": "2014-09-01T15:05:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e18b1918-f3df-44b3-85a1-157e390b5424"
		},
		{
			"deviceTime": "2014-09-01T15:10:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78c6eadd-7fbe-4a80-b8ee-ad3a5b8c4816"
		},
		{
			"deviceTime": "2014-09-01T15:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3148ce7f-24fd-4629-9f5a-e6bb6b65eee1"
		},
		{
			"deviceTime": "2014-09-01T15:20:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d23249c9-0ef0-432d-bc48-902ad610a31e"
		},
		{
			"deviceTime": "2014-09-01T15:55:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5b26fc65-bbb1-431b-ac2b-33af937ee623"
		},
		{
			"deviceTime": "2014-09-01T16:00:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5fb7e483-086c-4345-85bf-b74ff2208251"
		},
		{
			"deviceTime": "2014-09-01T16:05:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "678dbb44-897f-4ddc-bd8d-e5ca945f908a"
		},
		{
			"deviceTime": "2014-09-01T16:10:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9156cc25-bc60-4b73-afbe-ce5f83fb774b"
		},
		{
			"deviceTime": "2014-09-01T16:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e1d5454-ba85-40bd-8dea-88541d3060b2"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-01T16:19:04",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "69d409eb-292e-44c3-8447-8736cc1efd77"
		},
		{
			"deviceTime": "2014-09-01T16:20:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ca0fa05-2e19-45f5-95a7-8032451ac54e"
		},
		{
			"deviceTime": "2014-09-01T16:25:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba74f001-c04c-468d-bd87-864c6b79cfe8"
		},
		{
			"deviceTime": "2014-09-01T16:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d93e42c7-64c9-43e9-8186-0ec117c9cbdb"
		},
		{
			"deviceTime": "2014-09-01T16:35:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5313d3a9-1d3a-42a0-ac27-8c530bbcc7f6"
		},
		{
			"deviceTime": "2014-09-01T16:40:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5e357b5-274e-4af0-ba4b-90fa5a92e7f0"
		},
		{
			"deviceTime": "2014-09-01T16:45:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b2943a4-c680-47f5-a6a1-e8c7b1e926b4"
		},
		{
			"deviceTime": "2014-09-01T16:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3a8d55e0-e42b-41c2-87d9-a9b8f73b0f48"
		},
		{
			"deviceTime": "2014-09-01T16:55:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4aaf159c-ded3-4400-89ab-faad81561f07"
		},
		{
			"deviceTime": "2014-09-01T17:00:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9cba53b0-4682-4fe0-90af-1d0ae18a89c9"
		},
		{
			"deviceTime": "2014-09-01T17:08:01",
			"value": 8,
			"source": "demo",
			"recommended": 8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "2dba946f-6d99-4f30-864a-63822c239e99"
		},
		{
			"deviceTime": "2014-09-01T17:15:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2623f775-bb57-4560-a6ea-616501034d58"
		},
		{
			"deviceTime": "2014-09-01T17:35:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bceca506-7351-402f-96d2-5461c3e63e32"
		},
		{
			"deviceTime": "2014-09-01T17:40:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8041a4be-5c42-4df8-bbf9-e4ec2c3c88b0"
		},
		{
			"deviceTime": "2014-09-01T17:45:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6fa5945-e0ec-4fa7-887b-8c44a0d3618e"
		},
		{
			"deviceTime": "2014-09-01T17:50:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ff9f8974-3985-431c-bab5-c5e2f7a7d13a"
		},
		{
			"deviceTime": "2014-09-01T17:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efe3c744-22c3-4ac0-9a98-d0e3c1945f0e"
		},
		{
			"deviceTime": "2014-09-01T18:00:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f5b8270d-1140-409d-8090-7aaea3184b94"
		},
		{
			"deviceTime": "2014-09-01T18:05:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "20903c88-dd4a-48c9-bb28-1ff0fc2404de"
		},
		{
			"deviceTime": "2014-09-01T18:10:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64ef4fe5-b83a-43ce-9ec6-b03620ec05e3"
		},
		{
			"deviceTime": "2014-09-01T18:15:22",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e1ce9fe4-f407-4e86-a032-40e68cb215e0"
		},
		{
			"deviceTime": "2014-09-01T18:20:22",
			"value": 171,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35db41f4-67c5-4f33-89bc-a24f4712ea47"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-01T18:23:04",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "e17dd72a-a8fa-4d4b-8995-da42c2a9ab61",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-09-01T16:19:04",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "69d409eb-292e-44c3-8447-8736cc1efd77"
			}
		},
		{
			"deviceTime": "2014-09-01T18:25:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a27914b-adb7-4f48-bb14-6849855554eb"
		},
		{
			"deviceTime": "2014-09-01T18:30:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3169e961-a2b4-46f0-92ad-129378f770dd"
		},
		{
			"deviceTime": "2014-09-01T18:35:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b3a0dde-4f5e-4b6a-acaa-972287cb163b"
		},
		{
			"deviceTime": "2014-09-01T18:40:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "15d19cf6-c159-4d6b-aa75-79d02adcc690"
		},
		{
			"deviceTime": "2014-09-01T18:45:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efeb8613-749b-4879-807e-8f92880899c0"
		},
		{
			"deviceTime": "2014-09-01T18:50:22",
			"value": 289,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f912100-76fb-48de-b0b9-3daf9d277d6b"
		},
		{
			"deviceTime": "2014-09-01T18:55:22",
			"value": 302,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d020eada-e88d-4271-9ba8-f37e07e8a46d"
		},
		{
			"deviceTime": "2014-09-01T19:00:22",
			"value": 274,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3603817c-0180-4790-aea7-7eacc9370e24"
		},
		{
			"deviceTime": "2014-09-01T19:05:22",
			"value": 280,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4be9c21d-48e3-4c24-a478-d72d9c0156ce"
		},
		{
			"deviceTime": "2014-09-01T19:10:22",
			"value": 283,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e050c4e9-92f8-4fb8-8e7a-9672b8e39df6"
		},
		{
			"deviceTime": "2014-09-01T19:45:22",
			"value": 283,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf6c2547-59be-4481-a99f-5e618fe4d18e"
		},
		{
			"deviceTime": "2014-09-01T19:50:22",
			"value": 286,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdbc834b-5e90-4284-a4b7-4d244e7b0d7c"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-02T00:00:00",
			"start": "2014-09-01T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "ea746e21-cf5e-4ae0-a89c-74cc03dea36a"
		},
		{
			"deviceTime": "2014-09-01T20:10:22",
			"value": 285,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "87e9fec5-7947-490b-9509-a997447dd19f"
		},
		{
			"deviceTime": "2014-09-01T20:15:22",
			"value": 286,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "86059fdc-1e97-48b7-914c-b7cdb75c6616"
		},
		{
			"deviceTime": "2014-09-01T20:20:22",
			"value": 286,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1a2161d2-8668-46f2-92a6-9fa6bd52837b"
		},
		{
			"deviceTime": "2014-09-01T20:25:22",
			"value": 309,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5216120d-0191-41b6-b7a2-8c607b33a47c"
		},
		{
			"deviceTime": "2014-09-01T20:26:28",
			"value": 299,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "dc88a45f-f538-4dd1-9a83-113850dbbffe"
		},
		{
			"deviceTime": "2014-09-01T20:26:28",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a51b3c63-fc73-46eb-abed-34607876c62b"
		},
		{
			"deviceTime": "2014-09-01T20:26:28",
			"id": "a51b3c63-fc73-46eb-abed-34607876c62b",
			"source": "demo",
			"joinKey": "5fc70c22-4d37-4900-baeb-36335eaa1d4d",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 45
			}
		},
		{
			"deviceTime": "2014-09-01T20:26:28",
			"programmed": 3,
			"joinKey": "5fc70c22-4d37-4900-baeb-36335eaa1d4d",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "21ad1217-7ff3-4c8c-8cb5-e30350304ba6"
		},
		{
			"deviceTime": "2014-09-01T20:30:22",
			"value": 310,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e28cd979-ad05-4311-b3a7-470824e35fd8"
		},
		{
			"deviceTime": "2014-09-01T20:35:22",
			"value": 308,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f11097e1-7a93-440e-beb8-f24ca2678047"
		},
		{
			"deviceTime": "2014-09-01T20:40:22",
			"value": 307,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad1e0092-461a-4836-9610-a8a8229f29fa"
		},
		{
			"deviceTime": "2014-09-01T20:45:22",
			"value": 305,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7d7a041-f4e9-4545-baad-4ec9d729ec4d"
		},
		{
			"deviceTime": "2014-09-01T20:50:22",
			"value": 300,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "26b0dc09-9ec2-48e3-b19f-e53d21db9d4c"
		},
		{
			"deviceTime": "2014-09-01T20:55:22",
			"value": 296,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7cda3a6c-b6d8-4911-a35b-c58c2a8be4cb"
		},
		{
			"deviceTime": "2014-09-01T21:00:22",
			"value": 291,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0cfd4591-bb07-43bb-b702-8f0a607c4a6d"
		},
		{
			"deviceTime": "2014-09-01T21:05:22",
			"value": 283,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dd708431-7f61-407d-a48c-9cbd7e00686a"
		},
		{
			"deviceTime": "2014-09-01T21:10:22",
			"value": 276,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de3aef74-cb1e-416c-8f0a-5179b03c1321"
		},
		{
			"deviceTime": "2014-09-01T21:15:22",
			"value": 270,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8948943f-d30d-440b-8512-c222a6d371f5"
		},
		{
			"deviceTime": "2014-09-01T21:20:22",
			"value": 261,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3ff65ea6-059c-4aaa-a607-c3000c2de025"
		},
		{
			"deviceTime": "2014-09-01T21:25:22",
			"value": 253,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01966c3b-c242-4ce6-9fb6-81d349975b04"
		},
		{
			"deviceTime": "2014-09-01T21:30:22",
			"value": 246,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3b27a69b-3117-434c-92ea-ae320af98f44"
		},
		{
			"deviceTime": "2014-09-01T21:35:22",
			"value": 240,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "45d67f2f-3fb7-4597-913d-c68efe057e87"
		},
		{
			"end": "2014-09-02T05:39:01",
			"start": "2014-09-01T21:39:01",
			"percent": 1.55,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 28800000,
			"type": "basal-rate-segment",
			"id": "0a145d47-20a4-4af9-8df3-13494a1655f0"
		},
		{
			"deviceTime": "2014-09-01T21:40:22",
			"value": 235,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5298bfad-795a-4b28-95e4-de6b10222050"
		},
		{
			"deviceTime": "2014-09-01T21:45:22",
			"value": 230,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e4a9ef8-ac4b-4487-baf1-59cfbd732fc2"
		},
		{
			"deviceTime": "2014-09-01T21:50:22",
			"value": 225,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f166f042-6ef5-4e69-876f-14c78a735ac6"
		},
		{
			"deviceTime": "2014-09-01T21:55:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf6ca4c1-0a42-4e99-ba83-f352cd858321"
		},
		{
			"deviceTime": "2014-09-01T22:20:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b3604271-8fcd-4cda-9ea3-64a674f5354c"
		},
		{
			"deviceTime": "2014-09-01T22:25:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "74c87d0d-e33c-4106-94ff-1ffcd476a089"
		},
		{
			"deviceTime": "2014-09-01T22:30:22",
			"value": 219,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2686655-17b7-43ac-abb7-ad3d2a17df6e"
		},
		{
			"deviceTime": "2014-09-01T22:35:22",
			"value": 220,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78345764-99e6-4042-8e43-5dadbc0e4649"
		},
		{
			"deviceTime": "2014-09-01T22:40:22",
			"value": 213,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1dad423e-4a05-4add-b6fa-4dec2764cd28"
		},
		{
			"deviceTime": "2014-09-01T22:45:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4588439-0a07-4511-a07f-6ecd003ac1ee"
		},
		{
			"deviceTime": "2014-09-01T22:50:22",
			"value": 205,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "829ad82e-983d-484a-a562-440ec464b55a"
		},
		{
			"deviceTime": "2014-09-01T22:55:22",
			"value": 207,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a06ba740-666a-4518-b5c6-6026ffdec78c"
		},
		{
			"deviceTime": "2014-09-01T23:00:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b379b4ce-2184-4e37-80d7-86c4644c4ec2"
		},
		{
			"deviceTime": "2014-09-01T23:05:22",
			"value": 203,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb9d30b3-3951-4a29-8e6c-de93efc1513d"
		},
		{
			"deviceTime": "2014-09-01T23:10:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7ba4dae-22b2-4e59-bff6-941f4e5d34ac"
		},
		{
			"deviceTime": "2014-09-01T23:15:22",
			"value": 204,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "88cbad13-bc11-4406-9018-980399a5a310"
		},
		{
			"deviceTime": "2014-09-01T23:20:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cca53f18-ea8c-40ca-8db1-965407005baa"
		},
		{
			"deviceTime": "2014-09-01T23:35:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e12a9839-ae4a-4eb9-af52-439287902aa7"
		},
		{
			"deviceTime": "2014-09-01T23:40:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c186421-4d49-4c94-8550-c8f84a498ef6"
		},
		{
			"deviceTime": "2014-09-01T23:45:22",
			"value": 191,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a298b84-b69a-4cdc-821d-0398fe234f8c"
		},
		{
			"deviceTime": "2014-09-01T23:50:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ebda430b-8ce9-4739-b2fd-ccd5f3619ead"
		},
		{
			"deviceTime": "2014-09-01T23:55:22",
			"value": 195,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f365d04-6c1f-4c91-98d4-89209b3e4c6c"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-02T02:00:00",
			"start": "2014-09-02T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "c5393b05-645b-4a95-8a6c-ba629a329ca8"
		},
		{
			"deviceTime": "2014-09-02T00:00:22",
			"value": 197,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a189a231-5025-44c6-a0cf-1d977c061cd5"
		},
		{
			"deviceTime": "2014-09-02T00:05:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "983e7306-dbce-4f9d-beb2-2de930357853"
		},
		{
			"deviceTime": "2014-09-02T00:10:22",
			"value": 187,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1e0d6a14-83b4-4842-ad49-2d460b968475"
		},
		{
			"deviceTime": "2014-09-02T00:15:22",
			"value": 198,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a181465d-7af7-4885-b9f9-4c56f53c99cc"
		},
		{
			"deviceTime": "2014-09-02T00:20:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55d17451-ca11-4a8e-bbc1-558a56476066"
		},
		{
			"deviceTime": "2014-09-02T00:25:22",
			"value": 201,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edb7dd56-862d-4b24-8142-bbd3f0c65402"
		},
		{
			"deviceTime": "2014-09-02T00:30:22",
			"value": 202,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50f06155-be8c-4cd4-b818-b58496e5d47b"
		},
		{
			"deviceTime": "2014-09-02T00:35:22",
			"value": 209,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5afc6c88-da82-451e-93a3-a84250a011b1"
		},
		{
			"deviceTime": "2014-09-02T00:40:22",
			"value": 199,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4125763-2273-43de-a1bb-be2fb5cce2bd"
		},
		{
			"deviceTime": "2014-09-02T00:45:22",
			"value": 189,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4042ecfc-21a8-466b-bd04-55587f79f132"
		},
		{
			"deviceTime": "2014-09-02T00:50:22",
			"value": 184,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbb4b1df-3cec-4609-839f-fae4d0e951fd"
		},
		{
			"deviceTime": "2014-09-02T00:55:22",
			"value": 172,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c370da75-fbaf-4d0d-8b23-be99c650e1db"
		},
		{
			"deviceTime": "2014-09-02T01:00:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e6c618d-0334-4645-a36c-b94012fa7b13"
		},
		{
			"deviceTime": "2014-09-02T01:05:22",
			"value": 159,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84ef8955-5f89-4108-bf17-6896d831aa9c"
		},
		{
			"deviceTime": "2014-09-02T01:10:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a396a889-3fb0-42cb-bc61-750a6e645c79"
		},
		{
			"deviceTime": "2014-09-02T01:15:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8fa00b19-feec-4874-928b-524d2f31965d"
		},
		{
			"deviceTime": "2014-09-02T01:20:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f767a3e8-2206-4f55-a90f-fb216b41e007"
		},
		{
			"deviceTime": "2014-09-02T01:25:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78cacb86-74e6-43f9-8f44-f421172ce629"
		},
		{
			"deviceTime": "2014-09-02T01:30:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "19140c80-8dd9-42c8-9683-de1613fe31b2"
		},
		{
			"deviceTime": "2014-09-02T01:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de74b3e3-1344-4cd4-9cc6-6bbaa2dbe7bd"
		},
		{
			"deviceTime": "2014-09-02T01:40:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47c0a1fd-beab-4050-bb9a-937cbf2a852c"
		},
		{
			"deviceTime": "2014-09-02T01:45:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "59945c4e-3efa-4900-a903-17a83a871e08"
		},
		{
			"deviceTime": "2014-09-02T01:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60274d17-17f2-40a8-8c74-cd1e18616d15"
		},
		{
			"deviceTime": "2014-09-02T01:55:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6454d689-38ab-42ff-80f1-eb12c2104798"
		},
		{
			"delivered": 0.65,
			"end": "2014-09-02T04:00:00",
			"start": "2014-09-02T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "8da32bd9-da4a-42d0-9c44-87bdd4dff8ab"
		},
		{
			"deviceTime": "2014-09-02T02:00:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a232f7fb-e397-40a0-92d3-572d2a069597"
		},
		{
			"deviceTime": "2014-09-02T02:05:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fe83968-7f0d-454f-95ca-1f3618cc9c80"
		},
		{
			"deviceTime": "2014-09-02T02:10:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5dc3f0a-bf63-4a5d-b66d-cb9300000042"
		},
		{
			"deviceTime": "2014-09-02T02:15:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7558ce6b-5be2-4869-a2e3-c9485a544bb9"
		},
		{
			"deviceTime": "2014-09-02T02:20:22",
			"value": 160,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adcaf197-0129-4904-8d3a-78216b4e195e"
		},
		{
			"deviceTime": "2014-09-02T02:25:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b24a534-d4d1-415c-8fc3-d54b82cc2ab5"
		},
		{
			"deviceTime": "2014-09-02T02:30:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4cf10917-9353-426e-9c5d-71a72ebeef44"
		},
		{
			"deviceTime": "2014-09-02T02:35:22",
			"value": 164,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "25eb6df2-eb26-4f3a-87a5-0e88a582dffb"
		},
		{
			"deviceTime": "2014-09-02T02:40:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e410f841-2caa-47c8-b208-4346c678847f"
		},
		{
			"deviceTime": "2014-09-02T02:45:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9883411-0ee2-49a0-899c-f7bdc48a36f4"
		},
		{
			"deviceTime": "2014-09-02T02:50:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a4d7a23-54a2-4623-8db2-6a1a53aa48cf"
		},
		{
			"deviceTime": "2014-09-02T02:55:22",
			"value": 145,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35bc8907-ffe4-4b58-9046-f63c8207126e"
		},
		{
			"deviceTime": "2014-09-02T03:00:22",
			"value": 146,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64311bcb-0adb-44e9-bf34-f76a2a04cef4"
		},
		{
			"deviceTime": "2014-09-02T03:05:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "458c6df8-dd27-4a38-b223-1e707e36089f"
		},
		{
			"deviceTime": "2014-09-02T03:10:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8566b940-4601-439a-bc5f-6f6c36794524"
		},
		{
			"deviceTime": "2014-09-02T03:15:22",
			"value": 154,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7784d587-ccf8-47bd-b3bb-d1dac08a0c0e"
		},
		{
			"deviceTime": "2014-09-02T03:20:22",
			"value": 170,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6eb255cc-8237-4938-af56-71c3cdacc5ce"
		},
		{
			"deviceTime": "2014-09-02T03:25:22",
			"value": 183,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05793e46-40c6-4063-9657-edb331981df8"
		},
		{
			"deviceTime": "2014-09-02T03:30:22",
			"value": 181,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ab73536b-ae35-42a4-bfae-511f3b579267"
		},
		{
			"deviceTime": "2014-09-02T03:35:22",
			"value": 162,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3069ac0c-6bc9-4c2c-9f0d-9fdbc251d111"
		},
		{
			"deviceTime": "2014-09-02T03:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac5d27ec-37dd-4a31-8216-d30f779eb90c"
		},
		{
			"deviceTime": "2014-09-02T03:45:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1c895c1-de56-46d5-805f-7b88c12db28d"
		},
		{
			"deviceTime": "2014-09-02T03:50:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4a5bde0-746f-41f5-bf65-632a31c9921d"
		},
		{
			"deviceTime": "2014-09-02T03:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d47d782f-91df-4df0-ae81-61fc298f7370"
		},
		{
			"delivered": 0.75,
			"end": "2014-09-02T05:00:00",
			"start": "2014-09-02T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "51ca209d-0b9f-43f3-a8a9-a1ad900c2005"
		},
		{
			"deviceTime": "2014-09-02T04:00:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "36a01f1d-1341-4c29-abae-ba35e9c7d5e3"
		},
		{
			"deviceTime": "2014-09-02T04:05:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42e3a08b-f60c-44c0-828b-296474876c58"
		},
		{
			"deviceTime": "2014-09-02T04:10:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "925c04d2-4935-4ee8-a207-48a876226fde"
		},
		{
			"deviceTime": "2014-09-02T04:15:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbfa62d3-551e-4e7d-a534-cad843d14158"
		},
		{
			"deviceTime": "2014-09-02T04:20:22",
			"value": 177,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6cd660b-89ba-4524-8233-6daaef6ec761"
		},
		{
			"deviceTime": "2014-09-02T04:25:22",
			"value": 190,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8f3977e0-996f-4c3c-8d9e-df415e9c1651"
		},
		{
			"deviceTime": "2014-09-02T04:30:22",
			"value": 174,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e599559a-4d4e-4792-8f49-8731b5ffd8ae"
		},
		{
			"deviceTime": "2014-09-02T04:35:22",
			"value": 173,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f6518aee-e86a-4bdf-8389-e4409e9d2c2b"
		},
		{
			"deviceTime": "2014-09-02T04:40:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "61437c94-a0ad-405b-b641-0c09d0c53cf4"
		},
		{
			"deviceTime": "2014-09-02T04:45:22",
			"value": 150,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0492122-abf3-403d-9f6d-a2780d06d442"
		},
		{
			"end": "2014-09-02T08:48:01",
			"start": "2014-09-02T04:48:01",
			"percent": 1.8,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"type": "basal-rate-segment",
			"id": "55daf1f7-de5f-4dc3-b774-f8aa3c28b3ce"
		},
		{
			"deviceTime": "2014-09-02T04:50:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e25e9e88-28cf-4483-ad84-68df01b29834"
		},
		{
			"deviceTime": "2014-09-02T04:55:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7438b770-2251-4bf3-a37e-ee804e212924"
		},
		{
			"delivered": 0.85,
			"end": "2014-09-02T06:00:00",
			"start": "2014-09-02T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "dc588b62-d7f5-41b1-995a-7eeaed6152e8"
		},
		{
			"deviceTime": "2014-09-02T05:00:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "37ae8bb0-6f9f-400f-aadb-e18ee1bf6bf1"
		},
		{
			"deviceTime": "2014-09-02T05:05:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "94598a90-7e23-4224-9e16-9a00d5abc287"
		},
		{
			"deviceTime": "2014-09-02T05:10:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5bf6cd8-7106-4cd1-b460-c5ea9847cd6a"
		},
		{
			"deviceTime": "2014-09-02T05:12:01",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "e21a3040-c110-430e-9259-be2c18be1a78"
		},
		{
			"deviceTime": "2014-09-02T05:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6cce6f93-cb4b-48b1-848c-ff57c632aff7"
		},
		{
			"deviceTime": "2014-09-02T05:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f32bd4e-782c-4f13-b436-f6c375c9f4dc"
		},
		{
			"deviceTime": "2014-09-02T05:25:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05871a63-e10c-4219-a776-1a95fe5a22ce"
		},
		{
			"deviceTime": "2014-09-02T05:30:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9f2f7558-e2e8-4ca3-8d81-24b7c0139a85"
		},
		{
			"deviceTime": "2014-09-02T05:35:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c182f52-91f8-4446-ab21-32b2370ac214"
		},
		{
			"deviceTime": "2014-09-02T05:40:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6abbf647-2c54-41a2-a1a7-3ad63f7e424b"
		},
		{
			"deviceTime": "2014-09-02T05:45:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e65734cb-2e8b-43fd-a7da-ef4da042db2c"
		},
		{
			"deviceTime": "2014-09-02T05:50:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "973d20fc-c236-40c2-9760-b6612fc33418"
		},
		{
			"deviceTime": "2014-09-02T05:55:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc293009-0c0c-4ec3-9754-07d0b63d5df3"
		},
		{
			"delivered": 1,
			"end": "2014-09-02T09:00:00",
			"start": "2014-09-02T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "8dbf7143-ca35-443e-93d9-8cbba2a1b01b"
		},
		{
			"deviceTime": "2014-09-02T06:00:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91f459e2-725d-498c-b3a9-08cf082a79bc"
		},
		{
			"deviceTime": "2014-09-02T06:05:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e11689c9-6507-4d09-93c6-144ecfdaea76"
		},
		{
			"deviceTime": "2014-09-02T06:10:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "352e36eb-7242-45bc-b405-7b2b19ed9624"
		},
		{
			"deviceTime": "2014-09-02T06:15:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "325c98b1-bd69-4f29-a849-91a742084ae5"
		},
		{
			"deviceTime": "2014-09-02T06:20:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5379e8e1-810e-4f91-b4dd-111b0dca5567"
		},
		{
			"deviceTime": "2014-09-02T06:25:22",
			"value": 147,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd8059d4-0eb4-4b07-b13c-19742f0eaeb8"
		},
		{
			"deviceTime": "2014-09-02T06:30:22",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "953c6eaa-45fe-4f49-9c05-42ebbd36a154"
		},
		{
			"deviceTime": "2014-09-02T06:35:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "887081dd-4420-49de-a046-b6c5f7dd3cd8"
		},
		{
			"deviceTime": "2014-09-02T06:40:22",
			"value": 138,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0df2c08-1837-4fe2-8452-2ec5bc8350b2"
		},
		{
			"deviceTime": "2014-09-02T06:45:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71c46abc-cd09-4b2e-92bc-c3d58f42f75f"
		},
		{
			"deviceTime": "2014-09-02T06:50:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "35cd1c63-d37f-44b8-a6e6-9eea64404ec9"
		},
		{
			"deviceTime": "2014-09-02T06:55:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c5bc2aff-6472-4fb5-9084-33b5d71eaac4"
		},
		{
			"deviceTime": "2014-09-02T07:00:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0b79fbf-70aa-4427-aded-eef95716294c"
		},
		{
			"deviceTime": "2014-09-02T07:05:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f54d1cdb-0d08-410d-9e4b-679e4e5c79de"
		},
		{
			"deviceTime": "2014-09-02T07:10:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "077f4378-419d-409c-b9d8-97c1e389be78"
		},
		{
			"deviceTime": "2014-09-02T07:15:22",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f00c2fcb-a589-42c6-bb85-3c0286e4d779"
		},
		{
			"deviceTime": "2014-09-02T07:20:22",
			"value": 68,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4b0b8c52-3cb2-480b-bb4d-9494a844b02f"
		},
		{
			"deviceTime": "2014-09-02T07:25:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "589ec4bc-3779-44a3-b8fc-0f1fc819dbdc"
		},
		{
			"deviceTime": "2014-09-02T07:30:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df8f7722-6617-4538-96ca-6017dc4d4bdd"
		},
		{
			"deviceTime": "2014-09-02T07:35:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a15a0fc1-e107-4af6-b06b-4459ce3993d2"
		},
		{
			"deviceTime": "2014-09-02T07:40:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c566909e-7d8f-4038-afbd-7cd1373b3e75"
		},
		{
			"deviceTime": "2014-09-02T07:45:22",
			"value": 97,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "873c1a52-4696-4688-b684-1ec21a5f1f0c"
		},
		{
			"deviceTime": "2014-09-02T07:50:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8651d828-8476-41d0-b53b-fb1c0c8d40d8"
		},
		{
			"deviceTime": "2014-09-02T08:20:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b8cbf959-0933-47e9-a802-6c48ce4efb71"
		},
		{
			"deviceTime": "2014-09-02T08:25:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "446d430f-e3f0-463a-8e90-17ba1cbb78a9"
		},
		{
			"deviceTime": "2014-09-02T08:30:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "795e9880-d270-4f50-9460-f81f00966d92"
		},
		{
			"deviceTime": "2014-09-02T08:35:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42e3ab9b-2ed5-495b-934e-b05a13914b4e"
		},
		{
			"deviceTime": "2014-09-02T08:40:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0eb69cd7-9d20-4605-b083-5ca56370b532"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-02T15:00:00",
			"start": "2014-09-02T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "2db8dcb0-9ee4-4bfe-b1d0-23d233a7f4a4"
		},
		{
			"deviceTime": "2014-09-02T09:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9c2b9513-f460-4fd8-847f-d37202e16a66"
		},
		{
			"deviceTime": "2014-09-02T09:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "147b7150-aae8-4e17-83ad-f58ca0734670"
		},
		{
			"messageText": "Brisket doner in short loin pork loin dolore esse strip steak magna aute bacon short ribs exercitation. Doner rump swine enim tail pig.",
			"parentMessage": "",
			"utcTime": "2014-09-02T09:23:31Z",
			"type": "message",
			"id": "db97e3fe-280b-4627-909e-fc4453b7ff39"
		},
		{
			"deviceTime": "2014-09-02T09:25:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c9352fe-2781-4b51-8474-1c822d36672a"
		},
		{
			"deviceTime": "2014-09-02T09:30:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b853e440-4ef0-4ae8-9c35-8d8e648987fe"
		},
		{
			"deviceTime": "2014-09-02T09:34:42",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "228a8653-e52c-4efa-ac75-3c3439c8ba5b"
		},
		{
			"deviceTime": "2014-09-02T09:34:42",
			"value": 51,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "c409741e-36e8-4274-848a-18a4a93e066b"
		},
		{
			"deviceTime": "2014-09-02T09:34:42",
			"id": "c409741e-36e8-4274-848a-18a4a93e066b",
			"source": "demo",
			"joinKey": "76d7936b-cacd-4eb6-b72f-9ff60ffbc560",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 51
			}
		},
		{
			"deviceTime": "2014-09-02T09:34:42",
			"programmed": 3.4,
			"joinKey": "76d7936b-cacd-4eb6-b72f-9ff60ffbc560",
			"value": 3.4,
			"source": "demo",
			"recommended": 3.4,
			"extendedDelivery": 3.4,
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"extended": true,
			"type": "bolus",
			"id": "eb1f6a88-0029-4ed6-9f96-18ff6bef44fb"
		},
		{
			"deviceTime": "2014-09-02T09:35:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "14114ed0-02aa-4ce5-8f53-7d2688941d9c"
		},
		{
			"deviceTime": "2014-09-02T09:40:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "797f7857-e1b7-4c9a-86dc-b7d0174ba978"
		},
		{
			"deviceTime": "2014-09-02T09:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2fb2919a-92fb-4ed9-8780-2fd21e2bb5a7"
		},
		{
			"deviceTime": "2014-09-02T09:50:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2adb9f05-d342-4253-9c35-88b6f70b005f"
		},
		{
			"deviceTime": "2014-09-02T09:55:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "55725170-003b-4618-8066-2c4d0fb84cfd"
		},
		{
			"deviceTime": "2014-09-02T10:00:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc8e8502-b8dc-40ff-a718-25c4dd082392"
		},
		{
			"deviceTime": "2014-09-02T10:05:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d934814-b35a-4944-a6a8-9936fa704a73"
		},
		{
			"deviceTime": "2014-09-02T10:10:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08344356-68e0-4ce2-900d-59580837c91b"
		},
		{
			"deviceTime": "2014-09-02T10:15:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "56931125-c94d-42e2-ba4c-32ebe27bb334"
		},
		{
			"deviceTime": "2014-09-02T10:17:26",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "0fb22e69-929f-4b15-b3ce-5754a7604905"
		},
		{
			"deviceTime": "2014-09-02T10:17:26",
			"value": 30,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "b3766ff5-2e02-4cbe-8c7b-b880c3554d65"
		},
		{
			"deviceTime": "2014-09-02T10:17:26",
			"id": "b3766ff5-2e02-4cbe-8c7b-b880c3554d65",
			"source": "demo",
			"joinKey": "323032d3-058b-434f-8c2f-0aad201bccfa",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 30
			}
		},
		{
			"deviceTime": "2014-09-02T10:17:26",
			"suspendedAt": "2014-09-02T11:02:26",
			"programmed": 2.3,
			"joinKey": "323032d3-058b-434f-8c2f-0aad201bccfa",
			"value": 2.3,
			"source": "demo",
			"recommended": 2,
			"extendedDelivery": 0.9,
			"initialDelivery": 1.4,
			"duration": 10800000,
			"extended": true,
			"type": "bolus",
			"id": "cb101261-b480-4c9d-ab84-82517e752244",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-09-02T10:20:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0fed40f9-b0cb-4183-96c3-f6048e2a2536"
		},
		{
			"deviceTime": "2014-09-02T10:25:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed5dd7fd-c546-4ade-af6a-afdffdc1b72c"
		},
		{
			"deviceTime": "2014-09-02T10:30:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cf3c0241-13c0-4a82-9853-b85b4b7efa5b"
		},
		{
			"deviceTime": "2014-09-02T10:35:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c47ebc90-ed8a-492c-8b3b-55721d833822"
		},
		{
			"end": "2014-09-02T16:07:01",
			"start": "2014-09-02T10:37:01",
			"percent": 1.55,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 19800000,
			"type": "basal-rate-segment",
			"id": "d33cf281-8fbe-4669-af56-bb0e88a1a446"
		},
		{
			"deviceTime": "2014-09-02T10:40:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e6de9443-bccf-44a5-bbb4-0f78972850e1"
		},
		{
			"deviceTime": "2014-09-02T10:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "91a17f9f-685b-40e9-ac10-348a0c592b88"
		},
		{
			"deviceTime": "2014-09-02T10:50:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "edde1262-fc39-4a04-aa35-012ad3f7f3b9"
		},
		{
			"deviceTime": "2014-09-02T10:55:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ba1aba0-aeb0-4adc-be0e-6c60f5dbe2c8"
		},
		{
			"deviceTime": "2014-09-02T11:00:22",
			"value": 156,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24c0c53c-8033-4f02-9426-d4121f39fa0b"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-02T11:02:26",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "3efbc83f-61a3-4538-ba77-a51941f2325e"
		},
		{
			"deviceTime": "2014-09-02T11:05:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7465d9c0-dbe3-4d1d-b169-807d77c9950d"
		},
		{
			"deviceTime": "2014-09-02T11:09:18",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "3f6e664f-2e3a-4be9-b36a-a02581c0f18a"
		},
		{
			"deviceTime": "2014-09-02T11:10:22",
			"value": 155,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9aaa349b-7f92-4e9e-9961-6d23363e4eb7"
		},
		{
			"deviceTime": "2014-09-02T11:15:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7e1ef23-935e-47c8-970e-6ecd9b5ff230"
		},
		{
			"deviceTime": "2014-09-02T11:20:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "794442ce-5211-48cc-957c-719b3b1a991e"
		},
		{
			"deviceTime": "2014-09-02T11:25:22",
			"value": 149,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "952eee9c-76cb-462f-a179-e9f407962f74"
		},
		{
			"deviceTime": "2014-09-02T11:30:22",
			"value": 148,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d351aa3b-203e-411f-ac46-0dc1eaa49184"
		},
		{
			"deviceTime": "2014-09-02T11:35:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2034e4eb-2c76-4eb7-ac24-bfc01c022bb8"
		},
		{
			"deviceTime": "2014-09-02T11:39:19",
			"value": 165,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "eed7293c-cc15-4a78-83ab-6c6645a329a5"
		},
		{
			"deviceTime": "2014-09-02T11:39:19",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "c9b1eb54-7be4-43c4-afe0-c9de9296b587"
		},
		{
			"deviceTime": "2014-09-02T11:39:19",
			"id": "c9b1eb54-7be4-43c4-afe0-c9de9296b587",
			"source": "demo",
			"joinKey": "0367d70f-472e-4fcc-b8ab-89f855aafc1a",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 45
			}
		},
		{
			"deviceTime": "2014-09-02T11:39:19",
			"programmed": 3,
			"joinKey": "0367d70f-472e-4fcc-b8ab-89f855aafc1a",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "66d48b16-a235-43d7-8d10-894683dd0645"
		},
		{
			"deviceTime": "2014-09-02T11:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c41a367f-f1af-405d-b528-c06e356fa4ec"
		},
		{
			"deviceTime": "2014-09-02T11:45:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82b7bb0e-a97d-41a4-a11f-0a3517b16bfa"
		},
		{
			"deviceTime": "2014-09-02T11:50:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e645db77-013e-4523-ae32-f9f2b35833c2"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-02T11:50:26",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "7f5661b9-1b22-42d2-ae22-e4092ba15ab1",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-09-02T11:02:26",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "3efbc83f-61a3-4538-ba77-a51941f2325e"
			}
		},
		{
			"deviceTime": "2014-09-02T11:55:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dcccefb9-648c-4f54-9653-7c325b38636d"
		},
		{
			"deviceTime": "2014-09-02T12:00:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "659bdad9-0af1-4dca-bb40-fe820e0d7d95"
		},
		{
			"deviceTime": "2014-09-02T12:05:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "535605c1-f69a-4d99-9475-471ed9be48ca"
		},
		{
			"deviceTime": "2014-09-02T12:10:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "348efe41-732e-4b25-a411-5eb0662970d6"
		},
		{
			"deviceTime": "2014-09-02T12:15:22",
			"value": 79,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6621ac6c-d543-4896-90f8-f3542da61f8c"
		},
		{
			"deviceTime": "2014-09-02T12:20:22",
			"value": 78,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c6d47da-61aa-4d69-b354-143a0088b956"
		},
		{
			"deviceTime": "2014-09-02T12:25:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9de8c58-81dc-465d-a359-6c795f107988"
		},
		{
			"deviceTime": "2014-09-02T12:30:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6461b547-43b6-456e-8a31-b24a8c3eadfa"
		},
		{
			"deviceTime": "2014-09-02T12:35:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bcacf5c1-5299-4d72-a820-72acf2497d10"
		},
		{
			"deviceTime": "2014-09-02T12:35:38",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "c3465a83-c1a9-4dbc-9de1-53b7e0bc48ee"
		},
		{
			"deviceTime": "2014-09-02T12:35:38",
			"value": 49,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "dcd73ec1-9674-43a8-8f34-b0f1521f7ca4"
		},
		{
			"deviceTime": "2014-09-02T12:35:38",
			"id": "dcd73ec1-9674-43a8-8f34-b0f1521f7ca4",
			"source": "demo",
			"joinKey": "e0280243-adcc-44f6-8183-125965cf2578",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 49
			}
		},
		{
			"deviceTime": "2014-09-02T12:35:38",
			"programmed": 3.3,
			"joinKey": "e0280243-adcc-44f6-8183-125965cf2578",
			"value": 3.3,
			"source": "demo",
			"recommended": 3.3,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "5631d087-8325-45f1-835e-f8dd7f6ef560"
		},
		{
			"deviceTime": "2014-09-02T12:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "181cbece-34e3-4b2f-b7a5-8a9ffb1660aa"
		},
		{
			"deviceTime": "2014-09-02T12:45:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9fdbf0af-5380-4a1e-99aa-fce292a39e9b"
		},
		{
			"deviceTime": "2014-09-02T12:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "50637001-648f-4e5e-ae11-d6587395503f"
		},
		{
			"deviceTime": "2014-09-02T12:55:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4988f7ff-86d8-4126-9ee8-376c61b84acd"
		},
		{
			"deviceTime": "2014-09-02T13:00:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0d71a5b6-6b31-4121-92b6-3f6b1a391eb8"
		},
		{
			"deviceTime": "2014-09-02T13:05:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8650cc88-877a-43a9-90af-0959f9a805eb"
		},
		{
			"deviceTime": "2014-09-02T13:10:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84809366-6ffd-448e-a76d-6e7a2fc02ede"
		},
		{
			"deviceTime": "2014-09-02T13:15:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7198def-193e-4b9e-8edb-2930c2e99154"
		},
		{
			"deviceTime": "2014-09-02T13:20:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a812ed05-0d39-4ba8-8b99-d26d47211d09"
		},
		{
			"deviceTime": "2014-09-02T13:25:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f3c3a9e6-b799-4e87-99ac-14334a194b4c"
		},
		{
			"deviceTime": "2014-09-02T13:30:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0d19835-d3f4-4836-ab3a-76abba4c0aed"
		},
		{
			"deviceTime": "2014-09-02T13:35:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b0497fee-379c-4c12-815e-0a65e6eed270"
		},
		{
			"deviceTime": "2014-09-02T13:40:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d62b8687-6e15-4b80-9639-18ed2a20b061"
		},
		{
			"deviceTime": "2014-09-02T13:45:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5c82413c-13d0-4420-b9d5-72784c465704"
		},
		{
			"deviceTime": "2014-09-02T13:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2199f160-c957-4294-bfc4-2b13ea6cb4cf"
		},
		{
			"deviceTime": "2014-09-02T13:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "17cdb02f-d5a2-4c39-97ba-51d69a8351e3"
		},
		{
			"deviceTime": "2014-09-02T14:00:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e0077e2f-7872-4586-a673-9386fff5592e"
		},
		{
			"deviceTime": "2014-09-02T14:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "513503e8-70b6-42a6-8cb0-13966895e60c"
		},
		{
			"deviceTime": "2014-09-02T14:10:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8df6d567-68df-4619-86d4-2de4a2e89600"
		},
		{
			"deviceTime": "2014-09-02T14:15:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3cb4bc68-b210-47f7-995b-5caba42f38e3"
		},
		{
			"deviceTime": "2014-09-02T14:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b7742bab-4000-4f69-a136-30a87dc29aee"
		},
		{
			"deviceTime": "2014-09-02T14:25:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cc6bbd44-4047-4d56-b98b-9248e366ec98"
		},
		{
			"deviceTime": "2014-09-02T14:30:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98909240-fc93-4153-9b8e-263f5a854c2f"
		},
		{
			"deviceTime": "2014-09-02T14:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4391c5e6-0118-4b2e-bb53-e6a7f6daf808"
		},
		{
			"deviceTime": "2014-09-02T14:40:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6177ae4e-b7db-4dfc-865e-add74b5ba7d9"
		},
		{
			"deviceTime": "2014-09-02T14:45:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c08d5d4-decf-4b6d-8a03-2188bab9b49e"
		},
		{
			"deviceTime": "2014-09-02T14:50:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e513032-3bef-49ff-b80a-f02e6e609ae6"
		},
		{
			"deviceTime": "2014-09-02T14:55:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d77de7aa-e9ea-4d20-9084-a6213af2225e"
		},
		{
			"delivered": 0.9,
			"end": "2014-09-02T20:00:00",
			"start": "2014-09-02T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 18000000,
			"type": "basal-rate-segment",
			"id": "c598970d-6bab-4ebb-a077-fe6254366368"
		},
		{
			"deviceTime": "2014-09-02T15:00:22",
			"value": 73,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71a5d53c-1816-4456-b79f-c673c6ef620b"
		},
		{
			"deviceTime": "2014-09-02T15:05:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "84ca9c0b-eb38-4a11-a72b-bc8f569a9819"
		},
		{
			"deviceTime": "2014-09-02T15:10:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5711c2b-9089-437e-98ec-c96a64f9353b"
		},
		{
			"deviceTime": "2014-09-02T15:15:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "df0ffcfa-8027-45f1-b19e-2f95b806ded8"
		},
		{
			"deviceTime": "2014-09-02T15:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ae654835-fabb-4b36-bb55-3563bf186cc3"
		},
		{
			"deviceTime": "2014-09-02T15:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b572eec9-cc2f-4f18-a6eb-128da4adc98c"
		},
		{
			"deviceTime": "2014-09-02T15:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "69e36200-390b-49ad-96c3-90c632a15967"
		},
		{
			"deviceTime": "2014-09-02T15:35:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "90c931d8-e458-4776-9e63-8321a60bcb10"
		},
		{
			"deviceTime": "2014-09-02T15:40:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7461f3f2-c7f3-4478-a5d3-3ebbfd0329be"
		},
		{
			"deviceTime": "2014-09-02T15:45:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "78154383-bbfa-443d-a91d-f06faee0c5cb"
		},
		{
			"deviceTime": "2014-09-02T15:50:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d26f3dd2-abee-464e-86ab-c51d7ce3ffc1"
		},
		{
			"deviceTime": "2014-09-02T15:55:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c969040a-ba40-4445-a3c2-a98cfc23f625"
		},
		{
			"deviceTime": "2014-09-02T16:00:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4199f65b-3859-4eae-a13b-7032fd380aae"
		},
		{
			"deviceTime": "2014-09-02T16:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ad512ff4-3e04-41ca-8d90-502356fd48f7"
		},
		{
			"deviceTime": "2014-09-02T16:10:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cdfe01e8-dfb4-4930-a24d-85fb98bef772"
		},
		{
			"deviceTime": "2014-09-02T16:15:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3752799a-f0eb-4a9f-b763-9769a0cad5db"
		},
		{
			"deviceTime": "2014-09-02T16:20:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f951ad24-99f9-47e8-b635-aee8baafe8c6"
		},
		{
			"deviceTime": "2014-09-02T16:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4e63bc43-806a-4e6b-9eef-7cd033c414a9"
		},
		{
			"deviceTime": "2014-09-02T16:30:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5e12f6c4-4635-4475-8c75-abdc658c5b93"
		},
		{
			"deviceTime": "2014-09-02T16:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9ffcb763-7fae-4590-9ab5-97a64d190fb7"
		},
		{
			"deviceTime": "2014-09-02T16:40:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d8bf5387-ed2e-4689-bf86-ce23b028a24f"
		},
		{
			"deviceTime": "2014-09-02T16:45:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1d82d09-419d-4b1e-a631-1c9e2397fd5a"
		},
		{
			"deviceTime": "2014-09-02T16:50:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc64f90d-5f82-4a6f-a314-8309946fdea2"
		},
		{
			"deviceTime": "2014-09-02T16:55:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24f702de-f564-45b7-bc53-e0a8fe419905"
		},
		{
			"deviceTime": "2014-09-02T17:00:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "574399c2-a6aa-4e07-8ae1-415a70e9ea8f"
		},
		{
			"deviceTime": "2014-09-02T17:05:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0a113a8b-0a7f-4094-a85b-b4368903ac9a"
		},
		{
			"deviceTime": "2014-09-02T17:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cbe4c6cc-ab77-4a51-aa6c-48486912ea2a"
		},
		{
			"deviceTime": "2014-09-02T17:15:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23c83eb7-a3fa-4792-8c68-993e8506641a"
		},
		{
			"deviceTime": "2014-09-02T17:20:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3bc8b857-3455-4f9c-9fe9-b0046eaa81d2"
		},
		{
			"deviceTime": "2014-09-02T17:25:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "98f2b542-2fac-458d-b3ca-1a0e2ae64b72"
		},
		{
			"deviceTime": "2014-09-02T17:30:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a3a1902f-b1e1-4cec-bf3a-ca391aef6c10"
		},
		{
			"deviceTime": "2014-09-02T17:35:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f1cd6212-9c77-44e9-99d6-44ffc428ddf2"
		},
		{
			"deviceTime": "2014-09-02T17:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e7533dc2-9e55-4e8f-8ea3-97b64f2b34ef"
		},
		{
			"deviceTime": "2014-09-02T17:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d738d20e-119e-489f-86b8-67db9a21fb65"
		},
		{
			"deviceTime": "2014-09-02T17:50:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8837286-eeb3-48af-862d-d70827a1e458"
		},
		{
			"deviceTime": "2014-09-02T17:55:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2b20c57-59e2-48b0-a8c9-5b6893629268"
		},
		{
			"deviceTime": "2014-09-02T18:00:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f53352d0-450f-45fd-b91b-4665abaa3bed"
		},
		{
			"deviceTime": "2014-09-02T18:05:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6fd58d7f-d722-4e65-a155-20d628e525ec"
		},
		{
			"deviceTime": "2014-09-02T18:10:22",
			"value": 81,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8757ae46-011f-4f2b-8971-48d468b8c6e0"
		},
		{
			"deviceTime": "2014-09-02T18:15:04",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4f237a85-6e82-49a6-b2cb-b6fa72060ef4"
		},
		{
			"deviceTime": "2014-09-02T18:15:04",
			"value": 46,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "ce34d9ef-5006-4e11-8d35-7e0d6e85097c"
		},
		{
			"deviceTime": "2014-09-02T18:15:04",
			"id": "ce34d9ef-5006-4e11-8d35-7e0d6e85097c",
			"source": "demo",
			"joinKey": "d7b53ed6-2bda-4f30-a773-33f1af35d87b",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 46
			}
		},
		{
			"deviceTime": "2014-09-02T18:15:04",
			"suspendedAt": "2014-09-02T18:25:04",
			"programmed": 3.1,
			"joinKey": "d7b53ed6-2bda-4f30-a773-33f1af35d87b",
			"value": 0.2,
			"source": "demo",
			"recommended": 3.1,
			"extendedDelivery": 3.1,
			"deviceId": "Demo - 123",
			"duration": 1800000,
			"extended": true,
			"type": "bolus",
			"id": "a096588f-58fe-42df-82ed-f1c40d1309e6"
		},
		{
			"deviceTime": "2014-09-02T18:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a5b72826-4f00-43d9-867d-787ff9d53871"
		},
		{
			"deviceTime": "2014-09-02T18:20:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5ee312c5-90db-4a4c-90c2-439d4d1458b8"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-02T18:25:04",
			"source": "demo",
			"subType": "status",
			"reason": "alarm",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "561283c8-6cfb-45fb-9509-3b8e67ba4294"
		},
		{
			"deviceTime": "2014-09-02T18:25:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "46578a76-c83b-4c75-80a9-b74a1b629f93"
		},
		{
			"deviceTime": "2014-09-02T18:30:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2a0d86aa-29fc-4d1f-9e1b-1cc4bcc86cb1"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-02T18:34:04",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "76d0415c-16fc-4590-866b-3123979b9067",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "alarm",
				"deviceTime": "2014-09-02T18:25:04",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "561283c8-6cfb-45fb-9509-3b8e67ba4294"
			}
		},
		{
			"deviceTime": "2014-09-02T18:35:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "96d7c2bd-9a2a-41df-856e-564f8f12ecc1"
		},
		{
			"deviceTime": "2014-09-02T18:40:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb9773a3-fa18-4fe1-af3f-788bf8e1c0f2"
		},
		{
			"deviceTime": "2014-09-02T18:45:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "048b7b09-a3b5-4ae8-ac45-482530962307"
		},
		{
			"deviceTime": "2014-09-02T18:50:22",
			"value": 151,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db5a0c8c-b64a-449b-8c86-e8203061902f"
		},
		{
			"deviceTime": "2014-09-02T18:55:22",
			"value": 167,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b9e03876-756d-4f85-a4fe-880c0b696e14"
		},
		{
			"deviceTime": "2014-09-02T19:00:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "49e80694-2a5b-4122-95ab-30e97b424a0c"
		},
		{
			"deviceTime": "2014-09-02T19:05:22",
			"value": 200,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d2c3682f-a123-46d2-ae49-4021a742252c"
		},
		{
			"deviceTime": "2014-09-02T19:10:22",
			"value": 185,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1bd6e0e1-6805-4477-8ec1-8aee8244af10"
		},
		{
			"deviceTime": "2014-09-02T19:15:22",
			"value": 186,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a0cbbb85-f7f0-42d8-b614-65925c70a8b1"
		},
		{
			"deviceTime": "2014-09-02T19:20:22",
			"value": 161,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a6fa6653-ea50-459c-b1aa-bbf7d27d1191"
		},
		{
			"deviceTime": "2014-09-02T19:25:22",
			"value": 158,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "03b4c3c2-fee1-44b9-b743-9d890ee064f9"
		},
		{
			"deviceTime": "2014-09-02T19:30:22",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3e0f714f-a8b6-4b51-9b1f-c17763322905"
		},
		{
			"deviceTime": "2014-09-02T19:35:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d0c67445-5019-4b81-9ba7-f3202c185d46"
		},
		{
			"deviceTime": "2014-09-02T19:40:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b529d4d4-0c44-411f-a064-b0a6cd4e46f0"
		},
		{
			"end": "2014-09-02T21:12:01",
			"start": "2014-09-02T19:42:01",
			"percent": 0.4,
			"deliveryType": "temp",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 5400000,
			"type": "basal-rate-segment",
			"id": "76b1201e-64ba-43ef-b053-354a14c6989a"
		},
		{
			"deviceTime": "2014-09-02T19:45:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fd37d793-e50d-42bb-be46-a00afd8582f2"
		},
		{
			"deviceTime": "2014-09-02T19:50:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f941cce2-945e-409a-99d0-af7e507ead75"
		},
		{
			"deviceTime": "2014-09-02T19:55:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b2f2f2b6-5c26-45ca-b2d5-494b9e983c1a"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-03T00:00:00",
			"start": "2014-09-02T20:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 72000000,
			"type": "basal-rate-segment",
			"id": "cb8d35c5-c378-4d33-b0c9-18abe3e7597c"
		},
		{
			"deviceTime": "2014-09-02T20:00:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4192f31c-1e6a-43e7-aaac-c83f272be989"
		},
		{
			"deviceTime": "2014-09-02T20:05:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0f9ca948-67cb-459a-831b-7268bac9b19d"
		},
		{
			"deviceTime": "2014-09-02T20:10:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "82092053-ac62-4569-ab44-c6695b2758ef"
		},
		{
			"deviceTime": "2014-09-02T20:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "97a61dbe-3a0c-40a2-bd5e-e23bc248a918"
		},
		{
			"deviceTime": "2014-09-02T20:20:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3485954c-b8ed-4431-9f02-0821aed671f3"
		},
		{
			"deviceTime": "2014-09-02T20:25:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9c86943-0e01-4db4-a119-bf5e96b27164"
		},
		{
			"deviceTime": "2014-09-02T20:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9d52ad7b-a824-489f-9274-0797aa770136"
		},
		{
			"deviceTime": "2014-09-02T20:40:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c4d08da-7ccb-4619-9480-c27e0aa14853"
		},
		{
			"deviceTime": "2014-09-02T20:45:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f38668e7-f543-42c6-8f7c-e78a543a3a73"
		},
		{
			"deviceTime": "2014-09-02T20:55:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7b3ea7fc-c539-42aa-b8e9-c1a29b17b21f"
		},
		{
			"deviceTime": "2014-09-02T21:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d036779b-d9a3-4ea5-9d8c-472ae40c9a8c"
		},
		{
			"deviceTime": "2014-09-02T21:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a079d9ee-0953-453b-88ce-e7bd22ee6bd4"
		},
		{
			"deviceTime": "2014-09-02T21:40:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d9db8d06-8a95-4ef1-80cc-ec79d116443e"
		},
		{
			"deviceTime": "2014-09-02T21:45:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e4c3b275-9270-47e3-a9fa-3a29e666a5b8"
		},
		{
			"deviceTime": "2014-09-02T21:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6772fa4-fe3f-42c8-844a-0b2771447e49"
		},
		{
			"deviceTime": "2014-09-02T21:55:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c2921338-b464-4993-9721-d0ce3616281a"
		},
		{
			"deviceTime": "2014-09-02T22:00:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3919abd2-4223-48eb-9d13-f0336ae30068"
		},
		{
			"deviceTime": "2014-09-02T22:05:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9e45599d-f02a-43cf-8d1b-1d8f907e8127"
		},
		{
			"deviceTime": "2014-09-02T22:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "32474bac-f1f0-41cc-b9dc-91037e21cbed"
		},
		{
			"deviceTime": "2014-09-02T22:15:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "29a8ecdb-8ee2-4e79-a4f4-865c34d675ff"
		},
		{
			"deviceTime": "2014-09-02T22:20:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "669146e8-ba84-4c3b-ab98-f84f1307778f"
		},
		{
			"deviceTime": "2014-09-02T22:25:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "27a62e49-f7cc-4738-a570-b420b43ffd2a"
		},
		{
			"deviceTime": "2014-09-02T22:30:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8e5bfb2-6715-4a17-9249-484c4204da2d"
		},
		{
			"deviceTime": "2014-09-02T22:35:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ec666d06-9665-4e78-931d-04d528b0229c"
		},
		{
			"deviceTime": "2014-09-02T22:40:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4f101d96-bb21-41f4-b8ec-f24a7b6627e0"
		},
		{
			"deviceTime": "2014-09-02T22:45:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1feda145-6720-4cca-874e-852ce8c219f4"
		},
		{
			"deviceTime": "2014-09-02T22:50:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8e4220f1-42e8-4cf2-80a1-932956273295"
		},
		{
			"deviceTime": "2014-09-02T22:55:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eed111bb-d643-4fe2-ba20-d5d1753851a1"
		},
		{
			"deviceTime": "2014-09-02T23:00:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "536728ff-1975-44e3-9abb-d36d9086d13e"
		},
		{
			"deviceTime": "2014-09-02T23:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aaefc74a-e5da-4333-893f-e2cdb5e70890"
		},
		{
			"deviceTime": "2014-09-02T23:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b96bcd0b-f1e1-4ed5-b1af-12d5e1b73401"
		},
		{
			"deviceTime": "2014-09-02T23:15:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "01455c5a-ac11-4d16-adc9-0c4e5ab2e025"
		},
		{
			"deviceTime": "2014-09-02T23:20:22",
			"value": 109,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4ff6801d-6cbd-42b6-af0d-a04093fcab59"
		},
		{
			"deviceTime": "2014-09-02T23:25:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6f9b6844-fa84-4787-938b-97b65f3672ff"
		},
		{
			"deviceTime": "2014-09-02T23:30:22",
			"value": 105,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b5b5fe45-92a7-494c-be45-ea16aaf8a7e7"
		},
		{
			"deviceTime": "2014-09-02T23:35:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5cc59517-25da-465b-a723-f8a62df1c183"
		},
		{
			"deviceTime": "2014-09-02T23:40:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "efca610d-2c0b-412d-b0dd-87765751a30a"
		},
		{
			"deviceTime": "2014-09-02T23:41:23",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "98d5dc2c-b278-4fe8-9af8-c2252f14a709"
		},
		{
			"deviceTime": "2014-09-02T23:41:23",
			"value": 28,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fa8c14e6-9779-4365-bfbb-58b032fd2c76"
		},
		{
			"deviceTime": "2014-09-02T23:41:23",
			"id": "fa8c14e6-9779-4365-bfbb-58b032fd2c76",
			"source": "demo",
			"joinKey": "09e6e6b7-43af-4647-a2a8-303aac01ca42",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 28
			}
		},
		{
			"deviceTime": "2014-09-02T23:41:23",
			"programmed": 1.8,
			"joinKey": "09e6e6b7-43af-4647-a2a8-303aac01ca42",
			"value": 1.8,
			"source": "demo",
			"recommended": 1.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "0dd8b845-9ffd-4f67-8ece-9a950f7387a4"
		},
		{
			"deviceTime": "2014-09-02T23:45:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6a2a3718-c0fb-49ee-84b5-d7425d37c798"
		},
		{
			"deviceTime": "2014-09-02T23:50:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81a67a4a-450f-4a3f-abd1-67cf03916c20"
		},
		{
			"deviceTime": "2014-09-02T23:55:22",
			"value": 99,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c0a9bdfd-7930-4f0e-9cd7-32a82e11d24d"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-03T02:00:00",
			"start": "2014-09-03T00:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"id": "26406b18-11ea-4d89-8ad9-3a189da5fe82"
		},
		{
			"deviceTime": "2014-09-03T00:00:22",
			"value": 100,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e73b36f2-d40a-44f5-bbca-5eee0e16db91"
		},
		{
			"deviceTime": "2014-09-03T00:05:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b4758b0-d02b-4113-baec-48c987b871e1"
		},
		{
			"deviceTime": "2014-09-03T00:10:22",
			"value": 103,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7a45ae43-75bf-458c-9b1d-e268af6e0ad0"
		},
		{
			"deviceTime": "2014-09-03T00:15:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "adbea11b-fe62-409c-b668-27387eb0ea4a"
		},
		{
			"deviceTime": "2014-09-03T00:20:22",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cd935c5c-aea7-4825-95ae-2b1b20b14976"
		},
		{
			"deviceTime": "2014-09-03T00:25:22",
			"value": 98,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9b8862b5-4b36-41fa-8d2e-aa9dc30ff8db"
		},
		{
			"deviceTime": "2014-09-03T00:30:22",
			"value": 96,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "70223605-7d35-43b2-b6d6-ed48c56b7127"
		},
		{
			"deviceTime": "2014-09-03T00:35:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e3af50d0-31b2-4c27-b753-81a3c3d4b760"
		},
		{
			"deviceTime": "2014-09-03T00:40:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fcd53dd4-3812-4007-be1b-3f8779050281"
		},
		{
			"deviceTime": "2014-09-03T00:45:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7be4263c-cf50-4cb9-b805-0641d23a983d"
		},
		{
			"deviceTime": "2014-09-03T00:50:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7048ced3-20f2-473f-8baa-39467cfd4283"
		},
		{
			"deviceTime": "2014-09-03T00:55:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "980464ea-8171-4789-8c6c-7e8141c33996"
		},
		{
			"deviceTime": "2014-09-03T01:00:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5004f542-4f3f-4dad-ae42-4f279caba258"
		},
		{
			"deviceTime": "2014-09-03T01:05:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a8dd0157-1d65-4347-9530-638306e2ffc1"
		},
		{
			"deviceTime": "2014-09-03T01:10:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f124e109-f5e6-4c75-b8a9-42ffe68ebdc0"
		},
		{
			"deviceTime": "2014-09-03T01:15:22",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dec63caf-23e2-4314-b4d1-f6ac4341d1da"
		},
		{
			"deviceTime": "2014-09-03T01:20:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ba5a3794-f235-41be-a018-e00da3f6c1da"
		},
		{
			"deviceTime": "2014-09-03T01:25:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "62b5b9f5-491f-43a3-9ed2-a4d2e31aa6b8"
		},
		{
			"deviceTime": "2014-09-03T01:30:22",
			"value": 93,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fe1522b8-e36e-4629-99ac-f782cd22ac66"
		},
		{
			"deviceTime": "2014-09-03T01:35:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa652324-9397-4750-bfb6-9e31f76aa143"
		},
		{
			"deviceTime": "2014-09-03T01:40:22",
			"value": 92,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ebf2a0c-cc58-4c2b-8a15-c7e46474748c"
		},
		{
			"deviceTime": "2014-09-03T01:45:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "deef08ac-34fa-4a61-8720-81e857f0df37"
		},
		{
			"deviceTime": "2014-09-03T01:50:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4721e36-12d6-4558-98fc-7496ee09a153"
		},
		{
			"deviceTime": "2014-09-03T01:55:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ecb87b5e-b608-4297-b25f-9c8cb86f380e"
		},
		{
			"delivered": 0.65,
			"end": "2014-09-03T04:00:00",
			"start": "2014-09-03T02:00:00",
			"deliveryType": "scheduled",
			"value": 0.65,
			"id": "eb734283-d0b6-4127-9342-de5e5183c025",
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 7200000,
			"type": "basal-rate-segment",
			"annotations": [
				{
					"code": "demo annotation"
				}
			]
		},
		{
			"deviceTime": "2014-09-03T02:00:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffd711dc-f8be-4e95-bc41-f55a3c47fbf4"
		},
		{
			"deviceTime": "2014-09-03T02:05:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "63e959c6-9b0d-41f6-8a19-f534bd1fb118"
		},
		{
			"deviceTime": "2014-09-03T02:10:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "51ab601b-9c47-414a-a9a6-8fff34d6972f"
		},
		{
			"deviceTime": "2014-09-03T02:15:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bb81bfe7-c818-4d2f-9a3f-30f262f685c1"
		},
		{
			"deviceTime": "2014-09-03T02:20:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "30426fc3-b393-4c3e-9d3f-ab3aa6c7ebdc"
		},
		{
			"deviceTime": "2014-09-03T02:25:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "95571242-60bb-41a4-81ef-e06ef738ea92"
		},
		{
			"deviceTime": "2014-09-03T02:30:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a33db0d5-adde-49db-ba38-d2a7f1538b82"
		},
		{
			"deviceTime": "2014-09-03T02:35:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d909d4d9-fa53-4375-ac5e-ef7ce2943537"
		},
		{
			"deviceTime": "2014-09-03T02:40:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "13cb1b48-7a6d-4bbc-8487-e64aa04b0863"
		},
		{
			"deviceTime": "2014-09-03T02:45:22",
			"value": 83,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34ab2fb9-dba6-4bec-baac-8254ff500f7d"
		},
		{
			"deviceTime": "2014-09-03T02:50:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "f72f3d23-a9c8-4b38-b62f-6369a405f175"
		},
		{
			"deviceTime": "2014-09-03T02:55:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81ec37ac-cec0-4cf3-97aa-c0aad2a5861f"
		},
		{
			"deviceTime": "2014-09-03T03:00:22",
			"value": 82,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b1114b41-c0e7-49bc-8e9a-de8488db2b80"
		},
		{
			"deviceTime": "2014-09-03T03:05:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2e16cfe5-5589-4afe-b4e4-ed8697b7326c"
		},
		{
			"deviceTime": "2014-09-03T03:10:22",
			"value": 77,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d0555b8-72d6-41ff-8de2-8b7af50e114b"
		},
		{
			"deviceTime": "2014-09-03T03:15:22",
			"value": 76,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "498520d1-51b2-4358-805f-b466982949c6"
		},
		{
			"deviceTime": "2014-09-03T03:20:22",
			"value": 75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "11cfdb91-1dc2-40de-b9fd-31bc9b6eb029"
		},
		{
			"deviceTime": "2014-09-03T03:25:22",
			"value": 72,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54e5c2bc-7cf9-48e3-b9f2-0f5d27f66eeb"
		},
		{
			"deviceTime": "2014-09-03T03:30:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "573284da-15d3-4ed2-b4ea-eb3fcc1120b0"
		},
		{
			"deviceTime": "2014-09-03T03:35:22",
			"value": 70,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0b5a9896-32e2-47da-a2b8-9273e942720b"
		},
		{
			"deviceTime": "2014-09-03T03:40:22",
			"value": 67,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0e33043f-a4d2-4182-8771-983f132ae2c3"
		},
		{
			"deviceTime": "2014-09-03T03:45:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c81df1d-cfed-4651-9acd-830886da0080"
		},
		{
			"deviceTime": "2014-09-03T03:50:22",
			"value": 63,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73ea0a4b-f3fb-42a8-bd29-104214a07e72"
		},
		{
			"deviceTime": "2014-09-03T03:55:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6acc5e5a-6c1f-4b62-b209-587b20761e57"
		},
		{
			"delivered": 0.75,
			"end": "2014-09-03T05:00:00",
			"start": "2014-09-03T04:00:00",
			"deliveryType": "scheduled",
			"value": 0.75,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "aee52cee-1b15-4a3c-b3a9-5fb74a5c4fe7"
		},
		{
			"deviceTime": "2014-09-03T04:00:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6bc1ce41-d84e-4cc7-a70e-56a38a304e51"
		},
		{
			"deviceTime": "2014-09-03T04:05:22",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3292d917-8051-4904-8ff6-594fafdfda44"
		},
		{
			"deviceTime": "2014-09-03T04:10:22",
			"value": 64,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffcb9e19-1904-4e6b-a1f1-6067c6ad72f9"
		},
		{
			"deviceTime": "2014-09-03T04:15:22",
			"value": 80,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a7885565-3125-4f77-8e11-8c6d04ec5677"
		},
		{
			"deviceTime": "2014-09-03T04:20:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c4e027a3-ffc3-4d0d-be53-898f50889178"
		},
		{
			"deviceTime": "2014-09-03T04:25:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ce34f39d-19ab-4957-84b0-dd51a77763e1"
		},
		{
			"deviceTime": "2014-09-03T04:30:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "baac6c6c-9a68-4653-a14b-9547ca95b63d"
		},
		{
			"deviceTime": "2014-09-03T04:35:22",
			"value": 89,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c3cccb7-c584-4dec-8765-200a5073a0d3"
		},
		{
			"deviceTime": "2014-09-03T04:40:22",
			"value": 87,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ddf636ff-cb82-45e7-980d-5ecbf558a1a0"
		},
		{
			"deviceTime": "2014-09-03T04:45:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73513f5c-4608-415f-9d56-57e47ca31ed0"
		},
		{
			"deviceTime": "2014-09-03T04:50:22",
			"value": 84,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c6b42c7c-13c1-4a45-a216-262f3fc2c2cd"
		},
		{
			"deviceTime": "2014-09-03T04:55:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d4fbb7b9-56f8-4523-87ee-96f63b4b2ca5"
		},
		{
			"delivered": 0.85,
			"end": "2014-09-03T06:00:00",
			"start": "2014-09-03T05:00:00",
			"deliveryType": "scheduled",
			"value": 0.85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 3600000,
			"type": "basal-rate-segment",
			"id": "a399547b-7ef8-4cac-bbde-e3f177729ea9"
		},
		{
			"deviceTime": "2014-09-03T05:00:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "76e379e8-394e-4d86-9192-06e5e115ed33"
		},
		{
			"deviceTime": "2014-09-03T05:05:22",
			"value": 85,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "889b29d2-2460-4762-a1e8-0a0b707d21a3"
		},
		{
			"deviceTime": "2014-09-03T05:10:22",
			"value": 86,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb579b2a-8d1a-4442-8572-f90ac20a5385"
		},
		{
			"deviceTime": "2014-09-03T05:15:22",
			"value": 88,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "293a177d-16a5-4f6b-8b2e-901907e2876d"
		},
		{
			"deviceTime": "2014-09-03T05:17:52",
			"value": 60,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4fa1723f-04ff-48bd-a4a4-decc25479806"
		},
		{
			"deviceTime": "2014-09-03T05:20:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a4163e3a-b08c-4e5e-aded-5041b769af9d"
		},
		{
			"deviceTime": "2014-09-03T05:25:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "67ac1390-ed65-496e-8bc3-180a8a652249"
		},
		{
			"deviceTime": "2014-09-03T05:30:22",
			"value": 90,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1362637-a1de-4c8d-a465-85c1ab80b4db"
		},
		{
			"deviceTime": "2014-09-03T05:35:22",
			"value": 91,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "de0c672f-ecf4-492a-a3ee-85c4286a5286"
		},
		{
			"deviceTime": "2014-09-03T05:40:22",
			"value": 95,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f47105f-957e-4d38-a4f4-fe5c47c5921b"
		},
		{
			"deviceTime": "2014-09-03T05:45:22",
			"value": 101,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "eed5e5aa-8d12-491e-821f-3023e6a5e17f"
		},
		{
			"deviceTime": "2014-09-03T05:50:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ffa66cc1-6953-459e-9c9f-8f644260fec1"
		},
		{
			"deviceTime": "2014-09-03T05:55:22",
			"value": 111,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3d00bcfb-04c2-4bf1-ae8d-9fcc30a6cfcd"
		},
		{
			"delivered": 1,
			"end": "2014-09-03T09:00:00",
			"start": "2014-09-03T06:00:00",
			"deliveryType": "scheduled",
			"value": 1,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 10800000,
			"type": "basal-rate-segment",
			"id": "3270db97-336f-4976-b104-66501b878ac7"
		},
		{
			"deviceTime": "2014-09-03T06:00:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "85e32aaa-0328-47bf-b090-20fc8bc918de"
		},
		{
			"deviceTime": "2014-09-03T06:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "8329e17c-13de-4e1a-b249-0bdab96c1268"
		},
		{
			"deviceTime": "2014-09-03T06:10:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e8ea6fb4-a257-4711-be36-8e04ba1d99d0"
		},
		{
			"deviceTime": "2014-09-03T06:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf99580c-8e4d-412f-971b-5dce98d447ab"
		},
		{
			"deviceTime": "2014-09-03T06:20:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2d42cb2f-3f12-4491-8e98-0eadcf05e5a5"
		},
		{
			"deviceTime": "2014-09-03T06:25:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e79b0b33-da9c-49ce-98a6-5e9395d4a334"
		},
		{
			"deviceTime": "2014-09-03T06:30:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d79278e7-c442-4037-bfda-9f589bd44469"
		},
		{
			"deviceTime": "2014-09-03T06:55:22",
			"value": 137,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bbd8fe69-484b-432c-a734-d205cddc2d1c"
		},
		{
			"deviceTime": "2014-09-03T07:00:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb2927c8-f11f-4a96-a4d6-a31d733fca63"
		},
		{
			"deviceTime": "2014-09-03T07:05:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4a1b94a9-97ce-45f3-b109-d12f5443477d"
		},
		{
			"deviceTime": "2014-09-03T07:10:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "71792c1b-a363-4b59-8071-faff38a2239c"
		},
		{
			"deviceTime": "2014-09-03T07:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "75befad8-5631-43c2-81da-995a0c59543f"
		},
		{
			"deviceTime": "2014-09-03T07:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "cb316631-123b-42f9-87b8-33f8fa446550"
		},
		{
			"deviceTime": "2014-09-03T07:25:22",
			"value": 112,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bafb0dac-799a-49d7-9ba7-c71593b80988"
		},
		{
			"deviceTime": "2014-09-03T07:30:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28775eeb-7887-4cda-a5a8-29e9ec3b4752"
		},
		{
			"deviceTime": "2014-09-03T07:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be156d1a-3e0a-4b79-b888-bbdf91a47c5d"
		},
		{
			"deviceTime": "2014-09-03T07:40:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d10bb511-c16d-4d82-b860-10447266f443"
		},
		{
			"deviceTime": "2014-09-03T07:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "38a45905-32d8-4aff-8340-5779f20f6e15"
		},
		{
			"deviceTime": "2014-09-03T07:50:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "54cbb493-effb-4280-97a4-b6655ccf863d"
		},
		{
			"deviceTime": "2014-09-03T07:55:22",
			"value": 129,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "60c29a6a-5ceb-4549-93f1-8519ea2e22b3"
		},
		{
			"deviceTime": "2014-09-03T08:00:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6ace6459-e8f1-4a63-8cbb-1d0bf8c50c5e"
		},
		{
			"deviceTime": "2014-09-03T08:05:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c650c920-4f82-493b-9b03-58bb56859946"
		},
		{
			"deviceTime": "2014-09-03T08:10:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "899b5963-452d-4194-8753-2f47808d191c"
		},
		{
			"deviceTime": "2014-09-03T08:13:22",
			"value": 143,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "ade7aed9-572b-45d8-8dce-d1a4ee5de539"
		},
		{
			"deviceTime": "2014-09-03T08:13:22",
			"value": 45,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "a7c1789f-b7e2-4a3d-9cbf-42f2ce5d582b"
		},
		{
			"deviceTime": "2014-09-03T08:13:22",
			"id": "a7c1789f-b7e2-4a3d-9cbf-42f2ce5d582b",
			"source": "demo",
			"joinKey": "44d87de4-b0a4-4d1a-8315-e68e2504add0",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 45
			}
		},
		{
			"deviceTime": "2014-09-03T08:13:22",
			"suspendedAt": "2014-09-03T08:35:52",
			"programmed": 3,
			"joinKey": "44d87de4-b0a4-4d1a-8315-e68e2504add0",
			"value": 3,
			"source": "demo",
			"recommended": 3,
			"extendedDelivery": 0.3,
			"initialDelivery": 2.7,
			"duration": 2700000,
			"extended": true,
			"type": "bolus",
			"id": "4e29f0d9-c2ea-475d-b6a9-5f6aa45616c6",
			"deviceId": "Demo - 123"
		},
		{
			"deviceTime": "2014-09-03T08:15:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "07d059d5-995d-41c1-99a0-1ad6bcc2509a"
		},
		{
			"deviceTime": "2014-09-03T08:20:22",
			"value": 119,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b6ea53e8-7986-4b24-a54a-ecf165836693"
		},
		{
			"deviceTime": "2014-09-03T08:25:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05ae0b17-e5b5-4e58-9780-fe135821d588"
		},
		{
			"deviceTime": "2014-09-03T08:30:22",
			"value": 104,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "31e97887-3b91-4fb2-b21a-99a417f3c6d5"
		},
		{
			"deviceTime": "2014-09-03T08:35:22",
			"value": 106,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9855c6a6-0cf4-43fc-84d6-c03b3ebc6012"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-03T08:35:52",
			"source": "demo",
			"subType": "status",
			"reason": "manual",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "e80119c4-6c9b-4a69-91de-bf22f6922b1a"
		},
		{
			"deviceTime": "2014-09-03T08:40:22",
			"value": 114,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "aef2b0c1-3869-40a3-8ac2-3f6c4c4182c7"
		},
		{
			"deviceTime": "2014-09-03T08:45:22",
			"value": 116,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6685b3c1-e79f-400a-a684-8763ab3703e3"
		},
		{
			"deviceTime": "2014-09-03T08:47:38",
			"value": 94,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "b856ec95-7257-4f8b-a2b9-a2b65eddb1b3"
		},
		{
			"deviceTime": "2014-09-03T08:47:38",
			"value": 22,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "247dc630-8e51-4fc0-aea9-ed27372f4a5f"
		},
		{
			"deviceTime": "2014-09-03T08:47:38",
			"id": "247dc630-8e51-4fc0-aea9-ed27372f4a5f",
			"source": "demo",
			"joinKey": "f58b5207-cc34-4dd3-93da-77661d287135",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 22
			}
		},
		{
			"deviceTime": "2014-09-03T08:47:38",
			"programmed": 1.5,
			"joinKey": "f58b5207-cc34-4dd3-93da-77661d287135",
			"value": 0.4,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "925121e0-2818-488d-96b4-bbc747e96503"
		},
		{
			"deviceTime": "2014-09-03T08:50:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ee883511-69e4-4dca-b07b-cb9216710cdd"
		},
		{
			"deviceTime": "2014-09-03T08:55:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "362d4cc3-ca6f-4543-85cf-6f6319b6990f"
		},
		{
			"delivered": 0.8,
			"end": "2014-09-03T15:00:00",
			"start": "2014-09-03T09:00:00",
			"deliveryType": "scheduled",
			"value": 0.8,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 21600000,
			"type": "basal-rate-segment",
			"id": "6e3a6917-f458-49c5-af15-8d12f7c12933"
		},
		{
			"deviceTime": "2014-09-03T09:00:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "34ff27fb-23a5-4b4e-85fe-8720c6ab95b5"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-03T09:00:22",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "95c90013-6651-4376-a235-02fa82846e8e",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "manual",
				"deviceTime": "2014-09-03T08:35:52",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "e80119c4-6c9b-4a69-91de-bf22f6922b1a"
			}
		},
		{
			"deviceTime": "2014-09-03T09:05:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bc97f452-c6ce-4290-8656-8d9dcbd1cfa6"
		},
		{
			"deviceTime": "2014-09-03T09:05:35",
			"value": 152,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "5585ee72-b96c-439e-952c-a34d4dd1eecb"
		},
		{
			"deviceTime": "2014-09-03T09:05:35",
			"value": 22,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "fed482d3-729c-4b4b-83d5-83677d11db52"
		},
		{
			"deviceTime": "2014-09-03T09:05:35",
			"id": "fed482d3-729c-4b4b-83d5-83677d11db52",
			"source": "demo",
			"joinKey": "fd4cf44f-f4e0-49ce-9c61-9c5c5915e626",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 22
			}
		},
		{
			"deviceTime": "2014-09-03T09:05:35",
			"programmed": 1.5,
			"joinKey": "fd4cf44f-f4e0-49ce-9c61-9c5c5915e626",
			"value": 0.6,
			"source": "demo",
			"recommended": 1.5,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "9295653a-ceff-4d66-b621-2617a9b9a1a7"
		},
		{
			"deviceTime": "2014-09-03T09:10:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2345c133-4f52-44d5-8a24-cc4e0fa36b75"
		},
		{
			"deviceTime": "2014-09-03T09:15:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "be9361eb-e658-4603-aa81-f4e1c0f3fde8"
		},
		{
			"deviceTime": "2014-09-03T09:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fb402275-7e15-4646-9d4b-e8a8634d6d1a"
		},
		{
			"deviceTime": "2014-09-03T09:25:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "444e7b3f-7c9a-4fb0-9173-af75bee54462"
		},
		{
			"deviceTime": "2014-09-03T09:30:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "202bfc0b-2de1-4996-a062-f9dd5d3d8522"
		},
		{
			"deviceTime": "2014-09-03T09:35:22",
			"value": 141,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3062ffe9-e14a-465d-acb1-bd6dbc74a9c2"
		},
		{
			"deviceTime": "2014-09-03T09:40:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "da111ec1-b336-485e-a5c4-0f285e56fa6b"
		},
		{
			"deviceTime": "2014-09-03T09:45:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "81a890d6-0892-46e9-8b32-e09d05749fcb"
		},
		{
			"deviceTime": "2014-09-03T09:50:22",
			"value": 135,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5da9cd92-4ebf-4d26-af44-aec64d5a20da"
		},
		{
			"deviceTime": "2014-09-03T09:55:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "165b59bb-53db-4f40-88de-e946798ad6bd"
		},
		{
			"deviceTime": "2014-09-03T10:00:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "dbbbb07c-e2e7-4f35-afa7-408acda1138e"
		},
		{
			"deviceTime": "2014-09-03T10:05:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7127f27-cf1b-48bc-a409-b90b2fa2596d"
		},
		{
			"deviceTime": "2014-09-03T10:10:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "05f0377b-d1df-48de-9e1d-2c416dbee3d0"
		},
		{
			"deviceTime": "2014-09-03T10:15:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "24627e1e-7dc7-488a-8cb0-577641317d72"
		},
		{
			"deviceTime": "2014-09-03T10:20:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9653a732-389c-4d8b-bf93-f29e2920185f"
		},
		{
			"deviceTime": "2014-09-03T10:25:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "1353f895-74d2-4b98-bbcd-33997701040e"
		},
		{
			"deviceTime": "2014-09-03T10:30:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "2c63a847-b2dd-4234-942b-c47e6ef43db1"
		},
		{
			"deviceTime": "2014-09-03T10:35:22",
			"value": 122,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4fbc6cee-71bb-40d0-bca5-2ee0455d048d"
		},
		{
			"deviceTime": "2014-09-03T10:40:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a1007ee5-7d6b-4b6a-bba8-494649e7c46b"
		},
		{
			"deviceTime": "2014-09-03T10:45:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "93001d0f-7b1f-444c-b8c0-967dc0ed52fb"
		},
		{
			"deviceTime": "2014-09-03T10:50:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3da4085b-63c7-442e-8364-f69eb2afc8fe"
		},
		{
			"deviceTime": "2014-09-03T10:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4c6a2d8c-47ed-486a-93e7-41cda9d252dc"
		},
		{
			"deviceTime": "2014-09-03T11:00:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "28aba6e4-b5e6-4fe9-b482-eb3e798b688c"
		},
		{
			"deviceTime": "2014-09-03T11:05:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "08984f6f-64e5-4f65-8e38-f309cb227636"
		},
		{
			"deviceTime": "2014-09-03T11:10:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6c851887-4ab6-47eb-adff-679b5157b2f1"
		},
		{
			"deviceTime": "2014-09-03T11:15:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "64ce8351-72c9-4ca1-812c-5c9a5bc4ba0e"
		},
		{
			"deviceTime": "2014-09-03T11:20:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3541874b-392e-44a3-b0cf-21a5e829f26c"
		},
		{
			"deviceTime": "2014-09-03T11:25:22",
			"value": 126,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "bf3210ed-ee20-4700-af4a-64061c8b08d8"
		},
		{
			"deviceTime": "2014-09-03T11:30:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "47c4acb8-bad4-475e-8c9d-7f8a4b6e911c"
		},
		{
			"deviceTime": "2014-09-03T11:34:51",
			"value": 153,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "4fa3ce1d-03cc-454e-8641-2577cd5d47fa"
		},
		{
			"deviceTime": "2014-09-03T11:34:51",
			"value": 74,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "89d666f3-92fc-4746-b6a7-3e389d641250"
		},
		{
			"deviceTime": "2014-09-03T11:34:51",
			"id": "89d666f3-92fc-4746-b6a7-3e389d641250",
			"source": "demo",
			"joinKey": "d5186457-b828-4377-aa6b-31482eefe8f9",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 74
			}
		},
		{
			"deviceTime": "2014-09-03T11:34:51",
			"programmed": 4.4,
			"joinKey": "d5186457-b828-4377-aa6b-31482eefe8f9",
			"value": 4.4,
			"source": "demo",
			"recommended": 4.9,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "466af155-eb1f-424c-a371-b48c3e76125b"
		},
		{
			"deviceTime": "2014-09-03T11:35:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "0c31fe14-59d0-4103-919a-c51849fcdda2"
		},
		{
			"deviceTime": "2014-09-03T11:40:22",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5d5a5be0-3d87-494d-bac3-6d717d6d6692"
		},
		{
			"deviceTime": "2014-09-03T11:45:22",
			"value": 124,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ed22c4aa-ceea-4246-afda-e619b418a824"
		},
		{
			"deviceTime": "2014-09-03T11:50:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "3dc7edbf-a219-46fa-a6e1-09d41a105bcb"
		},
		{
			"deviceTime": "2014-09-03T11:55:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "12ae42f3-a070-4a1a-b9e4-82c4039f5270"
		},
		{
			"deviceTime": "2014-09-03T11:55:33",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "483c04e1-f88a-4ea9-83de-89dcce45ec79"
		},
		{
			"deviceTime": "2014-09-03T11:55:33",
			"value": 61,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "8c9624e7-5916-406f-b1a8-1d9e1fdfdb27"
		},
		{
			"deviceTime": "2014-09-03T11:55:33",
			"id": "8c9624e7-5916-406f-b1a8-1d9e1fdfdb27",
			"source": "demo",
			"joinKey": "8095d4d1-5f38-4876-92c6-5aecb9b9f66c",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 61
			}
		},
		{
			"deviceTime": "2014-09-03T11:55:33",
			"suspendedAt": "2014-09-03T13:15:33",
			"programmed": 4.1,
			"joinKey": "8095d4d1-5f38-4876-92c6-5aecb9b9f66c",
			"value": 4.1,
			"source": "demo",
			"recommended": 4.1,
			"extendedDelivery": 4.1,
			"deviceId": "Demo - 123",
			"duration": 14400000,
			"extended": true,
			"type": "bolus",
			"id": "06ff302a-a292-4551-a363-b894b0761b84"
		},
		{
			"deviceTime": "2014-09-03T12:00:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "23c9d338-ac41-4d2a-ba5b-297633b073b1"
		},
		{
			"deviceTime": "2014-09-03T12:05:22",
			"value": 113,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "708b3a56-809f-401d-961b-0d8b2dcd360b"
		},
		{
			"deviceTime": "2014-09-03T12:08:19",
			"value": 123,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "smbg",
			"id": "765e7ee5-1629-4c9f-8067-37c972743158"
		},
		{
			"deviceTime": "2014-09-03T12:08:19",
			"value": 102,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "grams",
			"type": "carbs",
			"id": "159d6fff-50e1-40cd-9932-7886b8376dfd"
		},
		{
			"deviceTime": "2014-09-03T12:08:19",
			"id": "159d6fff-50e1-40cd-9932-7886b8376dfd",
			"source": "demo",
			"joinKey": "564f668c-76db-4f6c-8e74-5e22665be5f0",
			"deviceId": "Demo - 123",
			"type": "wizard",
			"payload": {
				"carbUnits": "grams",
				"carbInput": 102
			}
		},
		{
			"deviceTime": "2014-09-03T12:08:19",
			"programmed": 6.8,
			"joinKey": "564f668c-76db-4f6c-8e74-5e22665be5f0",
			"value": 6.8,
			"source": "demo",
			"recommended": 6.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "af687cf4-8843-496d-b6e1-75775ca45002"
		},
		{
			"deviceTime": "2014-09-03T12:10:22",
			"value": 107,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "7f94016b-00c8-4c02-8c47-29a846e7555e"
		},
		{
			"deviceTime": "2014-09-03T12:15:22",
			"value": 108,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "273b1580-567f-48e0-815b-15190a842381"
		},
		{
			"deviceTime": "2014-09-03T12:20:22",
			"value": 110,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "fa47f940-8f6e-45d8-b620-79aa6bb3a1ed"
		},
		{
			"deviceTime": "2014-09-03T12:25:22",
			"value": 117,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d7786eb2-20c3-410f-8f24-ecd1192e0e90"
		},
		{
			"deviceTime": "2014-09-03T12:30:22",
			"value": 125,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "ac3fe6b5-8f99-4777-9bc8-e938611cb936"
		},
		{
			"deviceTime": "2014-09-03T12:35:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "9adc81a1-e1a4-4844-9a39-0d32a678d775"
		},
		{
			"deviceTime": "2014-09-03T12:40:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "4780121f-b9d4-48ca-86f4-93d951eb7689"
		},
		{
			"deviceTime": "2014-09-03T12:45:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "53af7a1a-022d-4ca4-888c-03c035880b15"
		},
		{
			"deviceTime": "2014-09-03T12:50:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "16cfca9c-be9d-4154-a195-6956768114b8"
		},
		{
			"deviceTime": "2014-09-03T12:55:22",
			"value": 127,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1095b36-ea2c-4368-81b8-22c439ce0919"
		},
		{
			"deviceTime": "2014-09-03T13:00:22",
			"value": 120,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "42a21f61-017b-4d93-aa20-2f73b29bc601"
		},
		{
			"deviceTime": "2014-09-03T13:05:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "48901090-4507-4ef8-ad8b-905aa4d737e2"
		},
		{
			"deviceTime": "2014-09-03T13:10:22",
			"value": 115,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "757cce76-3c6f-430c-b00f-0926a836dac2"
		},
		{
			"messageText": "Turkey sint laborum duis shankle cillum shoulder magna t-bone ullamco venison.",
			"parentMessage": "",
			"utcTime": "2014-09-03T13:11:35Z",
			"type": "message",
			"id": "c30b413f-dcb9-44f0-8333-3168bd6151aa"
		},
		{
			"deviceTime": "2014-09-03T13:15:22",
			"value": 118,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "b159daba-2739-4d19-8701-d4ec3217745e"
		},
		{
			"status": "suspended",
			"deviceTime": "2014-09-03T13:15:33",
			"source": "demo",
			"subType": "status",
			"reason": "low_glucose",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "fbb69685-7d4f-4c06-863d-c0acefd5df87"
		},
		{
			"deviceTime": "2014-09-03T13:20:22",
			"value": 121,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "d55f9ce5-7e29-4de1-8c92-598f1a11cf38"
		},
		{
			"deviceTime": "2014-09-03T13:25:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e87ecac5-0589-44d7-bf2c-cc14d858cf19"
		},
		{
			"deviceTime": "2014-09-03T13:30:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "c1990e2f-a389-4905-8b36-4d45430084ec"
		},
		{
			"deviceTime": "2014-09-03T13:35:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "e39c617d-d520-4cf7-9456-6b7b51b86481"
		},
		{
			"deviceTime": "2014-09-03T13:40:22",
			"value": 133,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5f61b570-2975-4131-9937-4dc35a0cd1eb"
		},
		{
			"deviceTime": "2014-09-03T13:45:22",
			"value": 132,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "168676a4-ee19-4fb6-b5a7-508e9a7bd88b"
		},
		{
			"deviceTime": "2014-09-03T13:50:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "db0883a2-4224-4e75-9897-4165d91a19e8"
		},
		{
			"deviceTime": "2014-09-03T13:55:22",
			"value": 131,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a9a2f9e9-e5d9-4e0f-9ebf-1c3d38711daf"
		},
		{
			"deviceTime": "2014-09-03T14:00:22",
			"value": 128,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "6639431e-0c94-4a52-b4ae-d6ca661b3297"
		},
		{
			"deviceTime": "2014-09-03T14:05:22",
			"value": 130,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "952285da-402c-41f8-b92c-51ff7df13a87"
		},
		{
			"deviceTime": "2014-09-03T14:10:22",
			"value": 134,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "820b0e12-e45d-42e1-a72a-419504e116fa"
		},
		{
			"deviceTime": "2014-09-03T14:15:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "5244c2f5-7bf0-4057-bf6d-2ed2bc1dab6c"
		},
		{
			"deviceTime": "2014-09-03T14:20:22",
			"value": 136,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "73bdf3af-f448-4ed2-811d-130b2902d7e4"
		},
		{
			"deviceTime": "2014-09-03T14:25:22",
			"value": 139,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "a26fe801-6cd9-4d55-ab3a-9690eadebc60"
		},
		{
			"deviceTime": "2014-09-03T14:30:22",
			"value": 142,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "198aa98b-e74a-479b-af12-16f0abadb716"
		},
		{
			"deviceTime": "2014-09-03T14:35:22",
			"value": 144,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "66767e24-9913-4501-bae7-9441df85699e"
		},
		{
			"status": "resumed",
			"deviceTime": "2014-09-03T14:36:33",
			"source": "demo",
			"subType": "status",
			"reason": "automatic",
			"deviceId": "Demo - 123",
			"type": "deviceMeta",
			"id": "1c6c0da3-ba4e-41ff-90ff-d81a9439cb90",
			"previous": {
				"status": "suspended",
				"subType": "status",
				"reason": "low_glucose",
				"deviceTime": "2014-09-03T13:15:33",
				"deviceId": "Demo - 123",
				"source": "demo",
				"type": "deviceMeta",
				"id": "fbb69685-7d4f-4c06-863d-c0acefd5df87"
			}
		},
		{
			"deviceTime": "2014-09-03T14:40:22",
			"value": 140,
			"source": "demo",
			"deviceId": "Demo - 123",
			"units": "mg/dL",
			"type": "cbg",
			"id": "043458bb-9800-40c0-a682-6fc5019955ac"
		},
		{
			"deviceTime": "2014-09-03T14:45:22",
			"activeBasalSchedule": "Standard",
			"bgTarget": [
				{
					"high": 100,
					"start": 0,
					"low": 80
				}
			],
			"carbRatio": [
				{
					"start": 0,
					"amount": 15
				}
			],
			"insulinSensitivity": [
				{
					"start": 0,
					"amount": 75
				}
			],
			"source": "demo",
			"basalSchedules": {
				"Pattern B": [
					{
						"start": 0,
						"rate": 0.8
					},
					{
						"start": 7200000,
						"rate": 0.65
					},
					{
						"start": 14400000,
						"rate": 0.75
					},
					{
						"start": 18000000,
						"rate": 0.85
					},
					{
						"start": 23400000,
						"rate": 1.2
					},
					{
						"start": 32400000,
						"rate": 0.9
					},
					{
						"start": 54000000,
						"rate": 0.9
					},
					{
						"start": 72000000,
						"rate": 0.95
					}
				],
				"Pattern A": [
					{
						"start": 0,
						"rate": 0.8
					},
					{
						"start": 7200000,
						"rate": 0.5
					},
					{
						"start": 16200000,
						"rate": 0.6
					},
					{
						"start": 18000000,
						"rate": 0.85
					},
					{
						"start": 21600000,
						"rate": 1
					},
					{
						"start": 34200000,
						"rate": 0.7
					},
					{
						"start": 54000000,
						"rate": 0.9
					},
					{
						"start": 73800000,
						"rate": 0.95
					}
				],
				"Standard": [
					{
						"start": 0,
						"rate": 0.8
					},
					{
						"start": 7200000,
						"rate": 0.65
					},
					{
						"start": 14400000,
						"rate": 0.75
					},
					{
						"start": 18000000,
						"rate": 0.85
					},
					{
						"start": 21600000,
						"rate": 1
					},
					{
						"start": 32400000,
						"rate": 0.8
					},
					{
						"start": 54000000,
						"rate": 0.9
					},
					{
						"start": 72000000,
						"rate": 0.8
					}
				]
			},
			"deviceId": "Demo - 123",
			"type": "settings",
			"id": "1a701993-d1e0-4e01-b076-490d27e8ac96"
		},
		{
			"delivered": 0.9,
			"end": "2014-09-03T17:15:01",
			"start": "2014-09-03T15:00:00",
			"deliveryType": "scheduled",
			"value": 0.9,
			"source": "demo",
			"deviceId": "Demo - 123",
			"duration": 8101000,
			"type": "basal-rate-segment",
			"id": "617fcd2f-bc76-406c-b78f-41de358f0bef"
		},
		{
			"deviceTime": "2014-09-03T17:15:01",
			"value": 0.8,
			"source": "demo",
			"recommended": 0.8,
			"deviceId": "Demo - 123",
			"type": "bolus",
			"id": "c8a3497b-e0c6-4e37-b48c-7f9c9b099af6"
		}
	]

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/** @jsx React.DOM */
	var bows = window.bows;
	var React = window.React;
	var cx = React.addons.classSet;

	var tideline = {
	  log: bows('Header')
	};

	var TidelineHeader = React.createClass({displayName: 'TidelineHeader',
	  propTypes: {
	    chartType: React.PropTypes.string.isRequired,
	    inTransition: React.PropTypes.bool.isRequired,
	    atMostRecent: React.PropTypes.bool.isRequired,
	    title: React.PropTypes.string.isRequired,
	    onClickBack: React.PropTypes.func,
	    onClickMostRecent: React.PropTypes.func.isRequired,
	    onClickNext: React.PropTypes.func,
	    onClickOneDay: React.PropTypes.func.isRequired,
	    onClickTwoWeeks: React.PropTypes.func.isRequired,
	    onClickSettings: React.PropTypes.func.isRequired
	  },
	  render: function() {
	    var next = this.props.next;
	    var back = this.props.back;
	    var mostRecent = this.props.mostRecent;

	    var dayLinkClass = cx({
	      'tidelineNavLabel': true,
	      'active': this.props.chartType === 'daily'
	    });

	    var weekLinkClass = cx({
	      'tidelineNavLabel': true,
	      'active': this.props.chartType === 'weekly'
	    });

	    var mostRecentLinkClass = cx({
	      'active': !this.props.atMostRecent && !this.props.inTransition,
	      'inactive': this.props.atMostRecent || this.props.inTransition,
	      'hidden': this.props.chartType === 'settings'
	    });

	    var backClass = cx({
	      'active': !this.props.inTransition,
	      'inactive': this.props.inTransition,
	      'hidden': this.props.chartType === 'settings'
	    });

	    var nextClass = cx({
	      'active': !this.props.atMostRecent && !this.props.inTransition,
	      'inactive': this.props.atMostRecent || this.props.inTransition,
	      'hidden': this.props.chartType === 'settings'
	    });

	    var settingsLinkClass = cx({
	      'tidelineNavLabel': true,
	      'tidelineNavRightLabel': true,
	      'active': this.props.chartType === 'settings'
	    });

	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {className:"tidelineNav grid"}, 
	        React.DOM.div( {className:"grid-item one-quarter"}, 
	          React.DOM.div( {className:"grid-item three-eighths"}, 
	            React.DOM.a( {className:dayLinkClass, onClick:this.props.onClickOneDay}, "One Day")
	          ),
	          React.DOM.div( {className:"grid-item one-half"}, 
	            React.DOM.a( {className:weekLinkClass, onClick:this.props.onClickTwoWeeks}, "Two Weeks")
	          )
	        ),
	        React.DOM.div( {className:"grid-item one-half", id:"tidelineLabel"}, 
	          React.DOM.a( {href:"#", className:backClass, onClick:this.props.onClickBack}, React.DOM.i( {className:this.props.iconBack})),
	          React.DOM.div( {className:"tidelineNavLabelWrapper"}, 
	            React.DOM.span( {className:"tidelineNavLabel"}, this.props.title)
	          ),
	          React.DOM.a( {href:"#", className:nextClass, onClick:this.props.onClickNext}, React.DOM.i( {className:this.props.iconNext})),
	          React.DOM.a( {href:"#", className:mostRecentLinkClass, onClick:this.props.onClickMostRecent}, React.DOM.i( {className:this.props.iconMostRecent}))
	        ),
	        React.DOM.div( {className:"grid-item one-quarter"}, 
	          React.DOM.a( {className:settingsLinkClass, onClick:this.props.onClickSettings}, "Device Settings")
	        )
	      )
	      );
	    /* jshint ignore:end */
	  }
	});

	module.exports = TidelineHeader;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/** @jsx React.DOM */
	var bows = window.bows;
	var React = window.React;
	var cx = React.addons.classSet;

	var tideline = {
	  log: bows('Footer')
	};

	var TidelineFooter = React.createClass({displayName: 'TidelineFooter',
	  propTypes: {
	    chartType: React.PropTypes.string.isRequired,
	    onClickValues: React.PropTypes.func,
	    showingValues: React.PropTypes.bool
	  },
	  render: function() {
	    var valuesLinkClass = cx({
	      'tidelineNavLabel': true,
	      'tidelineNavRightLabel': true
	    });

	    function getValuesLinkText(props) {
	      if (props.chartType === 'weekly') {
	        if (props.showingValues) {
	          return 'Hide Values';
	        }
	        else {
	          return 'Show Values';
	        }
	      }
	      else {
	        return '';
	      }
	    }

	    var valuesLinkText = getValuesLinkText(this.props);

	    /* jshint ignore:start */
	    var showValues = (
	      React.DOM.a( {className:valuesLinkClass, onClick:this.props.onClickValues}, valuesLinkText)
	      );
	    /* jshint ignore:end */

	    /* jshint ignore:start */
	    return (
	      React.DOM.div( {className:"tidelineNav grid"}, 
	        React.DOM.div( {className:"grid-item one-half"}
	        ),
	        React.DOM.div( {className:"grid-item one-half"}, showValues)
	      )
	      );
	    /* jshint ignore:end */
	  }
	});

	module.exports = TidelineFooter;


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	module.exports = {
	  oneday: __webpack_require__(50),
	  twoweek: __webpack_require__(51),
	  settings: __webpack_require__(52)
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;
	var d3 = __webpack_require__(25).d3;

	var TidelineCrossFilter = __webpack_require__(23);
	var BasalUtil = __webpack_require__(15);
	var BolusUtil = __webpack_require__(16);
	var BGUtil = __webpack_require__(17);
	var SettingsUtil = __webpack_require__(20);
	var dt = __webpack_require__(21);

	var log = __webpack_require__(25).bows('TidelineData');

	function TidelineData(data, opts) {

	  opts = opts || {};

	  var defaults = {
	    CBG_PERCENT_FOR_ENOUGH: 0.75,
	    CBG_MAX_DAILY: 288,
	    SMBG_DAILY_MIN: 4,
	    fillOpts: {
	      classes: {
	        0: 'darkest',
	        3: 'dark',
	        6: 'lighter',
	        9: 'light',
	        12: 'lightest',
	        15: 'lighter',
	        18: 'dark',
	        21: 'darker'
	      },
	      duration: 3
	    },
	    diabetesDataTypes: [
	      'smbg',
	      'carbs',
	      'bolus',
	      'cbg',
	      'settings',
	      'basal-rate-segment'
	    ]
	  };

	  _.defaults(opts, defaults);
	  var that = this;

	  function addAndResort(datum, a) {
	    return _.sortBy((function() {
	      a.push(datum);
	      return a;
	    }()), function(d) { return d.normalTime; });
	  }

	  function updateCrossFilters(data) {
	    that.filterData = new TidelineCrossFilter(data);
	    that.dataByDate = that.createCrossFilter('date');
	    that.dataById = that.createCrossFilter('id');
	    that.dataByType = that.createCrossFilter('datatype');
	  }

	  this.createCrossFilter = function(dim) {
	    return this.filterData.addDimension(dim);
	  };

	  this.addDatum = function(datum) {
	    this.grouped[datum.type] = addAndResort(datum, this.grouped[datum.type]);
	    this.data = addAndResort(datum, this.data);
	    updateCrossFilters(this.data);
	    return this;
	  };

	  this.editDatum = function(datum, timeKey) {
	    this.dataById.filter(datum.id);
	    var newDatum = this.filterData.getOne(this.dataById);
	    // because some timestamps are deviceTime, some are utcTime
	    newDatum[timeKey] = datum[timeKey];
	    // everything has normalTime
	    newDatum.normalTime = datum.normalTime;
	    // remove pre-updated datum and add updated
	    this.filterData.remove();
	    this.filterData.add(newDatum);
	    // clear filters
	    this.dataById.filter(null);
	    this.dataByDate.filter(null);
	    return this;
	  };

	  function fillDataFromInterval(first, last) {
	    var data = [];
	    var points = d3.time.hour.utc.range(first, last, opts.fillOpts.duration);
	    for (var i = 0; i < points.length; ++i) {
	      if (i !== points.length - 1) {
	        data.push({
	          fillColor: opts.fillOpts.classes[points[i].getUTCHours()],
	          id: 'fill_' + points[i].toISOString().replace(/[^\w\s]|_/g, ''),
	          normalEnd: points[i + 1].toISOString(),
	          normalTime: points[i].toISOString(),
	          type: 'fill'
	        });
	      }
	    }
	    return data;
	  }

	  function getTwoWeekFillEndpoints() {
	    var data;
	    if (that.grouped.smbg && that.grouped.smbg.length !== 0) {
	      data = that.grouped.smbg;
	    }
	    else {
	      data = that.diabetesData;
	    }
	    var first = data[0].normalTime, last = data[data.length - 1].normalTime;
	    return [dt.getMidnight(first), dt.getMidnight(last, true)];
	  }

	  this.generateFillData = function() {
	    var lastDatum = data[data.length - 1];
	    // the fill should extend past the *end* of a segment (i.e. of basal data)
	    // if that's the last datum in the data
	    var lastTimestamp = lastDatum.normalEnd || lastDatum.normalTime;
	    var first = new Date(data[0].normalTime), last = new Date(lastTimestamp);
	    // make sure we encapsulate the domain completely by padding the start and end with twice the duration
	    first.setUTCHours(first.getUTCHours() - first.getUTCHours() % opts.fillOpts.duration - (opts.fillOpts.duration * 2));
	    last.setUTCHours(last.getUTCHours() + last.getUTCHours() % opts.fillOpts.duration + (opts.fillOpts.duration * 2));
	    this.grouped.fill = fillDataFromInterval(first, last);
	    return this;
	  };

	  // two-week view requires background fill rectangles from midnight to midnight
	  // for each day from the first through last days where smbg exists at all
	  this.adjustFillsForTwoWeekView = function() {
	    var fillData = this.grouped.fill;
	    var endpoints = getTwoWeekFillEndpoints();
	    var startOfTwoWeekFill = endpoints[0], endOfTwoWeekFill = endpoints[1];
	    var startOfFill = fillData[0].normalEnd, endOfFill = fillData[fillData.length - 1].normalEnd;
	    this.twoWeekData = this.grouped.smbg || [];
	    var twoWeekFills = [];
	    for (var i = 0; i < this.grouped.fill.length; ++i) {
	      var d = this.grouped.fill[i];
	      if (d.normalTime >= startOfFill || d.normalTime <= endOfFill) {
	        twoWeekFills.push(d);
	      }
	    }

	    // first, fill in two week fills where potentially missing at the end of data domain
	    if (endOfTwoWeekFill > endOfFill) {
	      var end = new Date(endOfTwoWeekFill);
	      // intervals are exclusive of endpoint, so
	      // to get last segment, need to extend endpoint out +1
	      end.setUTCHours(end.getUTCHours() + 3);
	      twoWeekFills = twoWeekFills.concat(
	        fillDataFromInterval(new Date(endOfFill),end)
	      );
	    }
	    else {
	      // filter out any fills from two week fills that go beyond extent of smbg data
	      twoWeekFills = _.reject(twoWeekFills, function(d) {
	        return d.normalTime >= endOfTwoWeekFill;
	      });
	    }

	    // similarly, fill in two week fills where potentially missing at the beginning of data domain
	    if (startOfTwoWeekFill < startOfFill) {
	      twoWeekFills = twoWeekFills.concat(
	        fillDataFromInterval(new Date(startOfTwoWeekFill), new Date(startOfFill))
	      );
	    }
	    else {
	      // filter out any fills from two week fills that go beyond extent of smbg data
	      twoWeekFills = _.reject(twoWeekFills, function(d) {
	        return d.normalTime < startOfTwoWeekFill;
	      });
	    }

	    this.twoWeekData = _.sortBy(this.twoWeekData.concat(twoWeekFills), function(d) {
	      return d.normalTime;
	    });
	  };

	  this.grouped = _.groupBy(data, function(d) { return d.type; });

	  this.diabetesData = _.sortBy(_.flatten([].concat(_.map(opts.diabetesDataTypes, function(type) {
	    return this.grouped[type] || [];
	  }, this))), function(d) {
	    return d.normalTime;
	  });

	  this.basalUtil = new BasalUtil(this.grouped['basal-rate-segment']);
	  this.bolusUtil = new BolusUtil(this.grouped.bolus);
	  this.cbgUtil = new BGUtil(this.grouped.cbg, {DAILY_MIN: (opts.CBG_PERCENT_FOR_ENOUGH * opts.CBG_MAX_DAILY)});
	  this.smbgUtil = new BGUtil(this.grouped.smbg, {DAILY_MIN: opts.SMBG_DAILY_MIN});
	  
	  if (data.length > 0 && !_.isEmpty(this.diabetesData)) {
	    this.settingsUtil = new SettingsUtil(this.grouped.settings || [], [this.diabetesData[0].normalTime, this.diabetesData[this.diabetesData.length - 1].normalTime]);
	    this.settingsUtil.getAllSchedules(this.settingsUtil.endpoints[0], this.settingsUtil.endpoints[1]);
	    var segmentsBySchedule = this.settingsUtil.annotateBasalSettings(this.basalUtil.actual);
	    this.grouped['basal-settings-segment'] = [];
	    for (var key in segmentsBySchedule) {
	      this.grouped['basal-settings-segment'] = this.grouped['basal-settings-segment'].concat(segmentsBySchedule[key]);
	    }
	    this.data = _.sortBy(data.concat(this.grouped['basal-settings-segment']), function(d) {
	      return d.normalTime;
	    });

	    this.generateFillData().adjustFillsForTwoWeekView();
	    this.data = _.sortBy(this.data.concat(this.grouped.fill), function(d) { return d.normalTime; });
	  }
	  else {
	    this.data = [];
	  }
	  
	  updateCrossFilters(this.data);

	  return this;
	}

	module.exports = TidelineData;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var legend = __webpack_require__(39);

	var log = __webpack_require__(25).bows('Pool');

	function Pool (container) {

	  var id, label, legends = [],
	    index, weight, gutterWeight, hidden = false, yPosition,
	    height, minHeight = 20, maxHeight = 300,
	    group,
	    mainSVG = d3.select('#' + container.id()),
	    xScale,
	    imagesBaseUrl = container.imagesBaseUrl(),
	    yAxis = [],
	    plotTypes = [],
	    annotations,
	    tooltips, nativeTooltips;

	  this.render = function(selection, poolData) {
	    var pool = this;
	    plotTypes.forEach(function(plotType) {
	      if (container.dataFill[plotType.type]) {
	        plotType.data = _.where(poolData, {'type': plotType.type});
	        var dataGroup = group.selectAll('#' + id + '_' + plotType.type).data([plotType.data]);
	        dataGroup.enter().append('g').attr('id', id + '_' + plotType.type);
	        if (plotType.data.length !== 0) {
	          dataGroup.call(plotType.plot);
	        }
	      }
	      else if (plotType.type === 'stats') {
	        var statsGroup = group.selectAll('#' + id + '_stats').data([null]);
	        statsGroup.enter().append('g').attr('id', id + '_stats').call(plotType.plot);
	      }
	      else {
	        log('WARNING: I am confused: the only plot type not classified as dataFill should be stats.');
	      }
	    });

	    this.drawAxes();
	    this.updateAxes();
	    this.drawLabel();
	    this.drawLegend();
	  };

	  this.clear = function() {
	    plotTypes.forEach(function(plotType) {
	      if (container.dataFill[plotType.type])  {
	        group.select('#' + id + '_' + plotType.type).remove();
	      }
	    });
	    group.select('#' + id + '_guidelines').remove();
	  };

	  // non-chainable methods
	  this.pan = function(e) {
	    container.latestTranslation(e.translate[0]);
	    plotTypes.forEach(function(plotType) {
	      if (plotType.panBoolean) {
	        mainSVG.select('#' + id + '_' + plotType.type).attr('transform', 'translate(' + e.translate[0] + ',0)');
	      }
	    });
	  };

	  this.scroll = function(e) {
	    container.latestTranslation(e.translate[1]);
	    plotTypes.forEach(function(plotType) {
	      mainSVG.select('#' + id + '_' + plotType.type).attr('transform', 'translate(0,' + e.translate[1] + ')');
	    });
	  };

	  // getters only
	  this.group = function() {
	    return group;
	  };

	  this.parent = function() {
	    return mainSVG;
	  };

	  this.width = function() {
	    return container.width() - container.axisGutter();
	  };

	  this.imagesBaseUrl = function() {
	    return imagesBaseUrl;
	  };

	  // only once methods
	  this.drawLabel = _.once(function() {
	    label = label || [];
	    var labels = [], widths = [];
	    if (label.length > 0) {
	      _.each(label, function(l, i) {
	        labels.push(
	          mainSVG.select('#tidelineLabels')
	          .append('text')
	          .attr({
	            'id': id + '_label_' + i,
	            'class': 'd3-pool-label'
	          })
	          .text(l.main));
	      });
	      var currentX = container.axisGutter();
	      _.each(labels, function(l, i) {
	        l.append('tspan')
	          .text(label[i].light)
	          .each(function() {
	            widths.push(this.getBBox().width);
	          });
	        if (widths[i - 1]) {
	          currentX = currentX + widths[i - 1];
	        }
	        l.attr({
	          'xml:space': 'preserve',
	          'transform': 'translate(' + currentX  + ',' + yPosition + ')'
	        });
	      });
	    }

	    return this;
	  });

	  this.drawLegend = _.once(function() {
	    if (legends.length === 0) {
	      return;
	    }
	    var w = this.width() + container.axisGutter();
	    _.each(legends, function(l) {
	      var legendGroup = mainSVG.select('#tidelineLabels')
	        .append('g')
	        .attr({
	          'id': id + '_legend_' + l,
	          'transform': 'translate(' + w + ',' + yPosition + ')'
	        });
	      w -= legend.draw(legendGroup, l).width + legend.SHAPE_MARGIN*2;
	    });

	  });

	  this.drawAxes = _.once(function() {
	    var axisGroup = mainSVG.select('#tidelineYAxes');
	    yAxis.forEach(function(axis, i) {
	      axisGroup.append('g')
	        .attr('class', 'd3-y d3-axis')
	        .attr('id', 'pool_' + id + '_yAxis_' + i)
	        .attr('transform', 'translate(' + (container.axisGutter() - 1) + ',' + yPosition + ')');
	    });
	    return this;
	  });

	  this.updateAxes = function() {
	    var axisGroup = mainSVG.select('#tidelineYAxes');
	    yAxis.forEach(function(axis, i) {
	      axisGroup.select('#pool_' + id + '_yAxis_' + i)
	        .call(axis);
	    });
	    return this;
	  };

	  // getters & setters
	  this.id = function(x, selection) {
	    if (!arguments.length) return id;
	    id = x;
	    group = selection.append('g').attr('id', id);
	    return this;
	  };

	  this.label = function(o) {
	    if (!arguments.length) return label;
	    label = o;
	    return this;
	  };

	  this.legend = function(a) {
	    if (!arguments.length) return legends;
	    legends = a;
	    return this;
	  };

	  this.index = function(x) {
	    if (!arguments.length) return index;
	    index = x;
	    return this;
	  };

	  this.weight = function(x) {
	    if (!arguments.length) return weight;
	    weight = x;
	    return this;
	  };

	  this.height = function(x) {
	    if (!arguments.length) return height;
	    x = x * this.weight();
	    if (x <= maxHeight) {
	      if (x >= minHeight) {
	        height = x;
	      }
	      else {
	        height = minHeight;
	      }
	    }
	    else {
	      height = maxHeight;
	    }
	    return this;
	  };

	  this.gutterWeight = function(x) {
	    if (!arguments.length) return gutterWeight;
	    gutterWeight = x;
	    return this;
	  };

	  this.hidden = function(x) {
	    if (!arguments.length) return hidden;
	    if (x === true) {
	      hidden = true;
	    }
	    return this;
	  };

	  this.yPosition = function(x) {
	    if (!arguments.length) return yPosition;
	    yPosition = x;
	    return this;
	  };

	  this.annotations = function(f) {
	    if (!arguments.length) return annotations;
	    annotations = f;
	    return this;
	  };

	  this.tooltips = function(f) {
	    if (!arguments.length) return tooltips;
	    tooltips = f;
	    return this;
	  };

	  this.nativeTooltips = function(f) {
	    if (!arguments.length) return nativeTooltips;
	    nativeTooltips = f;
	    return this;
	  };

	  this.xScale = function(f) {
	    if (!arguments.length) return xScale;
	    xScale = f;
	    return this;
	  };

	  this.yAxis = function(x) {
	    if (!arguments.length) return yAxis;
	    yAxis.push(x);
	    return this;
	  };

	  this.addPlotType = function (dataType, plotFunction, dataFillBoolean, panBoolean) {
	    plotTypes.push({
	      type: dataType,
	      plot: plotFunction,
	      panBoolean: panBoolean
	    });
	    if (dataFillBoolean) {
	      container.dataFill[dataType] = true;
	    }
	    return this;
	  };

	  this.highlight = function(background, opts) {
	    opts = _.defaults(opts || {}, {
	      subdueOpacity: 0.6
	    });

	    return {
	      on: function(el) {
	        if(_.isString(background)) {
	          background = mainSVG.selectAll(background);
	        }

	        background.attr('opacity', opts.subdueOpacity);
	        el.attr('opacity', 1);
	      },
	      off: function() {
	        if(_.isString(background)) {
	          background = mainSVG.selectAll(background);
	        }

	        background.attr('opacity', 1);
	      }
	    };
	  };

	  return this;
	}

	module.exports = Pool;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var Pool = __webpack_require__(11);
	var annotation = __webpack_require__(43);
	var Tooltips = __webpack_require__(47);
	var dt = __webpack_require__(21);

	var log = __webpack_require__(25).bows('One Day');

	module.exports = function(emitter) {

	  // constants
	  var MS_IN_24 = 86400000;

	  // basic attributes
	  var id,
	    minWidth = 400, minHeight = 400,
	    width = minWidth, height = minHeight,
	    poolScaleHeight,
	    imagesBaseUrl = 'img',
	    nav = {
	      scrollNav: true,
	      scrollNavHeight: 50,
	      scrollGutterHeight: 20,
	      scrollThumbRadius: 24,
	      currentTranslation: 0
	    },
	    axisGutter = 40, gutter = 40,
	    buffer = 2,
	    pools = [], poolGroup,
	    xScale = d3.time.scale.utc(),
	    currentCenter, data, tidelineData, renderedData = [], endpoints,
	    mainSVG, mainGroup,
	    scrollNav, scrollHandleTrigger = true, mostRecent = false, annotations, tooltips, nativeTooltips;

	  container.dataFill = {};

	  emitter.on('clickInPool', function(offset) {
	    var leftEdge = xScale(xScale.domain()[0]);
	    var date = xScale.invert(leftEdge + offset - container.axisGutter());
	    var offsetMinutes = new Date().getTimezoneOffset();
	    date.setUTCMinutes(date.getUTCMinutes() + offsetMinutes);
	    emitter.emit('clickTranslatesToDate', date);
	  });

	  function container(selection) {
	    mainSVG = selection.append('svg');

	    mainGroup = mainSVG.append('g').attr('id', 'tidelineMain');

	    // update SVG dimenions and ID
	    mainSVG.attr({
	      'id': id,
	      'width': width,
	      'height': height
	    });

	    mainGroup.append('rect')
	      .attr({
	        'id': 'poolsInvisibleRect',
	        'width': width,
	        'height': function() {
	          if (nav.scrollNav) {
	            return (height - nav.scrollNavHeight);
	          }
	          else {
	            return height;
	          }
	        },
	        'opacity': 0.0
	      });

	    poolGroup = mainGroup.append('g').attr('id', 'tidelinePools');

	    mainGroup.append('g')
	      .attr('id', 'tidelineLabels');

	    mainGroup.append('g')
	      .attr('id', 'tidelineYAxes');

	    if (nav.scrollNav) {
	      scrollNav = mainGroup.append('g')
	        .attr('class', 'x scroll')
	        .attr('id', 'tidelineScrollNav');
	    }

	    mainSVG.insert('clipPath', '#tidelineMain')
	      .attr('id', 'mainClipPath')
	      .append('rect')
	      .attr({
	        'x': container.axisGutter(),
	        'y': 0,
	        'width': container.width() - container.axisGutter(),
	        'height': container.height()
	      });
	  }

	  // non-chainable methods
	  container.panForward = function() {
	    log('Jumped forward a day.');
	    nav.currentTranslation -= width - axisGutter;
	    var n = 0;
	    emitter.emit('inTransition', true);
	    mainGroup.transition()
	      .duration(500).tween('zoom', function() {
	      var ix = d3.interpolate(nav.currentTranslation + width - axisGutter, nav.currentTranslation);
	      return function(t) {
	        nav.pan.translate([ix(t), 0]);
	        nav.pan.event(mainGroup);
	      };
	    })
	      .each(function() { ++n; })
	      .each('end', function() {
	        // this ugly solution courtesy of the man himself: https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ
	        if (!--n) {
	          emitter.emit('inTransition', false);
	        }
	      });
	  };

	  container.panBack = function() {
	    log('Jumped back a day.');
	    nav.currentTranslation += width - axisGutter;
	    var n = 0;
	    emitter.emit('inTransition', true);
	    mainGroup.transition().duration(500).tween('zoom', function() {
	      var ix = d3.interpolate(nav.currentTranslation - width + axisGutter, nav.currentTranslation);
	      return function(t) {
	        nav.pan.translate([ix(t), 0]);
	        nav.pan.event(mainGroup);
	      };
	    })
	      .each(function() { ++n; })
	      .each('end', function() {
	        // this ugly solution courtesy of the man himself: https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ
	        if (!--n) {
	          emitter.emit('inTransition', false);
	        }
	      });
	  };

	  container.newPool = function() {
	    var p = new Pool(container);
	    pools.push(p);
	    return p;
	  };

	  container.poolScaleHeight = function(pools) {
	    if (!arguments.length) return poolScaleHeight;
	    var cumWeight = 0, cumGutterWeight = 0;
	    pools.forEach(function(pool) {
	      cumWeight += pool.weight();
	      cumGutterWeight += pool.gutterWeight();
	    });
	    gutter = 0.25 * (container.height() / cumWeight);
	    var totalPoolsHeight =
	      container.height() - nav.scrollNavHeight - (cumGutterWeight * gutter);
	    poolScaleHeight = totalPoolsHeight/cumWeight;
	    return container;
	  };

	  container.arrangePools = function() {
	    var visiblePools = _.reject(pools, function(pool) {
	      return pool.hidden();
	    });
	    container.poolScaleHeight(visiblePools);
	    visiblePools.forEach(function(pool) {
	      pool.height(poolScaleHeight);
	    });
	    var currentYPosition = 0;
	    visiblePools.forEach(function(pool) {
	      currentYPosition += gutter * pool.gutterWeight();
	      pool.yPosition(currentYPosition);
	      currentYPosition += pool.height();
	      pool.group().attr('transform', 'translate(0,' + pool.yPosition() + ')');
	      if (pool.hidden()) {
	        pool.group().attr('display', 'none');
	      }
	    });
	  };

	  container.getCurrentDomain = function() {
	    var currentDomain = xScale.domain();
	    var d = new Date(xScale.domain()[0]);
	    return {
	      'start': new Date(currentDomain[0]),
	      'end': new Date(currentDomain[1]),
	      'center': new Date(d.setUTCHours(d.getUTCHours() + 12))
	    };
	  };

	  container.navString = function(a) {
	    var currentDomain = container.getCurrentDomain();
	    var beginning = a[0];
	    var end = a[1];
	    emitter.emit('currentDomain', {
	      'domain': a
	    });
	    emitter.emit('navigated', [currentDomain, currentDomain.center.toISOString()]);
	    if (a[1].valueOf() === endpoints[1].valueOf()) {
	      emitter.emit('mostRecent', true);
	    }
	    else {
	      emitter.emit('mostRecent', false);
	    }
	  };

	  // getters only
	  container.svg = function() {
	    return mainSVG;
	  };
	  
	  container.pools = function() {
	    return pools;
	  };

	  container.poolGroup = function() {
	    return poolGroup;
	  };

	  container.annotations = function() {
	    return annotations;
	  };

	  container.nativeTooltips = function() {
	    return nativeTooltips;
	  };

	  container.axisGutter = function() {
	    return axisGutter;
	  };

	  container.dateAtCenter = function() {
	    return dt.toISODateString(new Date(container.currentCenter().toISOString()));
	  };

	  // chainable methods
	  container.setAxes = function() {
	    // set the domain and range for the main tideline x-scale
	    xScale.domain([container.initialEndpoints[0], container.initialEndpoints[1]])
	      .range([axisGutter, width]);

	    container.currentCenter(container.getCurrentDomain().center);

	    if (nav.scrollNav) {
	      nav.scrollScale = d3.time.scale.utc()
	        .domain([endpoints[0], container.initialEndpoints[0]])
	        .range([axisGutter + nav.scrollThumbRadius, width - nav.scrollThumbRadius]);
	    }

	    pools.forEach(function(pool) {
	      pool.xScale(xScale.copy());
	    });

	    return container;
	  };

	  container.setNav = function() {
	    var maxTranslation = -xScale(endpoints[0]) + axisGutter;
	    var minTranslation = -(xScale(endpoints[1])) + width;
	    nav.pan = d3.behavior.zoom()
	      .scaleExtent([1, 1])
	      .x(xScale)
	      .on('zoomstart', function() {
	        emitter.emit('zoomstart');
	      })
	      .on('zoom', function() {
	        if (dt.toISODateString(container.getCurrentDomain().center) !== container.dateAtCenter()) {
	          container.renderedData(xScale.domain());
	          if (!mostRecent) {
	            for (var j = 0; j < pools.length; j++) {
	              pools[j].render(poolGroup, container.renderedData());
	            }
	          }
	          container.currentCenter(container.getCurrentDomain().center);
	        }
	        var e = d3.event;
	        if (e.translate[0] < minTranslation) {
	          e.translate[0] = minTranslation;
	        }
	        else if (e.translate[0] > maxTranslation) {
	          e.translate[0] = maxTranslation;
	        }
	        nav.pan.translate([e.translate[0], 0]);
	        for (var i = 0; i < pools.length; i++) {
	          pools[i].pan(e);
	        }
	        mainGroup.select('#tidelineTooltips').attr('transform', 'translate(' + e.translate[0] + ',0)');
	        mainGroup.select('#tidelineAnnotations').attr('transform', 'translate(' + e.translate[0] + ',0)');
	        mainSVG.select('#mainClipPath rect').attr('transform', 'translate(' + -e.translate[0] + ',0)');
	        if (scrollHandleTrigger) {
	          mainGroup.select('.scrollThumb').transition().ease('linear').attr('x', function(d) {
	            d.x = nav.scrollScale(xScale.domain()[0]);
	            return d.x - nav.scrollThumbRadius;
	          });
	        }
	        else {
	          mainGroup.select('.scrollThumb').attr('x', function(d) {
	            d.x = nav.scrollScale(xScale.domain()[0]);
	            return d.x - nav.scrollThumbRadius;
	          });
	        }
	      })
	      .on('zoomend', function() {
	        emitter.emit('zoomend');
	        container.currentTranslation(nav.latestTranslation);
	        // must only call navString *after* updating currentTranslation
	        // because of translation adjustment on stats widget no data annotations
	        container.navString(xScale.domain());
	        if (!scrollHandleTrigger) {
	          mainGroup.select('.scrollThumb').attr('x', function(d) {
	            return nav.scrollScale(xScale.domain()[0]) - nav.scrollThumbRadius;
	          });
	        }
	        scrollHandleTrigger = true;
	      });

	    mainGroup.call(nav.pan);

	    return container;
	  };

	  container.setScrollNav = function() {
	    var translationAdjustment = axisGutter;
	    scrollNav.selectAll('line').remove();
	    scrollNav.attr('transform', 'translate(0,'  + (height - (nav.scrollNavHeight * 2/5)) + ')')
	      .insert('line', '.scrollThumb')
	      .attr({
	        'stroke-width': nav.scrollGutterHeight,
	        // add and subtract 1/2 of scrollGutterHeight because radius of linecap is 1/2 of stroke-width
	        'x1': axisGutter + nav.scrollGutterHeight/2,
	        'x2': width - nav.scrollGutterHeight/2,
	        'y1': 0,
	        'y2': 0
	      });

	    var dxRightest = nav.scrollScale.range()[1];
	    var dxLeftest = nav.scrollScale.range()[0];

	    var drag = d3.behavior.drag()
	      .origin(function(d) {
	        return d;
	      })
	      .on('dragstart', function() {
	        d3.event.sourceEvent.stopPropagation(); // silence the click-and-drag listener
	      })
	      .on('drag', function(d) {
	        d.x += d3.event.dx;
	        if (d.x > dxRightest) {
	          d.x = dxRightest;
	        }
	        else if (d.x < dxLeftest) {
	          d.x = dxLeftest;
	        }
	        d3.select(this).attr('x', function(d) { return d.x - nav.scrollThumbRadius; });
	        var date = nav.scrollScale.invert(d.x);
	        nav.currentTranslation += -xScale(date) + translationAdjustment;
	        scrollHandleTrigger = false;
	        nav.pan.translate([nav.currentTranslation, 0]);
	        nav.pan.event(mainGroup);
	      });

	    scrollNav.selectAll('rect')
	      .data([{'x': nav.scrollScale(container.initialEndpoints[0]), 'y': 0}])
	      .enter()
	      .append('rect')
	      .attr({
	        'x': function(d) {
	          return d.x - nav.scrollThumbRadius;
	        },
	        'y': -nav.scrollThumbRadius/3,
	        'width': nav.scrollThumbRadius * 2,
	        'height': nav.scrollThumbRadius/3 * 2,
	        'rx': nav.scrollThumbRadius/3,
	        'class': 'scrollThumb'
	      })
	      .call(drag);

	    return container;
	  };

	  container.setAnnotation = function() {
	    var annotationGroup = mainGroup.append('g')
	      .attr('id', 'tidelineAnnotations');

	    annotations = annotation(container, annotationGroup).id(annotationGroup.attr('id'));
	    pools.forEach(function(pool) {
	      pool.annotations(annotations);
	    });
	    return container;
	  };

	  container.setTooltip = function() {
	    var tooltipGroup = mainGroup.append('g')
	      .attr('id', 'tidelineTooltips');
	    nativeTooltips = new Tooltips(container, tooltipGroup).id(tooltipGroup.attr('id'));
	    return container;
	  };

	  container.setAtDate = function (date, mostRecent) {
	    if (!mostRecent) {
	      scrollHandleTrigger = false;
	      container.currentTranslation(-xScale(date) + axisGutter);
	      nav.pan.translate([nav.currentTranslation, 0]);
	      nav.pan.event(mainGroup);
	    }
	    else {
	      scrollHandleTrigger = true;
	      nav.pan.translate([0,0]);
	      nav.pan.event(mainGroup);
	      mostRecent = false;
	    }

	    return container;
	  };

	  container.destroy = function() {
	    mainSVG.remove();

	    return container;
	  };

	  // getters and setters
	  container.id = function(x) {
	    if (!arguments.length) return id;
	    if (x.search('tideline') !== -1) {
	      id = x.replace('tideline', 'tidelineSVGOneDay');
	    }
	    else {
	      id = 'tidelineSVGOneDay';
	    }
	    return container;
	  };

	  container.width = function(x) {
	    if (!arguments.length) return width;
	    if (x >= minWidth) {
	      width = x;
	    }
	    else {
	      width = minWidth;
	    }
	    return container;
	  };

	  container.height = function(x) {
	    if (!arguments.length) return height;
	    var totalHeight = x;
	    if (nav.scrollNav) {
	      totalHeight += nav.scrollNavHeight;
	    }
	    if (totalHeight >= minHeight) {
	      height = x;
	    }
	    else {
	      height = minHeight;
	    }
	    return container;
	  };

	  container.imagesBaseUrl = function(x) {
	    if (!arguments.length) return imagesBaseUrl;
	    imagesBaseUrl = x;
	    return container;
	  };

	  container.latestTranslation = function(x) {
	    if (!arguments.length) return nav.latestTranslation;
	    nav.latestTranslation = x;
	    return container;
	  };

	  container.currentTranslation = function(x) {
	    if (!arguments.length) return nav.currentTranslation;
	    nav.currentTranslation = x;
	    return container;
	  };

	  container.currentCenter = function(x) {
	    if (!arguments.length) return currentCenter;
	    currentCenter = new Date(x.toISOString());
	    return container;
	  };

	  container.buffer = function(x) {
	    if (!arguments.length) return buffer;
	    buffer = x;
	    return container;
	  };

	  container.data = function(a) {
	    if (!arguments.length) return data;

	    if (! (a && Array.isArray(a.data) && a.data.length > 0)) {
	      throw new Error("Sorry, I can't render anything without /some/ data.");
	    }
	    else if (a.data.length === 1) {
	      throw new Error("Sorry, I can't render anything with only *one* datapoint.");
	    }

	    tidelineData = a;

	    data = a.data;

	    var first = new Date(data[0].normalTime);
	    var lastObj = _.sortBy(data, function(d) {
	      return d.normalEnd ? d.normalEnd : d.normalTime;
	    }).reverse()[0];
	    var last = lastObj.normalEnd ? new Date(lastObj.normalEnd) : new Date(lastObj.normalTime);

	    var minusOne = new Date(last);
	    minusOne.setDate(minusOne.getDate() - 1);
	    container.initialEndpoints = [minusOne, last];

	    endpoints = [first, last];
	    if (last.valueOf() - first.valueOf() < dt.MS_IN_24) {
	      throw new Error("Sorry, I can't render anything when the endpoints of your data are less than 24 hours apart.");
	    }
	    container.endpoints = endpoints;

	    return container;
	  };

	  container.renderedData = function(a) {
	    if (!arguments.length) return renderedData;
	    var start = new Date(dt.addDays(a[0], -buffer));
	    var end = new Date(dt.addDays(a[1], buffer));
	    var filtered = tidelineData.dataByDate.filter([start, end]);
	    renderedData = filtered.top(Infinity).reverse();

	    return container;
	  };

	  return container;
	};


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var Pool = __webpack_require__(11);
	var annotation = __webpack_require__(43);
	var Tooltips = __webpack_require__(47);
	var legend = __webpack_require__(39);

	var log = __webpack_require__(25).bows('Two Week');

	module.exports = function(emitter) {
	  // constants
	  var MS_IN_24 = 86400000;

	  // basic attributes
	  var id,
	    minWidth = 400, minHeight = 400,
	    width = minWidth, height = minHeight,
	    imagesBaseUrl = 'img',
	    nav = {
	      axisHeight: 60,
	      navGutter: 30,
	      scrollThumbRadius: 24,
	      scrollGutterWidth: 20,
	      currentTranslation: 0
	    },
	    axisGutter = 52, dataGutter, dayTickSize = 0,
	    statsHeight = 100,
	    pools = [], poolGroup, days, daysGroup,
	    xScale = d3.scale.linear(), xAxis, yScale = d3.time.scale.utc(), yAxis,
	    tidelineData, data, endpoints, viewEndpoints, dataStartNoon, dataEndNoon, poolScaleHeight,
	    lessThanTwoWeeks = false,
	    sortReverse = true, viewIndex,
	    mainSVG, mainGroup, scrollNav, scrollHandleTrigger = true,
	    annotations, tooltips, nativeTooltips,
	    cachedDomain;

	  container.dataFill = {};

	  function container(selection) {
	    mainSVG = selection.append('svg');

	    mainGroup = mainSVG.append('g').attr('id', 'tidelineMain');

	    // update SVG dimenions and ID
	    mainSVG.attr({
	      id: id,
	      width: width,
	      height: height
	    });

	    mainGroup.append('rect')
	      .attr({
	        id: 'poolsInvisibleRect',
	        width: width - nav.navGutter,
	        height: height,
	        opacity: 0.0
	      });
	  }

	  // non-chainable methods
	  container.panForward = function() {
	    log('Jumped forward two weeks.');
	    var n = 0;
	    if (sortReverse) {
	      nav.currentTranslation += height - nav.axisHeight - statsHeight;
	      emitter.emit('inTransition', true);
	      mainGroup.transition().duration(500).tween('zoom', function() {
	        var iy = d3.interpolate(nav.currentTranslation - height + nav.axisHeight + statsHeight, nav.currentTranslation);
	        return function(t) {
	          nav.scroll.translate([0, iy(t)]);
	          nav.scroll.event(mainGroup);
	        };
	      })
	      .each(function() { ++n; })
	      .each('end', function() {
	        // this ugly solution courtesy of the man himself: https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ
	        if (!--n) {
	          emitter.emit('inTransition', false);
	        }
	      });
	    }
	    else {
	      nav.currentTranslation -= height - nav.axisHeight - statsHeight;
	      emitter.emit('inTransition', true);
	      mainGroup.transition().duration(500).tween('zoom', function() {
	        var iy = d3.interpolate(nav.currentTranslation + height - nav.axisHeight - statsHeight, nav.currentTranslation);
	        return function(t) {
	          nav.scroll.translate([0, iy(t)]);
	          nav.scroll.event(mainGroup);
	        };
	      })
	      .each(function() { ++n; })
	      .each('end', function() {
	        // this ugly solution courtesy of the man himself: https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ
	        if (!--n) {
	          emitter.emit('inTransition', false);
	        }
	      });
	    }
	  };

	  container.panBack = function() {
	    log('Jumped back two weeks.');
	    var n = 0;
	    if (sortReverse) {
	      nav.currentTranslation -= height - nav.axisHeight - statsHeight;
	      emitter.emit('inTransition', true);
	      mainGroup.transition().duration(500).tween('zoom', function() {
	        var iy = d3.interpolate(nav.currentTranslation + height - nav.axisHeight - statsHeight, nav.currentTranslation);
	        return function(t) {
	          nav.scroll.translate([0, iy(t)]);
	          nav.scroll.event(mainGroup);
	        };
	      })
	      .each(function() { ++n; })
	      .each('end', function() {
	        // this ugly solution courtesy of the man himself: https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ
	        if (!--n) {
	          emitter.emit('inTransition', false);
	        }
	      });
	    }
	    else {
	      nav.currentTranslation += height - nav.axisHeight - statsHeight;
	      emitter.emit('inTransition', true);
	      mainGroup.transition().duration(500).tween('zoom', function() {
	        var iy = d3.interpolate(nav.currentTranslation - height + nav.axisHeight + statsHeight, nav.currentTranslation);
	        return function(t) {
	          nav.scroll.translate([0, iy(t)]);
	          nav.scroll.event(mainGroup);
	        };
	      })
	      .each(function() { ++n; })
	      .each('end', function() {
	        // this ugly solution courtesy of the man himself: https://groups.google.com/forum/#!msg/d3-js/WC_7Xi6VV50/j1HK0vIWI-EJ
	        if (!--n) {
	          emitter.emit('inTransition', false);
	        }
	      });
	    }
	  };

	  container.newPool = function() {
	    var p = new Pool(container);
	    pools.push(p);
	    return p;
	  };

	  container.arrangePools = function() {
	    // 14 days = 2 weeks
	    var numPools = 14;
	    // all two-week pools have a weight of 1.0
	    var weight = 1.0;
	    var cumWeight = weight * numPools;
	    var totalPoolsHeight =
	      container.height() - nav.axisHeight - statsHeight;
	    poolScaleHeight = totalPoolsHeight/cumWeight;
	    var actualPoolsHeight = 0;
	    pools.forEach(function(pool) {
	      pool.height(poolScaleHeight);
	      actualPoolsHeight += pool.height();
	      poolScaleHeight = pool.height();
	    });
	    var currentYPosition, nextBatchYPosition, pool;
	    if (sortReverse) {
	      currentYPosition = nav.axisHeight;
	      nextBatchYPosition = currentYPosition - poolScaleHeight;
	      for (var i = viewIndex; i >= 0; i--) {
	        pool = pools[i];
	        pool.yPosition(currentYPosition);
	        currentYPosition += pool.height();
	        pool.group().attr('transform', 'translate(0,' + pool.yPosition() + ')');
	      }
	      currentYPosition = nextBatchYPosition;
	      for (var j = viewIndex + 1; j < pools.length; j++) {
	        pool = pools[j];
	        pool.yPosition(currentYPosition);
	        currentYPosition -= pool.height();
	        pool.group().attr('transform', 'translate(0,' + pool.yPosition() + ')');
	      }
	    }
	    else {
	      currentYPosition = container.height() - statsHeight - poolScaleHeight;
	      nextBatchYPosition = currentYPosition + poolScaleHeight;
	      for (var k = viewIndex; k < pools.length; k++) {
	        pool = pools[k];
	        pool.yPosition(currentYPosition);
	        currentYPosition -= pool.height();
	        pool.group().attr('transform', 'translate(0,' + pool.yPosition() + ')');
	      }
	      currentYPosition = nextBatchYPosition;
	      for (var l = viewIndex - 1; l >= 0; l--) {
	        pool = pools[l];
	        pool.yPosition(currentYPosition);
	        currentYPosition += pool.height();
	        pool.group().attr('transform', 'translate(0,' + pool.yPosition() + ')');
	      }
	    }

	    // setup stats group
	    container.poolStats = new Pool(container);
	    container.poolStats.id('poolStats', poolGroup).weight(1.0).height(statsHeight * (4/5));
	    container.poolStats.group().attr({
	      transform: 'translate(' + axisGutter + ',' + (height - statsHeight) + ')'
	    });
	    container.poolStats.group().append('rect')
	      .attr({
	        x: 0,
	        y: 0,
	        width: width - axisGutter - nav.navGutter,
	        height: statsHeight,
	        fill: 'white'
	      });
	  };

	  container.clear = function() {
	    emitter.removeAllListeners();
	    container.currentTranslation(0).latestTranslation(0);
	    var ids = ['#tidelineWeeklyLabels', '#tidelinePools', '#tidelineXAxisGroup', '#tidelineYAxisGroup', '#tidelineScrollNav', '#tidelineTooltips', '#tidelineAnnotations'];
	    ids.forEach(function(id) {
	      mainGroup.select(id).remove();
	    });
	    data = [];
	    pools = [];

	    return container;
	  };

	  container.destroy = function() {
	    mainSVG.remove();

	    return container;
	  };

	  container.navString = function(a) {
	    if (!arguments.length) {
	      a = yScale.domain();
	      cachedDomain = a;
	    }
	    if (sortReverse) {
	      if (a[0].toISOString().slice(0,10) === days[days.length - 1]) {
	        emitter.emit('mostRecent', true);
	      }
	      else {
	        emitter.emit('mostRecent', false);
	      }
	    }
	    else {
	      if (a[1].toISOString().slice(0,10) === days[0]) {
	        emitter.emit('mostRecent', true);
	      }
	      else {
	        emitter.emit('mostRecent', false);
	      }
	    }
	    if (sortReverse) {
	      a.reverse();
	      a[0].setUTCDate(a[0].getUTCDate() + 1);
	    }
	    else {
	      a[0].setUTCDate(a[0].getUTCDate() + 1);
	    }
	    emitter.emit('navigated', [a[0].toISOString(), a[1].toISOString()]);
	    // domain should go from midnight to midnight, not noon to noon
	    a[0].setUTCHours(a[0].getUTCHours() - 12);
	    var topDate = a[0].toISOString().slice(0,10);
	    a[1].setUTCHours(a[1].getUTCHours() + 12);
	    var bottomDate = a[1].toISOString().slice(0,10);
	    var midnight = 'T00:00:00.000Z';
	    if ((topDate !== cachedDomain[0]) || (bottomDate !== cachedDomain[1])) {
	      cachedDomain = [new Date(topDate + midnight), new Date(bottomDate + midnight)];
	      emitter.emit('currentDomain', {
	        domain: cachedDomain
	      });
	    }
	  };

	  container.legend = function(l) {
	    var labelHolder = mainSVG.select('#tidelineWeeklyLabels');

	    var labelGroup = labelHolder.append('text')
	      .attr({
	        'class': 'd3-pool-label',
	        transform: 'translate(' + axisGutter + ',' + nav.navGutter + ')'
	      })
	      .text(l.main);

	    labelGroup.append('tspan')
	      .text(' (' + l.light + ')');

	    var legendGroup = labelHolder.append('g')
	      .attr({
	        transform: 'translate(' + (container.width() - nav.navGutter) + ',' + nav.navGutter + ')'
	      });

	    legend.draw(legendGroup, 'bg');
	  };

	  // getters only
	  container.svg = function() {
	    return mainSVG;
	  };

	  container.pools = function() {
	    return pools;
	  };

	  container.poolGroup = function() {
	    return poolGroup;
	  };

	  container.days = function() {
	    return days;
	  };

	  container.daysGroup = function() {
	    return daysGroup;
	  };

	  container.annotations = function() {
	    return annotations;
	  };

	  container.nativeTooltips = function() {
	    return nativeTooltips;
	  };

	  container.tooltips = function() {
	    return tooltips;
	  };

	  container.axisGutter = function() {
	    return axisGutter;
	  };

	  container.navGutter = function() {
	    return nav.navGutter;
	  };

	  container.getCurrentDay = function() {
	    return new Date(yScale.domain()[0].toISOString().slice(0,10) + 'T12:00:00.000Z');
	  };

	  // chainable methods
	  container.setup = function() {
	    poolGroup = mainGroup.append('g').attr('id', 'tidelinePools');

	    mainGroup.append('g')
	      .attr('id', 'tidelineXAxisGroup')
	      .append('rect')
	      .attr({
	        id: 'xAxisInvisibleRect',
	        x: axisGutter,
	        height: nav.axisHeight,
	        width: width - axisGutter,
	        fill: 'white'
	      });

	    mainGroup.append('g')
	      .attr('id', 'tidelineYAxisGroup')
	      .append('rect')
	      .attr({
	        id: 'yAxisInvisibleRect',
	        x: 0,
	        height: height,
	        width: axisGutter,
	        fill: 'white'
	      });

	    daysGroup = poolGroup.append('g').attr('id', 'daysGroup');

	    scrollNav = mainGroup.append('g')
	      .attr('class', 'y scroll')
	      .attr('id', 'tidelineScrollNav');

	    mainGroup.append('g').attr('id', 'tidelineWeeklyLabels');

	    return container;
	  };

	  container.setAxes = function() {
	    // set the domain and range for the two-week x-scale
	    xScale.domain([0, MS_IN_24])
	      .range([axisGutter + dataGutter, width - nav.navGutter - dataGutter]);
	    xAxis = d3.svg.axis().scale(xScale).orient('top').outerTickSize(0).innerTickSize(15)
	      .tickValues(function() {
	        var a = [];
	        for (var i = 0; i < 8; i++) {
	          a.push((MS_IN_24/8) * i);
	        }
	        return a;
	      })
	      .tickFormat(function(d) {
	        var hour = d/(MS_IN_24/24);
	        if ((hour > 0) && (hour < 12)) {
	          return hour + ' am';
	        }
	        else if (hour > 12) {
	          return (hour - 12) + ' pm';
	        }
	        else if (hour === 0) {
	          return '12 am';
	        }
	        else {
	          return '12 pm';
	        }
	      });

	    mainGroup.select('#tidelineXAxisGroup')
	      .append('g')
	      .attr('class', 'd3-x d3-axis')
	      .attr('id', 'tidelineXAxis')
	      .attr('transform', 'translate(0,' + (nav.axisHeight - 1) + ')')
	      .call(xAxis);

	    mainGroup.selectAll('#tidelineXAxis g.tick text').style('text-anchor', 'start').attr('transform', 'translate(5,15)');

	    // set the domain and range for the main two-week y-scale
	    yScale.domain(viewEndpoints)
	      .range([nav.axisHeight, height - statsHeight])
	      .ticks(d3.time.day.utc, 1);

	    yAxis = d3.svg.axis().scale(yScale)
	      .orient('left')
	      .outerTickSize(0)
	      .innerTickSize(dayTickSize)
	      .tickFormat(d3.time.format.utc('%a'));

	    mainGroup.select('#tidelineYAxisGroup')
	      .append('g')
	      .attr('class', 'd3-y d3-axis d3-day-axis')
	      .attr('id', 'tidelineYAxis')
	      .attr('transform', 'translate(' + (axisGutter - 1) + ',0)')
	      .call(yAxis);

	    container.dayAxisHacks();

	    if (sortReverse) {
	      var start = new Date(dataStartNoon);
	      start.setUTCDate(start.getUTCDate() - 1);
	      nav.scrollScale = d3.time.scale.utc()
	          .domain([dataEndNoon, start])
	          .range([nav.axisHeight + nav.scrollThumbRadius, height - statsHeight - nav.scrollThumbRadius]);
	    }
	    else {
	      nav.scrollScale = d3.time.scale.utc()
	        .domain([dataStartNoon, dataEndNoon])
	        .range([nav.axisHeight + nav.scrollThumbRadius, height - statsHeight - nav.scrollThumbRadius]);
	    }

	    pools.forEach(function(pool) {
	      pool.xScale(xScale.copy());
	    });

	    return container;
	  };

	  container.dayAxisHacks = function() {
	    // TODO: demagicify all the magic numbers in this function
	    var tickLabels = mainGroup.selectAll('.d3-day-axis').selectAll('.tick');

	    tickLabels.selectAll('.d3-date').remove();

	    var xPos = tickLabels.select('text').attr('x'), dy = tickLabels.select('text').attr('dy');

	    tickLabels.append('text')
	      .text(function(d) {
	        return d3.time.format.utc('%b %-d')(d);
	      })
	      .attr({
	        x: xPos,
	        y: 0,
	        dy: dy,
	        'class': 'd3-date',
	        'text-anchor': 'end'
	      });

	    tickLabels.selectAll('text')
	      .attr({
	        transform: function() {
	          if (d3.select(this).classed('d3-date')) {
	            return 'translate(' + (dayTickSize - 6) + ',8)';
	          }
	          else {
	            return 'translate(' + (dayTickSize - 6) + ',-6)';
	          }
	        }
	      })
	      .classed('d3-weekend', function(d) {
	        // Sunday is 0
	        var date = d.getUTCDay();
	        if ((date === 0) || (date === 6)) {
	          return true;
	        }
	        else {
	          return false;
	        }
	      });

	    return container;
	  };

	  container.setNav = function() {
	    var maxTranslation, minTranslation;
	    if (sortReverse) {
	      maxTranslation = yScale(dataStartNoon) - yScale(dataEndNoon) + poolScaleHeight + (14 - (viewIndex + 1)) * poolScaleHeight;
	      minTranslation = (14 - (viewIndex + 1)) * poolScaleHeight;
	    }
	    else {
	      maxTranslation = -yScale(dataStartNoon) + nav.axisHeight;
	      minTranslation = -yScale(dataEndNoon) + nav.axisHeight;
	    }
	    nav.scroll = d3.behavior.zoom()
	      .scaleExtent([1, 1])
	      .y(yScale)
	      .on('zoom', function() {
	        var e = d3.event;
	        if (e.translate[1] < minTranslation) {
	          e.translate[1] = minTranslation;
	        }
	        else if (e.translate[1] > maxTranslation) {
	          e.translate[1] = maxTranslation;
	        }
	        nav.scroll.translate([0, e.translate[1]]);
	        mainGroup.select('#tidelineTooltips').attr('transform', 'translate(0,' + e.translate[1] + ')');
	        mainGroup.select('#tidelineAnnotations').attr('transform', 'translate(0,' + e.translate[1] + ')');
	        mainGroup.select('.d3-y.d3-axis').call(yAxis);
	        container.dayAxisHacks();
	        mainGroup.selectAll('.d3-data-annotation-group').remove();
	        for (var i = 0; i < pools.length; i++) {
	          pools[i].scroll(e);
	        }
	        if (scrollHandleTrigger) {
	          mainGroup.select('.scrollThumb').transition().ease('linear').attr('y', function(d) {
	            if (sortReverse) {
	              d.y = nav.scrollScale(yScale.domain()[1]);
	            }
	            else {
	              d.y = nav.scrollScale(yScale.domain()[0]);
	            }
	            return d.y - nav.scrollThumbRadius;
	          });
	        }
	      })
	      .on('zoomend', function() {
	        container.currentTranslation(nav.latestTranslation);
	        container.navString(yScale.domain());
	        scrollHandleTrigger = true;
	      });

	    mainGroup.call(nav.scroll);

	    return container;
	  };

	  container.setScrollNav = function() {
	    if (!lessThanTwoWeeks) {
	      var translationAdjustment, yStart, xPos;
	      if (sortReverse) {
	        yStart = nav.scrollScale(viewEndpoints[1]);
	        translationAdjustment = height - statsHeight;

	        scrollNav.append('rect')
	        .attr({
	          x: 0,
	          y: nav.scrollScale(dataEndNoon) - nav.scrollThumbRadius,
	          width: nav.navGutter,
	          height: height - nav.axisHeight,
	          fill: 'white',
	          id: 'scrollNavInvisibleRect'
	        });

	        xPos = 2 * nav.navGutter / 3;


	        var start = new Date(dataStartNoon);
	        start.setUTCDate(start.getUTCDate() - 1);

	        scrollNav.attr('transform', 'translate(' + (width - nav.navGutter) + ',0)')
	          .append('line')
	          .attr({
	            x1: xPos,
	            x2: xPos,
	            y1: nav.axisHeight + nav.scrollGutterWidth/2,
	            y2: height - statsHeight - nav.scrollGutterWidth/2,
	            'stroke-width': nav.scrollGutterWidth,
	            'class': 'scroll'
	          });
	      }
	      else {
	        yStart = nav.scrollScale(viewEndpoints[0]);
	        translationAdjustment = nav.axisHeight;

	        scrollNav.append('rect')
	        .attr({
	          x: 0,
	          y: nav.scrollScale(dataStartNoon) - nav.scrollThumbRadius,
	          width: nav.navGutter,
	          height: height - nav.axisHeight,
	          fill: 'white',
	          id: 'scrollNavInvisibleRect'
	        });

	        xPos = nav.navGutter / 2;

	        scrollNav.attr('transform', 'translate(' + (width - nav.navGutter) + ',0)')
	          .append('line')
	          .attr({
	            x1: xPos,
	            x2: xPos,
	            y1: nav.axisHeight + nav.scrollGutterWidth/2,
	            y2: height - statsHeight - nav.scrollGutterWidth/2,
	            'stroke-width': nav.scrollGutterWidth,
	            'class': 'scroll'
	          });
	      }

	      var dyLowest = nav.scrollScale.range()[1];
	      var dyHighest = nav.scrollScale.range()[0];

	      var drag = d3.behavior.drag()
	        .origin(function(d) {
	          return d;
	        })
	        .on('dragstart', function() {
	          d3.event.sourceEvent.stopPropagation(); // silence the click-and-drag listener
	        })
	        .on('drag', function(d) {
	          d.y += d3.event.dy;
	          if (d.y > dyLowest) {
	            d.y = dyLowest;
	          }
	          else if (d.y < dyHighest) {
	            d.y = dyHighest;
	          }
	          d3.select(this).attr('y', function(d) { return d.y - nav.scrollThumbRadius; });
	          var date = nav.scrollScale.invert(d.y);
	          nav.currentTranslation -= yScale(date) - translationAdjustment;
	          scrollHandleTrigger = false;
	          nav.scroll.translate([0, nav.currentTranslation]);
	          nav.scroll.event(mainGroup);
	        });

	      scrollNav.selectAll('rect.scrollThumb')
	        .data([{x: 0, y: yStart}])
	        .enter()
	        .append('rect')
	        .attr({
	          x: xPos - nav.scrollThumbRadius/3,
	          y: function(d) {
	            return d.y - nav.scrollThumbRadius;
	          },
	          width: 2 * nav.scrollThumbRadius/3,
	          height: 2 * nav.scrollThumbRadius,
	          rx: nav.scrollThumbRadius/3,
	          'class': 'scrollThumb'
	        })
	        .call(drag);
	    }

	    return container;
	  };

	  container.setAnnotation = function() {
	    var annotationGroup = mainGroup.append('g')
	      .attr('id', 'tidelineAnnotations');
	    annotations = annotation(container, annotationGroup).id(annotationGroup.attr('id'));
	    pools.forEach(function(pool) {
	      pool.annotations(annotations);
	    });
	    container.poolStats.annotations(annotations);
	    return container;
	  };

	  container.setTooltip = function() {
	    var tooltipGroup = mainGroup.append('g')
	      .attr('id', 'tidelineTooltips');
	    nativeTooltips = new Tooltips(container, tooltipGroup).id(tooltipGroup.attr('id'));
	    return container;
	  };

	  // getters and setters
	  container.id = function(x) {
	    if (!arguments.length) return id;
	    if (x.search('tideline') !== -1) {
	      id = x.replace('tideline', 'tidelineSVGTwoWeek');
	    }
	    else {
	      id = 'tidelineSVGTwoWeek';
	    }
	    return container;
	  };

	  container.width = function(x) {
	    if (!arguments.length) return width;
	    if (x >= minWidth) {
	      width = x;
	    }
	    else {
	      width = minWidth;
	    }
	    return container;
	  };

	  container.height = function(x) {
	    if (!arguments.length) return height;
	    var totalHeight = x + nav.axisHeight;
	    if (totalHeight >= minHeight) {
	      height = x;
	    }
	    else {
	      height = minHeight;
	    }
	    return container;
	  };

	  container.imagesBaseUrl = function(x) {
	    if (!arguments.length) return imagesBaseUrl;
	    imagesBaseUrl = x;
	    return container;
	  };

	  container.dataGutter = function(x) {
	    if (!arguments.length) return dataGutter;
	    dataGutter = x;
	    return container;
	  };

	  container.latestTranslation = function(x) {
	    if (!arguments.length) return nav.latestTranslation;
	    nav.latestTranslation = x;
	    return container;
	  };

	  container.currentTranslation = function(x) {
	    if (!arguments.length) return nav.currentTranslation;
	    nav.currentTranslation = x;
	    return container;
	  };

	  container.sortReverse = function(b) {
	    if (!arguments.length) return sortReverse;
	    if (b === (true || false)) {
	      sortReverse = b;
	    }
	    return container;
	  };

	  // data getters and setters
	  container.data = function(a, viewEndDate) {
	    if (!arguments.length) return data;

	    data = a;

	    var first;
	    var last;
	    if (!(data && data.length)) {
	      last = new Date();
	      if (viewEndDate) {
	        last = new Date(viewEndDate);
	      }
	      first = new Date(last);
	      first.setUTCDate(first.getUTCDate() - 28);
	    }
	    else {
	      first = new Date(data[0].normalTime);
	      last = new Date(data[data.length - 1].normalTime);
	    }

	    endpoints = [first, last];
	    container.endpoints = endpoints;

	    function createDay(d) {
	      return new Date(d.toISOString().slice(0,11) + '00:00:00Z');
	    }
	    days = [];
	    var firstDay = createDay(new Date(container.endpoints[0]));
	    var lastDay = createDay(new Date(container.endpoints[1]));
	    days.push(firstDay.toISOString().slice(0,10));
	    var currentDay = firstDay;
	    while (currentDay < lastDay) {
	      var newDay = new Date(currentDay);
	      newDay.setUTCDate(newDay.getUTCDate() + 1);
	      days.push(newDay.toISOString().slice(0,10));
	      currentDay = newDay;
	    }

	    if (days.length < 14) {
	      var day = new Date(firstDay);
	      // fill in previous days if less than two weeks data
	      while (days.length < 14) {
	        day.setUTCDate(day.getUTCDate() - 1);
	        days.unshift(day.toISOString().slice(0,10));
	        currentDay = day;
	      }
	      first = days[0];
	      lessThanTwoWeeks = true;
	    }

	    dataStartNoon = new Date(first);
	    dataStartNoon.setUTCHours(12);
	    dataStartNoon.setUTCMinutes(0);
	    dataStartNoon.setUTCSeconds(0);
	    if (!sortReverse) {
	      dataStartNoon.setUTCDate(dataStartNoon.getUTCDate() - 1);
	    }

	    var noon = '12:00:00Z';

	    dataEndNoon = new Date(last);
	    dataEndNoon.setUTCDate(dataEndNoon.getUTCDate() - 14);
	    dataEndNoon = new Date(dataEndNoon.toISOString().slice(0,11) + noon);

	    if (!viewEndDate) {
	      viewEndDate = new Date(days[days.length - 1]);
	    } else {
	      viewEndDate = new Date(viewEndDate);
	    }

	    var viewBeginning = new Date(viewEndDate);
	    viewBeginning.setUTCDate(viewBeginning.getUTCDate() - 14);
	    var firstDayInView;

	    if (sortReverse) {
	      this.days = days;

	      firstDayInView = new Date(days[0]);
	    }
	    else {
	      this.days = days.reverse();

	      firstDayInView = new Date(days[days.length - 1]);
	    }

	    if (viewBeginning < firstDayInView) {
	      firstDayInView.setUTCDate(firstDayInView.getUTCDate() - 1);
	      viewBeginning = new Date(firstDayInView);
	      viewEndDate = new Date(firstDayInView);
	      viewEndDate.setUTCDate(viewEndDate.getUTCDate() + 14);
	    }
	    viewEndpoints = [new Date(viewBeginning.toISOString().slice(0,11) + noon), new Date(viewEndDate.toISOString().slice(0,11) + noon)];
	    if (sortReverse) {
	      viewEndpoints = viewEndpoints.reverse();
	    }
	    viewIndex = days.indexOf(viewEndDate.toISOString().slice(0,10));

	    container.dataPerDay = [];

	    this.days.forEach(function(day) {
	      var thisDay = {
	        year: day.slice(0,4),
	        month: day.slice(5,7),
	        day: day.slice(8,10)
	      };
	      container.dataPerDay.push(_.filter(data, function(d) {
	        var date = new Date(d.normalTime);
	        if ((date.getUTCFullYear() === parseInt(thisDay.year, 10)) &&
	          (date.getUTCMonth() + 1 === parseInt(thisDay.month, 10)) &&
	          (date.getUTCDate() === parseInt(thisDay.day, 10))) {
	          return d;
	        }
	      }));
	    });

	    return container;
	  };

	  return container;
	};


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var format = __webpack_require__(22);

	var log = __webpack_require__(25).bows('Settings');

	module.exports = function(emitter, opts) {

	  opts = opts || {'bgUnits': 'mg/dL'};

	  var msStartString = function(x) { return format.millisecondsAsTimeOfDay(x); };
	  var defaults = {
	    'sections': {
	      'basal': {
	        'label': 'Basal Rates',
	        'columnTypes': ['basalSchedules']
	      },
	      'wizard': {
	        'label': 'Bolus Wizard',
	        'columnTypes': ['carbRatio', 'insulinSensitivity', 'bgTarget']
	      }
	    },
	    'labelsByType': {
	      'carbRatio': 'Insulin to Carb Ratio (I:C)',
	      'insulinSensitivity': 'Sensitivity (ISF, Correction)',
	      'bgTarget': 'BG Target'
	    },
	    'rowHeadersByType': {
	      'basalSchedules': ['Start time', 'Value (U/hr)'],
	      'basalScheduleSum': ['Total', (function() { return 0.0; }())],
	      'carbRatio': ['Start time', 'Value (g/U)'],
	      'insulinSensitivity': ['Start time', 'Value (' + opts.bgUnits + '/U)'],
	      'bgTarget': ['Start time', 'Low (' + opts.bgUnits + ')', 'High (' + opts.bgUnits + ')']
	    },
	    'mapsByType': {
	      'basalSchedules': {
	        'start': msStartString,
	        'rate': function(x) { return x.toFixed(3); }
	      },
	      'carbRatio': {
	        'start': msStartString,
	        'amount': function(x) { return x; }
	      },
	      'insulinSensitivity': {
	        'start': msStartString,
	        'amount': function(x) { return x; }
	      },
	      'bgTarget': {
	        'start': msStartString,
	        'low': function(x) { return x; },
	        'high': function(x) { return x; }
	      }
	    }
	  };

	  _.defaults(opts, defaults);

	  var settings, basalUtil, mainDiv;

	  function container(selection) {
	    mainDiv = selection.append('div')
	      .attr('id', 'tidelineSettings');
	  }

	  // getters only
	  container.currentSettings = function() {
	    return settings[settings.length - 1];
	  };

	  // getters & setters
	  container.data = function(data) {
	    if (!arguments.length) return settings;

	    settings = data.grouped.settings;
	    basalUtil = data.basalUtil;
	    return container;
	  };

	  container.section = function(type, label, numColumns) {
	    var sectionDiv = mainDiv.append('div')
	      .attr({
	        'id': type + 'Settings',
	        'class': 'd3-settings-section'
	      });

	    sectionDiv.append('div')
	      .attr({
	        'class': 'd3-settings-section-label'
	      })
	      .text(label);

	    if (type === 'basal'){
	      var basalSchedules = container.currentSettings().basalSchedules;
	      var scheduleLabels = _.pluck(basalSchedules, 'name');
	      var scheduleLabelsToKeep = [];
	      // remove any basal schedules that are just an empty array
	      for (var k = 0; k < scheduleLabels.length; k++) {
	        if (_.findWhere(basalSchedules, {'name': scheduleLabels[k]}).value.length !== 0) {
	          scheduleLabelsToKeep.push(scheduleLabels[k]);
	        }
	      }
	      scheduleLabels = scheduleLabelsToKeep;
	      sectionDiv.classed('d3-settings-section-basal', true);
	      container.column(sectionDiv, scheduleLabels[0], 'd3-settings-col-active');
	      if (scheduleLabels.length > 1) {
	        for (var i = 1; i < scheduleLabels.length; i++) {
	          container.column(sectionDiv, scheduleLabels[i]);
	        }
	      }
	    }
	    else if (type === 'wizard') {
	      sectionDiv.classed('d3-settings-section-wizard', true);
	      for (var j = 0; j < numColumns; j++) {
	        container.column(sectionDiv, opts.sections[type].columnTypes[j]);
	      }
	    }

	    mainDiv.selectAll('.d3-settings-basal-schedule').selectAll('.d3-settings-col-label')
	      .on('click', function() {
	        d3.select(this).classed({
	          'd3-settings-col-active': true,
	          'd3-settings-col-collapsed': false
	        });
	      });

	    return container;
	  };

	  container.tableHeaders = function(table, data) {
	    table.append('tr')
	      .selectAll('th')
	      .data(data)
	      .enter()
	      .append('th')
	      .attr({
	        'class': 'd3-settings-table-head'
	      })
	      .text(function(d) {
	        return d;
	      });

	    return container;
	  };

	  container.tableRows = function(table, data, datatype) {
	    table.selectAll('tr.d3-settings-table-row-data')
	      .data(data)
	      .enter()
	      .append('tr')
	      .attr({
	        'class': 'd3-settings-table-row-data'
	      });
	    if (datatype === 'basal') {
	      var sum = ['Total', basalUtil.scheduleTotal(data).toFixed(3)];
	      table.append('tr')
	        .selectAll('th')
	        .data(sum)
	        .enter()
	        .append('th')
	        .attr({
	          'class': 'd3-settings-table-head'
	        })
	        .text(function(d) {
	          return d;
	        });
	    }
	    table.append('tr')
	      .attr('class', 'd3-settings-table-footer');

	    return container;
	  };

	  container.renderRows = function(table, map) {
	    var keys = Object.keys(map);
	    for (var i = 0; i < keys.length; i++) {
	      table.selectAll('.d3-settings-table-row-data')
	        .append('td')
	        .attr('class', function(d) {
	          if (keys[i] === 'start') {
	            return 'd3-settings-start-time';
	          }
	        })
	        .text(function(d) {
	          var key = keys[i];
	          return map[key](d[key]);
	        });
	    }

	    return container;
	  };

	  container.column = function(selection, datatype, scheduleClass) {
	    var columnDiv = selection.append('div')
	      .attr({
	        'id': datatype.replace(' ', '_') + 'Settings',
	        'class': 'd3-settings-col'
	      });
	    // all but basal rates
	    if (opts.labelsByType[datatype]) {
	      columnDiv.append('div')
	        .attr({
	          'class': 'd3-settings-col-label'
	        })
	        .text(opts.labelsByType[datatype]);
	    }
	    // basal rates
	    else {
	      columnDiv.classed({
	        'd3-settings-basal-schedule': true
	      });
	      columnDiv.append('div')
	        .attr('class', function() {
	          if (scheduleClass) {
	            return 'd3-settings-col-label ' + scheduleClass;
	          }
	          else {
	            return 'd3-settings-col-label d3-settings-col-collapsed';
	          }
	        })
	        .html((scheduleClass ? '<i class="icon-down"></i>' : '<i class="icon-right"></i>') + datatype);
	    }

	    var columnTable = columnDiv.append('table');

	    // all but basal rates
	    if (opts.rowHeadersByType[datatype]) {
	      container.tableHeaders(columnTable, opts.rowHeadersByType[datatype])
	        .tableRows(columnTable, container.currentSettings()[datatype])
	        .renderRows(columnTable, opts.mapsByType[datatype]);
	    }
	    // basal rates
	    else {

	      container.tableHeaders(columnTable, opts.rowHeadersByType.basalSchedules)
	        .tableRows(columnTable,
	          _.findWhere(container.currentSettings().basalSchedules, {'name': datatype}).value,
	          'basal')
	        .renderRows(columnTable, opts.mapsByType.basalSchedules);
	    }

	    return container;
	  };

	  container.render = function() {
	    if (container.data().length === 0) {
	      return;
	    }
	    _.each(Object.keys(opts.sections), function(key) {
	      container.section(key, opts.sections[key].label, opts.sections[key].columnTypes.length);
	    }, container);

	    mainDiv.selectAll('.d3-settings-basal-schedule').selectAll('.d3-settings-col-label')
	      .on('click', function() {
	        var current = d3.select(this).classed('d3-settings-col-active');

	        d3.select(this).selectAll('i').classed({
	          'icon-down': !current,
	          'icon-right': current
	        });

	        d3.select(this).classed({
	          'd3-settings-col-active': !current,
	          'd3-settings-col-collapsed': current
	        });
	      });

	    return container;
	  };

	  container.clear = function() {
	    mainDiv.selectAll('div').remove();

	    return container;
	  };

	  container.destroy = function() {
	    mainDiv.remove();

	    return container;
	  };

	  return container;
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	var format = __webpack_require__(22);
	var datetime = __webpack_require__(21);

	var log = __webpack_require__(25).bows('BasalUtil');

	var MS_IN_HOUR = 3600000.0;
	var MS_IN_DAY = 86400000;

	function BasalUtil(data) {

	  this.scheduleTotal = function(schedule) {
	    if ((! (schedule && Array.isArray(schedule) && schedule.length > 0))) {
	      return NaN;
	    }
	    var total = 0, duration;
	    schedule.push({
	      'start': MS_IN_DAY
	    });
	    for (var i = 1; i <= schedule.length - 1; i++) {
	      duration = schedule[i].start - schedule[i - 1].start;
	      total += this.segmentDose(duration, schedule[i - 1].rate);
	    }

	    schedule.pop();

	    return format.fixFloatingPoint(total);
	  };

	  this.segmentDose = function(duration, rate) {
	    var hours = duration / MS_IN_HOUR;
	    return format.fixFloatingPoint(hours * rate);
	  };

	  this.subtotal = function(endpoints) {
	    var dose = 0.0;
	    var start = new Date(endpoints.start.datetime), end = new Date(endpoints.end.datetime);
	    // handle first segment, which may have started before the start endpoint
	    var segment = this.actual[endpoints.start.index];
	    dose += this.segmentDose((new Date(segment.normalEnd) - start), segment.value);
	    var i = endpoints.start.index + 1;
	    while (i < endpoints.end.index) {
	      segment = this.actual[i];
	      dose += this.segmentDose((new Date(segment.normalEnd) - new Date(segment.normalTime)), segment.value);
	      i++;
	    }
	    segment = this.actual[endpoints.end.index];
	    // handle last segment, which may go past the end endpoint
	    dose += this.segmentDose((end - new Date(segment.normalTime)), segment.value);
	    return format.fixFloatingPoint(dose);
	  };

	  this.isContinuous = function(s, e) {
	    var start = new Date(s), end = new Date(e);
	    var startIndex = _.findIndex(this.actual, function(segment) {
	        return (new Date(segment.normalTime).valueOf() <= start) && (start <= new Date(segment.normalEnd).valueOf());
	      });
	    var endIndex = _.findIndex(this.actual, function(segment) {
	        return (new Date(segment.normalTime).valueOf() <= end) && (end <= new Date(segment.normalEnd).valueOf());
	      });
	    if ((startIndex >= 0) && (endIndex >= 0)) {
	      var i = startIndex;
	      while (i < endIndex) {
	        var s1 = this.actual[i], s2 = this.actual[i + 1];
	        if (s1.normalEnd !== s2.normalTime) {
	          return false;
	        }
	        i++;
	      }
	      return {
	        'start': {
	          'datetime': start.toISOString(),
	          'index': startIndex
	        },
	        'end': {
	          'datetime': end.toISOString(),
	          'index': endIndex
	        }
	      };
	    }
	    else {
	      return false;
	    }
	  };

	  this.totalBasal = function(s, e, opts) {
	    opts = opts || {};
	    if (datetime.verifyEndpoints(s, e, this.endpoints)) {
	      if (datetime.isTwentyFourHours(s, e)) {
	        var endpoints = this.isContinuous(s, e);
	        if (endpoints) {
	          return {'total': this.subtotal(endpoints)};
	        }
	        else {
	          log('Basal data within 24 hours starting', new Date(s).toISOString().slice(0,16), 'is not continuous; cannot calculate basal total.');
	          return {'total': NaN};
	        }
	      }
	      else if (datetime.isLessThanTwentyFourHours(s, e)) {
	        log('Data domain less than twenty-four hours; cannot calculate basal total.');
	        return {'total': NaN};
	      }
	      else {
	        var dose = 0.0;
	        var excluded = [];
	        var start = new Date(s), end = new Date(e);
	        var n = datetime.getNumDays(s, e);
	        for (var j = 0; j < n; j++) {
	          var dayStart = new Date(start);
	          var dayEnd = new Date(dayStart);
	          dayEnd.setUTCDate(dayEnd.getUTCDate() + 1);
	          var endpoints = this.isContinuous(dayStart.toISOString(), dayEnd.toISOString());
	          if (endpoints && datetime.isTwentyFourHours(dayStart.toISOString(), dayEnd.toISOString())) {
	            if (isNaN(this.subtotal(endpoints))) {
	              excluded.push(dayStart.toISOString());
	            }
	            else {
	              dose += this.subtotal(endpoints);
	            }
	          }
	          else {
	            excluded.push(dayStart.toISOString());
	          }
	          start.setUTCDate(start.getUTCDate() + 1);
	        }
	        if (excluded.length <= opts.exclusionThreshold) {
	          return {
	            'total': dose,
	            'excluded': excluded
	          };
	        }
	        else {
	          log(excluded.length, 'days excluded. Not enough days with basal data to calculate basal total.');
	          return {
	            'total': NaN,
	            'excluded': excluded
	          };
	        }
	      }
	    }
	    else {
	      return {'total': NaN};
	    }
	  };

	  this.actual = data;

	  this.data = data || [];
	  if (this.data.length > 0) {
	    this.endpoints = [this.data[0].normalTime, this.data[this.data.length - 1].normalEnd];
	  }
	}

	module.exports = BasalUtil;


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	var format = __webpack_require__(22);
	var datetime = __webpack_require__(21);
	var TidelineCrossFilter = __webpack_require__(23);

	var log = __webpack_require__(25).bows('BolusUtil');

	function BolusUtil(data) {

	  this.subtotal = function(s, e) {
	    var dose = 0.0;
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    dataByDate.filter([start, end]);
	    var currentData = filterData.getAll(dataByDate);
	    var firstBolus = _.findIndex(currentData, function(bolus) {
	      var d = new Date(bolus.normalTime).valueOf();
	      return (d >= start) && (d <= end);
	    });
	    if (firstBolus !== -1) {
	      _.forEach(currentData, function(d) {
	        dose += d.value;
	      });
	    }
	    return format.fixFloatingPoint(dose);
	  };

	  this.totalBolus = function(s, e, opts) {
	    opts = opts || {};
	    if (datetime.verifyEndpoints(s, e, this.endpoints)) {
	      var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	      var total = 0.0;
	      if (datetime.isTwentyFourHours(s, e)) {
	        total += this.subtotal(s, e);
	      }
	      else if (datetime.isLessThanTwentyFourHours(s, e)) {
	        log('Data domain less than twenty-four hours; cannot calculate bolus total.');
	        return NaN;
	      }
	      else {
	        if ((opts.excluded) && (opts.excluded.length > 0)) {
	          var first = new Date(start).toISOString();
	          var ex = opts.excluded[0];
	          var bolus = this;
	          opts.excluded.forEach(function(ex) {
	            // exclude boluses that happen to be directly on first timestamp
	            if (first !== ex) {
	              total += bolus.subtotal(first, ex);
	            }
	            first = datetime.addDays(ex, 1);
	          });
	          if (first !== end) {
	            total += this.subtotal(first, end);
	          }
	        }
	        else {
	          total += this.subtotal(start, end);
	        }
	      }
	      return format.fixFloatingPoint(total);
	    }
	    else {
	      return NaN;
	    }
	  };

	  this.data = data || [];
	  var filterData = new TidelineCrossFilter(this.data);
	  var dataByDate = filterData.addDimension('date');
	  if (this.data.length > 0) {
	    this.endpoints = [this.data[0].normalTime, this.data[this.data.length - 1].normalTime];
	  }
	}

	module.exports = BolusUtil;


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	var datetime = __webpack_require__(21);
	var TidelineCrossFilter = __webpack_require__(23);

	var log = __webpack_require__(25).bows('BGUtil');

	function BGUtil(data, opts) {

	  opts = opts || {};
	  if (opts.DAILY_MIN == null) {
	    throw new Error('BGUtil needs a daily minimum readings (`opts.DAILY_MIN`) in order to calculate a statistic.');
	  }

	  var MS_IN_24 = 86400000;
	  var currentIndex = 0, currentData;

	  var categories = {
	    low: 80,
	    target: 180
	  };

	  var defaults = {
	    low: 0,
	    target: 0,
	    high: 0,
	    total: 0
	  };

	  var breakdownNaN = {
	    low: NaN,
	    target: NaN,
	    high: NaN,
	    total: NaN
	  };

	  function getCategory (n) {
	    if (n <= categories.low) {
	      return 'low';
	    }
	    else if ((n > categories.low) && (n <= categories.target)) {
	      return 'target';
	    }
	    else {
	      return 'high';
	    }
	  }

	  this.filtered = function(s, e) {
	    if (!currentData) {
	      currentData = filterData.getAll(dataByDate);
	    }
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    dataByDate.filter([start, end]);
	    var filteredObj = {
	      data: dataByDate.top(Infinity).reverse(),
	      excluded: []
	    };
	    var filtered = filteredObj.data;
	    if (filtered.length < this.threshold(s, e)) {
	      filteredObj.excluded.push(new Date(s).toISOString());
	      filteredObj.data = [];
	      return filteredObj;
	    }
	    else {
	      return filteredObj;
	    }
	  };

	  this.filter = function(s, e, exclusionThreshold) {
	    if (datetime.verifyEndpoints(s, e, this.endpoints)) {
	      if (datetime.isTwentyFourHours(s, e)) {
	        return this.filtered(s, e);
	      }
	      else if (datetime.isLessThanTwentyFourHours(s, e)) {
	        log('Data domain less than twenty-four hours; cannot calculate bolus total.');
	        return {data: [], excluded: []};
	      }
	      else {
	        var time = new Date(s).valueOf(), end = new Date(e).valueOf();
	        var result = [], excluded = [], next;
	        while (time < end) {
	          next = new Date(datetime.addDays(time, 1)).valueOf();
	          if (datetime.isTwentyFourHours(time, next)) {
	            var filtered = this.filtered(time, next);
	            result = result.concat(filtered.data);
	            excluded = excluded.concat(filtered.excluded);
	          }
	          time = new Date(next).valueOf();
	        }
	        if (excluded.length > exclusionThreshold) {
	          log(excluded.length, 'days excluded. Not enough CGM data in some days to calculate stats.');
	          return {data: [], excluded: excluded};
	        }
	        else {
	          return {data: result, excluded: excluded};
	        }
	      }
	    }
	    else {
	      log('Endpoint verification failed!');
	      return {data: [], excluded: []};
	    }
	  };

	  this.rangeBreakdown = function(filtered) {
	    if (!this.data[0]) {
	      return breakdownNaN;
	    }
	    var breakdown = {type: this.data[0].type};
	    if (filtered.length > 0) {
	      var groups = _.countBy(filtered, function(d) {
	        return getCategory(d.value);
	      });
	      breakdown = _.defaults(breakdown, groups, defaults);
	      breakdown.total = breakdown.low + breakdown.target + breakdown.high;
	    }
	    return _.defaults(breakdown, breakdownNaN);
	  };

	  this.average = function(filtered) {
	    if (filtered.length > 0) {
	      var sum = _.reduce(filtered, function(memo, d) {
	        return memo + d.value;
	      }, 0);
	      var average = parseInt((sum/filtered.length).toFixed(0), 10);
	      return {value: average, category: getCategory(average)};
	    }
	    else {
	      return {value: NaN, category: '', excluded: filtered.excluded};
	    }
	  };

	  this.threshold = function(s, e) {
	    var difference = new Date(e) - new Date(s);
	    return Math.floor(opts.DAILY_MIN * (difference/MS_IN_24));
	  };

	  this.getStats = function(s, e, opts) {
	    opts = opts || {};
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    dataByDate.filter([start, end]);
	    currentData = filterData.getAll(dataByDate);
	    var filtered = this.filter(s, e, opts.exclusionThreshold);
	    var average = this.average(filtered.data);
	    average.excluded = filtered.excluded;
	    var breakdown = this.rangeBreakdown(filtered.data);
	    breakdown.excluded = filtered.excluded;
	    return {
	      average: average,
	      breakdown: breakdown
	    };
	  };

	  this.data = data || [];
	  var filterData = new TidelineCrossFilter(this.data);
	  var dataByDate = filterData.addDimension('date');
	  if (this.data.length > 0) {
	    this.endpoints = [this.data[0].normalTime, this.data[data.length - 1].normalTime];
	  }
	}

	module.exports = BGUtil;


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	function DeviceUtil(data) {
	  this.findLastDatum = function() {
	    var included = ['bolus', 'carbs', 'smbg'];
	    for (var j = data.length - 1; j > 0; j--) {
	      if (included.indexOf(data[j].type) !== -1) {
	        return data[j].normalTime;
	      }
	    }
	  };

	  this.data = data;
	}

	module.exports = DeviceUtil;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;
	var log = __webpack_require__(25).bows('SegmentUtil');

	var Timeline = __webpack_require__(24);

	var keysForEquality = ['type', 'deliveryType', 'value', 'percent', 'deviceId', 'scheduleName', 'source', 'link'];
	function eventsSmooshable(lhs, rhs) {
	  return _.isEqual(_.pick(lhs, keysForEquality), _.pick(rhs, keysForEquality));
	}

	var eventPriority = ['temp', 'suspend'];

	function SegmentUtil(timeline) {
	  this.timeline = timeline;
	}

	SegmentUtil.prototype.getUndelivered = function(type) {
	  var retVal = this.undelivered[type];
	  return retVal == null ? [] : retVal;
	};

	function insertSorted(array, startIndex, e, field) {
	  if (array.length === 0) {
	    array.push(e);
	  } else {
	    var index = startIndex;

	    for (; index < array.length; ++index) {
	      if (array[index][field] > e[field]) {
	        array.splice(index, 0, e);
	        return;
	      }
	    }

	    if (array[array.length - 1][field] <= e[field]) {
	      array.push(e);
	    } else {
	      insertSorted(array, 0, e, field);
	    }
	  }
	}

	module.exports = function(data){
	  var scheduledTimeline = new Timeline();
	  var otherEvents = {};

	  for (var i = 0; i < data.length; ++i) {
	    var e = _.clone(data[i]);
	    if (e.type === 'basal-rate-segment') {
	      var deliveryType = e.deliveryType;

	      if (deliveryType === 'scheduled') {
	        if (e.end == null) {
	          // TODO: Jana, this is the point that sets the end equal to the start when end is null.
	          // TODO: Please adjust the code to add the actual end timestamp of the stream instead of e.start.
	          // TODO: If you are not named Jana and you are viewing this after April 30, 2014.
	          // TODO: Please just delete this TODO comment
	          e.end = e.start;
	        }

	        var overlap = scheduledTimeline.add(e);
	        if (overlap.length > 0) {
	          // A scheduled overlapped a scheduled, throw away the overlap and the initial event that git inserted. It generally
	          // indicates multiple pumps in concurrent operation.

	          overlap.forEach(function(overlapped){
	            // Allow scheduled overlaps for the same device (schedule changes)
	            if (overlapped.deviceId != null && overlapped.deviceId === e.deviceId) {
	              return;
	            }

	            // Put the overlapped back in to chunk up the thing that did the overlapping
	            var inserted = scheduledTimeline.add(overlapped)[0];
	            if (inserted.value === overlapped.value) {
	              return;
	            }

	            // Next, pop the stack until we find what we just inserted, throw that way and push stuff back on
	            var collateralDamage = [];
	            var popped = scheduledTimeline.pop();
	            while (popped != null && popped.start !== overlapped.start && popped.end !== overlapped.end) {
	              collateralDamage.push(popped);
	              popped = scheduledTimeline.pop();
	            }

	            collateralDamage.forEach(scheduledTimeline.add.bind(scheduledTimeline));
	          });
	        }
	      } else {
	        if (otherEvents[deliveryType] == null) {
	          otherEvents[deliveryType] = [];
	        }
	        insertSorted(otherEvents[deliveryType], otherEvents[deliveryType].length, e, 'start');
	      }
	    }
	  }

	  var unsmooshed = scheduledTimeline.getArray();
	  scheduledTimeline = null; // let go of the memory

	  var baseTimeline = [];
	  for (i = 0; i < unsmooshed.length; ++i) {
	    var next = unsmooshed[i];
	    if (baseTimeline.length === 0) {
	      baseTimeline.push(next);
	    } else {
	      var last = baseTimeline[baseTimeline.length - 1];

	      if (last.end === next.start && eventsSmooshable(last, next)) {
	        last.end = next.end;
	      } else {
	        baseTimeline.push(next);
	      }
	    }
	  }

	  function addToBaseTimeline(index, e) {
	    if (e.value != null) {
	      baseTimeline.splice(index, 0, e);
	    }
	  }

	  eventPriority.forEach(function(eventType){
	    var otherArray = otherEvents[eventType];
	    delete otherEvents[eventType];

	    if (otherArray == null) {
	      return;
	    }

	    var timelineIndex = 0;
	    for (var i = 0; i < otherArray.length; ++i) {
	      var e = otherArray[i];
	      while (timelineIndex > 0 && baseTimeline[timelineIndex].start > e.start) {
	        --timelineIndex;
	      }

	      while (timelineIndex < baseTimeline.length && baseTimeline[timelineIndex].end <= e.start) {
	        ++timelineIndex;
	      }

	      if (timelineIndex >= baseTimeline.length) {
	        // We're at the end of the baseTimeline, but we have more events to insert, so attach them
	        // as long as the delivery value isn't determined by a percentage
	        addToBaseTimeline(baseTimeline.length, e);
	      } else if (baseTimeline[timelineIndex].start > e.end) {
	        // The item is completely before this one.  This means that there is a gap in the data,
	        // so just insert the item as long as the delivery value isn't determined by a percentage
	        addToBaseTimeline(timelineIndex, e);
	      } else {
	        // Split based on start if needed
	        var baseItem = baseTimeline[timelineIndex];
	        var clone = null;
	        if (e.start > baseItem.start) {
	          // Current event starts after the item in the base timeline,
	          // so keep the first bit of the baseTimeline in tact
	          clone = _.cloneDeep(baseItem);
	          baseItem.end = e.start;
	          clone.start = e.start;

	          ++timelineIndex;
	          addToBaseTimeline(timelineIndex, clone);
	          baseItem = clone;
	        } else if (e.start < baseItem.start) {
	          // Current event starts even before the item in the base timeline, this means there was a gap
	          // and we want to inject the portion from before the item in the base timeline
	          clone = _.cloneDeep(e);

	          e.start = baseItem.start;
	          clone.end = baseItem.start;

	          addToBaseTimeline(timelineIndex, clone);
	          ++timelineIndex;
	        }

	        // Split based on end if needed
	        if (e.end > baseItem.end) {
	          // The current event ends after the item in the base timeline,
	          // so keep the first bit of the current event and set aside the rest to be processed later
	          clone = _.cloneDeep(e);

	          e.end = baseItem.end;
	          clone.start = baseItem.end;

	          otherArray.splice(i+1, 0, clone); // Put clone back into the array
	        } else if (e.end < baseItem.end) {
	          // The current event ends before the item in the base timeline,
	          // so keep the last bit of the item in the base timeline in tact
	          clone = _.cloneDeep(baseItem);
	          baseItem.end = e.end;
	          clone.start = e.end;

	          addToBaseTimeline(timelineIndex + 1, clone);
	        }

	        // Push now-supressed base item onto its stack of "supressed"
	        var overlappingItem = _.clone(e);
	        overlappingItem.suppressed = baseItem.suppressed == null ? [] : baseItem.suppressed;
	        delete baseItem.suppressed;
	        overlappingItem.suppressed.unshift(baseItem);

	        if (overlappingItem.percent != null) {
	          overlappingItem.value = overlappingItem.percent * baseItem.value;
	        }

	        // Replace split base item with current item
	        baseTimeline[timelineIndex] = overlappingItem;
	      }
	    }
	  });

	  if (Object.keys(otherEvents).length > 1) {
	    log('Unhandled basal-rate-segment objects of deliveryType:', Object.keys(otherEvents));
	  }
	  var newIdCounter = 0;

	  function attachId(e) {
	    if (e.id != null) {
	      e.datumId = e.id;
	    }
	    e.id = 'segment_' + newIdCounter++;
	    return e;
	  }

	  for (i = 0; i < baseTimeline.length; ++i) {
	    attachId(baseTimeline[i]);
	  }

	  return new SegmentUtil(baseTimeline);
	};


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	var datetime = __webpack_require__(21);

	var log = __webpack_require__(25).bows('SettingsUtil');

	function SettingsUtil(data, endpoints) {

	  function findStarts(ms, starts) {
	    for (var i = 0; i < starts.length; ++i) {
	      var start = starts[i];
	      if (i !== starts.length - 1) {
	        if (ms >= start && ms < starts[i + 1]) {
	          return {starts: [start, starts[i + 1]], startIndex: i+1};
	        }
	      }
	      else {
	        return {starts:[start], startIndex: 0};
	      }
	    }
	  }

	  function getSegmentsForSchedule(opts) {
	    var sched = opts.schedule;
	    if (sched.value.length === 0) {
	      return [];
	    }
	    var s = opts.start, e = opts.end;
	    var starts = [];
	    var ratesByStart = {};
	    var segments;
	    for (var i = 0; i < sched.value.length; ++i) {
	      starts.push(sched.value[i].start);
	      ratesByStart[sched.value[i].start] = sched.value[i].rate;
	    }
	    var startsObj = findStarts(datetime.getMsFromMidnight(s), starts);
	    var startPair = startsObj.starts;
	    var firstSegmentEnd = (startPair.length === 2) ?
	      datetime.composeMsAndDateString(startPair[1], s) :
	      datetime.composeMsAndDateString(starts[0], datetime.addDays(s, 1));
	    segments = [{
	      type: 'basal-settings-segment',
	      schedule: sched.name,
	      normalTime: s,
	      normalEnd: firstSegmentEnd,
	      value: ratesByStart[startPair[0]],
	      active: opts.active,
	      confidence: opts.confidence,
	      id: sched.name.replace(' ', '_') + '_' + s.replace(/[^\w\s]|_/g, '')
	    }];
	    var currentDatetime = firstSegmentEnd, currentIndex = startsObj.startIndex;
	    while (currentDatetime < e) {
	      var end;
	      if (currentIndex !== starts.length - 1) {
	        end =  datetime.composeMsAndDateString(starts[currentIndex + 1], currentDatetime);
	      }
	      else {
	        end = datetime.composeMsAndDateString(0, datetime.addDays(currentDatetime, 1));
	      }
	      if (end > e) {
	        end = e;
	      }
	      segments.push({
	        type: 'basal-settings-segment',
	        schedule: sched.name,
	        normalTime: currentDatetime,
	        normalEnd: end,
	        value: ratesByStart[starts[currentIndex]],
	        active: opts.active,
	        confidence: opts.confidence,
	        id: sched.name.replace(' ', '_') + '_' + currentDatetime.replace(/[^\w\s]|_/g, '')
	      });
	      if (currentIndex !== starts.length - 1) {
	        currentIndex++;
	      }
	      else {
	        currentIndex = 0;
	      }
	      currentDatetime = end;
	    }
	    return segments;
	  }

	  this.annotateBasalSettings = function(a) {
	    // don't necessarily want unsquashing of midnights to propogate beyond this method
	    // hence using _.cloneDeep() to copy the array
	    var actuals = _.cloneDeep(a) || [];

	    var actualsByInterval = {};

	    for (var i = 0; i < actuals.length; ++i) {
	      var actual = actuals[i];
	      if (datetime.isSegmentAcrossMidnight(actual.normalTime, actual.normalEnd)) {
	        var midnight = datetime.getMidnight(actual.normalTime, true);
	        var end = actual.normalEnd;
	        actual.normalEnd = midnight;
	        var newActual = _.clone(actual);
	        newActual.normalTime = midnight;
	        newActual.normalEnd = end;
	        actuals.splice(i + 1, 0, newActual);
	        actual = actuals[i];
	      }
	      // Animas basal schedules have a resolution of thirty minutes
	      var s = datetime.roundToNearestMinutes(actual.normalTime, 30);
	      var e = datetime.roundToNearestMinutes(actual.normalEnd, 30);
	      actualsByInterval[s + '/' + e] = actual;
	    }
	    for (var key in this.segmentsBySchedule) {
	      var currentSchedule = this.segmentsBySchedule[key];
	      if (currentSchedule.length === 0) {
	        return;
	      }
	      for (var j = 0; j < currentSchedule.length; ++j) {
	        var segment = currentSchedule[j];
	        var interval = segment.normalTime + '/' + segment.normalEnd;
	        if (actualsByInterval[interval]) {
	          var matchedActual = actualsByInterval[interval];
	          if (segment.value === matchedActual.value) {
	            segment.actualized = true;
	          }
	        }
	      }
	    }
	    return this.segmentsBySchedule;
	  };

	  this.getAllSchedules = function(s, e) {
	    if (datetime.verifyEndpoints(s, e, this.endpoints) && this.data.length !== 0) {
	      var settingsIntervals = this.getIntervals(s, e);
	      var segmentsBySchedule = {};
	      for (var i = 0; i < settingsIntervals.length; ++i) {
	        var interval = settingsIntervals[i];
	        for (var j = 0; j < interval.settings.basalSchedules.length; ++j) {
	          var schedule = interval.settings.basalSchedules[j];
	          if (segmentsBySchedule[schedule.name]) {
	            segmentsBySchedule[schedule.name] = segmentsBySchedule[schedule.name].concat(getSegmentsForSchedule({
	              schedule: schedule,
	              start: interval.start,
	              end: interval.end,
	              active: schedule.name === interval.settings.activeBasalSchedule,
	              confidence: interval.settings.confidence ? interval.settings.confidence : 'normal'
	            }));
	          }
	          // there can be schedules in the settings with an empty array as their value
	          else if (schedule.value.length > 0) {
	            segmentsBySchedule[schedule.name] = getSegmentsForSchedule({
	              schedule: schedule,
	              start: interval.start,
	              end: interval.end,
	              active: schedule.name === interval.settings.activeBasalSchedule,
	              confidence: interval.settings.confidence ? interval.settings.confidence : 'normal'
	            });
	          }
	        }
	      }
	      this.segmentsBySchedule = segmentsBySchedule;
	      return segmentsBySchedule;
	    }
	    else {
	      return [];
	    }
	  };

	  this.getIntervals = function(s, e) {
	    var actualIntervals = [];
	    for (var i = 0; i < this.intervals.length; ++i) {
	      var interval = this.intervals[i];
	      var intervalEndpoints = [interval.start, interval.end];
	      if (datetime.checkIfDateInRange(s, intervalEndpoints) &&
	        datetime.checkIfDateInRange(e, intervalEndpoints)) {
	        actualIntervals.push({
	          start: s,
	          end: e,
	          settings: interval.settings
	        });
	      }
	      else {
	        if (datetime.checkIfDateInRange(s, intervalEndpoints)) {
	          actualIntervals.push({
	            start: s,
	            end: interval.end,
	            settings: interval.settings
	          });
	        }
	        if (datetime.checkIfDateInRange(e, intervalEndpoints)) {
	          actualIntervals.push({
	            start: interval.start,
	            end: e,
	            settings: interval.settings
	          });
	        }
	        if (s < interval.start && e > interval.end) {
	          actualIntervals.push({
	            start: interval.start,
	            end: interval.end,
	            settings: interval.settings
	          });
	        }
	      }
	    }
	    if (actualIntervals.length === 0) {
	      log('Could not find a settings object for the given interval.');
	      return undefined;
	    }
	    return actualIntervals;
	  };

	  this.data = data || [];
	  // valid endpoints for settings are endpoints of all diabetes data
	  this.endpoints = endpoints;
	  // intervals of effectiveness of a settings object
	  this.intervals = _.reject(_.flatten(_.map(this.data, function(d, i, data) {
	    if (i === 0) {
	      if (this.endpoints[1] === d.normalTime) {
	        return {
	          start: this.endpoints[0],
	          end: this.endpoints[1],
	          settings: _.defaults(_.clone(d), {confidence: 'uncertain'})
	        };
	      }
	      else {
	        return [{
	          start: this.endpoints[0],
	          end: d.normalTime,
	          settings: _.defaults(_.clone(d), {confidence: 'uncertain'})
	        },{
	          start: d.normalTime,
	          end: data[1] ? data[1].normalTime : this.endpoints[1],
	          settings: _.clone(d)
	        }];
	      }
	    }
	    else {
	      if (i !== data.length - 1) {
	        return {
	          start: d.normalTime,
	          end: data[i + 1].normalTime,
	          settings: _.clone(d)
	        };
	      }
	      else {
	        return {
	          start: d.normalTime,
	          end: this.endpoints[1],
	          settings: _.clone(d)
	        };
	      }
	    }
	  }, this)), function(d) {
	    return d.start === d.end;
	  });
	}

	module.exports = SettingsUtil;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	var datetime = {

	  APPEND: 'T00:00:00.000Z',

	  MS_IN_24: 86400000,

	  addDays: function(s, n) {
	    var d = new Date(s);
	    d.setUTCDate(d.getUTCDate() + n);
	    return d.toISOString();
	  },

	  addDuration: function(datetime, duration) {
	    if (typeof(datetime) === 'string') {
	      datetime = new Date(datetime);
	    }

	    return new Date(datetime.valueOf() + duration).toISOString().slice(0, 19);
	  },

	  adjustToInnerEndpoints: function(s, e, endpoints) {
	    if (!endpoints) {
	      return null;
	    }
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    var thisTypeStart = new Date(endpoints[0]).valueOf(), thisTypeEnd = new Date(endpoints[1]).valueOf();
	    if (start < thisTypeStart) {
	      return [thisTypeStart, end];
	    }
	    else if (end > thisTypeEnd) {
	      return [start, thisTypeEnd];
	    }
	    else {
	      return [start, end];
	    }
	  },

	  checkIfDateInRange: function(s, endpoints) {
	    var d = new Date(s);
	    var start = new Date(endpoints[0]);
	    var end = new Date(endpoints[1]);
	    if ((d.valueOf() >= start.valueOf()) && (d.valueOf() <= end.valueOf())) {
	      return true;
	    }
	    else {
	      return false;
	    }
	  },

	  checkIfUTCDate: function(s) {
	    var d = new Date(s);
	    if (typeof s === 'number') {
	      if (d.getUTCFullYear() < 2008) {
	        return false;
	      }
	      else {
	        return true;
	      }
	    }
	    else if (s.slice(s.length - 1, s.length) !== 'Z') {
	      return false;
	    }
	    else {
	      if (s === d.toISOString()) {
	        return true;
	      }
	      else {
	        return false;
	      }
	    }
	  },

	  composeMsAndDateString: function(ms, d) {
	    return new Date(ms + new Date(this.toISODateString(d) + this.APPEND).valueOf()).toISOString();
	  },

	  getMidnight: function(d, next) {
	    if (next) {
	      return this.getMidnight(this.addDays(d, 1));
	    }
	    else {
	      return this.toISODateString(d) + this.APPEND;
	    }
	  },

	  getMsFromMidnight: function(d) {
	    var midnight = new Date(this.getMidnight(d)).valueOf();
	    return new Date(d).valueOf() - midnight;
	  },

	  getNumDays: function(s, e) {
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    return Math.ceil((end - start)/this.MS_IN_24);
	  },

	  isLessThanTwentyFourHours: function(s, e) {
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    if (end - start < this.MS_IN_24) {
	      return true;
	    }
	    else { return false; }
	  },

	  isNearRightEdge: function(d, edge) {
	    // check if d.normalTime is within six hours before edge
	    var t = new Date(d.normalTime);
	    if (edge.valueOf() - t.valueOf() < this.MS_IN_24/4) {
	      return true;
	    }
	    return false;
	  },

	  isSegmentAcrossMidnight: function(s, e) {
	    var start = new Date(s), end = new Date(e);
	    var startDate = this.toISODateString(s), endDate = this.toISODateString(e);
	    if (startDate === endDate) {
	      return false;
	    }
	    else {
	      if (end.getUTCDate() === start.getUTCDate() + 1) {
	        if (this.getMidnight(e) === e) {
	          return false;
	        }
	        return true;
	      }
	      else {
	        return false;
	      }
	    }
	  },

	  isTwentyFourHours: function(s, e) {
	    var start = new Date(s).valueOf(), end = new Date(e).valueOf();
	    if (end - start === this.MS_IN_24) {
	      return true;
	    }
	    else { return false; }
	  },

	  roundToNearestMinutes: function(d, resolution) {
	    var date = new Date(d);
	    var min = date.getUTCMinutes();
	    var values = _.range(0, 60, resolution);
	    for (var i = 0; i < values.length; ++i) {
	      if (min - values[i] < resolution/2) {
	        date.setUTCMinutes(values[i]);
	        return date.toISOString();
	      }
	      else if (i === values.length - 1) {
	        date.setUTCMinutes(0);
	        date.setUTCHours(date.getUTCHours() + 1);
	        return date.toISOString();
	      }
	    }
	  },

	  toISODateString: function(d) {
	    var date = new Date(d);
	    return date.toISOString().slice(0,10);
	  },

	  smbgEdge: function(d) {
	    var date = new Date(d);
	    if (date.getUTCHours() <= 2) {
	      return 'left';
	    }
	    else if (date.getUTCHours() >= 21) {
	      return 'right';
	    }
	    else {
	      return null;
	    }
	  },

	  verifyEndpoints: function(s, e, endpoints) {
	    if (!endpoints) {
	      return null;
	    }
	    if (this.checkIfUTCDate(s) && this.checkIfUTCDate(e)) {
	      endpoints = this.adjustToInnerEndpoints(s, e, endpoints);
	      s = endpoints[0];
	      e = endpoints[1];
	      if (this.checkIfDateInRange(s, endpoints) && this.checkIfDateInRange(e, endpoints)) {
	        return true;
	      }
	      else {
	        return false;
	      }
	    }
	    else {
	      return false;
	    }
	  }
	};

	module.exports = datetime;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var Duration = __webpack_require__(25).Duration;
	var moment = __webpack_require__(25).moment;

	var format = {

	  MS_IN_24: 86400000,

	  tooltipValue: function(x) {
	    if (x === 0) {
	      return '0.0';
	    }
	    else {
	      var formatted = d3.format('.3f')(x);
	      // remove zero-padding on the right
	      while (formatted[formatted.length - 1] === '0') {
	        formatted = formatted.slice(0, formatted.length - 1);
	      }
	      if (formatted[formatted.length - 1] === '.') {
	        formatted = formatted + '0';
	      }
	      return formatted;
	    }
	  },

	  capitalize: function(s) {
	    // transform the first letter of string s to uppercase
	    return s[0].toUpperCase() + s.slice(1);
	  },

	  fixFloatingPoint: function(n) {
	    return parseFloat(n.toFixed(3));
	  },

	  percentage: function(f) {
	    if (isNaN(f)) {
	      return '-- %';
	    }
	    else {
	      return parseInt(Math.round(f * 100), 10) + '%';
	    }
	  },

	  millisecondsAsTimeOfDay: function(i) {
	    var d = new Date(i);
	    return d3.time.format.utc('%-I:%M %p')(d);
	  },

	  timespan: function(d) {
	    var QUARTER = ' ¼', HALF = ' ½', THREE_QUARTER = ' ¾', THIRD = ' ⅓', TWO_THIRDS = ' ⅔';
	    var dur = Duration.parse(d.duration + 'ms');
	    var hours = dur.hours();
	    var minutes = dur.minutes() - (hours * 60);

	    if (hours !== 0) {
	      if (hours === 1) {
	        switch(minutes) {
	        case 0:
	          return 'over ' + hours + ' hr';
	        case 15:
	          return 'over ' + hours + QUARTER + ' hr';
	        case 20:
	          return 'over ' + hours + THIRD + ' hr';
	        case 30:
	          return 'over ' + hours + HALF + ' hr';
	        case 40:
	          return 'over ' + hours + TWO_THIRDS + ' hr';
	        case 45:
	          return 'over ' + hours + THREE_QUARTER + ' hr';
	        default:
	          return 'over ' + hours + ' hr ' + minutes + ' min';
	        }
	      } else {
	        switch(minutes) {
	        case 0:
	          return 'over ' + hours + ' hrs';
	        case 15:
	          return 'over ' + hours + QUARTER + ' hrs';
	        case 20:
	          return 'over ' + hours + THIRD + ' hrs';
	        case 30:
	          return 'over ' + hours + HALF + ' hrs';
	        case 40:
	          return 'over ' + hours + TWO_THIRDS + ' hrs';
	        case 45:
	          return 'over ' + hours + THREE_QUARTER + ' hrs';
	        default:
	          return 'over ' + hours + ' hrs ' + minutes + ' min';
	        }
	      }
	    } else {
	      return 'over ' + minutes + ' min';
	    }
	  },

	  timestamp: function(i) {
	    var d = new Date(i);
	    return d3.time.format.utc('%-I:%M %p')(d).toLowerCase();
	  },

	  xAxisDayText: function(i) {
	    return moment(i).utc().format('dddd, MMMM Do');
	  },

	  xAxisTickText: function(i) {
	    var d = new Date(i);
	    return d3.time.format.utc('%-I %p')(d).toLowerCase();
	  }

	};

	module.exports = format;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var crossfilter = __webpack_require__(25).crossfilter;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('TidelineCrossFilter');

	function TidelineCrossFilter(data) {

	  this.add = function(datum) {
	    return cf.add([datum]);
	  };

	  this.addDimension = function(key) {
	    // define some common dimension accessors for tideline
	    // so we don't have to keep writing the same ones
	    var accessor;
	    switch(key) {
	    case 'date':
	      accessor = function(d) { return new Date(d.normalTime).valueOf(); };
	      break;
	    case 'datatype':
	      accessor = function(d) { return d.type; };
	      break;
	    case 'id':
	      accessor = function(d) { return d.id; };
	      break;
	    }

	    return cf.dimension(accessor);
	  };

	  this.getAll = function(dimension, ascending) {
	    // default return ascending sort array
	    if (!ascending) {
	      return dimension.top(Infinity);
	    }
	    return dimension.top(Infinity).reverse();
	  };

	  this.getOne = function(dimension) {
	    var res = dimension.top(Infinity);

	    if (res.length > 1) {
	      return undefined;
	    }
	    else {
	      return res[0];
	    }
	  };

	  this.getType = function(dimension, type, ascending) {
	    if (!ascending) {
	      return dimension.filter(type).top(Infinity);
	    }
	    return dimension.filter(type).top(Infinity).reverse();
	  };

	  this.remove = function() {
	    return cf.remove();
	  };

	  var cf = crossfilter(data);

	  return this;
	}

	module.exports = TidelineCrossFilter;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;
	var util = __webpack_require__(53);

	function buildError(message) {
	  return new Error(util.format.apply(util, [message].concat(Array.prototype.slice.call(arguments, 1))));
	}

	/**
	 * A Timeline is an object that maintains a sorted list of events in a "timeline"
	 *
	 * Events must have `start` and `end` properties that are sortable with standard mathematical sort (<, >, =).
	 * When `add()`ed the data structure will find the "right" location for the event based on its start and
	 * will then re-apply the other events.  If there is any overlap between events, then the chunk of the
	 * overlapped event that is currently in the timeline is removed.
	 *
	 * This object can optionally "smoosh" events together that occur next to each other.  This is done by providing
	 * a smooshingPred function to the constructor.  If this is provided, then two events will be "smooshed" if they
	 * abut and the predicate returns true.  When smooshed, the "left" object (earlier object) is maintained and
	 * its "end" parameter is set to the end of the "right" object.
	 *
	 * @param smooshingPred The predicate for if two messages should be smooshed
	 * @constructor
	 */
	Timeline = function (smooshingPred) {
	  this.theLine = [];

	  if (smooshingPred == null) {
	    this.smooshingPred = function () { return false; };
	  } else {
	    this.smooshingPred = smooshingPred;
	  }
	};

	Timeline.prototype.peek = function(){
	  if (this.theLine.length == 0) {
	    return null;
	  }
	  return this.theLine[this.theLine.length - 1];
	};

	Timeline.prototype.pop = function(){
	  return this.theLine.pop();
	};

	Timeline.prototype.add = function(e) {
	  if (e.start == null || e.end == null) {
	    throw buildError('Element had no start[%s] or end[%s]', e.start, e.end, e);
	  }

	  if (e.start > e.end) {
	    throw buildError('start[%s] > end[%s], wtf??', e.start, e.end, e);
	  }

	  var insertionIndex = this.theLine.length;
	  if (insertionIndex <= 0) {
	    this.theLine.push(e);
	    return [];
	  }

	  // Find out where the event belongs and add it.
	  for (; insertionIndex > 0; --insertionIndex) {
	    var currEle = this.theLine[insertionIndex - 1];
	    if (e.start === currEle.end || e.start > currEle.start) {
	      break;
	    }
	  }
	  var displacedEvents = this.theLine.splice(insertionIndex, this.theLine.length, _.clone(e));

	  var retVal = [];
	  if (this.theLine.length > 1) {
	    var prevTop = this.theLine[this.theLine.length - 2];
	    if (prevTop.end > e.start) {
	      // e overlaps the previous top, so we have to chunk things up
	      var clone = _.clone(prevTop);
	      prevTop.end = e.start;
	      clone.start = e.start;
	      if (clone.end > e.end) {
	        displacedEvents = [_.assign({}, clone, {start: e.end})].concat(displacedEvents);
	        clone.end = e.end;
	      }
	      retVal = [clone];
	    }

	    if (prevTop.end === e.start) {
	      // Maybe smoosh
	      if (this.smooshingPred(prevTop, e)) {
	        prevTop.end = this.theLine.pop().end;
	      }
	    }
	  }

	  if (displacedEvents.length > 0) {
	    var firstDisplaced = displacedEvents[0];
	    if (firstDisplaced.start === e.start) {
	      // The displaced event starts at the same time as our event and completely covers our event,
	      // which means the current event should splot itself over the displaced event.

	      var endPoint = e.end;
	      if (endPoint > firstDisplaced.end) {
	        endPoint = firstDisplaced.end;
	      }
	      retVal.push(_.assign({}, firstDisplaced, { end: endPoint }));
	      firstDisplaced.start = endPoint;

	      if (firstDisplaced.start == firstDisplaced.end) {
	        displacedEvents.shift(); // Remove the element
	      }
	    }
	  }

	  return Array.prototype.concat.apply(retVal, displacedEvents.map(this.add.bind(this)));
	};

	Timeline.prototype.getArray = function() {
	  return _.clone(this.theLine);
	};

	module.exports = Timeline;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var lib = {};

	if (typeof window !== 'undefined') {
	  lib._ = window._;
	  lib.crossfilter = window.crossfilter;
	  lib.d3 = window.d3;
	  lib.Duration = window.Duration;
	  lib.moment = window.moment;
	  lib.bows = window.bows;
	}
	else {
	  lib._ = __webpack_require__(58);
	  lib.crossfilter = __webpack_require__(54);
	  lib.d3 = __webpack_require__(55);
	  lib.Duration = __webpack_require__(56);
	  lib.moment = __webpack_require__(57);
	}

	if (!lib._) {
	  throw new Error('Underscore or Lodash is a required dependency!');
	}

	if (!lib.bows) {
	  // NB: optional dependency
	  // return a factory for a log function that does nothing
	  lib.bows = function() {
	    return function() {};
	  };
	}

	module.exports = lib;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var format = __webpack_require__(22);
	var log = __webpack_require__(25).bows('Basal');

	module.exports = function(pool, opts) {
	  opts = opts || {};

	  var defaults = {
	    opacity: 0.3,
	    opacityDelta: 0.1,
	    pathStroke: 1.5,
	    tooltipPadding: 20
	  };

	  opts = _.defaults(opts, defaults);

	  var mainGroup = pool.parent();

	  function getUndelivereds(data) {
	    var undelivereds = [];
	    for (var i = 0; i < data.length; ++i) {
	      var d = data[i];
	      if (d.suppressed) {
	        undelivereds = undelivereds
	          // TODO: eventually we'll want a path for each category of suppresseds
	          // where 'scheduled' is just one such category
	          .concat(_.filter(d.suppressed, function(s) { return s.deliveryType === 'scheduled'; }));
	      }
	    }
	    // there can be duplicate suppressed segments, not quite sure why this happens
	    // TODO: possibly move this filtering to segmentutil
	    return _.reject(undelivereds, function(d, i, segments) { return _.isEqual(d, segments[i - 1]); });
	  }

	  function basal(selection) {
	    opts.xScale = pool.xScale().copy();

	    selection.each(function(currentData) {

	      basal.addAnnotations(_.filter(currentData, function(d) { return d.annotations; }));

	      var basalSegments = d3.select(this)
	        .selectAll('.d3-basal-group')
	        .data(currentData, function(d) {
	          return d.id;
	        });

	      var basalSegmentGroups = basalSegments.enter()
	        .append('g')
	        .attr({
	          'class': 'd3-basal-group',
	          id: function(d) {
	            return 'basal_group_' + d.id;
	          },
	          'clip-path': 'url(#mainClipPath)'
	        });

	      var nonZero = basalSegmentGroups.filter(function(d) {
	        return d.value !== 0;
	      });

	      basal.addRectToPool(nonZero);

	      // add invisible rects as hover targets for all basals
	      basal.addRectToPool(basalSegmentGroups, true);

	      var basalPathsGroup = selection.selectAll('.d3-basal-path-group').data(['d3-basal-path-group']);
	      basalPathsGroup.enter().append('g').attr('class', 'd3-basal-path-group');
	      var paths = basalPathsGroup.selectAll('.d3-basal.d3-path-basal')
	        .data(['d3-basal d3-path-basal', 'd3-basal d3-path-basal d3-path-basal-undelivered']);
	      paths.enter().append('path').attr({
	        'class': function(d) { return d; },
	        'clip-path': 'url(#mainClipPath)'
	      });

	      // d3.selects are OK here because `paths` is a chained selection
	      var actualpath = d3.select(paths[0][0]);
	      var undeliveredPath = d3.select(paths[0][1]);

	      basal.updatePath(actualpath, currentData);

	      basal.updatePath(undeliveredPath, getUndelivereds(currentData));

	      basalSegments.exit().remove();

	      // tooltips
	      basalSegmentGroups.on('mouseover', function() {
	        basal.addTooltip(d3.select(this).datum());
	        d3.select(this).selectAll('.d3-basal.d3-rect-basal')
	          .attr('opacity', opts.opacity + opts.opacityDelta);
	      });
	      basalSegmentGroups.on('mouseout', function() {
	        var id = d3.select(this).attr('id').replace('basal_group_', 'tooltip_');
	        mainGroup.select('#' + id).remove();
	        d3.select(this).selectAll('.d3-basal.d3-rect-basal').attr('opacity', opts.opacity);
	      });
	    });
	  }

	  basal.addRectToPool = function(selection, invisible) {
	    opts.xScale = pool.xScale().copy();

	    var rectClass = invisible ? 'd3-basal d3-basal-invisible' : 'd3-basal d3-rect-basal';

	    var heightFn = invisible ? basal.invisibleRectHeight : basal.height;

	    var yPosFn = invisible ? basal.invisibleRectYPosition : basal.yPosition;

	    selection.append('rect')
	      .attr({
	        x: basal.xPosition,
	        y: yPosFn,
	        opacity: opts.opacity,
	        width: basal.width,
	        height: heightFn,
	        'class': rectClass
	      });
	  };

	  basal.updatePath = function(selection, data) {
	    opts.xScale = pool.xScale().copy();

	    var pathDef = basal.pathData(data);

	    if (pathDef !== '') {
	      selection.attr({
	        d: basal.pathData(data)
	      });
	    }
	  };

	  basal.pathData = function(data) {
	    opts.xScale = pool.xScale().copy();

	    function stringCoords(datum) {
	      return basal.xPosition(data[i]) + ',' + basal.pathYPosition(data[i]) + ' ';
	    }
	    var d = '';
	    for (var i = 0; i < data.length; ++i) {
	      if (i === 0) {
	        // start with a moveto command
	        d += 'M' + stringCoords(data[i]);
	      }
	      else if (data[i].normalTime === data[i - 1].normalEnd) {
	        // if segment is contiguous with previous, draw a vertical line connecting their values
	        d += 'V' + basal.pathYPosition(data[i]) + ' ';
	      }
	      // TODO: maybe a robust check for a gap in time here instead of just !==?
	      else if (data[i].normalTime !== data[i - 1].normalEnd) {
	        // if segment is not contiguous with previous, skip to beginning of segment
	        d += 'M' + stringCoords(data[i]);
	      }
	      // always add a horizontal line corresponding to current segment
	      d += 'H' + basal.segmentEndXPosition(data[i]) + ' ';
	    }
	    return d;
	  };

	  basal.xPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime));
	  };

	  basal.segmentEndXPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalEnd));
	  };

	  basal.tooltipXPosition = function(d) {
	    return basal.xPosition(d) + (basal.segmentEndXPosition(d) - basal.xPosition(d))/2;
	  };

	  basal.yPosition = function(d) {
	    return opts.yScale(d.value);
	  };

	  basal.pathYPosition = function(d) {
	    return opts.yScale(d.value) - opts.pathStroke/2;
	  };

	  basal.invisibleRectYPosition = function(d) {
	    return 0;
	  };

	  basal.width = function(d) {
	    return opts.xScale(Date.parse(d.normalEnd)) - opts.xScale(Date.parse(d.normalTime));
	  };

	  basal.height = function(d) {
	    return pool.height() - opts.yScale(d.value);
	  };

	  basal.invisibleRectHeight = function(d) {
	    return pool.height();
	  };

	  basal.rateString = function(d) {
	    return format.tooltipValue(d.value) + ' <span class="plain">U/hr</span>';
	  };

	  basal.tempPercentage = function(d) {
	    return format.percentage(d.percent);
	  };

	  basal.tooltipHtml = function(group, datum) {
	    switch (datum.deliveryType) {
	      case 'temp':
	        group.append('p')
	          .append('span')
	          .html('<span class="plain">Temp basal of</span> ' + basal.tempPercentage(datum));
	        group.append('p')
	          .append('span')
	          .attr('class', 'secondary')
	          .html('(' + basal.rateString(_.find(datum.suppressed, function(seg) {
	            return seg.deliveryType === 'scheduled';
	          })) + ' scheduled)');
	        break;
	      case 'suspend':
	        group.append('p')
	          .append('span')
	          .html('<span class="plain">Pump suspended</span>');
	        break;
	      default:
	        group.append('p')
	          .append('span')
	          .html(basal.rateString(datum));
	    }
	    group.append('p')
	      .append('span')
	      .attr('class', 'secondary')
	      .html('<span class="fromto">from</span> ' +
	        format.timestamp(datum.normalTime) +
	        ' <span class="fromto">to</span> ' +
	        format.timestamp(datum.normalEnd));
	  };

	  basal.addTooltip = function(d) {
	    var datum = _.clone(d);
	    datum.type = 'basal';
	    var tooltips = pool.nativeTooltips();
	    var cssClass = (d.deliveryType === 'temp' || d.deliveryType === 'suspend') ? 'd3-basal-undelivered' : '';
	    var res = tooltips.addFOTooltip({
	      cssClass: cssClass,
	      datum: datum,
	      shape: 'basal',
	      xPosition: basal.tooltipXPosition,
	      yPosition: function() { return 0; }
	    });
	    var foGroup = res.foGroup;
	    basal.tooltipHtml(foGroup, d);
	    var dims = tooltips.foDimensions(foGroup);
	    tooltips.anchorFO(d3.select(foGroup.node().parentNode), {
	      w: dims.width + opts.tooltipPadding,
	      h: dims.height,
	      shape: 'basal',
	      edge: res.edge
	    });
	  };

	  basal.addAnnotations = function(data, selection) {
	    for (var i = 0; i < data.length; ++i) {
	      var d = data[i];
	      var annotationOpts = {
	        x: basal.xPosition(d),
	        y: opts.yScale(0),
	        xMultiplier: 2,
	        yMultiplier: 1,
	        orientation: {
	          up: true
	        },
	        d: d
	      };
	      if (mainGroup.select('#annotation_for_' + d.id)[0][0] == null) {
	        mainGroup.select('#tidelineAnnotations_basal-rate-segment')
	          .call(pool.annotations(), annotationOpts);
	      }
	    }
	  };

	  return basal;
	};

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var format = __webpack_require__(22);
	var log = __webpack_require__(25).bows('Basal');

	module.exports = function(pool, opts) {
	  opts = opts || {};

	  var defaults = {};

	  function rowHeightFn(numSchedules) {
	    return function() {
	      return pool.height() / numSchedules;
	    };
	  }

	  opts = _.defaults(opts, defaults);

	  var mainGroup = pool.parent();

	  function basaltab(selection) {
	    opts.xScale = pool.xScale().copy();

	    if (pool.hidden()) {
	      return;
	    }

	    selection.each(function(currentData) {
	      var data = _.groupBy(currentData, 'schedule');
	      var numSchedules = Object.keys(data).length;
	      opts.rowHeight = rowHeightFn(numSchedules)();
	      var index = 0;
	      var schedules = Object.keys(data);
	      // remove 'Standard' from array if present and put it at the beginning instead
	      var standardIndex = _.findIndex(schedules, basaltab.isStandard);
	      if (standardIndex !== -1) {
	        var standard = schedules[standardIndex];
	        schedules.splice(standardIndex, 1);
	        schedules.sort();
	        schedules.unshift(standard);
	      }
	      else {
	        schedules.sort();
	      }
	      var actualSchedules = [];
	      for (var i = 0; i < schedules.length; ++i) {
	        var key = schedules[i];
	        // must check that schedule actually exists
	        // schedule names come through for empty schedules
	        if (data[key] != null) {
	          actualSchedules.push(key);
	          var type = data[key][0].type;
	          var tabsGroup = selection.selectAll('#' + pool.id() + '_' + type + '_' + basaltab.scheduleName(key)).data([key]);
	          tabsGroup.enter().append('g').attr('id', pool.id() + '_' + type + '_' + basaltab.scheduleName(key))
	            .attr('transform', selection.attr('transform'));
	          var tabs = tabsGroup.selectAll('g.d3-cell-group.d3-' + basaltab.scheduleName(key))
	            .data(data[key], basaltab.id);
	          var cellGroups = tabs.enter().append('g')
	            .attr({
	              'class': 'd3-cell-group d3-' + basaltab.scheduleName(key),
	              'clip-path': 'url(#mainClipPath)',
	              id: function(d) { return 'cell_group_' + d.id; }
	            });

	          cellGroups.append('rect')
	            .attr({
	              x: basaltab.xPosition,
	              y: index * opts.rowHeight,
	              width: basaltab.width,
	              height: opts.rowHeight,
	              'class': basaltab.matchClass,
	              id: function(d) { return 'cell_rect_' + d.id; }
	            })
	            .classed('d3-cell-rect', true);

	          cellGroups.append('text')
	            .attr({
	              x: function(d) {
	                return basaltab.xPosition(d) + (basaltab.width(d) / 2);
	              },
	              y: (index * opts.rowHeight) + (opts.rowHeight/2),
	              'class': basaltab.matchClass,
	              id: function(d) { return 'cell_label_' + d.id; }
	            })
	            .classed('d3-cell-label', true)
	            .text(function(d) {
	              if (String(d.value).indexOf('.') === -1) {
	                return d.value.toFixed(1);
	              }
	              else return d.value;
	            })
	            .each(function(d) {
	              if (this.getBBox().width > basaltab.width(d)) {
	                d3.select(this).attr('display', 'none');
	              }
	            });

	          tabs.exit().remove();
	          index++;
	        }
	      }
	      basaltab.addLabels(actualSchedules);
	    });
	  }

	  basaltab.id = function(d) {
	    return d.id;
	  };

	  basaltab.scheduleName = function(key) {
	    return key.replace(' ', '_').toLowerCase();
	  };

	  basaltab.matchClass = function(d) {
	    if (d.actualized) {
	      return 'd3-matched';
	    }
	    else {
	      return 'd3-unmatched';
	    }
	  };

	  basaltab.xPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime));
	  };

	  basaltab.width = function(d) {
	    var s = Date.parse(d.normalTime), e = Date.parse(d.normalEnd);
	    return opts.xScale(e) - opts.xScale(s);
	  };

	  basaltab.isStandard = function(str) {
	    var str = str.toLowerCase();
	    if (str === 'standard') {
	      return true;
	    }
	    return false;
	  };

	  basaltab.addLabels = function(names) {
	    var printNames = [];
	    for (var i = 0; i < names.length; ++i) {
	      if (basaltab.isStandard(names[i])) {
	        printNames.push('Std-');
	      }
	      else if (names[i].toLowerCase().search('program') !== -1) {
	        printNames.push(names[i].toLowerCase().replace('program', '').trim().toUpperCase() + '-');
	      }
	      else if (names[i].toLowerCase().search('pattern') !== -1) {
	        printNames.push(names[i].toLowerCase().replace('pattern', '').trim().toUpperCase() + '-');
	      }
	    }
	    var labelsGroup = mainGroup.select('#' + pool.id()).selectAll('#' + pool.id() + '_labels').data([names]);
	    labelsGroup.enter().append('g').attr('id', pool.id() + '_labels');
	    var labels = labelsGroup.selectAll('text').data(printNames);
	    labels.enter()
	      .append('text')
	      .attr({
	        // this retrieves the container axisGutter...something of a hack
	        x: mainGroup.select('#mainClipPath').select('rect').attr('x'),
	        y: function(d, i) { return i * opts.rowHeight + (opts.rowHeight/2); },
	        'class': 'd3-row-label',
	        'xml:space': 'preserve'
	      })
	      .text(function(d) { return d; });
	  };

	  return basaltab;
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var Duration = __webpack_require__(25).Duration;
	var format = __webpack_require__(22);
	var log = __webpack_require__(25).bows('Bolus');

	var drawbolus = __webpack_require__(42);

	module.exports = function(pool, opts) {
	  opts = opts || {};

	  var defaults = {
	    classes: {
	      'unspecial': {'tooltip': 'tooltip_bolus_small.svg', 'width': 70, 'height': 24},
	      'two-line': {'tooltip': 'tooltip_bolus_large.svg', 'width': 98, 'height': 39},
	      'three-line': {'tooltip': 'tooltip_bolus_extralarge.svg', 'width': 98, 'height': 58}
	    },
	    width: 12
	  };

	  _.defaults(opts, defaults);

	  var drawBolus = drawbolus(pool, opts);
	  var mainGroup = pool.parent();

	  function bolus(selection) {
	    opts.xScale = pool.xScale().copy();
	    selection.each(function(currentData) {
	      // filter out boluses with wizard (assumption that boluses with joinKey are wizard)
	      currentData = _.filter(currentData, function(d) { if(!d.joinKey) { return d; }});

	      drawBolus.annotations(_.filter(currentData, function(d) { return d.annotations; }));

	      var boluses = d3.select(this)
	        .selectAll('g.d3-bolus-group')
	        .data(currentData, function(d) {
	          return d.id;
	        });

	      var bolusGroups = boluses.enter()
	        .append('g')
	        .attr({
	          'clip-path': 'url(#mainClipPath)',
	          'class': 'd3-bolus-group',
	          id: function(d) { return 'bolus_group_' + d.id; }
	        });

	      //Sort by size so smaller boluses are drawn last.
	      bolusGroups = bolusGroups.sort(function(a,b){
	        return d3.descending(a.value, b.value);
	      });

	      drawBolus.bolus(bolusGroups);

	      var extended = boluses.filter(function(d) {
	        if (d.extended == true) {
	          return d;
	        }
	      });

	      drawBolus.extended(extended);

	      boluses.exit().remove();

	      var highlight = pool.highlight('.d3-wizard-group, .d3-bolus-group', opts);

	      // tooltips
	      selection.selectAll('.d3-bolus-group').on('mouseover', function(d) {
	        highlight.on(d3.select(this));
	        drawBolus.tooltip.add(d);
	      });
	      selection.selectAll('.d3-bolus-group').on('mouseout', function(d) {
	        highlight.off();
	        drawBolus.tooltip.remove(d);
	      });
	    });
	  }


	  return bolus;
	};


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('CBG');
	var bgBoundaryClass = __webpack_require__(36);

	module.exports = function(pool, opts) {

	  opts = opts || {};

	  var defaults = {
	    classes: {
	      low: {boundary: 80},
	      target: {boundary: 180},
	      high: {boundary: 200}
	    },
	    radius: 2.5,
	  };

	  _.defaults(opts, defaults);

	  var mainGroup = pool.parent();

	  function cbg(selection) {
	    opts.xScale = pool.xScale().copy();
	    selection.each(function(currentData) {
	      var allCBG = d3.select(this).selectAll('circle.d3-cbg')
	        .data(currentData, function(d) {
	          return d.id;
	        });
	      var cbgGroups = allCBG.enter()
	        .append('circle')
	        .attr('class', 'd3-cbg')
	        .attr('clip-path', 'url(#mainClipPath)')
	        .attr({
	          cx: cbg.xPosition,
	          cy: cbg.yPosition,
	          r: opts.radius,
	          id: function(d) {
	            return 'cbg_' + d.id;
	          }
	        });
	      var cbgLow = cbgGroups.filter(function(d) {
	        if (d.value < opts.classes.low.boundary) {
	          return d;
	        }
	      });
	      var cbgTarget = cbgGroups.filter(function(d) {
	        if ((d.value >= opts.classes.low.boundary) && (d.value <= opts.classes.target.boundary)) {
	          return d;
	        }
	      });
	      var cbgHigh = cbgGroups.filter(function(d) {
	        if (d.value > opts.classes.target.boundary) {
	          return d;
	        }
	      });
	      cbgLow.classed({'d3-circle-cbg': true, 'd3-bg-low': true});
	      cbgTarget.classed({'d3-circle-cbg': true, 'd3-bg-target': true});
	      cbgHigh.classed({'d3-circle-cbg': true, 'd3-bg-high': true});
	      allCBG.exit().remove();

	      // tooltips
	      selection.selectAll('.d3-circle-cbg').on('mouseover', function() {
	        cbg.addTooltip(d3.select(this).datum());
	      });
	      selection.selectAll('.d3-circle-cbg').on('mouseout', function() {
	        var id = d3.select(this).attr('id').replace('cbg_', 'tooltip_');
	        mainGroup.select('#' + id).remove();
	      });
	    });
	  }

	  cbg.xPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime));
	  };

	  cbg.yPosition = function(d) {
	    return opts.yScale(d.value);
	  };

	  cbg.orientation = function(cssClass) {
	    if (cssClass === 'd3-bg-high') {
	      return 'leftAndDown';
	    }
	    else {
	      return 'normal';
	    }
	  };

	  cbg.addTooltip = function(d) {
	    var tooltips = pool.nativeTooltips();
	    var getBgBoundaryClass = bgBoundaryClass(opts.classes);
	    var cssClass = getBgBoundaryClass(d);
	    tooltips.addTooltip({
	      cssClass: cssClass,
	      datum: d,
	      orientation: {
	        'default': cbg.orientation(cssClass),
	        leftEdge: cbg.orientation(cssClass) === 'leftAndDown' ? 'rightAndDown': 'normal',
	        rightEdge: cbg.orientation(cssClass) === 'normal' ? 'leftAndUp': 'leftAndDown'
	      },
	      shape: 'cbg',
	      xPosition: cbg.xPosition,
	      yPosition: cbg.yPosition
	    });
	  };

	  return cbg;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('Message');

	module.exports = function(pool, opts) {

	  opts = opts || {};

	  var defaults = {
	    imagesBaseUrl: pool.imagesBaseUrl(),
	    highlightWidth: 4
	  };

	  _.defaults(opts, defaults);

	  var mainGroup = pool.group();

	  function message(selection) {
	    opts.xScale = pool.xScale().copy();

	    selection.each(function(currentData) {
	      var messages = d3.select(this)
	        .selectAll('g.d3-message-group')
	        .data(currentData, function(d) {
	          if (d.parentMessage === '' || d.parentMessage == null) {
	            return d.id;
	          }
	        });

	      var messageGroups = messages.enter()
	        .append('g')
	        .attr({
	          'class': 'd3-message-group',
	          id: function(d) {
	            return 'message_' + d.id;
	          },
	          'clip-path': 'url(#mainClipPath)'
	        });

	      message.addMessageToPool(messageGroups);

	      messages.exit().remove();
	    });
	  }

	  message.addMessageToPool = function(selection) {
	    opts.xScale = pool.xScale().copy();
	    
	    selection.append('rect')
	      .attr({
	        x: message.highlightXPosition,
	        y: message.highlightYPosition,
	        width: opts.size + opts.highlightWidth * 2,
	        height: opts.size + opts.highlightWidth * 2,
	        'class': 'd3-rect-message hidden'
	      });

	    selection.append('image')
	      .attr({
	        'xlink:href': opts.imagesBaseUrl + '/message/post_it.svg',
	        cursor: 'pointer',
	        x: message.xPosition,
	        y: message.yPosition,
	        width: opts.size,
	        height: opts.size
	      })
	      .classed({'d3-image': true, 'd3-message': true});

	    selection.on('click', function(d) {
	      d3.event.stopPropagation(); // silence the click-and-drag listener
	      opts.emitter.emit('messageThread', d.id);
	      log('Message clicked!');
	      d3.select(this).selectAll('.d3-rect-message').classed('hidden', false);
	    });
	  };

	  message.updateMessageInPool = function(selection) {
	    opts.xScale = pool.xScale().copy();

	    selection.select('rect.d3-rect-message')
	      .attr({
	        x: message.highlightXPosition
	      });

	    selection.select('image')
	      .attr({
	        x: message.xPosition
	      });
	  };

	  message.setUpMessageCreation = function() {
	    log('Set up message creation listeners.');
	    opts.emitter.on('clickTranslatesToDate', function(date) {
	      log('Creating message at', date.toISOString().slice(0,-5));
	      opts.emitter.emit('createMessage', date.toISOString());
	    });

	    opts.emitter.on('messageCreated', function(obj) {
	      var messageGroup = mainGroup.select('#poolMessages_message')
	        .append('g')
	        .attr('class', 'd3-message-group d3-new')
	        .attr('id', 'message_' + obj.id)
	        .datum(obj);
	      message.addMessageToPool(messageGroup);
	    });

	    opts.emitter.on('messageTimestampEdited', function(obj) {
	      var messageGroup = mainGroup.select('g#message_' + obj.id)
	        .datum(obj);
	      message.updateMessageInPool(messageGroup);
	    });
	  };

	  message.highlightXPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime)) - opts.size / 2 - opts.highlightWidth;
	  };

	  message.highlightYPosition = function(d) {
	    return pool.height() / 2 - opts.size / 2 - opts.highlightWidth;
	  };

	  message.xPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime)) - opts.size / 2;
	  };

	  message.yPosition = function(d) {
	    return pool.height() / 2 - opts.size / 2;
	  };

	  message.setUpMessageCreation();

	  return message;
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('Two-Week SMBG');
	var dt = __webpack_require__(21);
	var format = __webpack_require__(22);
	var bgBoundaryClass = __webpack_require__(36);

	function SMBGTime (opts) {
	  var MS_IN_HOUR = 3600000;

	  var MS_IN_MIN = 60 * 1000;

	  opts = opts || {};

	  var defaults = {
	    classes: {
	      'very-low': {boundary: 60},
	      low: {boundary: 80},
	      target: {boundary: 180},
	      high: {boundary: 200},
	      'very-high': {boundary: 300}
	    },
	    size: 16,
	    rectWidth: 32,
	    tooltipPadding: 20
	  };

	  opts = _.defaults(opts, defaults);

	  var getBgBoundaryClass = bgBoundaryClass(opts.classes), mainGroup, poolDaysGroup;

	  var pools = [];

	  this.draw = function(pool) {
	    opts.pool = pool;
	    mainGroup = pool.parent();
	    // if you don't use poolDaysGroup to subset selection of smbg circles
	    // can end up selecting circles in the legend D:
	    poolDaysGroup = mainGroup.select('#daysGroup');

	    pools.push(pool);

	    var smbg = this;
	    return function(selection) {
	      selection.each(function(currentData) {
	        // pool-dependent variables
	        var xScale = opts.pool.xScale().copy();
	        opts.xScale = xScale;

	        var circles = d3.select(this)
	          .selectAll('g.d3-smbg-time')
	          .data(currentData, function(d) {
	            return d.id;
	          });

	        var circleGroups = circles.enter()
	          .append('g')
	          .attr('class', 'd3-smbg-time-group');

	        circleGroups.append('circle')
	          .attr({
	            cx: smbg.xPosition,
	            cy: smbg.yPosition,
	            r: smbg.radius,
	            id: smbg.id,
	            class: getBgBoundaryClass
	          })
	          .classed({'d3-smbg-time': true, 'd3-circle-smbg': true})
	          .on('dblclick', function(d) {
	            d3.event.stopPropagation(); // silence the click-and-drag listener
	            opts.emitter.emit('selectSMBG', d.normalTime);
	          });

	        circleGroups.append('rect')
	          .style('display', 'none')
	          .attr({
	            x: function(d) {
	              return smbg.xPosition(d) - opts.rectWidth/2;
	            },
	            y: 0,
	            // text background rect is twice an smbg wide
	            width: opts.rectWidth,
	            // text background rect is half a pool high
	            height: pool.height() / 2,
	            'class': 'd3-smbg-numbers d3-rect-smbg d3-smbg-time'
	          });

	        // NB: cannot do same display: none strategy because dominant-baseline attribute cannot be applied
	        circleGroups.append('text')
	          .attr({
	            x: smbg.xPosition,
	            // text is centered vertically in the top half of each day pool (i.e., 1/4 way down)
	            y: pool.height() / 4,
	            opacity: '0',
	            'class': 'd3-smbg-numbers d3-text-smbg d3-smbg-time'
	          })
	          .text(function(d) {
	            return d.value;
	          });

	        circles.exit().remove();

	        // tooltips
	        smbg.bindMouseEvents(selection, circles, pool, mainGroup);
	      });
	    };
	  };

	  this.bindMouseEvents = function(selection, circles, pool) {
	    var highlight = pool.highlight(circles);
	    var smbg = this;
	    selection.selectAll('.d3-circle-smbg').on('mouseover', function() {
	      highlight.on(d3.select(d3.select(this).node().parentNode));
	      smbg.addTooltip(d3.select(this).datum(), pool);
	    });
	    selection.selectAll('.d3-circle-smbg').on('mouseout', function() {
	      highlight.off();
	      var id = d3.select(this).attr('id').replace('smbg_time_', 'tooltip_');
	      mainGroup.select('#' + id).remove();
	    });
	  };

	  this.showValues = function() {
	    var that = this;
	    poolDaysGroup.selectAll('.d3-rect-smbg')
	      .style('display', 'inline');
	    poolDaysGroup.selectAll('.d3-text-smbg')
	      .transition()
	      .duration(500)
	      .attr('opacity', 1);
	    poolDaysGroup.selectAll('.d3-circle-smbg')
	      .on('mouseover', null)
	      .on('mouseout', null)
	      .transition()
	      .duration(500)
	      .attr({
	        r: that.radius(true),
	        cy: that.yPosition(true)
	      });
	  };

	  this.hideValues = function() {
	    var that = this;
	    poolDaysGroup.selectAll('.d3-rect-smbg')
	      .style('display', 'none');
	    poolDaysGroup.selectAll('.d3-text-smbg')
	      .transition()
	      .duration(500)
	      .attr('opacity', 0);
	    poolDaysGroup.selectAll('.d3-circle-smbg')
	      .transition()
	      .duration(500)
	      .attr({
	        r: that.radius,
	        cy: that.yPosition
	      });
	    for (var i = 0; i < pools.length; ++i) {
	      var pool = pools[i];
	      var selection = poolDaysGroup.select('#' + pool.id() + '_smbg');
	      var circles = selection.selectAll('g.d3-smbg-time');
	      that.bindMouseEvents(selection, circles, pool);
	    }
	  };

	  this.xPosition = function(d) {
	    var localTime = new Date(d.normalTime);
	    var hour = localTime.getUTCHours();
	    var min = localTime.getUTCMinutes();
	    var sec = localTime.getUTCSeconds();
	    var msec = localTime.getUTCMilliseconds();
	    var t = hour * MS_IN_HOUR + min * MS_IN_MIN + sec * 1000 + msec;
	    return opts.xScale(t);
	  };

	  this.yPosition = function(valuesShown) {
	    if (valuesShown === true) {
	      // shift circles down (1/3 from bottom of pool) when displaying all smbg values
	      return opts.pool.height() * 2 / 3;
	    }
	    // default is smbgs vertically center within each day's pool
	    return opts.pool.height() / 2;
	  };

	  this.radius = function(valuesShown) {
	    if (valuesShown === true) {
	      // smaller radius when displaying all smbg values
	      return opts.size/3;
	    }
	    // size is the total diameter of an smbg
	    // radius is half that, minus one because of the 1px stroke for open circles
	    return opts.size/2 - 1;
	  };

	  this.id = function(d) {
	    return 'smbg_time_' + d.id;
	  };

	  this.orientation = function(cssClass) {
	    if (cssClass.search('d3-bg-high') !== -1) {
	      return 'leftAndDown';
	    }
	    else {
	      return 'normal';
	    }
	  };

	  this.tooltipHtml = function(group, datum) {
	    group.append('p')
	      .append('span')
	      .attr('class', 'secondary')
	      .html('<span class="fromto">at</span> ' + format.timestamp(datum.normalTime));
	    group.append('p')
	      .attr('class', 'big')
	      .append('span')
	      .html(Math.round(datum.value));
	  };

	  this.addTooltip = function(d, pool) {
	    var tooltips = opts.pool.nativeTooltips();
	    var getBgBoundaryClass = bgBoundaryClass(opts.classes);
	    var cssClass = getBgBoundaryClass(d);
	    var smbg = this;
	    var days = mainGroup.select('#daysGroup').node().children;
	    var lastDay = d3.select(days[days.length - 1]);
	    var translation = parseInt(lastDay.attr('transform').replace('translate(0,', '').replace(')',''),10);
	    var res = tooltips.addFOTooltip({
	      cssClass: cssClass,
	      datum: d,
	      shape: 'smbg',
	      xPosition: smbg.xPosition,
	      yPosition: function() {
	        return smbg.yPosition() + pool.yPosition() - translation;
	      }
	    });
	    var foGroup = res.foGroup;
	    this.tooltipHtml(foGroup, d);
	    var dims = tooltips.foDimensions(foGroup);
	    tooltips.anchorFO(d3.select(foGroup.node().parentNode), {
	      w: dims.width + opts.tooltipPadding,
	      h: dims.height,
	      y: -dims.height,
	      orientation: {
	        'default': this.orientation(cssClass),
	        leftEdge: this.orientation(cssClass) === 'leftAndDown' ? 'rightAndDown': 'normal',
	        rightEdge: this.orientation(cssClass) === 'normal' ? 'leftAndUp': 'leftAndDown'
	      },
	      shape: 'smbg',
	      edge: dt.smbgEdge(d.normalTime)
	    });
	  };
	}

	module.exports = SMBGTime;


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('SMBG');
	var format = __webpack_require__(22);
	var scales = __webpack_require__(40)();
	var bgBoundaryClass = __webpack_require__(36);

	module.exports = function(pool, opts) {

	  opts = opts || {};

	  var defaults = {
	    classes: {
	      'very-low': {boundary: 60},
	      low: {boundary: 80},
	      target: {boundary: 180},
	      high: {boundary: 200},
	      'very-high': {boundary: 300}
	    },
	    size: 16,
	    tooltipPadding: 20
	  };

	  _.defaults(opts, defaults);

	  var mainGroup = pool.parent();
	  var getBgBoundaryClass = bgBoundaryClass(opts.classes);

	  function smbg(selection) {
	    opts.xScale = pool.xScale().copy();
	    selection.each(function(currentData) {
	      var circles = d3.select(this)
	        .selectAll('circle.d3-smbg')
	        .data(currentData, function(d) {
	          return d.id;
	        });
	      circles.enter()
	        .append('circle')
	        .attr({
	          cx: smbg.xPosition,
	          cy: smbg.yPosition,
	          r: smbg.radius,
	          id: smbg.id,
	          'clip-path': 'url(#mainClipPath)',
	          'class': getBgBoundaryClass
	        })
	        .classed({'d3-smbg': true, 'd3-circle-smbg': true});

	      circles.exit().remove();

	      var highlight = pool.highlight(circles);

	      // tooltips
	      selection.selectAll('.d3-circle-smbg').on('mouseover', function() {
	        highlight.on(d3.select(this));
	        smbg.addTooltip(d3.select(this).datum());
	      });
	      selection.selectAll('.d3-circle-smbg').on('mouseout', function() {
	        highlight.off();
	        var id = d3.select(this).attr('id').replace('smbg_', 'tooltip_');
	        mainGroup.select('#' + id).remove();
	      });
	    });
	  }

	  smbg.radius = function() {
	    // size is the total diameter of an smbg
	    // radius is half that, minus one because of the 1px stroke for open circles
	    return opts.size/2 - 1;
	  };

	  smbg.xPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime));
	  };

	  smbg.yPosition = function(d) {
	    return opts.yScale(d.value);
	  };

	  smbg.id = function(d) {
	    return 'smbg_' + d.id;
	  };

	  smbg.orientation = function(cssClass) {
	    if (cssClass.search('d3-bg-high') !== -1) {
	      return 'leftAndDown';
	    }
	    else {
	      return 'normal';
	    }
	  };

	  smbg.tooltipHtml = function(group, datum) {
	    group.append('p')
	      .append('span')
	      .attr('class', 'secondary')
	      .html('<span class="fromto">at</span> ' + format.timestamp(datum.normalTime));
	    group.append('p')
	      .attr('class', 'big')
	      .append('span')
	      .html(Math.round(datum.value));
	  };

	  smbg.addTooltip = function(d) {
	    var tooltips = pool.nativeTooltips();
	    var getBgBoundaryClass = bgBoundaryClass(opts.classes);
	    var cssClass = getBgBoundaryClass(d);
	    var res = tooltips.addFOTooltip({
	      cssClass: cssClass,
	      datum: d,
	      shape: 'smbg',
	      xPosition: smbg.xPosition,
	      yPosition: smbg.yPosition
	    });
	    var foGroup = res.foGroup;
	    smbg.tooltipHtml(foGroup, d);
	    var dims = tooltips.foDimensions(foGroup);
	    tooltips.anchorFO(d3.select(foGroup.node().parentNode), {
	      w: dims.width + opts.tooltipPadding,
	      h: dims.height,
	      y: -dims.height,
	      orientation: {
	        'default': smbg.orientation(cssClass),
	        leftEdge: smbg.orientation(cssClass) === 'leftAndDown' ? 'rightAndDown': 'normal',
	        rightEdge: smbg.orientation(cssClass) === 'normal' ? 'leftAndUp': 'leftAndDown'
	      },
	      shape: 'smbg',
	      edge: res.edge
	    });
	  };

	  return smbg;
	};


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var Duration = __webpack_require__(25).Duration;
	var log = __webpack_require__(25).bows('Wizard');

	var drawbolus = __webpack_require__(42);

	module.exports = function(pool, opts) {
	  opts = opts || {};

	  var defaults = {
	    classes: {
	      'unspecial': {'tooltip': 'tooltip_bolus_small.svg', 'width': 70, 'height': 24},
	      'two-line': {'tooltip': 'tooltip_bolus_large.svg', 'width': 98, 'height': 39},
	      'three-line': {'tooltip': 'tooltip_bolus_extralarge.svg', 'width': 98, 'height': 58}
	    },
	    width: 12
	  };

	  _.defaults(opts, defaults);

	  var drawBolus = drawbolus(pool, opts);
	  var tideline = window.tideline;
	  var mainGroup = pool.parent();

	  return function(selection) {
	    opts.xScale = pool.xScale().copy();

	    selection.each(function(currentData) {
	      var wizards = d3.select(this)
	        .selectAll('g.d3-wizard-group')
	        .data(currentData, function(d) {
	          return d.id;
	        });

	      var wizardGroups = wizards.enter()
	        .append('g')
	        .attr({
	          'clip-path': 'url(#mainClipPath)',
	          class: 'd3-wizard-group',
	          id: function(d) {
	            return 'wizard_group_' + d.id;
	          }
	        });

	      //Sort by size so smaller boluses are drawn last.
	      wizardGroups = wizardGroups.sort(function(a,b){
	        return d3.descending(a.bolus ? a.bolus.value : 0, b.bolus ? b.bolus.value : 0);
	      });

	      var carbs = wizardGroups.filter(function(d) {
	        if (d.carbs) {
	          return d;
	        }
	      });

	      drawBolus.carb(carbs);

	      var boluses = wizardGroups.filter(function(d) {
	        if (d.bolus) {
	          return d;
	        }
	      });

	      drawBolus.bolus(boluses);

	      // boluses where recommended > delivered
	      var underride = boluses.filter(function(d) {
	        if (d.bolus.recommended > d.bolus.value) {
	          return d;
	        }
	      });

	      drawBolus.underride(underride);

	      // boluses where delivered > recommended
	      var override = boluses.filter(function(d) {
	        if (d.bolus.value > d.bolus.recommended) {
	          return d;
	        }
	      });

	      drawBolus.override(override);

	      var extended = boluses.filter(function(d) {
	        if (d.bolus.extended == true) {
	          return d;
	        }
	      });

	      drawBolus.extended(extended);

	      wizards.exit().remove();

	      var highlight = pool.highlight('.d3-wizard-group, .d3-bolus-group', opts);

	      // tooltips
	      selection.selectAll('.d3-wizard-group').on('mouseover', function(d) {
	        if (d.bolus) {
	          drawBolus.tooltip.add(d);
	        }

	        highlight.on(d3.select(this));
	      });
	      selection.selectAll('.d3-wizard-group').on('mouseout', function(d) {
	        if (d.bolus) {
	          drawBolus.tooltip.remove(d);
	        }

	        highlight.off();
	      });
	    });
	  };
	};


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('Puddle');

	module.exports = function(opts) {

	  opts = opts || {};

	  var defaults = {
	    headSize: 16,
	    leadSize: 14,
	    displaySize: 24
	  };

	  _.defaults(opts, defaults);

	  var height, xPosition;

	  function puddle(selection, txt) {
	    selection.call(puddle.addHead);
	    selection.call(puddle.addLead);
	  }

	  puddle.dataDisplay = function(selection, display) {
	    selection.selectAll('text.d3-stats-display').remove();
	    var displayGroup = selection.append('text')
	      .attr({
	        'x': opts.xOffset,
	        'y': opts.height / 2 + opts.leadSize,
	        'class': 'd3-stats-display'
	      });

	    display.forEach(function(txt) {
	      displayGroup.append('tspan')
	        .attr('class', txt['class'])
	        .text(txt.text);
	    });
	  };

	  puddle.addHead = _.once(function(selection) {
	    selection.append('text')
	      .attr({
	        'x': opts.xOffset,
	        'y': 0,
	        'class': 'd3-stats-head'
	      })
	      .text(opts.head);
	  });

	  puddle.addLead = _.once(function(selection) {
	    selection.append('text')
	      .attr({
	        'x': opts.xOffset,
	        'y': opts.height / 2,
	        'class': 'd3-stats-lead'
	      })
	      .text(opts.lead);
	  });

	  puddle.xPosition = function(x) {
	    if (!arguments.length) return xPosition;
	    xPosition = x;
	    return puddle;
	  };

	  puddle.width = function(x) {
	    if (!arguments.length) return opts.width;
	    opts.width = x;
	    return puddle;
	  };

	  puddle.height = function(x) {
	    if (!arguments.length) return height;
	    height = x;
	    return puddle;
	  };

	  puddle.id = opts.id;

	  puddle.weight = opts.weight;

	  puddle.pie = opts.pie;

	  return puddle;
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('Stats');
	var scales = __webpack_require__(40)();
	var dt = __webpack_require__(21);
	var format = __webpack_require__(22);
	var Puddle = __webpack_require__(34);
	var bgBoundaryClass = __webpack_require__(36);

	module.exports = function(pool, opts) {

	  var annotation = pool.annotations();

	  opts = opts || {};

	  var defaults = {
	    classes: {
	      'very-low': {boundary: 60},
	      low: {boundary: 80},
	      target: {boundary: 180},
	      high: {boundary: 200},
	      'very-high': {boundary: 300}
	    },
	    twoWeekOptions: {
	      exclusionThreshold: 7
	    },
	    imagesBaseUrl: pool.imagesBaseUrl(),
	    size: 16,
	    pieRadius: pool.height() * 0.45,
	    defaultAnnotationOpts: {
	      lead: 'stats-insufficient-data',
	      d: {annotations: [{code: 'stats-insufficient-data'}]},
	      orientation: {up: true}
	    },
	    bgUnits: 'mg/dL',
	    PTiRLabels: {
	      cbg: 'Time in Target Range',
	      smbg: 'Readings in Range'
	    },
	    puddleWeights: {
	      ratio: 1.0,
	      range: 1.0,
	      average: 1.0
	    }
	  };

	  var data = {
	    ratio: [],
	    range: [],
	    average: [],
	    bgReadings: 0,
	    bgType: 'smbg'
	  };

	  var pies = [], pie, arc;

	  var currentIndices = {};

	  opts.emitter.on('currentDomain', function(domain) {
	    stats.getStats(domain);
	    stats.draw();
	  });

	  opts = _.defaults(opts, defaults);

	  var getBgBoundaryClass = bgBoundaryClass(opts.classes);
	  var widgetGroup, rectScale;

	  var puddles = [];

	  function stats(selection) {
	    widgetGroup = selection;
	    stats.initialize();
	  }

	  stats.initialize = _.once(function() {
	    // move this group inside the container's axisGutter
	    widgetGroup.attr({
	      transform: 'translate(' + opts.xPosition + ',' + opts.yPosition + ')'
	    });

	    var pw = opts.puddleWeights;

	    var targetRangeString = 'Target range: ' + opts.classes.low.boundary + ' - ' + opts.classes.target.boundary + ' ';

	    // create basal-to-bolus ratio puddle
	    stats.newPuddle('Ratio', 'Basal : Bolus', 'Basal to bolus insulin ratio', pw.ratio, true);
	    // create time-in-range puddle
	    stats.newPuddle('Range', opts.PTiRLabels.cbg, targetRangeString + opts.bgUnits, pw.range, true);
	    // create average BG puddle
	    stats.newPuddle('Average', 'Average BG', opts.averageLabel, pw.average, false);
	    stats.arrangePuddles();
	  });

	  stats.arrangePuddles = function() {
	    var cumWeight = _.reduce(puddles, function(memo, puddle) { return memo + puddle.weight; }, 0);
	    var currentWeight = 0;
	    var currX = 0;
	    puddles.forEach(function(puddle, i) {
	      currentWeight += puddle.weight;
	      puddle.width((puddle.weight/cumWeight) * pool.width());
	      var puddleGroup = widgetGroup.append('g')
	        .attr({
	          transform: 'translate(' + currX + ',0)',
	          class: 'd3-stats',
	          id: 'puddle_' + puddle.id
	        });
	      puddle.xPosition(currX);
	      currX = (currentWeight / cumWeight) * pool.width();
	      puddleGroup.call(puddle);
	    });
	  };

	  stats.draw = function() {
	    puddles.forEach(function(puddle) {
	      var puddleGroup = pool.group().select('#puddle_' + puddle.id);
	      if (puddle.pie) {
	        var thisPie = _.find(pies, function(p) {
	          return p.id === puddle.id;
	        });
	        // change the label in this PTiR puddle when fell back to SMBG stats
	        if (puddle.id === 'Range' && data.bgType === 'smbg') {
	          puddleGroup.select('.d3-stats-head').text(opts.PTiRLabels.smbg);
	        }
	        else if (puddle.id === 'Range' && data.bgType === 'cbg') {
	          puddleGroup.select('.d3-stats-head').text(opts.PTiRLabels.cbg);
	        }
	        var createAPie = function(puddleGroup, data) {
	          var slices = stats.createPie(puddle, puddleGroup, data[puddle.id.toLowerCase()]);
	          pies.push({
	            id: puddle.id,
	            slices: slices
	          });
	        };
	        // when NaN(s) present, create a no data view
	        if (stats.hasNaN(data[puddle.id.toLowerCase()])) {
	          pies = _.reject(pies, function(pie) {
	            return _.isEqual(pie, thisPie);
	          });
	          createAPie(puddleGroup, data);
	        }
	        // or if good data, but no pie yet, create a pie
	        else if (!thisPie) {
	          createAPie(puddleGroup, data);
	        }
	        else {
	          // or if no data view is the existing "pie", recreate a real pie
	          if (thisPie.slices === null) {
	            pies = _.reject(pies, function(pie) {
	              return _.isEqual(pie, thisPie);
	            });
	            createAPie(puddleGroup, data);
	          }
	          // or just update the current pie
	          else {
	            stats.updatePie(thisPie, data[puddle.id.toLowerCase()]);
	          }
	        }
	      }
	      else {
	        if (!stats.rectGroup) {
	          stats.createRect(puddle, puddleGroup, data[puddle.id.toLowerCase()]);
	        }
	        else {
	          stats.updateAverage(puddle, puddleGroup, data[puddle.id.toLowerCase()]);
	        }
	      }
	      var display = stats.getDisplay(puddle.id);
	      puddle.dataDisplay(puddleGroup, display);
	    });
	  };

	  stats.createRect = function(puddle, puddleGroup, data) {
	    var rectGroup = puddleGroup.append('g')
	      .attr('id', 'd3-stats-rect-group');

	    puddle.height(pool.height() * (4/5));

	    rectGroup.append('rect')
	      .attr({
	        x: puddle.width() / 16,
	        y: pool.height() / 10,
	        width: puddle.width() / 8,
	        height: pool.height() * (4/5),
	        class: 'd3-stats-rect rect-left'
	      });

	    rectGroup.append('rect')
	      .attr({
	        x: puddle.width() * (3/16),
	        y: pool.height() / 10,
	        width: puddle.width() / 8,
	        height: pool.height() * (4/5),
	        class: 'd3-stats-rect rect-right'
	      });

	    var allBG = opts.smbg.data.concat(opts.cbg.data);
	    // scales expects 2nd arg to have a .height() function
	    var rect = {
	      height: function() { return pool.height() * 4/5; }
	    };

	    rectScale = scales.bgLog(allBG, rect, opts.size/2);

	    rectGroup.append('line')
	      .attr({
	        x1: puddle.width() / 16,
	        x2: puddle.width() * (5/16),
	        y1: rectScale(80) + (pool.height() / 10),
	        y2: rectScale(80) + (pool.height() / 10),
	        class: 'd3-line-guide d3-line-bg-threshold'
	      });

	    rectGroup.append('line')
	      .attr({
	        x1: puddle.width() / 16,
	        x2: puddle.width() * (5/16),
	        y1: rectScale(180) + (pool.height() / 10),
	        y2: rectScale(180) + (pool.height() / 10),
	        class: 'd3-line-guide d3-line-bg-threshold'
	      });

	    var imageY = rectScale(data.value) + (pool.height() / 10);

	    rectGroup.append('circle')
	      .attr({
	        cx: (puddle.width() * (3/16)),
	        cy: isFinite(imageY) ? imageY : 0,
	        r: 7,
	        class: getBgBoundaryClass(data)
	      })
	      .classed({
	        'd3-image': true,
	        'd3-stats-circle': true,
	        'd3-smbg': true,
	        'd3-circle-smbg': true,
	        'hidden': !isFinite(imageY)
	      });

	    stats.rectGroup = rectGroup;

	    if (isNaN(data.value)) {
	      puddleGroup.classed('d3-insufficient-data', true);
	      stats.rectGroup.selectAll('.d3-stats-circle').classed('hidden', true);
	      stats.rectAnnotation(puddle, puddleGroup);
	    }
	    else {
	      puddleGroup.on('mouseover', null);
	      puddleGroup.on('mouseout', null);
	      puddleGroup.classed('d3-insufficient-data', false);
	      stats.rectGroup.selectAll('.d3-stats-circle').classed('hidden', false);
	    }
	  };

	  stats.updateAverage = function(puddle, puddleGroup, data) {
	    if (isNaN(data.value)) {
	      puddleGroup.classed('d3-insufficient-data', true);
	      stats.rectGroup.selectAll('.d3-stats-circle').classed('hidden', true);
	      stats.rectAnnotation(puddle, puddleGroup);
	    }
	    else {
	      puddleGroup.on('mouseover', null);
	      puddleGroup.on('mouseout', null);
	      puddleGroup.classed('d3-insufficient-data', false);
	    }

	    var imageY = rectScale(data.value) + (puddle.height() / 10);

	    if (isFinite(imageY)) {
	      stats.rectGroup.selectAll('.d3-stats-circle')
	        .attr({
	          class: getBgBoundaryClass(data),
	          cy: imageY
	        })
	        .classed({'d3-stats-circle': true, 'd3-smbg': true, 'd3-circle-smbg': true, 'hidden': false});
	    }
	  };

	  stats.rectAnnotation = function(puddle, puddleGroup) {
	    var annotationOpts = {
	      x: puddle.width() * (3/16) + puddle.xPosition(),
	      y: puddle.height() / 2,
	      hoverTarget: puddleGroup
	    };
	    _.defaults(annotationOpts, opts.defaultAnnotationOpts);
	    pool.parent().select('#tidelineAnnotations_stats').call(annotation, annotationOpts);
	  };

	  stats.createPie = function(puddle, puddleGroup, data) {
	    var xOffset = (pool.width()/3) * (1/6);
	    var yOffset = pool.height() / 2;
	    puddleGroup.selectAll('.d3-stats-pie').remove();
	    var pieGroup = puddleGroup.append('g')
	      .attr({
	        transform: 'translate(' + xOffset + ',' + yOffset + ')',
	        class: 'd3-stats-pie'
	      });
	    if (stats.hasNaN(data)) {
	      puddleGroup.classed('d3-insufficient-data', true);
	      pieGroup.append('circle')
	        .attr({
	          cx: 0,
	          cy: 0,
	          r: opts.pieRadius
	        });

	      var annotationOpts = {
	        x: xOffset + puddle.xPosition(),
	        y: yOffset,
	        hoverTarget: puddleGroup
	      };
	      _.defaults(annotationOpts, opts.defaultAnnotationOpts);
	      pool.parent().select('#tidelineAnnotations_stats').call(annotation, annotationOpts);

	      return null;
	    }
	    else {
	      puddleGroup.on('mouseover', null);
	      puddleGroup.on('mouseout', null);
	      puddleGroup.classed('d3-insufficient-data', false);
	      pie = d3.layout.pie().value(function(d) {
	          return d.value;
	        })
	        .sort(null);

	      arc = d3.svg.arc()
	        .innerRadius(0)
	        .outerRadius(opts.pieRadius);

	      var slices = pieGroup.selectAll('g.d3-stats-slice')
	        .data(pie(data))
	        .enter()
	        .append('path')
	        .attr({
	          d: arc,
	          class: function(d) {
	            return 'd3-stats-slice d3-' + d.data.type;
	          }
	        });

	      return slices;
	    }
	  };

	  stats.updatePie = function(thisPie, data) {
	    thisPie.slices.data(pie(data))
	      .attr({
	        d: arc
	      });
	  };

	  stats.hasNaN = function(a) {
	    var found = false;
	    a.forEach(function(obj) {
	      if (isNaN(obj.value)) {
	        found = true;
	      }
	    });
	    return found;
	  };

	  stats.newPuddle = function(id, head, lead, weight, pieBoolean) {
	    var p = new Puddle({
	      id: id,
	      head: head,
	      lead: lead,
	      width: pool.width()/3,
	      height: pool.height(),
	      weight: weight,
	      xOffset: function() {
	        if (pieBoolean) {
	          return (pool.width()/3) / 3;
	        }
	        else {
	          return (pool.width()/3) * (2 / 5);
	        }
	      },
	      pie: pieBoolean
	    });
	    puddles.push(p);
	  };

	  stats.getDisplay = function(id) {
	    switch (id) {
	    case 'Ratio':
	      return stats.ratioDisplay();
	    case 'Range':
	      return stats.rangeDisplay();
	    case 'Average':
	      return stats.averageDisplay();
	    }
	  };

	  stats.ratioDisplay = function() {
	    var bolus = _.findWhere(data.ratio, {type: 'bolus'}).value;
	    var basal = _.findWhere(data.ratio, {type: 'basal'}).value;
	    var total = bolus + basal;
	    return [{
	        text: format.percentage(basal/total) + ' : ',
	        class: 'd3-stats-basal'
	      },
	      {
	        text: format.percentage(bolus/total),
	        class: 'd3-stats-bolus'
	      }];
	  };

	  stats.rangeDisplay = function() {
	    var target = _.findWhere(data.range, {type: 'bg-target'}).value;
	    var total = parseFloat(data.bgReadings);
	    return [{text: format.percentage(target/total), class: 'd3-stats-percentage'}];
	  };

	  stats.averageDisplay = function() {
	    if (isNaN(data.average.value)) {
	      return [{text: '--- mg/dL', class: 'd3-stats-' + data.average.category}];
	    }
	    else {
	      return [{text: data.average.value + ' mg/dL', class: 'd3-stats-' + data.average.category}];
	    }
	  };

	  stats.getStats = function(domainObj) {
	    var start = domainObj.domain[0].valueOf(), end = domainObj.domain[1].valueOf();
	    opts.twoWeekOptions.startIndex = domainObj.startIndex;
	    var basalData = opts.basal.totalBasal(start, end, opts.twoWeekOptions);
	    var excluded = basalData.excluded;
	    data.ratio = [
	      {
	        type: 'bolus',
	        value: opts.bolus.totalBolus(start, end, {excluded: excluded})
	      },
	      {
	        type: 'basal',
	        value: basalData.total
	      }
	    ];
	    var bgStats = opts.cbg.getStats(start, end, opts.twoWeekOptions);
	    if (isNaN(bgStats.breakdown.total)) {
	      log('Unable to calculate CBG stats; fell back to SMBG stats.');
	      bgStats = opts.smbg.getStats(start, end, opts.twoWeekOptions);
	    }
	    var range = bgStats.breakdown;
	    data.bgType = range.type;
	    data.range = [
	      {
	        type: 'bg-low',
	        value: range.low
	      },
	      {
	        type: 'bg-target',
	        value: range.target
	      },
	      {
	        type: 'bg-high',
	        value: range.high
	      }
	    ];
	    data.bgReadings = range.total;
	    data.average = bgStats.average;
	  };

	  return stats;
	};


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	module.exports = function(classes) {
	  if (Object.keys(classes).length > 3) {
	    return function(datum) {
	      if (datum.value < classes['very-low'].boundary) {
	        return 'd3-bg-low';
	      }
	      else if ((datum.value >= classes['very-low'].boundary) && (datum.value < classes.low.boundary)) {
	        return 'd3-bg-low d3-circle-open';
	      }
	      else if ((datum.value >= classes.low.boundary) && (datum.value <= classes.target.boundary)) {
	        return 'd3-bg-target';
	      }
	      else if ((datum.value > classes.target.boundary) && (datum.value <= classes.high.boundary)) {
	        return 'd3-bg-high d3-circle-open';
	      }
	      else if (datum.value > classes.high.boundary) {
	        return 'd3-bg-high';
	      }
	    };
	  }
	  else {
	    return function(datum) {
	      if (datum.value < classes.low.boundary) {
	        return 'd3-bg-low';
	      }
	      else if ((datum.value >= classes.low.boundary) && (datum.value <= classes.target.boundary)) {
	        return 'd3-bg-target';
	      }
	      else if (datum.value > classes.target.boundary) {
	        return 'd3-bg-high';
	      }
	    };
	  }
	};


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */
	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('Fill');

	module.exports = function(pool, opts) {

	  var fills = [],
	  defaults = {
	    classes: {
	        0: 'darkest',
	        3: 'dark',
	        6: 'lighter',
	        9: 'light',
	        12: 'lightest',
	        15: 'lighter',
	        18: 'dark',
	        21: 'darker'
	      },
	      duration: 3,
	      gutter: 0,
	      fillClass: '',
	      x: function(t) { return Date.parse(t); }
	    };

	  _.defaults(opts || {}, defaults);

	  function fill(selection) {
	    opts.xScale = pool.xScale().copy();

	    // fillClass is used to control opacity of weekend day pools in two-week view
	    if(opts.fillClass) {
	      selection.attr('class', opts.fillClass);
	    }

	    if (opts.guidelines) {
	      fill.drawGuidelines(selection);
	    }

	    selection.each(function(currentData) {
	      var fills = selection.selectAll('rect.d3-fill')
	        .data(currentData, function(d) {
	          return d.id;
	        });

	      fills.enter()
	        .append('rect')
	        .attr({
	          'clip-path': 'url(#mainClipPath)',
	          cursor: opts.cursor ? opts.cursor : 'auto',
	          x: function(d, i) {
	            if (opts.dataGutter) {
	              if (i === 0) {
	                return fill.xPosition(d) - opts.dataGutter;
	              }
	              else {
	                return fill.xPosition(d);
	              }
	            }
	            else {
	              return fill.xPosition(d);
	            }
	          },
	          y: function() {
	            if (opts.gutter.top) {
	              return opts.gutter.top;
	            }
	            else {
	              return opts.gutter;
	            }
	          },
	          width: function(d, i) {
	            if (opts.dataGutter) {
	              if ((i === 0) || (i === currentData.length  - 1)) {
	                return fill.width(d) + opts.dataGutter;
	              }
	              else {
	                return fill.width(d);
	              }
	            }
	            else {
	              return fill.width(d);
	            }
	          },
	          height: function() {
	            if (opts.gutter.top) {
	              return pool.height() - opts.gutter.top - opts.gutter.bottom;
	            }
	            else {
	              return pool.height() - 2 * opts.gutter;
	            }
	          },
	          id: function(d) {
	            return d.id;
	          },
	          'class': function(d) {
	            return 'd3-fill d3-rect-fill d3-fill-' + d.fillColor;
	          }
	        })
	        .on('click', function() {
	          if (opts.emitter) {
	            opts.emitter.emit('clickInPool', d3.event.offsetX);
	          }
	        });

	      fills.exit().remove();
	    });
	  }

	  fill.xPosition = function(d) {
	    return opts.xScale(opts.x(d.normalTime));
	  };

	  fill.width = function(d) {
	    var s = Date.parse(d.normalTime), e = Date.parse(d.normalEnd);
	    return opts.xScale(e) - opts.xScale(s);
	  };

	  fill.drawGuidelines = function(selection) {
	    var linesGroup = pool.group().selectAll('#' + pool.id() + '_guidelines').data([opts.guidelines]);
	    linesGroup.enter().append('g').attr('id', pool.id() + '_guidelines');
	    linesGroup.selectAll('line')
	      .data(opts.guidelines)
	      .enter()
	      .append('line')
	      .attr({
	        'class': function(d) { return 'd3-line-guide ' + d['class']; },
	        x1: opts.xScale.range()[0],
	        x2: opts.xScale.range()[1],
	        y1: function(d) { return opts.yScale(d.height); },
	        y2: function(d) { return opts.yScale(d.height); }
	      });

	  };

	  return fill;
	};


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	module.exports = function(chart) {
	  var defs = chart.append('defs');
	  // black drop shadow

	  var filter = defs.append('filter')
	      .attr('id', 'drop-shadow')
	      .attr('filterUnits', 'userSpaceOnUse')
	      .attr('color-interpolation-filters', 'sRGB');

	  var feComponentTransfer = filter.append('feComponentTransfer')
	    .attr('in', 'SourceAlpha');

	  feComponentTransfer.append('feFuncR')
	      .attr('type', 'discrete')
	      .attr('tableValues', 0.8);
	  feComponentTransfer.append('feFuncG')
	      .attr('type', 'discrete')
	      .attr('tableValues', 0.8);
	  feComponentTransfer.append('feFuncB')
	      .attr('type', 'discrete')
	      .attr('tableValues', 0.8);

	  filter.append('feGaussianBlur')
	    .attr('stdDeviation', 1);

	  filter.append('feOffset')
	      .attr('dx', 1)
	      .attr('dy', 0)
	      .attr('result', 'shadow');

	  filter.append('feComposite')
	      .attr('in', 'SourceGraphic')
	      .attr('in2', 'shadow')
	      .attr('operator', 'over');
	};


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('Shapes');

	var legend = {
	  SHAPE_MARGIN: 3,
	  SHAPE_WIDTH: 15.5,
	  basal: [
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('rect')
	          .attr({
	            'class': 'd3-basal d3-rect-basal d3-legend'
	          });
	      },
	      type: 'rect'
	    },
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('delivered')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	            opts.textHeight = this.getBBox().height;
	          });
	      },
	      type: 'text'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('rect')
	          .attr({
	            'class': 'd3-basal d3-rect-basal-undelivered'
	          });
	      },
	      type: 'rect'
	    },
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('scheduled')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	          });
	      },
	      type: 'text'
	    }
	  ],
	  bg: [
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('high')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	            opts.textHeight = this.getBBox().height;
	          });
	      },
	      type: 'text'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('circle')
	          .attr({
	            'class': 'd3-smbg d3-circle-smbg d3-bg-high'
	          });
	      },
	      type: 'circle'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('circle')
	          .attr({
	            'class': 'd3-smbg d3-circle-smbg d3-bg-high d3-circle-open'
	          });
	      },
	      type: 'circle'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('circle')
	          .attr({
	            'class': 'd3-smbg d3-circle-smbg d3-bg-target'
	          });
	      },
	      type: 'circle'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('circle')
	          .attr({
	            'class': 'd3-smbg d3-circle-smbg d3-bg-low d3-circle-open'
	          });
	      },
	      type: 'circle'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('circle')
	          .attr({
	            'class': 'd3-smbg d3-circle-smbg d3-bg-low'
	          });
	      },
	      type: 'circle'
	    },
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('low')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	          });
	      },
	      type: 'text'
	    },
	  ],
	  bolus: [
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('rect')
	          .attr({
	            'class': 'd3-bolus d3-rect-bolus-legend'
	          });
	      },
	      type: 'rect'
	    },
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('delivered')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	            opts.textHeight = this.getBBox().height;
	          });
	      },
	      type: 'text'
	    },
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('rect')
	          .attr({
	            'class': 'd3-bolus d3-rect-recommended-legend'
	          });
	      },
	      type: 'rect'
	    },
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('recommended')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	            opts.textHeight = this.getBBox().height;
	          });
	      },
	      type: 'text'
	    }
	  ],
	  carbs: [
	    {
	      create: function(opts) {
	        opts.widths.push(opts.SHAPE_WIDTH);
	        return opts.selection.append('rect')
	          .attr({
	            'class': 'd3-rect-carbs-legend'
	          });
	      },
	      type: 'rect'
	    },
	    {
	      create: function(opts) {
	        return opts.selection.append('text')
	          .attr({
	            'class': 'd3-pool-legend'
	          })
	          .text('carbs')
	          .each(function() {
	            opts.widths.push(this.getBBox().width);
	            opts.textHeight = this.getBBox().height;
	          });
	      },
	      type: 'text'
	    }
	  ],
	  cumWidth: function(a, i) {
	    var b = a.slice();
	    b.splice(i);
	    return _.reduce(b, function(sum, num) { return sum + num; });
	  },
	  draw: function(selection, type) {
	    var opts = {
	      selection: selection,
	      widths: [],
	      SHAPE_WIDTH: this.SHAPE_WIDTH
	    };
	    var typeFns = this[type];
	    _.each(typeFns, function(fn, i) {
	      var created = fn.create(opts), w;
	      if (fn.type === 'text') {
	        if (opts.widths[i - 1]) {
	          w = this.cumWidth(opts.widths, i);
	          if ((i === typeFns.length - 1) && (i !== 1)) {
	            var s = this.SHAPE_WIDTH - this.SHAPE_MARGIN*2;
	            created.attr('transform', 'translate(' + (-(w + s/2)) + ',0)');
	          }
	          else {
	            created.attr('transform', 'translate(' + (-w) + ',0)');
	          }
	        }
	      }
	      else if (fn.type === 'circle') {
	        if (opts.widths[i - 1]) {
	          w = this.cumWidth(opts.widths, i);
	          var r = (this.SHAPE_WIDTH - this.SHAPE_MARGIN*2)/2;
	          created.attr({
	            'cx': -(w + 2*r),
	            'cy': -opts.textHeight/2,
	            'r': r
	          });
	        }
	      }
	      else if (fn.type === 'rect') {
	        var side = this.SHAPE_WIDTH - this.SHAPE_MARGIN*2;
	        created.attr({
	          'width': side,
	          'height': side
	        });
	        if (opts.widths[i - 1]) {
	          w = this.cumWidth(opts.widths, i);
	          created.attr({
	            'x': -w - this.SHAPE_WIDTH
	          });
	        }
	        else {
	          created.attr({
	            'x': -side - 1.5
	          });
	        }
	      }
	    }, this);
	    if (type !== 'bg') {
	      selection.selectAll('rect')
	        .attr('y', -(opts.textHeight - this.SHAPE_MARGIN*2));
	    }
	    var w;
	    selection.each(function() { w = this.getBBox(); });
	    return w;
	  }
	};

	module.exports = legend;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var scales = function(opts) {
	  opts = opts || {};

	  var defaults = {
	    bolusRatio: 0.35,
	    MAX_CBG: 401,
	    carbRadius: 14
	  };

	  _.defaults(opts, defaults);

	  return {
	    MAX_CBG: opts.MAX_CBG,
	    bg: function(data, pool, pad) {
	      var ext = d3.extent(data, function(d) { return d.value; });
	      if (ext[1] > this.MAX_CBG) {
	        return d3.scale.linear()
	          .domain([0, this.MAX_CBG])
	          .range([pool.height() - pad, pad])
	          .clamp(true);
	      }
	      else {
	        return d3.scale.linear()
	          .domain([0, ext[1]])
	          .range([pool.height() - pad, pad]);
	      }
	    },
	    bgLog: function(data, pool, pad) {
	      var ext = d3.extent(data, function(d) { return d.value; });
	      if (ext[1] > this.MAX_CBG) {
	        return d3.scale.log()
	          .domain([ext[0], this.MAX_CBG])
	          .range([pool.height() - pad, pad])
	          .clamp(true);
	      }
	      else {
	        return d3.scale.log()
	          .domain(ext)
	          .range([pool.height() - pad, pad]);
	      }
	    },
	    bgTicks: function(data) {
	      if ((!data) || (data.length === 0)) {
	        return [];
	      }
	      var defaultTicks = [40, 80, 120, 180, 300];
	      var ext = d3.extent(data, function(d) { return d.value; });
	      // if the min of our data is greater than any of the defaultTicks, remove that tick
	      defaultTicks.forEach(function(tick) {
	        if (ext[0] > tick) {
	          defaultTicks.shift();
	        }
	      });
	      defaultTicks.reverse();
	      // same thing for max
	      defaultTicks.forEach(function(tick) {
	        if (ext[1] < tick) {
	          defaultTicks.shift();
	        }
	      });
	      return defaultTicks.reverse();
	    },
	    carbs: function(data, pool) {
	      var scale = d3.scale.linear()
	        .domain([0, d3.max(data, function(d) { return d.carbs ? d.carbs.value : 0; })])
	        .range([opts.carbRadius, opts.carbRadius + ((1 - opts.bolusRatio) * pool.height())/4]);
	      return scale;
	    },
	    bolus: function(data, pool) {
	      var scale = d3.scale.linear()
	        // for boluses the recommended can exceed the value
	        .domain([0, d3.max(data, function(d) { return d3.max([d.value, d.recommended]); })])
	        .range([pool.height(), opts.bolusRatio * pool.height()]);
	      return scale;
	    },
	    basal: function(data, pool) {
	      var scale = d3.scale.linear()
	        .domain([0, d3.max(data, function(d) { return d.value; }) * 1.1])
	        .rangeRound([pool.height(), 0]);
	      return scale;
	    }
	  }
	};

	module.exports = scales;


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var log = __webpack_require__(25).bows('ShapeUtil');

	var shapeutil = {
	  // for polygons
	  mirrorImageY: function(pointsString) {
	    var points = pointsString.split(' ');
	    points = _.map(points, function(point) {
	      var values = point.split(',');
	      var x = parseInt(values[0], 10);
	      return -x + ',' + values[1] + ' ';
	    });
	    return _.reduce(points, function(x,y) { return x + y; }).trim();
	  },
	  mirrorImageX: function(pointsString) {
	    var points = pointsString.split(' ');
	    points = _.map(points, function(point) {
	      var values = point.split(',');
	      var y = parseInt(values[1], 10);
	      return values[0] + ',' + -y + ' ';
	    });
	    return _.reduce(points, function(x,y) { return x + y; }).trim();
	  },
	  // for paths
	  pathMirrorY: function(group) {
	    var transform = group.attr('transform');
	    return group.attr('transform', transform + ' scale(-1,1)');
	  },
	  pathMirrorX: function(group) {
	    var transform = group.attr('transform');
	    return group.attr('transform', transform + ' scale(1,-1)');
	  },
	  getViewBoxCoords: function(str) {
	    var a = str.split(' ');
	    return {x: a[2], y: a[3]};
	  },
	  pointString: function(x,y) {
	    return x + ',' + y + ' ';
	  },
	  translationFromViewBox: function(group, opts) {
	    var def = group.attr('xlink:href');
	    var coords = this.getViewBoxCoords(d3.select(def).attr('viewBox'));
	    var x, y;
	    switch(opts.horizontal) {
	      case 'left':
	        x = -coords.x;
	        break;
	      case 'right':
	        x = coords.x;
	        break;
	      default:
	        x = 0;
	    }
	    switch(opts.vertical) {
	      case 'up':
	        y = -coords.y;
	        break;
	      case 'down':
	        y = coords.y;
	        break;
	      default:
	        y = 0;
	    }
	    return group.attr('transform', 'translate(' + x + ',' + y + ')');
	  }
	};

	module.exports = shapeutil;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;
	var format = __webpack_require__(22);

	module.exports = function(pool, opts) {
	  opts = opts || {};

	  var defaults = {
	    width: 12,
	    r: 14,
	    bolusStroke: 2,
	    triangleSize: 6,
	    carbPadding: 4,
	    tooltipPadding: 20
	  };

	  _.defaults(opts, defaults);

	  var top = opts.yScale.range()[0];
	  var bottom = top - opts.bolusStroke / 2;
	  var mainGroup = pool.parent();


	  var pluckBolus = function(d) {
	    return d.bolus ? d.bolus : d;
	  };

	  var xPosition = function(d) {
	    var x = opts.xScale(Date.parse(d.normalTime)) - opts.width/2;
	    return x;
	  };

	  var unknownDeliverySplit = function(d) {
	    return d.initialDelivery == null && d.extendedDelivery == null;
	  };

	  var computePathHeight = function(d) {
	    if (unknownDeliverySplit(d)) {
	      return opts.yScale(d.value) + opts.bolusStroke / 2;
	    } else {
	      return opts.yScale(d.extendedDelivery) + opts.bolusStroke / 2;
	    }
	  };

	  var triangle = function(x, y) {
	    var top = (x + opts.triangleSize) + ' ' + (y + opts.triangleSize/2);
	    var bottom = (x + opts.triangleSize) + ' ' + (y - opts.triangleSize/2);
	    var point = x + ' ' + y;
	    return 'M' + top + 'L' + bottom + 'L' + point + 'Z';
	  };

	  return {
	    carb: function(carbs) {
	      var xPos = function(d) {
	        return xPosition(d) + opts.width/2;
	      };
	      var yPos = function(d) {
	        var r = opts.yScaleCarbs ? opts.yScaleCarbs(d.carbs.value) : opts.r;

	        var bolusValue = d.bolus ? ((d.bolus.recommended && d.bolus.recommended > d.bolus.value) ? d.bolus.recommended : d.bolus.value) : 0;

	        return opts.yScale(bolusValue) - r - (bolusValue ? opts.carbPadding : 0);
	      };

	      carbs.append('circle')
	        .attr({
	          cx: xPos,
	          cy: yPos,
	          r: function(d) {
	            return opts.yScaleCarbs ? opts.yScaleCarbs(d.carbs.value) : opts.r;
	          },
	          'stroke-width': 0,
	          class: 'd3-circle-carbs d3-carbs',
	          id: function(d) {
	            return 'carbs_' + d.id;
	          }
	        });

	      carbs.append('text')
	        .text(function(d) {
	          if(d.carbs) {
	            return d.carbs.value;
	          }
	        })
	        .attr({
	          x: xPos,
	          y: yPos,
	          class: 'd3-carbs-text'
	        });
	    },
	    bolus: function(boluses) {
	      // boluses where delivered = recommended
	      boluses.append('rect')
	        .attr({
	          x: function(d) {
	            d = pluckBolus(d);
	            return xPosition(d);
	          },
	          y: function(d) {
	            d = pluckBolus(d);
	            return opts.yScale(d.value);
	          },
	          width: opts.width,
	          height: function(d) {
	            d = pluckBolus(d);
	            return top - opts.yScale(d.value);
	          },
	          class: 'd3-rect-bolus d3-bolus',
	          id: function(d) {
	            d = pluckBolus(d);
	            return 'bolus_' + d.id;
	          }
	        });
	    },
	    underride: function(underride) {
	      underride.append('rect')
	        .attr({
	          x: function(d) {
	            d = pluckBolus(d);
	            return xPosition(d);
	          },
	          y: function(d) {
	            d = pluckBolus(d);
	            return opts.yScale(d.recommended);
	          },
	          width: opts.width,
	          height: function(d) {
	            d = pluckBolus(d);
	            return opts.yScale(d.value) - opts.yScale(d.recommended);
	          },
	          class: 'd3-rect-recommended d3-bolus',
	          id: function(d) {
	            d = pluckBolus(d);
	            return 'bolus_' + d.id;
	          }
	        });
	    },
	    override: function(override) {
	      override.append('rect')
	        .attr({
	          x: function(d) {
	            d = pluckBolus(d);
	            return xPosition(d);
	          },
	          y: function(d) {
	            d = pluckBolus(d);
	            return opts.yScale(d.recommended);
	          },
	          width: opts.width,
	          height: function(d) {
	            d = pluckBolus(d);
	            return top - opts.yScale(d.recommended);
	          },
	          'stroke-width': opts.bolusStroke,
	          class: 'd3-rect-recommended d3-bolus',
	          id: function(d) {
	            d = pluckBolus(d);
	            return 'bolus_' + d.id;
	          }
	        });
	      override.append('path')
	        .attr({
	          d: function(d) {
	            d = pluckBolus(d);
	            var leftEdge = xPosition(d) + opts.bolusStroke / 2;
	            var rightEdge = leftEdge + opts.width - opts.bolusStroke;
	            var bolusHeight = opts.yScale(d.value) + opts.bolusStroke / 2;
	            return 'M' + leftEdge + ' ' + bottom + 'L' + rightEdge + ' ' + bottom + 'L' + rightEdge + ' ' + bolusHeight + 'L' + leftEdge + ' ' + bolusHeight + 'Z';
	          },
	          'stroke-width': opts.bolusStroke,
	          class: 'd3-path-bolus d3-bolus',
	          id: function(d) {
	            d = pluckBolus(d);
	            return 'bolus_' + d.id;
	          }
	        });
	    },
	    extended: function(extended) {
	      // square- and dual-wave boluses
	      extended.append('path')
	        .attr({
	          d: function(d) {
	            d = pluckBolus(d);
	            var rightEdge = xPosition(d) + opts.width;
	            var doseHeight = computePathHeight(d);
	            var doseEnd = opts.xScale(Date.parse(d.normalTime) + d.duration) - opts.triangleSize / 2;
	            return 'M' + rightEdge + ' ' + doseHeight + 'L' + doseEnd + ' ' + doseHeight;
	          },
	          'stroke-width': opts.bolusStroke,
	          class: function(d){
	            d = pluckBolus(d);
	            if (unknownDeliverySplit(d)) {
	              return 'd3-path-extended d3-bolus d3-unknown-delivery-split';
	            } else {
	              return 'd3-path-extended d3-bolus';
	            }
	          },
	          id: function(d) {
	            d = pluckBolus(d);
	            return 'bolus_' + d.id;
	          }
	        });
	      extended.append('path')
	        .attr({
	          d: function(d) {
	            d = pluckBolus(d);
	            var doseHeight = computePathHeight(d);
	            var doseEnd = opts.xScale(Date.parse(d.normalTime) + d.duration) - opts.triangleSize;
	            return triangle(doseEnd, doseHeight);
	          },
	          'stroke-width': opts.bolusStroke,
	          class: 'd3-path-extended-triangle d3-bolus',
	          id: function(d) {
	            d = pluckBolus(d);
	            return 'bolus_' + d.id;
	          }
	        });
	    },
	    tooltip: {
	      add: function(d) {
	        var tooltips = pool.nativeTooltips();
	        var res = tooltips.addFOTooltip({
	          cssClass: 'd3-bolus',
	          datum: d,
	          shape: 'generic',
	          xPosition: function() { return xPosition(d) + opts.width/2; },
	          yPosition: function() { return pool.height() - 1; }
	        });
	        var foGroup = res.foGroup;
	        this.html(foGroup, d);
	        var dims = tooltips.foDimensions(foGroup);
	        tooltips.anchorFO(d3.select(foGroup.node().parentNode), {
	          w: dims.width + opts.tooltipPadding,
	          h: dims.height,
	          y: -dims.height,
	          orientation: {
	            'default': 'leftAndUp',
	            leftEdge: 'normal',
	            rightEdge: 'leftAndUp'
	          },
	          shape: 'generic',
	          edge: res.edge
	        });
	      },
	      html: function(group, d) {
	        var bolus = pluckBolus(d);
	        var mainP = group.append('p')
	          .attr('class', 'big')
	          .append('span')
	          .html(format.tooltipValue(bolus.value) + '  ');
	        mainP.append('span')
	          .attr('class', 'secondary')
	          .html(' <span class="fromto">at</span> ' + format.timestamp(d.normalTime));
	        if (d.type === 'wizard' && d.carbs && d.carbs.value > 0) {
	          group.append('p')
	            .append('span')
	            .attr('class', 'main')
	            .html('<span class="plain">Carbs</span> ' + d.carbs.value);
	        }
	        if (bolus.extended) {
	          if (bolus.initialDelivery) {
	            group.append('p')
	              .append('span')
	              .attr('class', 'secondary')
	              .html(format.tooltipValue(bolus.initialDelivery) + 'U up front');
	            group.append('p')
	              .append('span')
	              .attr('class', 'secondary')
	              .html(format.tooltipValue(bolus.extendedDelivery) + 'U ' + format.timespan(bolus));
	          }
	          else {
	            group.append('p')
	              .append('span')
	              .attr('class', 'secondary')
	              .html('Square ' + format.timespan(bolus));
	          }
	        }
	        if (bolus.programmed && bolus.programmed !== bolus.value) {
	          group.append('p')
	            .append('span')
	            .attr('class', 'secondary interrupted')
	            .html(format.tooltipValue(bolus.programmed) + 'U programmed');
	          group.append('p')
	            .append('span')
	            .attr('class', 'secondary interrupted')
	            .html('Bolus interrupted!');
	        }
	        else if (bolus.recommended !== bolus.value) {
	          var rideType = bolus.recommended > bolus.value ? 'Under: ' : 'Over: ';
	          group.append('p')
	            .append('span')
	            .attr('class', 'secondary')
	            .html(rideType + format.tooltipValue(bolus.recommended) + 'U suggested');
	        }
	      },
	      remove: function(d) {
	        mainGroup.select('#tooltip_' + d.id).remove();
	      }
	    },
	    annotations: function(data, selection) {
	      _.each(data, function(d) {
	        var annotationOpts = {
	          'x': opts.xScale(Date.parse(d.normalTime)),
	          'y': opts.yScale(d.value),
	          'xMultiplier': -2,
	          'yMultiplier': 1,
	          'd': d,
	          'orientation': {
	            'up': true
	          }
	        };
	        if (mainGroup.select('#annotation_for_' + d.id)[0][0] == null) {
	          mainGroup.select('#tidelineAnnotations_bolus').call(pool.annotations(), annotationOpts);
	        }
	      });
	    }
	  };
	};


/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var d3 = __webpack_require__(25).d3;
	var _ = __webpack_require__(25)._;

	var shapeutil = __webpack_require__(41);
	var shapes = __webpack_require__(49);
	var defs = __webpack_require__(44);
	var dt = __webpack_require__(21);

	var log = __webpack_require__(25).bows('AnnotationIcon');

	module.exports = function(container, annotationsGroup) {

	  var id, r = 8;

	  var defaults = {
	    'foWidth': 200,
	    'triangleWidth': 18,
	    'triangleHeight': 12,
	    'orientation': {}
	  };

	  function annotation(selection, opts) {
	    opts = opts || {};

	    _.defaults(opts, defaults);

	    if (!((opts.x != null) && (opts.y != null))) {
	      log('Sorry, I need x and y coordinates to plot an annotation icon.');
	      return;
	    }

	    var hoverTarget;

	    if (opts.d.annotations[0].code !== 'stats-insufficient-data') {
	      var iconGroup = selection.append('g')
	        .attr('class', 'd3-data-annotation-group')
	        .attr('clip-path', 'url(#mainClipPath)')
	        .attr('id', 'annotation_for_' + opts.d.id);

	      opts.x = annotation.xOffset(opts);
	      opts.y = annotation.yOffset(opts);

	      hoverTarget = iconGroup.append('circle')
	        .attr({
	          'cx': opts.x,
	          'cy': opts.y,
	          'r': r,
	          'class': 'd3-circle-data-annotation',
	        });
	      iconGroup.append('text')
	        .attr({
	          'x': opts.x,
	          'y': opts.y,
	          'class': 'd3-text-data-annotation'
	        })
	        .text('?');

	      if (opts.hoverTarget != null) {
	        hoverTarget = opts.hoverTarget;
	      }
	      annotation.tooltip(opts, selection, hoverTarget);
	    }
	    else {
	      if (opts.hoverTarget != null) {
	        hoverTarget = opts.hoverTarget;
	      }
	      annotation.tooltip(opts, selection, hoverTarget);
	    }
	  }

	  annotation.tooltip = function(opts, selection, hoverTarget) {
	    opts = opts || {};

	    if (opts.d.annotations[0].code === 'stats-insufficient-data') {
	      if (container.type === 'daily') {
	        opts.x = opts.x - (container.currentTranslation() - container.axisGutter());
	      }
	      else if (container.type === 'weekly') {
	        opts.y = opts.y - container.currentTranslation();
	      }
	    }

	    _.defaults(opts, defaults);

	    hoverTarget.on('mouseover', function() {

	      try {
	        var edge = container.getCurrentDomain().end;
	        opts.orientation.left = dt.isNearRightEdge(opts.d, edge);
	      }
	      catch (TypeError) {}

	      var fo = selection.append('foreignObject')
	        .attr({
	          'x': opts.x,
	          'y': opts.y,
	          'width': opts.foWidth,
	          'class': 'd3-tooltip-data-annotation'
	        });
	      var div = fo.append('xhtml:body')
	        .append('div')
	        .attr('class', 'd3-div-data-annotation');

	      // append lead text, if any
	      var lead = defs.lead(opts.lead);
	      if (lead) {
	        div.append('p')
	          .attr('class', 'd3-data-annotation-lead')
	          .html(lead);
	      }

	      // append all annotation texts
	      var annotations = opts.d.annotations;
	      _.each(annotations, function(annotation) {
	        div.append('p')
	          .html(defs.main(annotation, opts.d.source));
	      });

	      // get height of HTML
	      var foHeight = div[0][0].getBoundingClientRect().height;
	      var anchorX = opts.orientation.left ? (3/2*opts.triangleWidth) - opts.foWidth : (0-(3/2*opts.triangleWidth));
	      var anchorY = opts.orientation.up ? -(foHeight + opts.triangleHeight) : opts.triangleHeight;

	      fo.attr({
	        'height': foHeight,
	        'transform': 'translate(' + anchorX + ',' + anchorY + ')'
	      });
	      var polygon = shapes.tooltipPolygon({
	          'w': opts.foWidth,
	          'h': foHeight,
	          't': opts.triangleWidth,
	          'k': opts.triangleHeight
	        });
	      if (opts.orientation.up) {
	        polygon = shapeutil.mirrorImageX(polygon);
	      }
	      // not an else if because orientation can be both up & left
	      if (opts.orientation.left) {
	        polygon = shapeutil.mirrorImageY(polygon);
	      }

	      selection.insert('polygon', '.d3-tooltip-data-annotation')
	        .attr({
	          'points': polygon,
	          'transform': 'translate(' + opts.x + ',' + opts.y + ')',
	          'width': opts.foWidth,
	          'height': opts.triangleHeight + foHeight,
	          'class': 'd3-polygon-data-annotation'
	        });
	    });
	    hoverTarget.on('mouseout', function() {
	      selection.selectAll('.d3-tooltip-data-annotation').remove();
	      selection.selectAll('.d3-polygon-data-annotation').remove();
	    });
	  };

	  annotation.xOffset = function(opts, multiplier) {
	    if (multiplier != null) {
	      return opts.x;
	    }
	    return opts.x + (r * opts.xMultiplier);
	  };

	  annotation.yOffset = function(opts, multiplier) {
	    if (multiplier != null) {
	      return opts.y;
	    }
	    return opts.y - (r * opts.yMultiplier);
	  };

	  annotation.addGroup = function(pool, type) {
	    annotationsGroup.append('g')
	      .attr('id', annotation.id() + '_' + type)
	      .attr('transform', pool.attr('transform'));
	  };

	  // getters & setters
	  annotation.id = function(x) {
	    if (!arguments.length) return id;
	    id = annotationsGroup.attr('id');
	    return annotation;
	  };

	  return annotation;
	};

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	// You can view the full text of each annotation by running mocha test/annotations_test.js
	// Current output:
	//
	// Main text annotation for carelink/basal/temp-percent-create-scheduled:
	// We are calculating the temp basal rates here by applying the percentage of the temp basal to your current schedule, but Demo did not directly provide us with these rate changes.
	//
	// Main text annotation for carelink/basal/off-schedule-rate:
	// You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how Demo reports the data, we can't be 100% certain of your basal rate here.
	//
	// Main text annotation for carelink/settings/basal-mismatch:
	// You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how Demo reports the data, we can't be 100% certain of your basal settings here.
	//
	// Main text annotation for carelink/settings/wizard-mismatch:
	// You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how Demo reports the data, we can't be 100% certain of your bolus wizard settings here.
	//
	// Main text annotation for carelink/settings/activeSchedule-mismatch:
	// You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how Demo reports the data, we can't be 100% certain of your active basal pattern here.
	//
	// Main text annotation for diasend/basal/temp-basal-fabrication:
	// The Demo .xls file doesn't report temp basals directly, so we have to infer from other evidence where you might have been using a temp basal rate. We think this segment could be a temp basal, but it may not be.
	//
	// Main text annotation for diasend/basal/temp-duration-truncated:
	// Because of how the Demo .xls file reports the data, we've truncated what may have been a temp basal here to a maximum duration of 120 hours.
	//
	// Main text annotation for diasend/bolus/extended:
	// The Demo .xls file doesn't report the split between the intitial and the extended delivery during a combo bolus. All we can display is the duration of the combo bolus and the total dose delivered.
	//
	// Main text annotation for stats-insufficient-data:
	// There is not enough data to show this statistic.
	//
	// Lead text annotation for stats-insufficient-data:
	// Why is this grey? 

	var format = __webpack_require__(22);

	var definitions = {
	  LEAD_TEXT: {
	    'stats-insufficient-data': function() {
	      return 'Why is this grey?';
	    }
	  },
	  MAIN_TEXT: {
	    'carelink/basal/temp-percent-create-scheduled': function(source, defs) {
	      var a = "We are calculating the temp basal rates here by applying the percentage of the temp basal to your current schedule, but ";
	      var b = " did not directly provide us with these rate changes.";
	      return defs.stitch(a, b, source);
	    },
	    'carelink/basal/off-schedule-rate': function(source, defs) {
	      var a = "You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how ";
	      var b = " reports the data, we can't be 100% certain of your basal rate here.";
	      return defs.stitch(a, b, source);
	    },
	    'carelink/settings/basal-mismatch': function(source, defs) {
	      var a = "You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how ";
	      var b = " reports the data, we can't be 100% certain of your basal settings here.";
	      return defs.stitch(a, b, source);
	    },
	    'carelink/settings/wizard-mismatch': function(source, defs) {
	      var a = "You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how ";
	      var b = " reports the data, we can't be 100% certain of your bolus wizard settings here.";
	      return defs.stitch(a, b, source);
	    },
	    'carelink/settings/activeSchedule-mismatch': function(source, defs) {
	      var a = "You may have changed pumps recently - perhaps because you had to have your pump replaced due to malfuction. As a result of how ";
	      var b = " reports the data, we can't be 100% certain of your active basal pattern here.";
	      return defs.stitch(a, b, source);
	    },
	    'diasend/basal/temp-basal-fabrication': function(source, defs) {
	      var a = "The ";
	      var b = " .xls file doesn't report temp basals directly, so we have to infer from other evidence where you might have been using a temp basal rate. We think this segment could be a temp basal, but it may not be.";
	      return defs.stitch(a, b, source);
	    },
	    'diasend/basal/temp-duration-truncated': function(source, defs) {
	      var a = "Because of how the ";
	      var b = " .xls file reports the data, we've truncated what may have been a temp basal here to a maximum duration of 120 hours.";
	      return defs.stitch(a, b, source);
	    },
	    'diasend/bolus/extended': function(source, defs) {
	      var a = "The ";
	      var b = " .xls file doesn't report the split between the intitial and the extended delivery during a combo bolus. All we can display is the duration of the combo bolus and the total dose delivered.";
	      return defs.stitch(a, b, source);
	    },
	    'stats-insufficient-data': function() {
	      return 'There is not enough data to show this statistic.';
	    }
	  },
	  default: function(source) {
	    if (source == null) {
	      return "We can't be 100% certain of the data displayed here.";
	    }
	    var a = "We can't be 100% certain of the data displayed here because of how ";
	    var b = " reports the data.";
	    return this.stitch(a, b, source);
	  },
	  main: function(annotation, source) {
	    var a, b;
	    if (this.MAIN_TEXT[annotation.code] != null) {
	      return this.MAIN_TEXT[annotation.code](source, this);
	    }
	    else {
	      return this.default(source);
	    }
	  },
	  stitch: function(a, b, source) {
	    return a + format.capitalize(source) + b;
	  },
	  lead: function(code) {
	    code = code || '';
	    if (this.LEAD_TEXT[code] != null) {
	      return this.LEAD_TEXT[code]();
	    }
	    else {
	      return false;
	    }
	  }
	};

	module.exports = definitions;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;
	var d3 = __webpack_require__(25).d3;

	var format = __webpack_require__(22);

	var log = __webpack_require__(25).bows('DailyX');

	module.exports = function(pool, opts) {

	  var defaults = {
	    dayShiftY: 2,
	    textShiftX: 5,
	    textShiftY: 5,
	    tickLength: 15
	  };

	  opts = _.defaults(opts || {}, defaults);

	  var mainGroup = pool.parent();

	  var stickyLabel = mainGroup.select('#tidelineLabels')
	    .append('g')
	    .attr('class', 'd3-axis')
	    .append('text')
	    .attr({
	      'class': 'd3-day-label',
	      x: opts.leftEdge,
	      // this is the same as dailyx.dayYPosition
	      // we just don't have a datum to pass here
	      y: pool.height() - opts.tickLength * 2.5 + opts.dayShiftY
	    });

	  opts.emitter.on('zoomstart', function() {
	    stickyLabel.attr('opacity', '0.2');
	  });

	  opts.emitter.on('zoomend', function() {
	    stickyLabel.attr('opacity', '1.0');
	  });

	  opts.emitter.on('navigated', function(a) {
	    var d = a[0].start;
	    // when we're close to midnight (where close = five hours on either side)
	    // remove the sticky label so it doesn't overlap with the midnight-anchored day label
	    if ((d.getUTCHours() >= 19) || (d.getUTCHours() <= 4)) {
	      stickyLabel.text('');
	      return;
	    }
	    stickyLabel.text(format.xAxisDayText(d.toISOString()));
	  });

	  function dailyx(selection) {

	    opts.xScale = pool.xScale().copy();

	    selection.each(function(currentData) {
	      var ticks = selection.selectAll('g.d3-axis.' + opts['class'])
	        .data(currentData, function(d) {
	          return d.id;
	        });

	      var tickGroups = ticks.enter()
	        .append('g')
	        .attr({
	          'class': 'd3-axis ' + opts['class'],
	          'clip-path': 'url(#mainClipPath)'
	        });

	      tickGroups.append('line')
	        .attr({
	          x1: dailyx.xPosition,
	          x2: dailyx.xPosition,
	          y1: pool.height(),
	          y2: dailyx.tickLength
	        });

	      tickGroups.append('text')
	        .attr({
	          x: dailyx.textXPosition,
	          y: pool.height() - opts.textShiftY
	        })
	        .text(function(d) {
	          return format.xAxisTickText(d.normalTime);
	        });

	      tickGroups.filter(function(d) {
	        var dt = new Date(d.normalTime);
	        if (dt.getUTCHours() === 0) {
	          return d;
	        }
	      })
	        .append('text')
	        .attr({
	          'class': 'd3-day-label',
	          x: dailyx.textXPosition,
	          y: dailyx.dayYPosition
	        })
	        .text(function(d) {
	          return format.xAxisDayText(d.normalTime);
	        });

	      ticks.exit().remove();
	    });
	  }

	  dailyx.xPosition = function(d) {
	    return opts.xScale(Date.parse(d.normalTime));
	  };

	  dailyx.textXPosition = function(d) {
	    return dailyx.xPosition(d) + opts.textShiftX;
	  };

	  dailyx.dayYPosition = function(d) {
	    return dailyx.tickLength(d) + opts.dayShiftY;
	  };

	  dailyx.tickLength = function(d) {
	    var dt = new Date(d.normalTime);
	    if (dt.getUTCHours() === 0) {
	      return pool.height() - opts.tickLength * 2.5;
	    }
	    else return pool.height() - opts.tickLength;
	  };

	  dailyx.text = function(d) {
	    return format(d.normalTime);
	  };

	  return dailyx;
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;

	// when adding a shape from an image supplied by designer
	// viewBox attribute should be copied exactly from svg image
	var shapeutil = __webpack_require__(41);

	var shapes = {
	  cbg: {
	    fixed: true,
	    els: [
	      {
	        el: 'path',
	        attrs: {
	          d: 'M4.529,4.199C2.75,5.978,1.725,8.215,1.43,10.529l-0.396,12.61l12.611-0.395c2.314-0.297,4.553-1.32,6.332-3.098c4.264-4.266,4.264-11.182-0.002-15.449C15.711-0.066,8.793-0.066,4.529,4.199z',
	          fill: '#FFFFFF'
	        }
	      },
	      {
	        el: 'path',
	        attrs: {
	          d: 'M12.252,1c2.794,0,5.589,1.066,7.722,3.198c4.266,4.267,4.266,11.183,0.002,15.449c-1.779,1.777-4.018,2.801-6.332,3.098L1.033,23.139l0.396-12.61c0.295-2.314,1.32-4.552,3.099-6.33C6.662,2.066,9.457,1,12.252,1M12.252,0C9.067,0,6.073,1.24,3.822,3.492c-1.876,1.875-3.046,4.265-3.384,6.911L0.432,10.45L0.43,10.498l-0.396,12.61L0,24.172l1.064-0.034l12.611-0.395l0.049-0.001l0.047-0.006c2.646-0.34,5.037-1.51,6.912-3.383c4.648-4.649,4.646-12.214-0.002-16.863C18.43,1.24,15.438,0,12.252,0L12.252,0z',
	          'class': 'tooltip-outline'
	        }
	      }
	    ],
	    id: 'cbgTooltip',
	    mainClass: 'svg-tooltip-cbg',
	    viewBox: '0 0 24.169 24.172',
	    orientations: {
	      normal: function(group) {
	        group.classed('svg-tooltip-right-and-up', true);
	        return shapeutil.translationFromViewBox(group, {vertical: 'up'});
	      },
	      leftAndDown: function(group) {
	        group.classed('svg-tooltip-left-and-down', true);
	        shapeutil.translationFromViewBox(group, {vertical: 'down'})
	          .call(shapeutil.pathMirrorY)
	          .call(shapeutil.pathMirrorX);
	      },
	      leftAndUp: function(group) {
	        group.classed('svg-tooltip-left-and-up', true);
	        shapeutil.translationFromViewBox(group, {vertical: 'up'})
	          .call(shapeutil.pathMirrorY);
	      },
	      rightAndDown: function(group) {
	        group.classed('svg-tooltip-right-and-down', true);
	        shapeutil.translationFromViewBox(group, {vertical: 'down'})
	          .call(shapeutil.pathMirrorX);
	      }
	    },
	    addText: function(selection, opts) {
	      var used = selection.select('use');
	      var boundingBox = used[0][0].getBBox();
	      var usedTransform = used.attr('transform').split(' ');
	      selection.append('text')
	        .attr({
	          x: boundingBox.width/2 - (_.contains(usedTransform, 'scale(-1,1)') ? boundingBox.width : 0),
	          y: -boundingBox.height/2 + (_.contains(usedTransform, 'scale(1,-1)') ? boundingBox.height : 0),
	          'class': 'd3-tooltip-text'
	        })
	        .text(opts.datum.value);
	    }
	  },
	  basal: {
	    fixed: false,
	    els: [
	      {
	        el: 'polygon',
	        attrs: {
	          points: function(opts) {
	            var pointHalfHeight = 10;
	            var pointWidth = 15;
	            return shapeutil.pointString(0,0) +
	              shapeutil.pointString(opts.w, 0) +
	              shapeutil.pointString(opts.w, opts.h/2 - pointHalfHeight) +
	              shapeutil.pointString(opts.w + pointWidth, opts.h/2) +
	              shapeutil.pointString(opts.w, opts.h/2 + pointHalfHeight) +
	              shapeutil.pointString(opts.w, opts.h) +
	              shapeutil.pointString(0, opts.h) +
	              shapeutil.pointString(0, opts.h/2 + pointHalfHeight) +
	              shapeutil.pointString(-pointWidth, opts.h/2) +
	              shapeutil.pointString(0, opts.h/2 - pointHalfHeight) +
	              shapeutil.pointString(0,0);
	          }
	        }
	      }
	    ],
	    mainClass: 'svg-tooltip-basal',
	    extensions: {
	      left: 15,
	      right: 15
	    }
	  },
	  smbg: {
	    fixed: false,
	    els: [
	      {
	        el: 'polygon',
	        attrs: {
	          pointsFn: function(opts) {
	            var offset = 4;
	            var y = 12;
	            var x = 8;
	            return shapeutil.pointString(offset, -opts.h - offset) +
	              shapeutil.pointString(opts.w + offset, -opts.h - offset) +
	              shapeutil.pointString(opts.w + offset, -offset) +
	              shapeutil.pointString(offset+x, -offset) +
	              shapeutil.pointString(0, 0) +
	              shapeutil.pointString(offset, -y - offset) +
	              shapeutil.pointString(offset, -opts.h - offset).trim();
	          }
	        }
	      }
	    ],
	    mainClass: 'svg-tooltip-smbg',
	    orientations: {
	      normal: function(pointStr) {
	        return pointStr;
	      },
	      leftAndDown: function(str) {
	        return shapeutil.mirrorImageX(shapeutil.mirrorImageY(str));
	      },
	      leftAndUp: function(str) {
	        return shapeutil.mirrorImageY(str);
	      },
	      rightAndDown: function(str) {
	        return shapeutil.mirrorImageX(str);
	      }
	    },
	    offset: function(selection, opts) {
	      if (!arguments.length) return 4;
	      selection.attr({
	        x: opts.x,
	        y: opts.y
	      });
	    }
	  },
	  generic: {
	    fixed: false,
	    els: [
	      {
	        el: 'polygon',
	        attrs: {
	          pointsFn: function(opts) {
	            var offset = 8;
	            var y = 16;
	            var x = 12;
	            return shapeutil.pointString(offset, -opts.h - offset) +
	              shapeutil.pointString(opts.w + offset, -opts.h - offset) +
	              shapeutil.pointString(opts.w + offset, -offset) +
	              shapeutil.pointString(offset+x, -offset) +
	              shapeutil.pointString(0, 0) +
	              shapeutil.pointString(offset, -y - offset) +
	              shapeutil.pointString(offset, -opts.h - offset).trim();
	          }
	        }
	      }
	    ],
	    mainClass: 'svg-tooltip-generic',
	    orientations: {
	      normal: function(pointStr) {
	        return pointStr;
	      },
	      leftAndDown: function(str) {
	        return shapeutil.mirrorImageX(shapeutil.mirrorImageY(str));
	      },
	      leftAndUp: function(str) {
	        return shapeutil.mirrorImageY(str);
	      },
	      rightAndDown: function(str) {
	        return shapeutil.mirrorImageX(str);
	      }
	    },
	    offset: function(selection, opts) {
	      if (!arguments.length) return 8;
	      selection.attr({
	        x: opts.x,
	        y: opts.y
	      });
	    }
	  }
	};

	module.exports = shapes;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = __webpack_require__(25)._;
	var d3 = __webpack_require__(25).d3;

	var shapes = __webpack_require__(46);
	var shapeutil = __webpack_require__(41);

	function Tooltips(container, tooltipsGroup) {

	  var id, tooltipGroups = {}, defs = {};

	  var HOURS_IN_DAY = 24, EDGE_THRESHOLD = 3;

	  var tooltipDefs = tooltipsGroup.append('defs');
	  var currentTranslation, width = container.width(), vizWidth = width - container.axisGutter();

	  function defineShape(shape, cssClass) {
	    // add an SVG <defs> at the root of the tooltipsGroup for later <use>
	    var shapeGroup = tooltipDefs.append('g')
	      .attr({
	        'class': shape.mainClass + ' ' + cssClass,
	        id: shape.id + '_' + cssClass,
	        viewBox: shape.viewBox
	      });
	    _.each(shape.els, function(el) {
	      shapeGroup.append(el.el)
	        .attr(el.attrs);
	    });
	  }

	  function defineLeftEdge() {
	    // have to add axisGutter back *after* finding the pixel width of the three-hour span
	    // there's probably a better way to do this...
	    return vizWidth / HOURS_IN_DAY * EDGE_THRESHOLD + container.axisGutter();
	  }

	  function defineRightEdge() {
	    return width - (vizWidth / HOURS_IN_DAY * EDGE_THRESHOLD);
	  }

	  function isAtLeftEdge(position) {
	    if (position < defineLeftEdge()) {
	      return true;
	    }
	    else {
	      return false;
	    }
	  }

	  function isAtRightEdge(position) {
	    if (position > defineRightEdge()) {
	      return true;
	    }
	    else {
	      return false;
	    }
	  }

	  function locationInWindow(xPosition) {
	    return currentTranslation + xPosition;
	  }

	  this.addFOTooltip = function(opts) {
	    opts = opts || {};
	    currentTranslation = container.currentTranslation();
	    var atLeftEdge = isAtLeftEdge(locationInWindow(opts.xPosition(opts.datum)));
	    var atRightEdge = isAtRightEdge(locationInWindow(opts.xPosition(opts.datum)));
	    var shape = opts.shape;
	    var translation;

	    if (shape) {
	      var defaultTranslation = 'translate(' + opts.xPosition(opts.datum) + ',' + opts.yPosition(opts.datum) + ')';
	      if (!shapes[shape].orientations) {
	        if (atLeftEdge) {
	          translation = 'translate(' + (-currentTranslation + container.axisGutter() + shapes[shape].extensions.left) + ',' + opts.yPosition(opts.datum) + ')';
	        }
	        else if (atRightEdge) {
	          translation = 'translate(' + (-currentTranslation + width - shapes[shape].extensions.right) + ',' + opts.yPosition(opts.datum) + ')';
	        }
	        else {
	          translation = defaultTranslation;
	        }
	      }
	      else {
	        translation = defaultTranslation;
	      }
	      var group = tooltipGroups[opts.datum.type].append('g')
	        .attr({
	          id: 'tooltip_' + opts.datum.id,
	          'class': 'd3-tooltip d3-' + opts.datum.type + ' ' + shapes[shape].mainClass + ' ' + opts.cssClass,
	          transform: translation
	        });
	      var foGroup = group.append('foreignObject')
	        .attr({
	          width: 200,
	          visibility: 'hidden',
	          'class': 'svg-tooltip-fo'
	        })
	        .append('xhtml:div')
	        .attr({
	          'class': 'tooltip-div'
	        });
	      return {
	        foGroup: foGroup,
	        edge: atLeftEdge ? 'left': atRightEdge ? 'right': null
	      };
	    }
	  };

	  this.anchorFO = function(selection, opts) {
	    var shape = opts.shape;
	    var atRightEdge = opts.edge === 'right';
	    var atLeftEdge = opts.edge === 'left';
	    var isDefaultNormal = opts.orientation && opts.orientation['default'] === 'normal';
	    var isDefaultLeftNormal = opts.orientation && opts.orientation['default'] === 'leftAndUp';

	    if (opts.y) {
	      var offsetVal = shapes[shape].offset();
	      if (isDefaultNormal || (isDefaultLeftNormal && atLeftEdge)) {
	        shapes[shape].offset(selection, {x: offsetVal, y: opts.y - offsetVal});
	      }
	      else if (atLeftEdge) {
	        shapes[shape].offset(selection, {x: offsetVal, y: offsetVal});
	      }
	      else if (!opts.edge || atRightEdge) {
	        var y = isDefaultLeftNormal ? opts.y - offsetVal : offsetVal;
	        shapes[shape].offset(selection, {x: -opts.w - offsetVal, y: y});
	      }
	    }
	    if (!shapes[shape].orientations) {
	      var widthTranslation = 'translate(' + (-opts.w/2) + ',0)';
	      var rightEdgeTranslation = 'translate(' + (-opts.w) + ',0)';
	      if (!opts.edge) {
	        selection.attr('transform', widthTranslation);
	      }
	      else if (atRightEdge) {
	        selection.attr('transform', rightEdgeTranslation);
	      }
	    }
	    else {
	      if (atRightEdge) {
	        selection.attr('x', -opts.w - shapes[shape].offset());
	      }
	    }
	    selection.attr({
	      width: opts.w,
	      height: opts.h,
	      visibility: 'visible'
	    });
	    if (shape) {
	      var tooltipGroup = d3.select(selection.node().parentNode);
	      _.each(shapes[shape].els, function(el) {
	        var attrs = _.clone(el.attrs);
	        for (var prop in attrs) {
	          if (typeof attrs[prop] === 'function') {
	            var res = attrs[prop](opts);
	            if (shapes[shape].orientations) {
	              if (atRightEdge) {
	                res = shapes[shape].orientations[opts.orientation.rightEdge](res);
	              }
	              else if (atLeftEdge) {
	                res = shapes[shape].orientations[opts.orientation.leftEdge](res);
	              }
	              else {
	                res = shapes[shape].orientations[opts.orientation['default']](res);
	              }
	            }
	            delete attrs[prop];
	            attrs[prop.replace('Fn', '')] = res;
	          }
	        }
	        if (!opts.edge && widthTranslation) {
	          attrs.transform = widthTranslation;
	        }
	        else if (atRightEdge && rightEdgeTranslation) {
	          attrs.transform = rightEdgeTranslation;
	        }
	        tooltipGroup.insert(el.el, '.svg-tooltip-fo')
	          .attr(attrs);
	      });
	    }
	  };

	  this.foDimensions = function(foGroup) {
	    var widths = [];
	    var spans = foGroup.selectAll('span')
	      .each(function() {
	        widths.push(d3.select(this)[0][0].getBoundingClientRect().width);
	      });
	    var bbox = foGroup[0][0].getBoundingClientRect();
	    return {
	      width: d3.max(widths),
	      height: bbox.height
	    };
	  };

	  this.addTooltip = function(opts) {
	    opts = opts || {};
	    currentTranslation = container.currentTranslation();
	    var atLeftEdge = isAtLeftEdge(locationInWindow(opts.xPosition(opts.datum)));
	    var atRightEdge = isAtRightEdge(locationInWindow(opts.xPosition(opts.datum)));

	    var shape = opts.shape;
	    if (shape) {
	      var group = tooltipGroups[opts.datum.type].append('g')
	        .attr({
	          id: 'tooltip_' + opts.datum.id,
	          'class': 'd3-tooltip d3-' + opts.datum.type,
	          transform: 'translate(' + opts.xPosition(opts.datum) + ',' + opts.yPosition(opts.datum) + ')',
	        });
	      var tooltipShape = group.append('use')
	        .attr({
	          x: 0,
	          y: 0,
	          'xlink:href': '#' + shapes[shape].id + '_' + opts.cssClass
	        });
	      if (opts.orientation) {
	        if (atLeftEdge) {
	          shapes[shape].orientations[opts.orientation.leftEdge](tooltipShape);
	        }
	        else if (atRightEdge) {
	          shapes[shape].orientations[opts.orientation.rightEdge](tooltipShape);
	        }
	        else {
	          shapes[shape].orientations[opts.orientation['default']](tooltipShape);
	        }
	      }
	      else {
	        shapes[shape].orientations.normal(tooltipShape);
	      }
	      if (shapes[shape].addText) {
	        shapes[shape].addText(group, opts);
	      }
	    }
	  };

	  this.addGroup = function(pool, opts) {
	    var type = opts.type, shape;
	    if (opts.shape) {
	      shape = opts.shape;
	    }
	    else {
	      shape = type;
	    }
	    var poolGroup = container.poolGroup().select('#' + pool.id());
	    tooltipGroups[type] = tooltipsGroup.append('g')
	      .attr('id', this.id() + '_' + type)
	      .attr('transform', poolGroup.attr('transform'));
	    pool.nativeTooltips(this);
	    if (shapes[shape].fixed) {
	      _.each(opts.classes, function(cl) {
	        if (shapes[shape]) {
	          defineShape(shapes[shape], cl);
	          defs[type + '_' + cl] = true;
	        }
	      });
	    }
	  };

	  // getters & setters
	  this.id = function(x) {
	    if (!arguments.length) return id;
	    id = tooltipsGroup.attr('id');
	    return this;
	  };
	}

	module.exports = Tooltips;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	//
	// 'Good old Watson! You are the one fixed point in a changing age.' - Sherlock Holmes, "His Last Bow"
	//
	// This mini module is for containing anything done to Tidepool data to make it possible to plot timezone-naive
	// data reliably and consistently across different browsers and in different timezones. It is named after the
	// quotation listed above as well as the fact that Watson is one of literature's ur-examples of the loyal
	// assistant.
	//
	// Watson is a tideline *plugin*. Try as hard as you can to keep Watson out of main library code - i.e., in
	// this repository, Watson should only be a requirement within other files in the plugins/ directory, not in
	// the main js/ directory.
	//

	if ((typeof window !== 'undefined') && (typeof window._ !== 'undefined')) {
	  var _ = window._;
	}
	else {
	  var _ = __webpack_require__(58);
	}

	try {
	  var log = window.bows('Watson');
	}
	catch (ReferenceError) {
	  var log = __webpack_require__(25).bows('Watson');
	}

	var dt = __webpack_require__(21);

	module.exports = {
	  APPEND: '.000Z',

	  normalize: function(i) {
	    try {
	      if (i.utcTime) {
	        var d = new Date(i.utcTime);
	        var offsetMinutes = d.getTimezoneOffset();
	        d.setUTCMinutes(d.getUTCMinutes() - offsetMinutes);
	        i.normalTime = d.toISOString();
	      }
	      else if (i.type === 'basal-rate-segment') {
	        // old data model
	        if (i.start) {
	          i.normalTime = i.start + this.APPEND;
	          if (i.end) {
	            i.normalEnd = i.end + this.APPEND;
	          }
	          else {
	            i.normalEnd = null;
	          }
	          if (i.suppressed) {
	            for (var j = 0; j < i.suppressed.length; ++j) {
	              var s = i.suppressed[j];
	              s.normalTime = s.start + this.APPEND;
	              s.normalEnd = s.end + this.APPEND;
	            }
	          }
	        }
	        // new data model
	        else {
	          i.normalTime = i.deviceTime + this.APPEND;
	          i.normalEnd = dt.addDuration(i.normalTime, i.duration) + this.APPEND;
	          i.value = i.rate;
	          if (i.suppressed) {
	            for (var k = 0; k < i.suppressed.length; ++k) {
	              this.normalize(i.suppressed[k]);
	            }
	          }
	        }
	        if (i.suppressed) {
	          for (var j = 0; j < i.suppressed.length; ++j) {
	            var s = i.suppressed[j];
	            s.normalTime = s.start + this.APPEND;
	            s.normalEnd = s.end + this.APPEND;
	          }
	        }
	      }
	      else if (i.normalTime == null) {
	        i.normalTime = i.deviceTime + this.APPEND;
	      }
	    }
	    catch(e) {
	      throw new TypeError('Watson choked on an undefined.');
	    }
	    return i;
	  },

	  normalizeAll: function(a) {
	    log('Watson normalized the data.');
	    return _.map(a, function(d) {
	      return this.normalize(d);
	    }, this);
	  }
	};

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var shapeutil = __webpack_require__(41);

	var shapes = {
	  tooltipPolygon: function(opts) {
	      opts = opts || {};
	      if (!((opts.w != null) && (opts.h != null) && (opts.t != null) && (opts.k != null))) {
	        log('Sorry, I need w, h, t, and k variables to generate a tooltip polygon.');
	      }

	      var w = opts.w, h = opts.h, t = opts.t, k = opts.k;

	      return shapeutil.pointString(0,0) +
	        shapeutil.pointString((t/2), k) +
	        shapeutil.pointString((w-(3/2*t)), k) +
	        shapeutil.pointString((w-(3/2*t)), (k+h)) +
	        shapeutil.pointString((0-(3/2*t)), (k+h)) +
	        shapeutil.pointString((0-(3/2*t)), k) +
	        shapeutil.pointString((0-(t/2)), k) + '0,0';
	    }
	};

	module.exports = shapes;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = window._;
	var bows = window.bows;
	var d3 = window.d3;

	var EventEmitter = __webpack_require__(59).EventEmitter;

	var tideline = window.tideline;
	var fill = tideline.plot.util.fill;
	var scalesutil = tideline.plot.util.scales;

	// Create a 'One Day' chart object that is a wrapper around Tideline components
	function chartDailyFactory(el, options) {
	  var log = bows('Daily Factory');
	  options = options || {};
	  var defaults = {
	    bgUnits: 'mg/dL',
	    bolusRatio: 0.35,
	    dynamicCarbs: false,
	    hiddenPools: {
	      basalSettings: null
	    }
	  };
	  _.defaults(options, defaults);

	  var scales = scalesutil(options);
	  var emitter = new EventEmitter();
	  var chart = tideline.oneDay(emitter);
	  chart.emitter = emitter;
	  chart.options = options;

	  var poolXAxis, poolMessages, poolBG, poolBolus, poolBasal, poolBasalSettings, poolStats;

	  var SMBG_SIZE = 16;

	  var create = function(el, options) {

	    if (!el) {
	      throw new Error('Sorry, you must provide a DOM element! :(');
	    }

	    var width = el.offsetWidth;
	    var height = el.offsetHeight;
	    if (!(width && height)) {
	      throw new Error('Chart element must have a set width and height ' +
	                      '(got: ' + width + ', ' + height + ')');
	    }

	    // basic chart set up
	    chart.id(el.id).width(width).height(height);

	    if (options.imagesBaseUrl) {
	      chart.imagesBaseUrl(options.imagesBaseUrl);
	    }

	    d3.select(el).call(chart);

	    return chart;
	  };

	  chart.setupPools = function() {
	    // top x-axis pool
	    poolXAxis = chart.newPool()
	      .id('poolXAxis', chart.poolGroup())
	      .label('')
	      .index(chart.pools().indexOf(poolXAxis))
	      .weight(0.55)
	      .gutterWeight(0.0);

	    // messages pool
	    poolMessages = chart.newPool()
	      .id('poolMessages', chart.poolGroup())
	      .label('')
	      .index(chart.pools().indexOf(poolMessages))
	      .weight(0.5)
	      .gutterWeight(0.0);

	    // blood glucose data pool
	    poolBG = chart.newPool()
	      .id('poolBG', chart.poolGroup())
	      .label([{
	        'main': 'Blood Glucose',
	        'light': ' (' + chart.options.bgUnits + ')'
	      }])
	      .legend(['bg'])
	      .index(chart.pools().indexOf(poolBG))
	      .weight(1.5)
	      .gutterWeight(1.0);

	    // carbs and boluses data pool
	    poolBolus = chart.newPool()
	      .id('poolBolus', chart.poolGroup())
	      .label([{
	        'main': 'Bolus',
	        'light': ' (U)'
	      },
	      {
	        'main': ' & Carbohydrates',
	        'light': ' (g)'
	      }])
	      .legend(['bolus', 'carbs'])
	      .index(chart.pools().indexOf(poolBolus))
	      .weight(1.5)
	      .gutterWeight(1.0);

	    var basalSettingsBool = chart.options.hiddenPools.basalSettings;

	    if (basalSettingsBool === null) {
	      // basal data pool
	      poolBasal = chart.newPool()
	        .id('poolBasal', chart.poolGroup())
	        .label([{
	          'main': 'Basal Rates',
	          'light': ' (U/hr)'
	        }])
	        .legend(['basal'])
	        .index(chart.pools().indexOf(poolBasal))
	        .weight(1.0)
	        .gutterWeight(1.0);
	    }
	    else if (basalSettingsBool) {
	      // basal settings pool, bare
	      poolBasalSettings = chart.newPool()
	        .id('poolBasalSettings', chart.poolGroup())
	        .label('')
	        .index(chart.pools().indexOf(poolBasal))
	        .weight(1.0)
	        .gutterWeight(1.0)
	        .hidden(chart.options.hiddenPools.basalSettings);

	      // basal data pool with label, legend, and gutter
	      poolBasal = chart.newPool()
	        .id('poolBasal', chart.poolGroup())
	        .label([{
	          'main': 'Basal Rates',
	          'light': ' (U/hr)'
	        }])
	        .legend(['basal'])
	        .index(chart.pools().indexOf(poolBasal))
	        .weight(1.0)
	        .gutterWeight(1.0);
	    }
	    else if (basalSettingsBool === false) {
	      // basal settings pool with label, legend, and gutter
	      poolBasalSettings = chart.newPool()
	        .id('poolBasalSettings', chart.poolGroup())
	        .label([{
	          'main': 'Basal Rates',
	          'light': ' (U/hr)'
	        }])
	        .legend(['basal'])
	        .index(chart.pools().indexOf(poolBasal))
	        .weight(1.0)
	        .gutterWeight(1.0)
	        .hidden(chart.options.hiddenPools.basalSettings);

	      // basal data pool, bare
	      poolBasal = chart.newPool()
	        .id('poolBasal', chart.poolGroup())
	        .label('')
	        .index(chart.pools().indexOf(poolBasal))
	        .weight(1.0)
	        .gutterWeight(0.1);
	    }

	    // stats data pool
	    poolStats = chart.newPool()
	      .id('poolStats', chart.poolGroup())
	      .index(chart.pools().indexOf(poolStats))
	      .weight(1.0)
	      .gutterWeight(1.0);

	    chart.arrangePools();

	    chart.setAnnotation().setTooltip();

	    // add annotations
	    chart.annotations().addGroup(chart.svg().select('#' + poolBolus.id()), 'bolus');
	    chart.annotations().addGroup(chart.svg().select('#' + poolBasal.id()), 'basal-rate-segment');
	    chart.annotations().addGroup(chart.svg().select('#' + poolStats.id()), 'stats');

	    // add tooltips
	    chart.nativeTooltips().addGroup(poolBG, {
	      type: 'cbg',
	      classes: ['d3-bg-low', 'd3-bg-target', 'd3-bg-high']
	    });
	    chart.nativeTooltips().addGroup(poolBG, {
	      type: 'smbg'
	    });
	    chart.nativeTooltips().addGroup(poolBolus, {
	      type: 'wizard',
	      shape: 'generic'
	    });
	    chart.nativeTooltips().addGroup(poolBolus, {
	      type: 'bolus',
	      shape: 'generic'
	    });
	    chart.nativeTooltips().addGroup(poolBasal, {
	      type: 'basal'
	    });

	    return chart;
	  };

	  chart.load = function(tidelineData) {
	    var data = tidelineData.data;
	    chart.tidelineData = tidelineData;

	    var basalUtil = tidelineData.basalUtil;
	    var bolusUtil = tidelineData.bolusUtil;
	    var cbgUtil = tidelineData.cbgUtil;
	    var settingsUtil = tidelineData.settingsUtil;
	    var smbgUtil = tidelineData.smbgUtil;

	    // initialize chart with data
	    chart.data(tidelineData).setAxes().setNav().setScrollNav();

	    // x-axis pools
	    // add ticks to top x-axis pool
	    poolXAxis.addPlotType('fill', tideline.plot.util.axes.dailyx(poolXAxis, {
	      'class': 'd3-top',
	      emitter: emitter,
	      leftEdge: chart.axisGutter()
	    }), true, true);

	    // BG pool
	    var allBG = _.filter(data, function(d) {
	      if ((d.type === 'cbg') || (d.type === 'smbg')) {
	        return d;
	      }
	    });
	    var scaleBG = scales.bgLog(allBG, poolBG, SMBG_SIZE/2);
	    // set up y-axis
	    poolBG.yAxis(d3.svg.axis()
	      .scale(scaleBG)
	      .orient('left')
	      .outerTickSize(0)
	      .tickValues(scales.bgTicks(allBG))
	      .tickFormat(d3.format('g')));
	    // add background fill rectangles to BG pool
	    poolBG.addPlotType('fill', fill(poolBG, {
	      endpoints: chart.endpoints,
	      guidelines: [
	        {
	          'class': 'd3-line-bg-threshold',
	          'height': 80
	        },
	        {
	          'class': 'd3-line-bg-threshold',
	          'height': 180
	        }
	      ],
	      yScale: scaleBG
	    }), true, true);

	    // add CBG data to BG pool
	    poolBG.addPlotType('cbg', tideline.plot.cbg(poolBG, {yScale: scaleBG}), true, true);

	    // add SMBG data to BG pool
	    poolBG.addPlotType('smbg', tideline.plot.smbg(poolBG, {
	      yScale: scaleBG,
	      bgUnits: options.bgUnits
	    }), true, true);

	    // TODO: when we bring responsiveness in
	    // decide number of ticks for these scales based on container height?
	    // bolus & carbs pool
	    var scaleBolus = scales.bolus(tidelineData.grouped.bolus, poolBolus);
	    var scaleCarbs = options.dynamicCarbs ? scales.carbs(tidelineData.grouped.wizard, poolBolus) : null;
	    // set up y-axis for bolus
	    poolBolus.yAxis(d3.svg.axis()
	      .scale(scaleBolus)
	      .orient('left')
	      .outerTickSize(0)
	      .ticks(2));

	    // add background fill rectangles to bolus pool
	    var scaleHeight = d3.scale.linear()
	      .domain([0, poolBolus.height()])
	      .range([0, poolBolus.height()]);

	    poolBolus.addPlotType('fill', fill(poolBolus, {
	      endpoints: chart.endpoints,
	      yScale: scaleHeight
	    }), true, true);

	    // add wizard data to wizard pool
	    poolBolus.addPlotType('wizard', tideline.plot.wizard(poolBolus, {
	      yScale: scaleBolus,
	      yScaleCarbs: scaleCarbs,
	      emitter: emitter,
	      subdueOpacity: 0.4
	    }), true, true);

	    // quick bolus data to wizard pool
	    poolBolus.addPlotType('bolus', tideline.plot.quickbolus(poolBolus, {
	      yScale: scaleBolus,
	      emitter: emitter,
	      subdueOpacity: 0.4
	    }), true, true);

	    // basal pool
	    var scaleBasal = scales.basal(tidelineData.grouped['basal-rate-segment'], poolBasal);
	    // set up y-axis
	    poolBasal.yAxis(d3.svg.axis()
	      .scale(scaleBasal)
	      .orient('left')
	      .outerTickSize(0)
	      .ticks(4));
	    // add background fill rectangles to basal pool
	    poolBasal.addPlotType('fill', fill(poolBasal, {endpoints: chart.endpoints}), true, true);

	    // add basal data to basal pool
	    poolBasal.addPlotType('basal-rate-segment', tideline.plot.basal(poolBasal, {
	      yScale: scaleBasal,
	      emitter: emitter,
	      data: tidelineData.grouped['basal-rate-segment']
	    }), true, true);

	    if (poolBasalSettings !== undefined) {
	      poolBasalSettings.addPlotType('basal-settings-segment', tideline.plot.basaltab(poolBasalSettings, {
	        data: tidelineData.grouped['basal-settings-segment']
	      }), true, true);
	    }

	    // messages pool
	    // add background fill rectangles to messages pool
	    poolMessages.addPlotType('fill', fill(poolMessages, {
	      emitter: emitter,
	      cursor: 'cell'
	    }), true, true);

	    // add message images to messages pool
	    poolMessages.addPlotType('message', tideline.plot.message(poolMessages, {
	      size: 30,
	      emitter: emitter
	    }), true, true);

	    // stats pool
	    poolStats.addPlotType('stats', tideline.plot.stats.widget(poolStats, {
	      cbg: cbgUtil,
	      smbg: smbgUtil,
	      bolus: bolusUtil,
	      basal: basalUtil,
	      xPosition: chart.axisGutter(),
	      yPosition: 0,
	      emitter: emitter,
	      averageLabel: 'These 24 hours',
	      puddleWeights: {
	        ratio: 1.0,
	        range: 1.2,
	        average: 0.9
	      }
	    }), false, false);

	    return chart;
	  };

	  // locate the chart around a certain datetime
	  // if called without an argument, locates the chart at the most recent 24 hours of data
	  chart.locate = function(datetime) {

	    var start, end, atMostRecent = false;

	    var mostRecent = function() {
	      start = chart.initialEndpoints[0];
	      end = chart.initialEndpoints[1];
	    };

	    if (!arguments.length) {
	      atMostRecent = true;
	      mostRecent();
	    }
	    else {
	      // translate the desired center-of-view datetime into an edgepoint for tideline
	      start = new Date(datetime);
	      chart.currentCenter(start);
	      var plusHalf = new Date(start);
	      plusHalf.setUTCHours(plusHalf.getUTCHours() + 12);
	      var minusHalf = new Date(start);
	      minusHalf.setUTCHours(minusHalf.getUTCHours() - 12);
	      if ((start.valueOf() < chart.endpoints[0]) || (start.valueOf() > chart.endpoints[1])) {
	        log('Please don\'t ask tideline to locate at a date that\'s outside of your data!');
	        log('Rendering most recent data instead.');
	        mostRecent();
	      }
	      else if (plusHalf.valueOf() > chart.endpoints[1]) {
	        mostRecent();
	      }
	      else if (minusHalf.valueOf() < chart.endpoints[0]) {
	        start = chart.endpoints[0];
	        var firstEnd = new Date(start);
	        firstEnd.setUTCDate(firstEnd.getUTCDate() + 1);
	        end = firstEnd;
	      }
	      else {
	        end = new Date(start);
	        start.setUTCHours(start.getUTCHours() - 12);
	        end.setUTCHours(end.getUTCHours() + 12);
	      }
	    }

	    chart.renderedData([start, end]);

	    // render pools
	    _.each(chart.pools(), function(pool) {
	      pool.render(chart.poolGroup(), chart.renderedData());
	    });

	    if (poolBasalSettings !== undefined) {
	      chart.drawBasalSettingsButton();
	    }

	    chart.setAtDate(start, atMostRecent);

	    return chart;
	  };

	  chart.getCurrentDay = function() {
	    return chart.getCurrentDomain().center;
	  };

	  chart.createMessage = function(message) {
	    log('New message created:', message);
	    chart.tidelineData.addDatum(message);
	    chart.data(chart.tidelineData);
	    chart.emitter.emit('messageCreated', message);
	    return chart.tidelineData;
	  };

	  chart.editMessage = function(message) {
	    log('Message timestamp edited:', message);
	    // tideline only cares if the edited message was a top-level note
	    // not a comment
	    if (_.isEmpty(message.parentMessage)) {
	      chart.tidelineData.editDatum(message, 'utcTime');
	      chart.data(chart.tidelineData);
	      chart.emitter.emit('messageTimestampEdited', message);
	    }
	    return chart.tidelineData;
	  };

	  chart.closeMessage = function() {
	    chart.poolGroup().selectAll('.d3-rect-message').classed('hidden', true);
	  };

	  chart.drawBasalSettingsButton = function() {
	    var labelGroup = chart.svg().select('#tidelineLabels');
	    var labelTextBox = chart.options.hiddenPools.basalSettings ?
	      labelGroup.select('text#poolBasal_label_0')[0][0].getBBox() :
	      labelGroup.select('text#poolBasalSettings_label_0')[0][0].getBBox();
	    var verticalTranslation = chart.options.hiddenPools.basalSettings ?
	      poolBasal.yPosition() - labelTextBox.height :
	      poolBasalSettings.yPosition() - labelTextBox.height;
	    var fo = labelGroup.append('foreignObject')
	      .attr({
	        transform: 'translate(' + (chart.axisGutter() + labelTextBox.width) + ',' + verticalTranslation + ')'
	      });

	    var div = fo.append('xhtml:div')
	      .attr('class', 'd3-tabular-ui');

	    var icon = div.append('p')
	      .html(chart.options.hiddenPools.basalSettings ?
	        '<i class="icon-right"></i>' : '<i class="icon-down"></i>');

	    var iconWidth = icon.select('i')[0][0].getBoundingClientRect().width;

	    fo.attr({
	      width: icon.select('i')[0][0].getBoundingClientRect().width,
	      height: div[0][0].getBoundingClientRect().height
	    });

	    labelGroup.append('text')
	      .attr({
	        x: chart.axisGutter() + labelTextBox.width + iconWidth,
	        y: verticalTranslation + labelTextBox.height,
	        'class': 'd3-tabular-ui'
	      })
	      .text(chart.options.hiddenPools.basalSettings ? 'show rates' : 'hide rates');

	    if (chart.options.hiddenPools.basalSettings) {
	      labelGroup.selectAll('.d3-tabular-ui')
	        .on('click', function() {
	          chart.emitter.emit('showBasalSettings');
	        });
	    }
	    else {
	      labelGroup.selectAll('.d3-tabular-ui')
	        .on('click', function() {
	          chart.emitter.emit('hideBasalSettings');
	        });
	    }
	  };

	  chart.type = 'daily';

	  return create(el, options);
	}

	module.exports = chartDailyFactory;


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = window._;
	var bows = window.bows;
	var d3 = window.d3;

	var EventEmitter = __webpack_require__(59).EventEmitter;

	var tideline = window.tideline;
	var fill = tideline.plot.util.fill;
	var dt = tideline.data.util.datetime;

	// Create a 'Two Weeks' chart object that is a wrapper around Tideline components
	function chartWeeklyFactory(el, options) {
	  var log = bows('Weekly Factory');
	  options = options || {};
	  var defaults = {
	    'bgUnits': 'mg/dL'
	  };
	  _.defaults(options, defaults);

	  var emitter = new EventEmitter();
	  var chart = tideline.twoWeek(emitter);
	  chart.emitter = emitter;

	  var pools = [];

	  var smbgTime;

	  var create = function(el, options) {
	    if (!el) {
	      throw new Error('Sorry, you must provide a DOM element! :(');
	    }

	    var width = el.offsetWidth;
	    var height = el.offsetHeight;
	    if (!(width && height)) {
	      throw new Error('Chart element must have a set width and height ' +
	                      '(got: ' + width + ', ' + height + ')');
	    }

	    // basic chart set up
	    chart.id(el.id).width(width).height(height);

	    if (options.imagesBaseUrl) {
	      chart.imagesBaseUrl(options.imagesBaseUrl);
	      chart.dataGutter(8);
	    }

	    d3.select(el).call(chart);

	    return chart;
	  };

	  chart.load = function(tidelineData, datetime) {
	    var basalUtil = tidelineData.basalUtil;
	    var bolusUtil = tidelineData.bolusUtil;
	    var cbgUtil = tidelineData.cbgUtil;
	    var smbgUtil = tidelineData.smbgUtil;

	    var twoWeekData = tidelineData.twoWeekData || [];

	    if (!datetime) {
	      chart.data(twoWeekData);
	    }
	    else {
	      if (twoWeekData.length &&
	          Date.parse(datetime) > Date.parse(twoWeekData[twoWeekData.length - 1].normalTime)) {
	        datetime = twoWeekData[twoWeekData.length - 1].normalTime;
	      }
	      chart.data(twoWeekData, datetime);
	    }

	    chart.setup();
	    chart.legend({
	      main: 'Blood Glucose',
	      light: options.bgUnits
	    });

	    var days = chart.days;

	    // make pools for each day
	    days.forEach(function(day, i) {
	      var newPool = chart.newPool()
	        .id('poolBG_' + day, chart.daysGroup())
	        .index(chart.pools().indexOf(newPool))
	        .weight(1.0)
	        .gutterWeight(0.0);
	    });

	    chart.arrangePools();
	    chart.setTooltip().setAnnotation();

	    chart.setAxes().setNav().setScrollNav();

	    var fillEndpoints = [new Date('2014-01-01T00:00:00Z'), new Date('2014-01-02T00:00:00Z')];
	    var fillScale = d3.time.scale.utc()
	      .domain(fillEndpoints)
	      .range([chart.axisGutter() + chart.dataGutter(), chart.width() - chart.navGutter() - chart.dataGutter()]);

	    smbgTime = new tideline.plot.SMBGTime({emitter: emitter});

	    chart.pools().forEach(function(pool, i) {
	      var d = new Date(pool.id().replace('poolBG_', ''));
	      var dayOfTheWeek = d.getUTCDay();
	      var weekend = ((dayOfTheWeek === 0) || (dayOfTheWeek === 6));

	      pool.addPlotType('fill', fill(pool, {
	        gutter: {'top': 0.5, 'bottom': 0.5},
	        dataGutter: chart.dataGutter(),
	        fillClass: weekend ? 'd3-pool-weekend' : '',
	        x: function(t) { return dt.getMsFromMidnight(t); }
	      }), true, true);
	      pool.addPlotType('smbg', smbgTime.draw(pool), true, true);
	      chart.nativeTooltips().addGroup(pool, {
	        type: 'smbg'
	      });
	      pool.render(chart.daysGroup(), chart.dataPerDay[i]);
	    });

	    chart.poolStats.addPlotType('stats', tideline.plot.stats.widget(chart.poolStats, {
	      cbg: cbgUtil,
	      smbg: smbgUtil,
	      bolus: bolusUtil,
	      basal: basalUtil,
	      xPosition: 0,
	      yPosition: chart.poolStats.height() / 10,
	      emitter: emitter,
	      averageLabel: 'These two weeks',
	      puddleWeights : {
	        ratio: 1.1,
	        range: 1.2,
	        average: 1.0
	      }
	    }), false, false);

	    chart.poolStats.render(chart.poolGroup());

	    chart.annotations().addGroup(chart.svg().select('#' + chart.poolStats.id()), 'stats');

	    chart.navString();

	    return chart;
	  };

	  chart.showValues = function() {
	    smbgTime.showValues();
	  };

	  chart.hideValues = function() {
	    smbgTime.hideValues();
	  };

	  chart.type = 'weekly';

	  return create(el, options);
	}

	module.exports = chartWeeklyFactory;


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* 
	 * == BSD2 LICENSE ==
	 * Copyright (c) 2014, Tidepool Project
	 * 
	 * This program is free software; you can redistribute it and/or modify it under
	 * the terms of the associated License, which is identical to the BSD 2-Clause
	 * License as published by the Open Source Initiative at opensource.org.
	 * 
	 * This program is distributed in the hope that it will be useful, but WITHOUT
	 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
	 * FOR A PARTICULAR PURPOSE. See the License for more details.
	 * 
	 * You should have received a copy of the License along with this program; if
	 * not, you can obtain one from Tidepool Project at tidepool.org.
	 * == BSD2 LICENSE ==
	 */

	var _ = window._;
	var bows = window.bows;
	var d3 = window.d3;

	var EventEmitter = __webpack_require__(59).EventEmitter;

	var tideline = window.tideline;

	function settingsFactory(el, options) {
	  var log = bows('Settings Factory');
	  options = options || {};

	  var emitter = new EventEmitter();
	  var page = tideline.settings(emitter);
	  page.emitter = emitter;

	  var create = function(el, options) {
	    if (!el) {
	      throw new Error('Sorry, you must provide a DOM element! :(');
	    }

	    d3.select(el).call(page);

	    return page;
	  };

	  page.load = function(data) {
	    page.data(data).render();

	    return page;
	  };

	  page.type = 'settings';

	  return create(el, options);
	}

	module.exports = settingsFactory;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};


	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};


	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};


	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;


	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};


	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}


	function stylizeNoColor(str, styleType) {
	  return str;
	}


	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}


	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}


	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(62);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}


	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}


	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};


	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(134);

	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(63)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(61).crossfilter;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
	  var d3 = {
	    version: "3.4.8"
	  };
	  if (!Date.now) Date.now = function() {
	    return +new Date();
	  };
	  var d3_arraySlice = [].slice, d3_array = function(list) {
	    return d3_arraySlice.call(list);
	  };
	  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;
	  try {
	    d3_array(d3_documentElement.childNodes)[0].nodeType;
	  } catch (e) {
	    d3_array = function(list) {
	      var i = list.length, array = new Array(i);
	      while (i--) array[i] = list[i];
	      return array;
	    };
	  }
	  try {
	    d3_document.createElement("div").style.setProperty("opacity", 0, "");
	  } catch (error) {
	    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
	    d3_element_prototype.setAttribute = function(name, value) {
	      d3_element_setAttribute.call(this, name, value + "");
	    };
	    d3_element_prototype.setAttributeNS = function(space, local, value) {
	      d3_element_setAttributeNS.call(this, space, local, value + "");
	    };
	    d3_style_prototype.setProperty = function(name, value, priority) {
	      d3_style_setProperty.call(this, name, value + "", priority);
	    };
	  }
	  d3.ascending = d3_ascending;
	  function d3_ascending(a, b) {
	    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
	  }
	  d3.descending = function(a, b) {
	    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
	  };
	  d3.min = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
	    } else {
	      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
	    }
	    return a;
	  };
	  d3.max = function(array, f) {
	    var i = -1, n = array.length, a, b;
	    if (arguments.length === 1) {
	      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
	    } else {
	      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
	    }
	    return a;
	  };
	  d3.extent = function(array, f) {
	    var i = -1, n = array.length, a, b, c;
	    if (arguments.length === 1) {
	      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;
	      while (++i < n) if ((b = array[i]) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    } else {
	      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
	      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
	        if (a > b) a = b;
	        if (c < b) c = b;
	      }
	    }
	    return [ a, c ];
	  };
	  d3.sum = function(array, f) {
	    var s = 0, n = array.length, a, i = -1;
	    if (arguments.length === 1) {
	      while (++i < n) if (!isNaN(a = +array[i])) s += a;
	    } else {
	      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;
	    }
	    return s;
	  };
	  function d3_number(x) {
	    return x != null && !isNaN(x);
	  }
	  d3.mean = function(array, f) {
	    var s = 0, n = array.length, a, i = -1, j = n;
	    if (arguments.length === 1) {
	      while (++i < n) if (d3_number(a = array[i])) s += a; else --j;
	    } else {
	      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) s += a; else --j;
	    }
	    return j ? s / j : undefined;
	  };
	  d3.quantile = function(values, p) {
	    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
	    return e ? v + e * (values[h] - v) : v;
	  };
	  d3.median = function(array, f) {
	    if (arguments.length > 1) array = array.map(f);
	    array = array.filter(d3_number);
	    return array.length ? d3.quantile(array.sort(d3_ascending), .5) : undefined;
	  };
	  function d3_bisector(compare) {
	    return {
	      left: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
	        }
	        return lo;
	      },
	      right: function(a, x, lo, hi) {
	        if (arguments.length < 3) lo = 0;
	        if (arguments.length < 4) hi = a.length;
	        while (lo < hi) {
	          var mid = lo + hi >>> 1;
	          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
	        }
	        return lo;
	      }
	    };
	  }
	  var d3_bisect = d3_bisector(d3_ascending);
	  d3.bisectLeft = d3_bisect.left;
	  d3.bisect = d3.bisectRight = d3_bisect.right;
	  d3.bisector = function(f) {
	    return d3_bisector(f.length === 1 ? function(d, x) {
	      return d3_ascending(f(d), x);
	    } : f);
	  };
	  d3.shuffle = function(array) {
	    var m = array.length, t, i;
	    while (m) {
	      i = Math.random() * m-- | 0;
	      t = array[m], array[m] = array[i], array[i] = t;
	    }
	    return array;
	  };
	  d3.permute = function(array, indexes) {
	    var i = indexes.length, permutes = new Array(i);
	    while (i--) permutes[i] = array[indexes[i]];
	    return permutes;
	  };
	  d3.pairs = function(array) {
	    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
	    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
	    return pairs;
	  };
	  d3.zip = function() {
	    if (!(n = arguments.length)) return [];
	    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
	      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
	        zip[j] = arguments[j][i];
	      }
	    }
	    return zips;
	  };
	  function d3_zipLength(d) {
	    return d.length;
	  }
	  d3.transpose = function(matrix) {
	    return d3.zip.apply(d3, matrix);
	  };
	  d3.keys = function(map) {
	    var keys = [];
	    for (var key in map) keys.push(key);
	    return keys;
	  };
	  d3.values = function(map) {
	    var values = [];
	    for (var key in map) values.push(map[key]);
	    return values;
	  };
	  d3.entries = function(map) {
	    var entries = [];
	    for (var key in map) entries.push({
	      key: key,
	      value: map[key]
	    });
	    return entries;
	  };
	  d3.merge = function(arrays) {
	    var n = arrays.length, m, i = -1, j = 0, merged, array;
	    while (++i < n) j += arrays[i].length;
	    merged = new Array(j);
	    while (--n >= 0) {
	      array = arrays[n];
	      m = array.length;
	      while (--m >= 0) {
	        merged[--j] = array[m];
	      }
	    }
	    return merged;
	  };
	  var abs = Math.abs;
	  d3.range = function(start, stop, step) {
	    if (arguments.length < 3) {
	      step = 1;
	      if (arguments.length < 2) {
	        stop = start;
	        start = 0;
	      }
	    }
	    if ((stop - start) / step === Infinity) throw new Error("infinite range");
	    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
	    start *= k, stop *= k, step *= k;
	    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
	    return range;
	  };
	  function d3_range_integerScale(x) {
	    var k = 1;
	    while (x * k % 1) k *= 10;
	    return k;
	  }
	  function d3_class(ctor, properties) {
	    try {
	      for (var key in properties) {
	        Object.defineProperty(ctor.prototype, key, {
	          value: properties[key],
	          enumerable: false
	        });
	      }
	    } catch (e) {
	      ctor.prototype = properties;
	    }
	  }
	  d3.map = function(object) {
	    var map = new d3_Map();
	    if (object instanceof d3_Map) object.forEach(function(key, value) {
	      map.set(key, value);
	    }); else for (var key in object) map.set(key, object[key]);
	    return map;
	  };
	  function d3_Map() {}
	  d3_class(d3_Map, {
	    has: d3_map_has,
	    get: function(key) {
	      return this[d3_map_prefix + key];
	    },
	    set: function(key, value) {
	      return this[d3_map_prefix + key] = value;
	    },
	    remove: d3_map_remove,
	    keys: d3_map_keys,
	    values: function() {
	      var values = [];
	      this.forEach(function(key, value) {
	        values.push(value);
	      });
	      return values;
	    },
	    entries: function() {
	      var entries = [];
	      this.forEach(function(key, value) {
	        entries.push({
	          key: key,
	          value: value
	        });
	      });
	      return entries;
	    },
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);
	    }
	  });
	  var d3_map_prefix = "\x00", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);
	  function d3_map_has(key) {
	    return d3_map_prefix + key in this;
	  }
	  function d3_map_remove(key) {
	    key = d3_map_prefix + key;
	    return key in this && delete this[key];
	  }
	  function d3_map_keys() {
	    var keys = [];
	    this.forEach(function(key) {
	      keys.push(key);
	    });
	    return keys;
	  }
	  function d3_map_size() {
	    var size = 0;
	    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) ++size;
	    return size;
	  }
	  function d3_map_empty() {
	    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) return false;
	    return true;
	  }
	  d3.nest = function() {
	    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
	    function map(mapType, array, depth) {
	      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
	      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
	      while (++i < n) {
	        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
	          values.push(object);
	        } else {
	          valuesByKey.set(keyValue, [ object ]);
	        }
	      }
	      if (mapType) {
	        object = mapType();
	        setter = function(keyValue, values) {
	          object.set(keyValue, map(mapType, values, depth));
	        };
	      } else {
	        object = {};
	        setter = function(keyValue, values) {
	          object[keyValue] = map(mapType, values, depth);
	        };
	      }
	      valuesByKey.forEach(setter);
	      return object;
	    }
	    function entries(map, depth) {
	      if (depth >= keys.length) return map;
	      var array = [], sortKey = sortKeys[depth++];
	      map.forEach(function(key, keyMap) {
	        array.push({
	          key: key,
	          values: entries(keyMap, depth)
	        });
	      });
	      return sortKey ? array.sort(function(a, b) {
	        return sortKey(a.key, b.key);
	      }) : array;
	    }
	    nest.map = function(array, mapType) {
	      return map(mapType, array, 0);
	    };
	    nest.entries = function(array) {
	      return entries(map(d3.map, array, 0), 0);
	    };
	    nest.key = function(d) {
	      keys.push(d);
	      return nest;
	    };
	    nest.sortKeys = function(order) {
	      sortKeys[keys.length - 1] = order;
	      return nest;
	    };
	    nest.sortValues = function(order) {
	      sortValues = order;
	      return nest;
	    };
	    nest.rollup = function(f) {
	      rollup = f;
	      return nest;
	    };
	    return nest;
	  };
	  d3.set = function(array) {
	    var set = new d3_Set();
	    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
	    return set;
	  };
	  function d3_Set() {}
	  d3_class(d3_Set, {
	    has: d3_map_has,
	    add: function(value) {
	      this[d3_map_prefix + value] = true;
	      return value;
	    },
	    remove: function(value) {
	      value = d3_map_prefix + value;
	      return value in this && delete this[value];
	    },
	    values: d3_map_keys,
	    size: d3_map_size,
	    empty: d3_map_empty,
	    forEach: function(f) {
	      for (var value in this) if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));
	    }
	  });
	  d3.behavior = {};
	  d3.rebind = function(target, source) {
	    var i = 1, n = arguments.length, method;
	    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
	    return target;
	  };
	  function d3_rebind(target, source, method) {
	    return function() {
	      var value = method.apply(source, arguments);
	      return value === source ? target : value;
	    };
	  }
	  function d3_vendorSymbol(object, name) {
	    if (name in object) return name;
	    name = name.charAt(0).toUpperCase() + name.substring(1);
	    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
	      var prefixName = d3_vendorPrefixes[i] + name;
	      if (prefixName in object) return prefixName;
	    }
	  }
	  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
	  function d3_noop() {}
	  d3.dispatch = function() {
	    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    return dispatch;
	  };
	  function d3_dispatch() {}
	  d3_dispatch.prototype.on = function(type, listener) {
	    var i = type.indexOf("."), name = "";
	    if (i >= 0) {
	      name = type.substring(i + 1);
	      type = type.substring(0, i);
	    }
	    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
	    if (arguments.length === 2) {
	      if (listener == null) for (type in this) {
	        if (this.hasOwnProperty(type)) this[type].on(name, null);
	      }
	      return this;
	    }
	  };
	  function d3_dispatch_event(dispatch) {
	    var listeners = [], listenerByName = new d3_Map();
	    function event() {
	      var z = listeners, i = -1, n = z.length, l;
	      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
	      return dispatch;
	    }
	    event.on = function(name, listener) {
	      var l = listenerByName.get(name), i;
	      if (arguments.length < 2) return l && l.on;
	      if (l) {
	        l.on = null;
	        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
	        listenerByName.remove(name);
	      }
	      if (listener) listeners.push(listenerByName.set(name, {
	        on: listener
	      }));
	      return dispatch;
	    };
	    return event;
	  }
	  d3.event = null;
	  function d3_eventPreventDefault() {
	    d3.event.preventDefault();
	  }
	  function d3_eventSource() {
	    var e = d3.event, s;
	    while (s = e.sourceEvent) e = s;
	    return e;
	  }
	  function d3_eventDispatch(target) {
	    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
	    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
	    dispatch.of = function(thiz, argumentz) {
	      return function(e1) {
	        try {
	          var e0 = e1.sourceEvent = d3.event;
	          e1.target = target;
	          d3.event = e1;
	          dispatch[e1.type].apply(thiz, argumentz);
	        } finally {
	          d3.event = e0;
	        }
	      };
	    };
	    return dispatch;
	  }
	  d3.requote = function(s) {
	    return s.replace(d3_requote_re, "\\$&");
	  };
	  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
	  var d3_subclass = {}.__proto__ ? function(object, prototype) {
	    object.__proto__ = prototype;
	  } : function(object, prototype) {
	    for (var property in prototype) object[property] = prototype[property];
	  };
	  function d3_selection(groups) {
	    d3_subclass(groups, d3_selectionPrototype);
	    return groups;
	  }
	  var d3_select = function(s, n) {
	    return n.querySelector(s);
	  }, d3_selectAll = function(s, n) {
	    return n.querySelectorAll(s);
	  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")], d3_selectMatches = function(n, s) {
	    return d3_selectMatcher.call(n, s);
	  };
	  if (typeof Sizzle === "function") {
	    d3_select = function(s, n) {
	      return Sizzle(s, n)[0] || null;
	    };
	    d3_selectAll = Sizzle;
	    d3_selectMatches = Sizzle.matchesSelector;
	  }
	  d3.selection = function() {
	    return d3_selectionRoot;
	  };
	  var d3_selectionPrototype = d3.selection.prototype = [];
	  d3_selectionPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, group, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
	          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selector(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_select(selector, this);
	    };
	  }
	  d3_selectionPrototype.selectAll = function(selector) {
	    var subgroups = [], subgroup, node;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
	          subgroup.parentNode = node;
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_selectorAll(selector) {
	    return typeof selector === "function" ? selector : function() {
	      return d3_selectAll(selector, this);
	    };
	  }
	  var d3_nsPrefix = {
	    svg: "http://www.w3.org/2000/svg",
	    xhtml: "http://www.w3.org/1999/xhtml",
	    xlink: "http://www.w3.org/1999/xlink",
	    xml: "http://www.w3.org/XML/1998/namespace",
	    xmlns: "http://www.w3.org/2000/xmlns/"
	  };
	  d3.ns = {
	    prefix: d3_nsPrefix,
	    qualify: function(name) {
	      var i = name.indexOf(":"), prefix = name;
	      if (i >= 0) {
	        prefix = name.substring(0, i);
	        name = name.substring(i + 1);
	      }
	      return d3_nsPrefix.hasOwnProperty(prefix) ? {
	        space: d3_nsPrefix[prefix],
	        local: name
	      } : name;
	    }
	  };
	  d3_selectionPrototype.attr = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node();
	        name = d3.ns.qualify(name);
	        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
	      }
	      for (value in name) this.each(d3_selection_attr(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_attr(name, value));
	  };
	  function d3_selection_attr(name, value) {
	    name = d3.ns.qualify(name);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrConstant() {
	      this.setAttribute(name, value);
	    }
	    function attrConstantNS() {
	      this.setAttributeNS(name.space, name.local, value);
	    }
	    function attrFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
	    }
	    function attrFunctionNS() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
	    }
	    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
	  }
	  function d3_collapse(s) {
	    return s.trim().replace(/\s+/g, " ");
	  }
	  d3_selectionPrototype.classed = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") {
	        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
	        if (value = node.classList) {
	          while (++i < n) if (!value.contains(name[i])) return false;
	        } else {
	          value = node.getAttribute("class");
	          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
	        }
	        return true;
	      }
	      for (value in name) this.each(d3_selection_classed(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_classed(name, value));
	  };
	  function d3_selection_classedRe(name) {
	    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
	  }
	  function d3_selection_classes(name) {
	    return name.trim().split(/^|\s+/);
	  }
	  function d3_selection_classed(name, value) {
	    name = d3_selection_classes(name).map(d3_selection_classedName);
	    var n = name.length;
	    function classedConstant() {
	      var i = -1;
	      while (++i < n) name[i](this, value);
	    }
	    function classedFunction() {
	      var i = -1, x = value.apply(this, arguments);
	      while (++i < n) name[i](this, x);
	    }
	    return typeof value === "function" ? classedFunction : classedConstant;
	  }
	  function d3_selection_classedName(name) {
	    var re = d3_selection_classedRe(name);
	    return function(node, value) {
	      if (c = node.classList) return value ? c.add(name) : c.remove(name);
	      var c = node.getAttribute("class") || "";
	      if (value) {
	        re.lastIndex = 0;
	        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
	      } else {
	        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
	      }
	    };
	  }
	  d3_selectionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
	        return this;
	      }
	      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
	      priority = "";
	    }
	    return this.each(d3_selection_style(name, value, priority));
	  };
	  function d3_selection_style(name, value, priority) {
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleConstant() {
	      this.style.setProperty(name, value, priority);
	    }
	    function styleFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
	    }
	    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
	  }
	  d3_selectionPrototype.property = function(name, value) {
	    if (arguments.length < 2) {
	      if (typeof name === "string") return this.node()[name];
	      for (value in name) this.each(d3_selection_property(value, name[value]));
	      return this;
	    }
	    return this.each(d3_selection_property(name, value));
	  };
	  function d3_selection_property(name, value) {
	    function propertyNull() {
	      delete this[name];
	    }
	    function propertyConstant() {
	      this[name] = value;
	    }
	    function propertyFunction() {
	      var x = value.apply(this, arguments);
	      if (x == null) delete this[name]; else this[name] = x;
	    }
	    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
	  }
	  d3_selectionPrototype.text = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.textContent = v == null ? "" : v;
	    } : value == null ? function() {
	      this.textContent = "";
	    } : function() {
	      this.textContent = value;
	    }) : this.node().textContent;
	  };
	  d3_selectionPrototype.html = function(value) {
	    return arguments.length ? this.each(typeof value === "function" ? function() {
	      var v = value.apply(this, arguments);
	      this.innerHTML = v == null ? "" : v;
	    } : value == null ? function() {
	      this.innerHTML = "";
	    } : function() {
	      this.innerHTML = value;
	    }) : this.node().innerHTML;
	  };
	  d3_selectionPrototype.append = function(name) {
	    name = d3_selection_creator(name);
	    return this.select(function() {
	      return this.appendChild(name.apply(this, arguments));
	    });
	  };
	  function d3_selection_creator(name) {
	    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function() {
	      return this.ownerDocument.createElementNS(name.space, name.local);
	    } : function() {
	      return this.ownerDocument.createElementNS(this.namespaceURI, name);
	    };
	  }
	  d3_selectionPrototype.insert = function(name, before) {
	    name = d3_selection_creator(name);
	    before = d3_selection_selector(before);
	    return this.select(function() {
	      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
	    });
	  };
	  d3_selectionPrototype.remove = function() {
	    return this.each(function() {
	      var parent = this.parentNode;
	      if (parent) parent.removeChild(this);
	    });
	  };
	  d3_selectionPrototype.data = function(value, key) {
	    var i = -1, n = this.length, group, node;
	    if (!arguments.length) {
	      value = new Array(n = (group = this[0]).length);
	      while (++i < n) {
	        if (node = group[i]) {
	          value[i] = node.__data__;
	        }
	      }
	      return value;
	    }
	    function bind(group, groupData) {
	      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
	      if (key) {
	        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;
	        for (i = -1; ++i < n; ) {
	          keyValue = key.call(node = group[i], node.__data__, i);
	          if (nodeByKeyValue.has(keyValue)) {
	            exitNodes[i] = node;
	          } else {
	            nodeByKeyValue.set(keyValue, node);
	          }
	          keyValues.push(keyValue);
	        }
	        for (i = -1; ++i < m; ) {
	          keyValue = key.call(groupData, nodeData = groupData[i], i);
	          if (node = nodeByKeyValue.get(keyValue)) {
	            updateNodes[i] = node;
	            node.__data__ = nodeData;
	          } else if (!dataByKeyValue.has(keyValue)) {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	          dataByKeyValue.set(keyValue, nodeData);
	          nodeByKeyValue.remove(keyValue);
	        }
	        for (i = -1; ++i < n; ) {
	          if (nodeByKeyValue.has(keyValues[i])) {
	            exitNodes[i] = group[i];
	          }
	        }
	      } else {
	        for (i = -1; ++i < n0; ) {
	          node = group[i];
	          nodeData = groupData[i];
	          if (node) {
	            node.__data__ = nodeData;
	            updateNodes[i] = node;
	          } else {
	            enterNodes[i] = d3_selection_dataNode(nodeData);
	          }
	        }
	        for (;i < m; ++i) {
	          enterNodes[i] = d3_selection_dataNode(groupData[i]);
	        }
	        for (;i < n; ++i) {
	          exitNodes[i] = group[i];
	        }
	      }
	      enterNodes.update = updateNodes;
	      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
	      enter.push(enterNodes);
	      update.push(updateNodes);
	      exit.push(exitNodes);
	    }
	    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
	    if (typeof value === "function") {
	      while (++i < n) {
	        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
	      }
	    } else {
	      while (++i < n) {
	        bind(group = this[i], value);
	      }
	    }
	    update.enter = function() {
	      return enter;
	    };
	    update.exit = function() {
	      return exit;
	    };
	    return update;
	  };
	  function d3_selection_dataNode(data) {
	    return {
	      __data__: data
	    };
	  }
	  d3_selectionPrototype.datum = function(value) {
	    return arguments.length ? this.property("__data__", value) : this.property("__data__");
	  };
	  d3_selectionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = (group = this[j]).parentNode;
	      for (var i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  function d3_selection_filter(selector) {
	    return function() {
	      return d3_selectMatches(this, selector);
	    };
	  }
	  d3_selectionPrototype.order = function() {
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
	        if (node = group[i]) {
	          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
	          next = node;
	        }
	      }
	    }
	    return this;
	  };
	  d3_selectionPrototype.sort = function(comparator) {
	    comparator = d3_selection_sortComparator.apply(this, arguments);
	    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
	    return this.order();
	  };
	  function d3_selection_sortComparator(comparator) {
	    if (!arguments.length) comparator = d3_ascending;
	    return function(a, b) {
	      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
	    };
	  }
	  d3_selectionPrototype.each = function(callback) {
	    return d3_selection_each(this, function(node, i, j) {
	      callback.call(node, node.__data__, i, j);
	    });
	  };
	  function d3_selection_each(groups, callback) {
	    for (var j = 0, m = groups.length; j < m; j++) {
	      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
	        if (node = group[i]) callback(node, i, j);
	      }
	    }
	    return groups;
	  }
	  d3_selectionPrototype.call = function(callback) {
	    var args = d3_array(arguments);
	    callback.apply(args[0] = this, args);
	    return this;
	  };
	  d3_selectionPrototype.empty = function() {
	    return !this.node();
	  };
	  d3_selectionPrototype.node = function() {
	    for (var j = 0, m = this.length; j < m; j++) {
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        var node = group[i];
	        if (node) return node;
	      }
	    }
	    return null;
	  };
	  d3_selectionPrototype.size = function() {
	    var n = 0;
	    this.each(function() {
	      ++n;
	    });
	    return n;
	  };
	  function d3_selection_enter(selection) {
	    d3_subclass(selection, d3_selection_enterPrototype);
	    return selection;
	  }
	  var d3_selection_enterPrototype = [];
	  d3.selection.enter = d3_selection_enter;
	  d3.selection.enter.prototype = d3_selection_enterPrototype;
	  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
	  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
	  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
	  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
	  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
	  d3_selection_enterPrototype.select = function(selector) {
	    var subgroups = [], subgroup, subnode, upgroup, group, node;
	    for (var j = -1, m = this.length; ++j < m; ) {
	      upgroup = (group = this[j]).update;
	      subgroups.push(subgroup = []);
	      subgroup.parentNode = group.parentNode;
	      for (var i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
	          subnode.__data__ = node.__data__;
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_selection(subgroups);
	  };
	  d3_selection_enterPrototype.insert = function(name, before) {
	    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
	    return d3_selectionPrototype.insert.call(this, name, before);
	  };
	  function d3_selection_enterInsertBefore(enter) {
	    var i0, j0;
	    return function(d, i, j) {
	      var group = enter[j].update, n = group.length, node;
	      if (j != j0) j0 = j, i0 = 0;
	      if (i >= i0) i0 = i + 1;
	      while (!(node = group[i0]) && ++i0 < n) ;
	      return node;
	    };
	  }
	  d3_selectionPrototype.transition = function() {
	    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {
	      time: Date.now(),
	      ease: d3_ease_cubicInOut,
	      delay: 0,
	      duration: 250
	    };
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) d3_transitionNode(node, i, id, transition);
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, id);
	  };
	  d3_selectionPrototype.interrupt = function() {
	    return this.each(d3_selection_interrupt);
	  };
	  function d3_selection_interrupt() {
	    var lock = this.__transition__;
	    if (lock) ++lock.active;
	  }
	  d3.select = function(node) {
	    var group = [ typeof node === "string" ? d3_select(node, d3_document) : node ];
	    group.parentNode = d3_documentElement;
	    return d3_selection([ group ]);
	  };
	  d3.selectAll = function(nodes) {
	    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
	    group.parentNode = d3_documentElement;
	    return d3_selection([ group ]);
	  };
	  var d3_selectionRoot = d3.select(d3_documentElement);
	  d3_selectionPrototype.on = function(type, listener, capture) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof type !== "string") {
	        if (n < 2) listener = false;
	        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
	        return this;
	      }
	      if (n < 2) return (n = this.node()["__on" + type]) && n._;
	      capture = false;
	    }
	    return this.each(d3_selection_on(type, listener, capture));
	  };
	  function d3_selection_on(type, listener, capture) {
	    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
	    if (i > 0) type = type.substring(0, i);
	    var filter = d3_selection_onFilters.get(type);
	    if (filter) type = filter, wrap = d3_selection_onFilter;
	    function onRemove() {
	      var l = this[name];
	      if (l) {
	        this.removeEventListener(type, l, l.$);
	        delete this[name];
	      }
	    }
	    function onAdd() {
	      var l = wrap(listener, d3_array(arguments));
	      onRemove.call(this);
	      this.addEventListener(type, this[name] = l, l.$ = capture);
	      l._ = listener;
	    }
	    function removeAll() {
	      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
	      for (var name in this) {
	        if (match = name.match(re)) {
	          var l = this[name];
	          this.removeEventListener(match[1], l, l.$);
	          delete this[name];
	        }
	      }
	    }
	    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
	  }
	  var d3_selection_onFilters = d3.map({
	    mouseenter: "mouseover",
	    mouseleave: "mouseout"
	  });
	  d3_selection_onFilters.forEach(function(k) {
	    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
	  });
	  function d3_selection_onListener(listener, argumentz) {
	    return function(e) {
	      var o = d3.event;
	      d3.event = e;
	      argumentz[0] = this.__data__;
	      try {
	        listener.apply(this, argumentz);
	      } finally {
	        d3.event = o;
	      }
	    };
	  }
	  function d3_selection_onFilter(listener, argumentz) {
	    var l = d3_selection_onListener(listener, argumentz);
	    return function(e) {
	      var target = this, related = e.relatedTarget;
	      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
	        l.call(target, e);
	      }
	    };
	  }
	  var d3_event_dragSelect = "onselectstart" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, "userSelect"), d3_event_dragId = 0;
	  function d3_event_dragSuppress() {
	    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
	    if (d3_event_dragSelect) {
	      var style = d3_documentElement.style, select = style[d3_event_dragSelect];
	      style[d3_event_dragSelect] = "none";
	    }
	    return function(suppressClick) {
	      w.on(name, null);
	      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
	      if (suppressClick) {
	        function off() {
	          w.on(click, null);
	        }
	        w.on(click, function() {
	          d3_eventPreventDefault();
	          off();
	        }, true);
	        setTimeout(off, 0);
	      }
	    };
	  }
	  d3.mouse = function(container) {
	    return d3_mousePoint(container, d3_eventSource());
	  };
	  function d3_mousePoint(container, e) {
	    if (e.changedTouches) e = e.changedTouches[0];
	    var svg = container.ownerSVGElement || container;
	    if (svg.createSVGPoint) {
	      var point = svg.createSVGPoint();
	      point.x = e.clientX, point.y = e.clientY;
	      point = point.matrixTransform(container.getScreenCTM().inverse());
	      return [ point.x, point.y ];
	    }
	    var rect = container.getBoundingClientRect();
	    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
	  }
	  d3.touches = function(container, touches) {
	    if (arguments.length < 2) touches = d3_eventSource().touches;
	    return touches ? d3_array(touches).map(function(touch) {
	      var point = d3_mousePoint(container, touch);
	      point.identifier = touch.identifier;
	      return point;
	    }) : [];
	  };
	  d3.behavior.drag = function() {
	    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, "touchmove", "touchend");
	    function drag() {
	      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
	    }
	    function dragstart(id, position, subject, move, end) {
	      return function() {
	        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);
	        if (origin) {
	          dragOffset = origin.apply(that, arguments);
	          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
	        } else {
	          dragOffset = [ 0, 0 ];
	        }
	        dispatch({
	          type: "dragstart"
	        });
	        function moved() {
	          var position1 = position(parent, dragId), dx, dy;
	          if (!position1) return;
	          dx = position1[0] - position0[0];
	          dy = position1[1] - position0[1];
	          dragged |= dx | dy;
	          position0 = position1;
	          dispatch({
	            type: "drag",
	            x: position1[0] + dragOffset[0],
	            y: position1[1] + dragOffset[1],
	            dx: dx,
	            dy: dy
	          });
	        }
	        function ended() {
	          if (!position(parent, dragId)) return;
	          dragSubject.on(move + dragName, null).on(end + dragName, null);
	          dragRestore(dragged && d3.event.target === target);
	          dispatch({
	            type: "dragend"
	          });
	        }
	      };
	    }
	    drag.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return drag;
	    };
	    return d3.rebind(drag, event, "on");
	  };
	  function d3_behavior_dragTouchId() {
	    return d3.event.changedTouches[0].identifier;
	  }
	  function d3_behavior_dragTouchSubject() {
	    return d3.event.target;
	  }
	  function d3_behavior_dragMouseSubject() {
	    return d3_window;
	  }
	  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;
	  function d3_sgn(x) {
	    return x > 0 ? 1 : x < 0 ? -1 : 0;
	  }
	  function d3_cross2d(a, b, c) {
	    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
	  }
	  function d3_acos(x) {
	    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
	  }
	  function d3_asin(x) {
	    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
	  }
	  function d3_sinh(x) {
	    return ((x = Math.exp(x)) - 1 / x) / 2;
	  }
	  function d3_cosh(x) {
	    return ((x = Math.exp(x)) + 1 / x) / 2;
	  }
	  function d3_tanh(x) {
	    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
	  }
	  function d3_haversin(x) {
	    return (x = Math.sin(x / 2)) * x;
	  }
	  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
	  d3.interpolateZoom = function(p0, p1) {
	    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];
	    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;
	    function interpolate(t) {
	      var s = t * S;
	      if (dr) {
	        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
	        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
	      }
	      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];
	    }
	    interpolate.duration = S * 1e3;
	    return interpolate;
	  };
	  d3.behavior.zoom = function() {
	    var view = {
	      x: 0,
	      y: 0,
	      k: 1
	    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
	    function zoom(g) {
	      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on(mousemove, mousewheelreset).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
	    }
	    zoom.event = function(g) {
	      g.each(function() {
	        var dispatch = event.of(this, arguments), view1 = view;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.zoom", function() {
	            view = this.__chart__ || {
	              x: 0,
	              y: 0,
	              k: 1
	            };
	            zoomstarted(dispatch);
	          }).tween("zoom:zoom", function() {
	            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
	            return function(t) {
	              var l = i(t), k = dx / l[2];
	              this.__chart__ = view = {
	                x: cx - l[0] * k,
	                y: cy - l[1] * k,
	                k: k
	              };
	              zoomed(dispatch);
	            };
	          }).each("end.zoom", function() {
	            zoomended(dispatch);
	          });
	        } else {
	          this.__chart__ = view;
	          zoomstarted(dispatch);
	          zoomed(dispatch);
	          zoomended(dispatch);
	        }
	      });
	    };
	    zoom.translate = function(_) {
	      if (!arguments.length) return [ view.x, view.y ];
	      view = {
	        x: +_[0],
	        y: +_[1],
	        k: view.k
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scale = function(_) {
	      if (!arguments.length) return view.k;
	      view = {
	        x: view.x,
	        y: view.y,
	        k: +_
	      };
	      rescale();
	      return zoom;
	    };
	    zoom.scaleExtent = function(_) {
	      if (!arguments.length) return scaleExtent;
	      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.center = function(_) {
	      if (!arguments.length) return center;
	      center = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.size = function(_) {
	      if (!arguments.length) return size;
	      size = _ && [ +_[0], +_[1] ];
	      return zoom;
	    };
	    zoom.x = function(z) {
	      if (!arguments.length) return x1;
	      x1 = z;
	      x0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    zoom.y = function(z) {
	      if (!arguments.length) return y1;
	      y1 = z;
	      y0 = z.copy();
	      view = {
	        x: 0,
	        y: 0,
	        k: 1
	      };
	      return zoom;
	    };
	    function location(p) {
	      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
	    }
	    function point(l) {
	      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
	    }
	    function scaleTo(s) {
	      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
	    }
	    function translateTo(p, l) {
	      l = point(l);
	      view.x += p[0] - l[0];
	      view.y += p[1] - l[1];
	    }
	    function rescale() {
	      if (x1) x1.domain(x0.range().map(function(x) {
	        return (x - view.x) / view.k;
	      }).map(x0.invert));
	      if (y1) y1.domain(y0.range().map(function(y) {
	        return (y - view.y) / view.k;
	      }).map(y0.invert));
	    }
	    function zoomstarted(dispatch) {
	      dispatch({
	        type: "zoomstart"
	      });
	    }
	    function zoomed(dispatch) {
	      rescale();
	      dispatch({
	        type: "zoom",
	        scale: view.k,
	        translate: [ view.x, view.y ]
	      });
	    }
	    function zoomended(dispatch) {
	      dispatch({
	        type: "zoomend"
	      });
	    }
	    function mousedowned() {
	      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();
	      d3_selection_interrupt.call(that);
	      zoomstarted(dispatch);
	      function moved() {
	        dragged = 1;
	        translateTo(d3.mouse(that), location0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        subject.on(mousemove, d3_window === that ? mousewheelreset : null).on(mouseup, null);
	        dragRestore(dragged && d3.event.target === target);
	        zoomended(dispatch);
	      }
	    }
	    function touchstarted() {
	      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();
	      d3_selection_interrupt.call(that);
	      started();
	      zoomstarted(dispatch);
	      function relocate() {
	        var touches = d3.touches(that);
	        scale0 = view.k;
	        touches.forEach(function(t) {
	          if (t.identifier in locations0) locations0[t.identifier] = location(t);
	        });
	        return touches;
	      }
	      function started() {
	        var target = d3.event.target;
	        d3.select(target).on(touchmove, moved).on(touchend, ended);
	        targets.push(target);
	        var changed = d3.event.changedTouches;
	        for (var i = 0, n = changed.length; i < n; ++i) {
	          locations0[changed[i].identifier] = null;
	        }
	        var touches = relocate(), now = Date.now();
	        if (touches.length === 1) {
	          if (now - touchtime < 500) {
	            var p = touches[0], l = locations0[p.identifier];
	            scaleTo(view.k * 2);
	            translateTo(p, l);
	            d3_eventPreventDefault();
	            zoomed(dispatch);
	          }
	          touchtime = now;
	        } else if (touches.length > 1) {
	          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
	          distance0 = dx * dx + dy * dy;
	        }
	      }
	      function moved() {
	        var touches = d3.touches(that), p0, l0, p1, l1;
	        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
	          p1 = touches[i];
	          if (l1 = locations0[p1.identifier]) {
	            if (l0) break;
	            p0 = p1, l0 = l1;
	          }
	        }
	        if (l1) {
	          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
	          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
	          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
	          scaleTo(scale1 * scale0);
	        }
	        touchtime = null;
	        translateTo(p0, l0);
	        zoomed(dispatch);
	      }
	      function ended() {
	        if (d3.event.touches.length) {
	          var changed = d3.event.changedTouches;
	          for (var i = 0, n = changed.length; i < n; ++i) {
	            delete locations0[changed[i].identifier];
	          }
	          for (var identifier in locations0) {
	            return void relocate();
	          }
	        }
	        d3.selectAll(targets).on(zoomName, null);
	        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
	        dragRestore();
	        zoomended(dispatch);
	      }
	    }
	    function mousewheeled() {
	      var dispatch = event.of(this, arguments);
	      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
	      zoomstarted(dispatch);
	      mousewheelTimer = setTimeout(function() {
	        mousewheelTimer = null;
	        zoomended(dispatch);
	      }, 50);
	      d3_eventPreventDefault();
	      var point = center || d3.mouse(this);
	      if (!translate0) translate0 = location(point);
	      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
	      translateTo(point, translate0);
	      zoomed(dispatch);
	    }
	    function mousewheelreset() {
	      translate0 = null;
	    }
	    function dblclicked() {
	      var dispatch = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;
	      zoomstarted(dispatch);
	      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));
	      translateTo(p, l);
	      zoomed(dispatch);
	      zoomended(dispatch);
	    }
	    return d3.rebind(zoom, event, "on");
	  };
	  var d3_behavior_zoomInfinity = [ 0, Infinity ];
	  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
	  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
	    return d3.event.wheelDelta;
	  }, "mousewheel") : (d3_behavior_zoomDelta = function() {
	    return -d3.event.detail;
	  }, "MozMousePixelScroll");
	  function d3_Color() {}
	  d3_Color.prototype.toString = function() {
	    return this.rgb() + "";
	  };
	  d3.hsl = function(h, s, l) {
	    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);
	  };
	  function d3_hsl(h, s, l) {
	    return new d3_Hsl(h, s, l);
	  }
	  function d3_Hsl(h, s, l) {
	    this.h = h;
	    this.s = s;
	    this.l = l;
	  }
	  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();
	  d3_hslPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return d3_hsl(this.h, this.s, this.l / k);
	  };
	  d3_hslPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return d3_hsl(this.h, this.s, k * this.l);
	  };
	  d3_hslPrototype.rgb = function() {
	    return d3_hsl_rgb(this.h, this.s, this.l);
	  };
	  function d3_hsl_rgb(h, s, l) {
	    var m1, m2;
	    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
	    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
	    l = l < 0 ? 0 : l > 1 ? 1 : l;
	    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
	    m1 = 2 * l - m2;
	    function v(h) {
	      if (h > 360) h -= 360; else if (h < 0) h += 360;
	      if (h < 60) return m1 + (m2 - m1) * h / 60;
	      if (h < 180) return m2;
	      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
	      return m1;
	    }
	    function vv(h) {
	      return Math.round(v(h) * 255);
	    }
	    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));
	  }
	  d3.hcl = function(h, c, l) {
	    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);
	  };
	  function d3_hcl(h, c, l) {
	    return new d3_Hcl(h, c, l);
	  }
	  function d3_Hcl(h, c, l) {
	    this.h = h;
	    this.c = c;
	    this.l = l;
	  }
	  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();
	  d3_hclPrototype.brighter = function(k) {
	    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.darker = function(k) {
	    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
	  };
	  d3_hclPrototype.rgb = function() {
	    return d3_hcl_lab(this.h, this.c, this.l).rgb();
	  };
	  function d3_hcl_lab(h, c, l) {
	    if (isNaN(h)) h = 0;
	    if (isNaN(c)) c = 0;
	    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
	  }
	  d3.lab = function(l, a, b) {
	    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);
	  };
	  function d3_lab(l, a, b) {
	    return new d3_Lab(l, a, b);
	  }
	  function d3_Lab(l, a, b) {
	    this.l = l;
	    this.a = a;
	    this.b = b;
	  }
	  var d3_lab_K = 18;
	  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
	  var d3_labPrototype = d3_Lab.prototype = new d3_Color();
	  d3_labPrototype.brighter = function(k) {
	    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.darker = function(k) {
	    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
	  };
	  d3_labPrototype.rgb = function() {
	    return d3_lab_rgb(this.l, this.a, this.b);
	  };
	  function d3_lab_rgb(l, a, b) {
	    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
	    x = d3_lab_xyz(x) * d3_lab_X;
	    y = d3_lab_xyz(y) * d3_lab_Y;
	    z = d3_lab_xyz(z) * d3_lab_Z;
	    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
	  }
	  function d3_lab_hcl(l, a, b) {
	    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);
	  }
	  function d3_lab_xyz(x) {
	    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
	  }
	  function d3_xyz_lab(x) {
	    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
	  }
	  function d3_xyz_rgb(r) {
	    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
	  }
	  d3.rgb = function(r, g, b) {
	    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);
	  };
	  function d3_rgbNumber(value) {
	    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);
	  }
	  function d3_rgbString(value) {
	    return d3_rgbNumber(value) + "";
	  }
	  function d3_rgb(r, g, b) {
	    return new d3_Rgb(r, g, b);
	  }
	  function d3_Rgb(r, g, b) {
	    this.r = r;
	    this.g = g;
	    this.b = b;
	  }
	  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();
	  d3_rgbPrototype.brighter = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    var r = this.r, g = this.g, b = this.b, i = 30;
	    if (!r && !g && !b) return d3_rgb(i, i, i);
	    if (r && r < i) r = i;
	    if (g && g < i) g = i;
	    if (b && b < i) b = i;
	    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));
	  };
	  d3_rgbPrototype.darker = function(k) {
	    k = Math.pow(.7, arguments.length ? k : 1);
	    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));
	  };
	  d3_rgbPrototype.hsl = function() {
	    return d3_rgb_hsl(this.r, this.g, this.b);
	  };
	  d3_rgbPrototype.toString = function() {
	    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
	  };
	  function d3_rgb_hex(v) {
	    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
	  }
	  function d3_rgb_parse(format, rgb, hsl) {
	    var r = 0, g = 0, b = 0, m1, m2, color;
	    m1 = /([a-z]+)\((.*)\)/i.exec(format);
	    if (m1) {
	      m2 = m1[2].split(",");
	      switch (m1[1]) {
	       case "hsl":
	        {
	          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
	        }

	       case "rgb":
	        {
	          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
	        }
	      }
	    }
	    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);
	    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.substring(1), 16))) {
	      if (format.length === 4) {
	        r = (color & 3840) >> 4;
	        r = r >> 4 | r;
	        g = color & 240;
	        g = g >> 4 | g;
	        b = color & 15;
	        b = b << 4 | b;
	      } else if (format.length === 7) {
	        r = (color & 16711680) >> 16;
	        g = (color & 65280) >> 8;
	        b = color & 255;
	      }
	    }
	    return rgb(r, g, b);
	  }
	  function d3_rgb_hsl(r, g, b) {
	    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
	    if (d) {
	      s = l < .5 ? d / (max + min) : d / (2 - max - min);
	      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
	      h *= 60;
	    } else {
	      h = NaN;
	      s = l > 0 && l < 1 ? 0 : h;
	    }
	    return d3_hsl(h, s, l);
	  }
	  function d3_rgb_lab(r, g, b) {
	    r = d3_rgb_xyz(r);
	    g = d3_rgb_xyz(g);
	    b = d3_rgb_xyz(b);
	    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
	    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
	  }
	  function d3_rgb_xyz(r) {
	    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
	  }
	  function d3_rgb_parseNumber(c) {
	    var f = parseFloat(c);
	    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
	  }
	  var d3_rgb_names = d3.map({
	    aliceblue: 15792383,
	    antiquewhite: 16444375,
	    aqua: 65535,
	    aquamarine: 8388564,
	    azure: 15794175,
	    beige: 16119260,
	    bisque: 16770244,
	    black: 0,
	    blanchedalmond: 16772045,
	    blue: 255,
	    blueviolet: 9055202,
	    brown: 10824234,
	    burlywood: 14596231,
	    cadetblue: 6266528,
	    chartreuse: 8388352,
	    chocolate: 13789470,
	    coral: 16744272,
	    cornflowerblue: 6591981,
	    cornsilk: 16775388,
	    crimson: 14423100,
	    cyan: 65535,
	    darkblue: 139,
	    darkcyan: 35723,
	    darkgoldenrod: 12092939,
	    darkgray: 11119017,
	    darkgreen: 25600,
	    darkgrey: 11119017,
	    darkkhaki: 12433259,
	    darkmagenta: 9109643,
	    darkolivegreen: 5597999,
	    darkorange: 16747520,
	    darkorchid: 10040012,
	    darkred: 9109504,
	    darksalmon: 15308410,
	    darkseagreen: 9419919,
	    darkslateblue: 4734347,
	    darkslategray: 3100495,
	    darkslategrey: 3100495,
	    darkturquoise: 52945,
	    darkviolet: 9699539,
	    deeppink: 16716947,
	    deepskyblue: 49151,
	    dimgray: 6908265,
	    dimgrey: 6908265,
	    dodgerblue: 2003199,
	    firebrick: 11674146,
	    floralwhite: 16775920,
	    forestgreen: 2263842,
	    fuchsia: 16711935,
	    gainsboro: 14474460,
	    ghostwhite: 16316671,
	    gold: 16766720,
	    goldenrod: 14329120,
	    gray: 8421504,
	    green: 32768,
	    greenyellow: 11403055,
	    grey: 8421504,
	    honeydew: 15794160,
	    hotpink: 16738740,
	    indianred: 13458524,
	    indigo: 4915330,
	    ivory: 16777200,
	    khaki: 15787660,
	    lavender: 15132410,
	    lavenderblush: 16773365,
	    lawngreen: 8190976,
	    lemonchiffon: 16775885,
	    lightblue: 11393254,
	    lightcoral: 15761536,
	    lightcyan: 14745599,
	    lightgoldenrodyellow: 16448210,
	    lightgray: 13882323,
	    lightgreen: 9498256,
	    lightgrey: 13882323,
	    lightpink: 16758465,
	    lightsalmon: 16752762,
	    lightseagreen: 2142890,
	    lightskyblue: 8900346,
	    lightslategray: 7833753,
	    lightslategrey: 7833753,
	    lightsteelblue: 11584734,
	    lightyellow: 16777184,
	    lime: 65280,
	    limegreen: 3329330,
	    linen: 16445670,
	    magenta: 16711935,
	    maroon: 8388608,
	    mediumaquamarine: 6737322,
	    mediumblue: 205,
	    mediumorchid: 12211667,
	    mediumpurple: 9662683,
	    mediumseagreen: 3978097,
	    mediumslateblue: 8087790,
	    mediumspringgreen: 64154,
	    mediumturquoise: 4772300,
	    mediumvioletred: 13047173,
	    midnightblue: 1644912,
	    mintcream: 16121850,
	    mistyrose: 16770273,
	    moccasin: 16770229,
	    navajowhite: 16768685,
	    navy: 128,
	    oldlace: 16643558,
	    olive: 8421376,
	    olivedrab: 7048739,
	    orange: 16753920,
	    orangered: 16729344,
	    orchid: 14315734,
	    palegoldenrod: 15657130,
	    palegreen: 10025880,
	    paleturquoise: 11529966,
	    palevioletred: 14381203,
	    papayawhip: 16773077,
	    peachpuff: 16767673,
	    peru: 13468991,
	    pink: 16761035,
	    plum: 14524637,
	    powderblue: 11591910,
	    purple: 8388736,
	    red: 16711680,
	    rosybrown: 12357519,
	    royalblue: 4286945,
	    saddlebrown: 9127187,
	    salmon: 16416882,
	    sandybrown: 16032864,
	    seagreen: 3050327,
	    seashell: 16774638,
	    sienna: 10506797,
	    silver: 12632256,
	    skyblue: 8900331,
	    slateblue: 6970061,
	    slategray: 7372944,
	    slategrey: 7372944,
	    snow: 16775930,
	    springgreen: 65407,
	    steelblue: 4620980,
	    tan: 13808780,
	    teal: 32896,
	    thistle: 14204888,
	    tomato: 16737095,
	    turquoise: 4251856,
	    violet: 15631086,
	    wheat: 16113331,
	    white: 16777215,
	    whitesmoke: 16119285,
	    yellow: 16776960,
	    yellowgreen: 10145074
	  });
	  d3_rgb_names.forEach(function(key, value) {
	    d3_rgb_names.set(key, d3_rgbNumber(value));
	  });
	  function d3_functor(v) {
	    return typeof v === "function" ? v : function() {
	      return v;
	    };
	  }
	  d3.functor = d3_functor;
	  function d3_identity(d) {
	    return d;
	  }
	  d3.xhr = d3_xhrType(d3_identity);
	  function d3_xhrType(response) {
	    return function(url, mimeType, callback) {
	      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
	      mimeType = null;
	      return d3_xhr(url, mimeType, response, callback);
	    };
	  }
	  function d3_xhr(url, mimeType, response, callback) {
	    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
	    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
	    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
	      request.readyState > 3 && respond();
	    };
	    function respond() {
	      var status = request.status, result;
	      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {
	        try {
	          result = response.call(xhr, request);
	        } catch (e) {
	          dispatch.error.call(xhr, e);
	          return;
	        }
	        dispatch.load.call(xhr, result);
	      } else {
	        dispatch.error.call(xhr, request);
	      }
	    }
	    request.onprogress = function(event) {
	      var o = d3.event;
	      d3.event = event;
	      try {
	        dispatch.progress.call(xhr, request);
	      } finally {
	        d3.event = o;
	      }
	    };
	    xhr.header = function(name, value) {
	      name = (name + "").toLowerCase();
	      if (arguments.length < 2) return headers[name];
	      if (value == null) delete headers[name]; else headers[name] = value + "";
	      return xhr;
	    };
	    xhr.mimeType = function(value) {
	      if (!arguments.length) return mimeType;
	      mimeType = value == null ? null : value + "";
	      return xhr;
	    };
	    xhr.responseType = function(value) {
	      if (!arguments.length) return responseType;
	      responseType = value;
	      return xhr;
	    };
	    xhr.response = function(value) {
	      response = value;
	      return xhr;
	    };
	    [ "get", "post" ].forEach(function(method) {
	      xhr[method] = function() {
	        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
	      };
	    });
	    xhr.send = function(method, data, callback) {
	      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
	      request.open(method, url, true);
	      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
	      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
	      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
	      if (responseType != null) request.responseType = responseType;
	      if (callback != null) xhr.on("error", callback).on("load", function(request) {
	        callback(null, request);
	      });
	      dispatch.beforesend.call(xhr, request);
	      request.send(data == null ? null : data);
	      return xhr;
	    };
	    xhr.abort = function() {
	      request.abort();
	      return xhr;
	    };
	    d3.rebind(xhr, dispatch, "on");
	    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
	  }
	  function d3_xhr_fixCallback(callback) {
	    return callback.length === 1 ? function(error, request) {
	      callback(error == null ? request : null);
	    } : callback;
	  }
	  d3.dsv = function(delimiter, mimeType) {
	    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
	    function dsv(url, row, callback) {
	      if (arguments.length < 3) callback = row, row = null;
	      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
	      xhr.row = function(_) {
	        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
	      };
	      return xhr;
	    }
	    function response(request) {
	      return dsv.parse(request.responseText);
	    }
	    function typedResponse(f) {
	      return function(request) {
	        return dsv.parse(request.responseText, f);
	      };
	    }
	    dsv.parse = function(text, f) {
	      var o;
	      return dsv.parseRows(text, function(row, i) {
	        if (o) return o(row, i - 1);
	        var a = new Function("d", "return {" + row.map(function(name, i) {
	          return JSON.stringify(name) + ": d[" + i + "]";
	        }).join(",") + "}");
	        o = f ? function(row, i) {
	          return f(a(row), i);
	        } : a;
	      });
	    };
	    dsv.parseRows = function(text, f) {
	      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
	      function token() {
	        if (I >= N) return EOF;
	        if (eol) return eol = false, EOL;
	        var j = I;
	        if (text.charCodeAt(j) === 34) {
	          var i = j;
	          while (i++ < N) {
	            if (text.charCodeAt(i) === 34) {
	              if (text.charCodeAt(i + 1) !== 34) break;
	              ++i;
	            }
	          }
	          I = i + 2;
	          var c = text.charCodeAt(i + 1);
	          if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(i + 2) === 10) ++I;
	          } else if (c === 10) {
	            eol = true;
	          }
	          return text.substring(j + 1, i).replace(/""/g, '"');
	        }
	        while (I < N) {
	          var c = text.charCodeAt(I++), k = 1;
	          if (c === 10) eol = true; else if (c === 13) {
	            eol = true;
	            if (text.charCodeAt(I) === 10) ++I, ++k;
	          } else if (c !== delimiterCode) continue;
	          return text.substring(j, I - k);
	        }
	        return text.substring(j);
	      }
	      while ((t = token()) !== EOF) {
	        var a = [];
	        while (t !== EOL && t !== EOF) {
	          a.push(t);
	          t = token();
	        }
	        if (f && !(a = f(a, n++))) continue;
	        rows.push(a);
	      }
	      return rows;
	    };
	    dsv.format = function(rows) {
	      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
	      var fieldSet = new d3_Set(), fields = [];
	      rows.forEach(function(row) {
	        for (var field in row) {
	          if (!fieldSet.has(field)) {
	            fields.push(fieldSet.add(field));
	          }
	        }
	      });
	      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
	        return fields.map(function(field) {
	          return formatValue(row[field]);
	        }).join(delimiter);
	      })).join("\n");
	    };
	    dsv.formatRows = function(rows) {
	      return rows.map(formatRow).join("\n");
	    };
	    function formatRow(row) {
	      return row.map(formatValue).join(delimiter);
	    }
	    function formatValue(text) {
	      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
	    }
	    return dsv;
	  };
	  d3.csv = d3.dsv(",", "text/csv");
	  d3.tsv = d3.dsv("	", "text/tab-separated-values");
	  d3.touch = function(container, touches, identifier) {
	    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
	    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
	      if ((touch = touches[i]).identifier === identifier) {
	        return d3_mousePoint(container, touch);
	      }
	    }
	  };
	  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function(callback) {
	    setTimeout(callback, 17);
	  };
	  d3.timer = function(callback, delay, then) {
	    var n = arguments.length;
	    if (n < 2) delay = 0;
	    if (n < 3) then = Date.now();
	    var time = then + delay, timer = {
	      c: callback,
	      t: time,
	      f: false,
	      n: null
	    };
	    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
	    d3_timer_queueTail = timer;
	    if (!d3_timer_interval) {
	      d3_timer_timeout = clearTimeout(d3_timer_timeout);
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  };
	  function d3_timer_step() {
	    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
	    if (delay > 24) {
	      if (isFinite(delay)) {
	        clearTimeout(d3_timer_timeout);
	        d3_timer_timeout = setTimeout(d3_timer_step, delay);
	      }
	      d3_timer_interval = 0;
	    } else {
	      d3_timer_interval = 1;
	      d3_timer_frame(d3_timer_step);
	    }
	  }
	  d3.timer.flush = function() {
	    d3_timer_mark();
	    d3_timer_sweep();
	  };
	  function d3_timer_mark() {
	    var now = Date.now();
	    d3_timer_active = d3_timer_queueHead;
	    while (d3_timer_active) {
	      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
	      d3_timer_active = d3_timer_active.n;
	    }
	    return now;
	  }
	  function d3_timer_sweep() {
	    var t0, t1 = d3_timer_queueHead, time = Infinity;
	    while (t1) {
	      if (t1.f) {
	        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
	      } else {
	        if (t1.t < time) time = t1.t;
	        t1 = (t0 = t1).n;
	      }
	    }
	    d3_timer_queueTail = t0;
	    return time;
	  }
	  function d3_format_precision(x, p) {
	    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
	  }
	  d3.round = function(x, n) {
	    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
	  };
	  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
	  d3.formatPrefix = function(value, precision) {
	    var i = 0;
	    if (value) {
	      if (value < 0) value *= -1;
	      if (precision) value = d3.round(value, d3_format_precision(value, precision));
	      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
	      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
	    }
	    return d3_formatPrefixes[8 + i / 3];
	  };
	  function d3_formatPrefix(d, i) {
	    var k = Math.pow(10, abs(8 - i) * 3);
	    return {
	      scale: i > 8 ? function(d) {
	        return d / k;
	      } : function(d) {
	        return d * k;
	      },
	      symbol: d
	    };
	  }
	  function d3_locale_numberFormat(locale) {
	    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping ? function(value) {
	      var i = value.length, t = [], j = 0, g = locale_grouping[0];
	      while (i > 0 && g > 0) {
	        t.push(value.substring(i -= g, i + g));
	        g = locale_grouping[j = (j + 1) % locale_grouping.length];
	      }
	      return t.reverse().join(locale_thousands);
	    } : d3_identity;
	    return function(specifier) {
	      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false;
	      if (precision) precision = +precision.substring(1);
	      if (zfill || fill === "0" && align === "=") {
	        zfill = fill = "0";
	        align = "=";
	        if (comma) width -= Math.floor((width - 1) / 4);
	      }
	      switch (type) {
	       case "n":
	        comma = true;
	        type = "g";
	        break;

	       case "%":
	        scale = 100;
	        suffix = "%";
	        type = "f";
	        break;

	       case "p":
	        scale = 100;
	        suffix = "%";
	        type = "r";
	        break;

	       case "b":
	       case "o":
	       case "x":
	       case "X":
	        if (symbol === "#") prefix = "0" + type.toLowerCase();

	       case "c":
	       case "d":
	        integer = true;
	        precision = 0;
	        break;

	       case "s":
	        scale = -1;
	        type = "r";
	        break;
	      }
	      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
	      if (type == "r" && !precision) type = "g";
	      if (precision != null) {
	        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
	      }
	      type = d3_format_types.get(type) || d3_format_typeDefault;
	      var zcomma = zfill && comma;
	      return function(value) {
	        var fullSuffix = suffix;
	        if (integer && value % 1) return "";
	        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign;
	        if (scale < 0) {
	          var unit = d3.formatPrefix(value, precision);
	          value = unit.scale(value);
	          fullSuffix = unit.symbol + suffix;
	        } else {
	          value *= scale;
	        }
	        value = type(value, precision);
	        var i = value.lastIndexOf("."), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? "" : locale_decimal + value.substring(i + 1);
	        if (!zfill && comma) before = formatGroup(before);
	        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
	        if (zcomma) before = formatGroup(padding + before);
	        negative += prefix;
	        value = before + after;
	        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
	      };
	    };
	  }
	  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
	  var d3_format_types = d3.map({
	    b: function(x) {
	      return x.toString(2);
	    },
	    c: function(x) {
	      return String.fromCharCode(x);
	    },
	    o: function(x) {
	      return x.toString(8);
	    },
	    x: function(x) {
	      return x.toString(16);
	    },
	    X: function(x) {
	      return x.toString(16).toUpperCase();
	    },
	    g: function(x, p) {
	      return x.toPrecision(p);
	    },
	    e: function(x, p) {
	      return x.toExponential(p);
	    },
	    f: function(x, p) {
	      return x.toFixed(p);
	    },
	    r: function(x, p) {
	      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
	    }
	  });
	  function d3_format_typeDefault(x) {
	    return x + "";
	  }
	  var d3_time = d3.time = {}, d3_date = Date;
	  function d3_date_utc() {
	    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
	  }
	  d3_date_utc.prototype = {
	    getDate: function() {
	      return this._.getUTCDate();
	    },
	    getDay: function() {
	      return this._.getUTCDay();
	    },
	    getFullYear: function() {
	      return this._.getUTCFullYear();
	    },
	    getHours: function() {
	      return this._.getUTCHours();
	    },
	    getMilliseconds: function() {
	      return this._.getUTCMilliseconds();
	    },
	    getMinutes: function() {
	      return this._.getUTCMinutes();
	    },
	    getMonth: function() {
	      return this._.getUTCMonth();
	    },
	    getSeconds: function() {
	      return this._.getUTCSeconds();
	    },
	    getTime: function() {
	      return this._.getTime();
	    },
	    getTimezoneOffset: function() {
	      return 0;
	    },
	    valueOf: function() {
	      return this._.valueOf();
	    },
	    setDate: function() {
	      d3_time_prototype.setUTCDate.apply(this._, arguments);
	    },
	    setDay: function() {
	      d3_time_prototype.setUTCDay.apply(this._, arguments);
	    },
	    setFullYear: function() {
	      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
	    },
	    setHours: function() {
	      d3_time_prototype.setUTCHours.apply(this._, arguments);
	    },
	    setMilliseconds: function() {
	      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
	    },
	    setMinutes: function() {
	      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
	    },
	    setMonth: function() {
	      d3_time_prototype.setUTCMonth.apply(this._, arguments);
	    },
	    setSeconds: function() {
	      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
	    },
	    setTime: function() {
	      d3_time_prototype.setTime.apply(this._, arguments);
	    }
	  };
	  var d3_time_prototype = Date.prototype;
	  function d3_time_interval(local, step, number) {
	    function round(date) {
	      var d0 = local(date), d1 = offset(d0, 1);
	      return date - d0 < d1 - date ? d0 : d1;
	    }
	    function ceil(date) {
	      step(date = local(new d3_date(date - 1)), 1);
	      return date;
	    }
	    function offset(date, k) {
	      step(date = new d3_date(+date), k);
	      return date;
	    }
	    function range(t0, t1, dt) {
	      var time = ceil(t0), times = [];
	      if (dt > 1) {
	        while (time < t1) {
	          if (!(number(time) % dt)) times.push(new Date(+time));
	          step(time, 1);
	        }
	      } else {
	        while (time < t1) times.push(new Date(+time)), step(time, 1);
	      }
	      return times;
	    }
	    function range_utc(t0, t1, dt) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = t0;
	        return range(utc, t1, dt);
	      } finally {
	        d3_date = Date;
	      }
	    }
	    local.floor = local;
	    local.round = round;
	    local.ceil = ceil;
	    local.offset = offset;
	    local.range = range;
	    var utc = local.utc = d3_time_interval_utc(local);
	    utc.floor = utc;
	    utc.round = d3_time_interval_utc(round);
	    utc.ceil = d3_time_interval_utc(ceil);
	    utc.offset = d3_time_interval_utc(offset);
	    utc.range = range_utc;
	    return local;
	  }
	  function d3_time_interval_utc(method) {
	    return function(date, k) {
	      try {
	        d3_date = d3_date_utc;
	        var utc = new d3_date_utc();
	        utc._ = date;
	        return method(utc, k)._;
	      } finally {
	        d3_date = Date;
	      }
	    };
	  }
	  d3_time.year = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setMonth(0, 1);
	    return date;
	  }, function(date, offset) {
	    date.setFullYear(date.getFullYear() + offset);
	  }, function(date) {
	    return date.getFullYear();
	  });
	  d3_time.years = d3_time.year.range;
	  d3_time.years.utc = d3_time.year.utc.range;
	  d3_time.day = d3_time_interval(function(date) {
	    var day = new d3_date(2e3, 0);
	    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
	    return day;
	  }, function(date, offset) {
	    date.setDate(date.getDate() + offset);
	  }, function(date) {
	    return date.getDate() - 1;
	  });
	  d3_time.days = d3_time.day.range;
	  d3_time.days.utc = d3_time.day.utc.range;
	  d3_time.dayOfYear = function(date) {
	    var year = d3_time.year(date);
	    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
	  };
	  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
	    i = 7 - i;
	    var interval = d3_time[day] = d3_time_interval(function(date) {
	      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
	      return date;
	    }, function(date, offset) {
	      date.setDate(date.getDate() + Math.floor(offset) * 7);
	    }, function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
	    });
	    d3_time[day + "s"] = interval.range;
	    d3_time[day + "s"].utc = interval.utc.range;
	    d3_time[day + "OfYear"] = function(date) {
	      var day = d3_time.year(date).getDay();
	      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
	    };
	  });
	  d3_time.week = d3_time.sunday;
	  d3_time.weeks = d3_time.sunday.range;
	  d3_time.weeks.utc = d3_time.sunday.utc.range;
	  d3_time.weekOfYear = d3_time.sundayOfYear;
	  function d3_locale_timeFormat(locale) {
	    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
	    function d3_time_format(template) {
	      var n = template.length;
	      function format(date) {
	        var string = [], i = -1, j = 0, c, p, f;
	        while (++i < n) {
	          if (template.charCodeAt(i) === 37) {
	            string.push(template.substring(j, i));
	            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
	            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
	            string.push(c);
	            j = i + 1;
	          }
	        }
	        string.push(template.substring(j, i));
	        return string.join("");
	      }
	      format.parse = function(string) {
	        var d = {
	          y: 1900,
	          m: 0,
	          d: 1,
	          H: 0,
	          M: 0,
	          S: 0,
	          L: 0,
	          Z: null
	        }, i = d3_time_parse(d, template, string, 0);
	        if (i != string.length) return null;
	        if ("p" in d) d.H = d.H % 12 + d.p * 12;
	        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
	        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
	          date.setFullYear(d.y, 0, 1);
	          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
	        } else date.setFullYear(d.y, d.m, d.d);
	        date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);
	        return localZ ? date._ : date;
	      };
	      format.toString = function() {
	        return template;
	      };
	      return format;
	    }
	    function d3_time_parse(date, template, string, j) {
	      var c, p, t, i = 0, n = template.length, m = string.length;
	      while (i < n) {
	        if (j >= m) return -1;
	        c = template.charCodeAt(i++);
	        if (c === 37) {
	          t = template.charAt(i++);
	          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
	          if (!p || (j = p(date, string, j)) < 0) return -1;
	        } else if (c != string.charCodeAt(j++)) {
	          return -1;
	        }
	      }
	      return j;
	    }
	    d3_time_format.utc = function(template) {
	      var local = d3_time_format(template);
	      function format(date) {
	        try {
	          d3_date = d3_date_utc;
	          var utc = new d3_date();
	          utc._ = date;
	          return local(utc);
	        } finally {
	          d3_date = Date;
	        }
	      }
	      format.parse = function(string) {
	        try {
	          d3_date = d3_date_utc;
	          var date = local.parse(string);
	          return date && date._;
	        } finally {
	          d3_date = Date;
	        }
	      };
	      format.toString = local.toString;
	      return format;
	    };
	    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
	    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
	    locale_periods.forEach(function(p, i) {
	      d3_time_periodLookup.set(p.toLowerCase(), i);
	    });
	    var d3_time_formats = {
	      a: function(d) {
	        return locale_shortDays[d.getDay()];
	      },
	      A: function(d) {
	        return locale_days[d.getDay()];
	      },
	      b: function(d) {
	        return locale_shortMonths[d.getMonth()];
	      },
	      B: function(d) {
	        return locale_months[d.getMonth()];
	      },
	      c: d3_time_format(locale_dateTime),
	      d: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      e: function(d, p) {
	        return d3_time_formatPad(d.getDate(), p, 2);
	      },
	      H: function(d, p) {
	        return d3_time_formatPad(d.getHours(), p, 2);
	      },
	      I: function(d, p) {
	        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
	      },
	      j: function(d, p) {
	        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
	      },
	      L: function(d, p) {
	        return d3_time_formatPad(d.getMilliseconds(), p, 3);
	      },
	      m: function(d, p) {
	        return d3_time_formatPad(d.getMonth() + 1, p, 2);
	      },
	      M: function(d, p) {
	        return d3_time_formatPad(d.getMinutes(), p, 2);
	      },
	      p: function(d) {
	        return locale_periods[+(d.getHours() >= 12)];
	      },
	      S: function(d, p) {
	        return d3_time_formatPad(d.getSeconds(), p, 2);
	      },
	      U: function(d, p) {
	        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
	      },
	      w: function(d) {
	        return d.getDay();
	      },
	      W: function(d, p) {
	        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
	      },
	      x: d3_time_format(locale_date),
	      X: d3_time_format(locale_time),
	      y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
	      },
	      Y: function(d, p) {
	        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
	      },
	      Z: d3_time_zone,
	      "%": function() {
	        return "%";
	      }
	    };
	    var d3_time_parsers = {
	      a: d3_time_parseWeekdayAbbrev,
	      A: d3_time_parseWeekday,
	      b: d3_time_parseMonthAbbrev,
	      B: d3_time_parseMonth,
	      c: d3_time_parseLocaleFull,
	      d: d3_time_parseDay,
	      e: d3_time_parseDay,
	      H: d3_time_parseHour24,
	      I: d3_time_parseHour24,
	      j: d3_time_parseDayOfYear,
	      L: d3_time_parseMilliseconds,
	      m: d3_time_parseMonthNumber,
	      M: d3_time_parseMinutes,
	      p: d3_time_parseAmPm,
	      S: d3_time_parseSeconds,
	      U: d3_time_parseWeekNumberSunday,
	      w: d3_time_parseWeekdayNumber,
	      W: d3_time_parseWeekNumberMonday,
	      x: d3_time_parseLocaleDate,
	      X: d3_time_parseLocaleTime,
	      y: d3_time_parseYear,
	      Y: d3_time_parseFullYear,
	      Z: d3_time_parseZone,
	      "%": d3_time_parseLiteralPercent
	    };
	    function d3_time_parseWeekdayAbbrev(date, string, i) {
	      d3_time_dayAbbrevRe.lastIndex = 0;
	      var n = d3_time_dayAbbrevRe.exec(string.substring(i));
	      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseWeekday(date, string, i) {
	      d3_time_dayRe.lastIndex = 0;
	      var n = d3_time_dayRe.exec(string.substring(i));
	      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonthAbbrev(date, string, i) {
	      d3_time_monthAbbrevRe.lastIndex = 0;
	      var n = d3_time_monthAbbrevRe.exec(string.substring(i));
	      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseMonth(date, string, i) {
	      d3_time_monthRe.lastIndex = 0;
	      var n = d3_time_monthRe.exec(string.substring(i));
	      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
	    }
	    function d3_time_parseLocaleFull(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
	    }
	    function d3_time_parseLocaleDate(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
	    }
	    function d3_time_parseLocaleTime(date, string, i) {
	      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
	    }
	    function d3_time_parseAmPm(date, string, i) {
	      var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());
	      return n == null ? -1 : (date.p = n, i);
	    }
	    return d3_time_format;
	  }
	  var d3_time_formatPads = {
	    "-": "",
	    _: " ",
	    "0": "0"
	  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
	  function d3_time_formatPad(value, fill, width) {
	    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
	    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
	  }
	  function d3_time_formatRe(names) {
	    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
	  }
	  function d3_time_formatLookup(names) {
	    var map = new d3_Map(), i = -1, n = names.length;
	    while (++i < n) map.set(names[i].toLowerCase(), i);
	    return map;
	  }
	  function d3_time_parseWeekdayNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 1));
	    return n ? (date.w = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberSunday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i));
	    return n ? (date.U = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseWeekNumberMonday(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i));
	    return n ? (date.W = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseFullYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 4));
	    return n ? (date.y = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
	    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
	  }
	  function d3_time_parseZone(date, string, i) {
	    return /^[+-]\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = -string, 
	    i + 5) : -1;
	  }
	  function d3_time_expandYear(d) {
	    return d + (d > 68 ? 1900 : 2e3);
	  }
	  function d3_time_parseMonthNumber(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
	    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
	  }
	  function d3_time_parseDay(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
	    return n ? (date.d = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseDayOfYear(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
	    return n ? (date.j = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseHour24(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
	    return n ? (date.H = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMinutes(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
	    return n ? (date.M = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseSeconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
	    return n ? (date.S = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_parseMilliseconds(date, string, i) {
	    d3_time_numberRe.lastIndex = 0;
	    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
	    return n ? (date.L = +n[0], i + n[0].length) : -1;
	  }
	  function d3_time_zone(d) {
	    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = ~~(abs(z) / 60), zm = abs(z) % 60;
	    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
	  }
	  function d3_time_parseLiteralPercent(date, string, i) {
	    d3_time_percentRe.lastIndex = 0;
	    var n = d3_time_percentRe.exec(string.substring(i, i + 1));
	    return n ? i + n[0].length : -1;
	  }
	  function d3_time_formatMulti(formats) {
	    var n = formats.length, i = -1;
	    while (++i < n) formats[i][0] = this(formats[i][0]);
	    return function(date) {
	      var i = 0, f = formats[i];
	      while (!f[1](date)) f = formats[++i];
	      return f[0](date);
	    };
	  }
	  d3.locale = function(locale) {
	    return {
	      numberFormat: d3_locale_numberFormat(locale),
	      timeFormat: d3_locale_timeFormat(locale)
	    };
	  };
	  var d3_locale_enUS = d3.locale({
	    decimal: ".",
	    thousands: ",",
	    grouping: [ 3 ],
	    currency: [ "$", "" ],
	    dateTime: "%a %b %e %X %Y",
	    date: "%m/%d/%Y",
	    time: "%H:%M:%S",
	    periods: [ "AM", "PM" ],
	    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
	    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
	    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
	    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
	  });
	  d3.format = d3_locale_enUS.numberFormat;
	  d3.geo = {};
	  function d3_adder() {}
	  d3_adder.prototype = {
	    s: 0,
	    t: 0,
	    add: function(y) {
	      d3_adderSum(y, this.t, d3_adderTemp);
	      d3_adderSum(d3_adderTemp.s, this.s, this);
	      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
	    },
	    reset: function() {
	      this.s = this.t = 0;
	    },
	    valueOf: function() {
	      return this.s;
	    }
	  };
	  var d3_adderTemp = new d3_adder();
	  function d3_adderSum(a, b, o) {
	    var x = o.s = a + b, bv = x - a, av = x - bv;
	    o.t = a - av + (b - bv);
	  }
	  d3.geo.stream = function(object, listener) {
	    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
	      d3_geo_streamObjectType[object.type](object, listener);
	    } else {
	      d3_geo_streamGeometry(object, listener);
	    }
	  };
	  function d3_geo_streamGeometry(geometry, listener) {
	    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
	      d3_geo_streamGeometryType[geometry.type](geometry, listener);
	    }
	  }
	  var d3_geo_streamObjectType = {
	    Feature: function(feature, listener) {
	      d3_geo_streamGeometry(feature.geometry, listener);
	    },
	    FeatureCollection: function(object, listener) {
	      var features = object.features, i = -1, n = features.length;
	      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
	    }
	  };
	  var d3_geo_streamGeometryType = {
	    Sphere: function(object, listener) {
	      listener.sphere();
	    },
	    Point: function(object, listener) {
	      object = object.coordinates;
	      listener.point(object[0], object[1], object[2]);
	    },
	    MultiPoint: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
	    },
	    LineString: function(object, listener) {
	      d3_geo_streamLine(object.coordinates, listener, 0);
	    },
	    MultiLineString: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
	    },
	    Polygon: function(object, listener) {
	      d3_geo_streamPolygon(object.coordinates, listener);
	    },
	    MultiPolygon: function(object, listener) {
	      var coordinates = object.coordinates, i = -1, n = coordinates.length;
	      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
	    },
	    GeometryCollection: function(object, listener) {
	      var geometries = object.geometries, i = -1, n = geometries.length;
	      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
	    }
	  };
	  function d3_geo_streamLine(coordinates, listener, closed) {
	    var i = -1, n = coordinates.length - closed, coordinate;
	    listener.lineStart();
	    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
	    listener.lineEnd();
	  }
	  function d3_geo_streamPolygon(coordinates, listener) {
	    var i = -1, n = coordinates.length;
	    listener.polygonStart();
	    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
	    listener.polygonEnd();
	  }
	  d3.geo.area = function(object) {
	    d3_geo_areaSum = 0;
	    d3.geo.stream(object, d3_geo_area);
	    return d3_geo_areaSum;
	  };
	  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
	  var d3_geo_area = {
	    sphere: function() {
	      d3_geo_areaSum += 4 * π;
	    },
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_areaRingSum.reset();
	      d3_geo_area.lineStart = d3_geo_areaRingStart;
	    },
	    polygonEnd: function() {
	      var area = 2 * d3_geo_areaRingSum;
	      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
	      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
	    }
	  };
	  function d3_geo_areaRingStart() {
	    var λ00, φ00, λ0, cosφ0, sinφ0;
	    d3_geo_area.point = function(λ, φ) {
	      d3_geo_area.point = nextPoint;
	      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
	      sinφ0 = Math.sin(φ);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      φ = φ * d3_radians / 2 + π / 4;
	      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
	      d3_geo_areaRingSum.add(Math.atan2(v, u));
	      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
	    }
	    d3_geo_area.lineEnd = function() {
	      nextPoint(λ00, φ00);
	    };
	  }
	  function d3_geo_cartesian(spherical) {
	    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
	    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
	  }
	  function d3_geo_cartesianDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
	  }
	  function d3_geo_cartesianCross(a, b) {
	    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
	  }
	  function d3_geo_cartesianAdd(a, b) {
	    a[0] += b[0];
	    a[1] += b[1];
	    a[2] += b[2];
	  }
	  function d3_geo_cartesianScale(vector, k) {
	    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
	  }
	  function d3_geo_cartesianNormalize(d) {
	    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
	    d[0] /= l;
	    d[1] /= l;
	    d[2] /= l;
	  }
	  function d3_geo_spherical(cartesian) {
	    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
	  }
	  function d3_geo_sphericalEqual(a, b) {
	    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
	  }
	  d3.geo.bounds = function() {
	    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
	    var bound = {
	      point: point,
	      lineStart: lineStart,
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        bound.point = ringPoint;
	        bound.lineStart = ringStart;
	        bound.lineEnd = ringEnd;
	        dλSum = 0;
	        d3_geo_area.polygonStart();
	      },
	      polygonEnd: function() {
	        d3_geo_area.polygonEnd();
	        bound.point = point;
	        bound.lineStart = lineStart;
	        bound.lineEnd = lineEnd;
	        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
	        range[0] = λ0, range[1] = λ1;
	      }
	    };
	    function point(λ, φ) {
	      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
	      if (φ < φ0) φ0 = φ;
	      if (φ > φ1) φ1 = φ;
	    }
	    function linePoint(λ, φ) {
	      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
	      if (p0) {
	        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
	        d3_geo_cartesianNormalize(inflection);
	        inflection = d3_geo_spherical(inflection);
	        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
	        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = inflection[1] * d3_degrees;
	          if (φi > φ1) φ1 = φi;
	        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
	          var φi = -inflection[1] * d3_degrees;
	          if (φi < φ0) φ0 = φi;
	        } else {
	          if (φ < φ0) φ0 = φ;
	          if (φ > φ1) φ1 = φ;
	        }
	        if (antimeridian) {
	          if (λ < λ_) {
	            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	          } else {
	            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	          }
	        } else {
	          if (λ1 >= λ0) {
	            if (λ < λ0) λ0 = λ;
	            if (λ > λ1) λ1 = λ;
	          } else {
	            if (λ > λ_) {
	              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
	            } else {
	              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
	            }
	          }
	        }
	      } else {
	        point(λ, φ);
	      }
	      p0 = p, λ_ = λ;
	    }
	    function lineStart() {
	      bound.point = linePoint;
	    }
	    function lineEnd() {
	      range[0] = λ0, range[1] = λ1;
	      bound.point = point;
	      p0 = null;
	    }
	    function ringPoint(λ, φ) {
	      if (p0) {
	        var dλ = λ - λ_;
	        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
	      } else λ__ = λ, φ__ = φ;
	      d3_geo_area.point(λ, φ);
	      linePoint(λ, φ);
	    }
	    function ringStart() {
	      d3_geo_area.lineStart();
	    }
	    function ringEnd() {
	      ringPoint(λ__, φ__);
	      d3_geo_area.lineEnd();
	      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
	      range[0] = λ0, range[1] = λ1;
	      p0 = null;
	    }
	    function angle(λ0, λ1) {
	      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
	    }
	    function compareRanges(a, b) {
	      return a[0] - b[0];
	    }
	    function withinRange(x, range) {
	      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
	    }
	    return function(feature) {
	      φ1 = λ1 = -(λ0 = φ0 = Infinity);
	      ranges = [];
	      d3.geo.stream(feature, bound);
	      var n = ranges.length;
	      if (n) {
	        ranges.sort(compareRanges);
	        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
	          b = ranges[i];
	          if (withinRange(b[0], a) || withinRange(b[1], a)) {
	            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
	            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
	          } else {
	            merged.push(a = b);
	          }
	        }
	        var best = -Infinity, dλ;
	        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
	          b = merged[i];
	          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
	        }
	      }
	      ranges = range = null;
	      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
	    };
	  }();
	  d3.geo.centroid = function(object) {
	    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	    d3.geo.stream(object, d3_geo_centroid);
	    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
	    if (m < ε2) {
	      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
	      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
	      m = x * x + y * y + z * z;
	      if (m < ε2) return [ NaN, NaN ];
	    }
	    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
	  };
	  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
	  var d3_geo_centroid = {
	    sphere: d3_noop,
	    point: d3_geo_centroidPoint,
	    lineStart: d3_geo_centroidLineStart,
	    lineEnd: d3_geo_centroidLineEnd,
	    polygonStart: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
	    }
	  };
	  function d3_geo_centroidPoint(λ, φ) {
	    λ *= d3_radians;
	    var cosφ = Math.cos(φ *= d3_radians);
	    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
	  }
	  function d3_geo_centroidPointXYZ(x, y, z) {
	    ++d3_geo_centroidW0;
	    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
	    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
	    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
	  }
	  function d3_geo_centroidLineStart() {
	    var x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroid.point = nextPoint;
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_geo_centroidLineEnd() {
	    d3_geo_centroid.point = d3_geo_centroidPoint;
	  }
	  function d3_geo_centroidRingStart() {
	    var λ00, φ00, x0, y0, z0;
	    d3_geo_centroid.point = function(λ, φ) {
	      λ00 = λ, φ00 = φ;
	      d3_geo_centroid.point = nextPoint;
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians);
	      x0 = cosφ * Math.cos(λ);
	      y0 = cosφ * Math.sin(λ);
	      z0 = Math.sin(φ);
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    };
	    d3_geo_centroid.lineEnd = function() {
	      nextPoint(λ00, φ00);
	      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
	      d3_geo_centroid.point = d3_geo_centroidPoint;
	    };
	    function nextPoint(λ, φ) {
	      λ *= d3_radians;
	      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
	      d3_geo_centroidX2 += v * cx;
	      d3_geo_centroidY2 += v * cy;
	      d3_geo_centroidZ2 += v * cz;
	      d3_geo_centroidW1 += w;
	      d3_geo_centroidX1 += w * (x0 + (x0 = x));
	      d3_geo_centroidY1 += w * (y0 + (y0 = y));
	      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
	      d3_geo_centroidPointXYZ(x0, y0, z0);
	    }
	  }
	  function d3_true() {
	    return true;
	  }
	  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
	    var subject = [], clip = [];
	    segments.forEach(function(segment) {
	      if ((n = segment.length - 1) <= 0) return;
	      var n, p0 = segment[0], p1 = segment[n];
	      if (d3_geo_sphericalEqual(p0, p1)) {
	        listener.lineStart();
	        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
	        listener.lineEnd();
	        return;
	      }
	      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
	      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
	      a.o = b;
	      subject.push(a);
	      clip.push(b);
	    });
	    clip.sort(compare);
	    d3_geo_clipPolygonLinkCircular(subject);
	    d3_geo_clipPolygonLinkCircular(clip);
	    if (!subject.length) return;
	    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
	      clip[i].e = entry = !entry;
	    }
	    var start = subject[0], points, point;
	    while (1) {
	      var current = start, isSubject = true;
	      while (current.v) if ((current = current.n) === start) return;
	      points = current.z;
	      listener.lineStart();
	      do {
	        current.v = current.o.v = true;
	        if (current.e) {
	          if (isSubject) {
	            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.n.x, 1, listener);
	          }
	          current = current.n;
	        } else {
	          if (isSubject) {
	            points = current.p.z;
	            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
	          } else {
	            interpolate(current.x, current.p.x, -1, listener);
	          }
	          current = current.p;
	        }
	        current = current.o;
	        points = current.z;
	        isSubject = !isSubject;
	      } while (!current.v);
	      listener.lineEnd();
	    }
	  }
	  function d3_geo_clipPolygonLinkCircular(array) {
	    if (!(n = array.length)) return;
	    var n, i = 0, a = array[0], b;
	    while (++i < n) {
	      a.n = b = array[i];
	      b.p = a;
	      a = b;
	    }
	    a.n = b = array[0];
	    b.p = a;
	  }
	  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
	    this.x = point;
	    this.z = points;
	    this.o = other;
	    this.e = entry;
	    this.v = false;
	    this.n = this.p = null;
	  }
	  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
	    return function(rotate, listener) {
	      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          clip.point = pointRing;
	          clip.lineStart = ringStart;
	          clip.lineEnd = ringEnd;
	          segments = [];
	          polygon = [];
	        },
	        polygonEnd: function() {
	          clip.point = point;
	          clip.lineStart = lineStart;
	          clip.lineEnd = lineEnd;
	          segments = d3.merge(segments);
	          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
	          if (segments.length) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
	          } else if (clipStartInside) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            interpolate(null, null, 1, listener);
	            listener.lineEnd();
	          }
	          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
	          segments = polygon = null;
	        },
	        sphere: function() {
	          listener.polygonStart();
	          listener.lineStart();
	          interpolate(null, null, 1, listener);
	          listener.lineEnd();
	          listener.polygonEnd();
	        }
	      };
	      function point(λ, φ) {
	        var point = rotate(λ, φ);
	        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
	      }
	      function pointLine(λ, φ) {
	        var point = rotate(λ, φ);
	        line.point(point[0], point[1]);
	      }
	      function lineStart() {
	        clip.point = pointLine;
	        line.lineStart();
	      }
	      function lineEnd() {
	        clip.point = point;
	        line.lineEnd();
	      }
	      var segments;
	      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
	      function pointRing(λ, φ) {
	        ring.push([ λ, φ ]);
	        var point = rotate(λ, φ);
	        ringListener.point(point[0], point[1]);
	      }
	      function ringStart() {
	        ringListener.lineStart();
	        ring = [];
	      }
	      function ringEnd() {
	        pointRing(ring[0][0], ring[0][1]);
	        ringListener.lineEnd();
	        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
	        ring.pop();
	        polygon.push(ring);
	        ring = null;
	        if (!n) return;
	        if (clean & 1) {
	          segment = ringSegments[0];
	          var n = segment.length - 1, i = -1, point;
	          if (n > 0) {
	            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
	            listener.lineStart();
	            while (++i < n) listener.point((point = segment[i])[0], point[1]);
	            listener.lineEnd();
	          }
	          return;
	        }
	        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
	        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
	      }
	      return clip;
	    };
	  }
	  function d3_geo_clipSegmentLength1(segment) {
	    return segment.length > 1;
	  }
	  function d3_geo_clipBufferListener() {
	    var lines = [], line;
	    return {
	      lineStart: function() {
	        lines.push(line = []);
	      },
	      point: function(λ, φ) {
	        line.push([ λ, φ ]);
	      },
	      lineEnd: d3_noop,
	      buffer: function() {
	        var buffer = lines;
	        lines = [];
	        line = null;
	        return buffer;
	      },
	      rejoin: function() {
	        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
	      }
	    };
	  }
	  function d3_geo_clipSort(a, b) {
	    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
	  }
	  function d3_geo_pointInPolygon(point, polygon) {
	    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
	    d3_geo_areaRingSum.reset();
	    for (var i = 0, n = polygon.length; i < n; ++i) {
	      var ring = polygon[i], m = ring.length;
	      if (!m) continue;
	      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
	      while (true) {
	        if (j === m) j = 0;
	        point = ring[j];
	        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
	        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
	        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
	        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
	          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
	          d3_geo_cartesianNormalize(arc);
	          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
	          d3_geo_cartesianNormalize(intersection);
	          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
	          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
	            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
	          }
	        }
	        if (!j++) break;
	        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
	      }
	    }
	    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
	  }
	  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
	  function d3_geo_clipAntimeridianLine(listener) {
	    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
	    return {
	      lineStart: function() {
	        listener.lineStart();
	        clean = 1;
	      },
	      point: function(λ1, φ1) {
	        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
	        if (abs(dλ - π) < ε) {
	          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          listener.point(λ1, φ0);
	          clean = 0;
	        } else if (sλ0 !== sλ1 && dλ >= π) {
	          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
	          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
	          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
	          listener.point(sλ0, φ0);
	          listener.lineEnd();
	          listener.lineStart();
	          listener.point(sλ1, φ0);
	          clean = 0;
	        }
	        listener.point(λ0 = λ1, φ0 = φ1);
	        sλ0 = sλ1;
	      },
	      lineEnd: function() {
	        listener.lineEnd();
	        λ0 = φ0 = NaN;
	      },
	      clean: function() {
	        return 2 - clean;
	      }
	    };
	  }
	  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
	    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
	    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
	  }
	  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
	    var φ;
	    if (from == null) {
	      φ = direction * halfπ;
	      listener.point(-π, φ);
	      listener.point(0, φ);
	      listener.point(π, φ);
	      listener.point(π, 0);
	      listener.point(π, -φ);
	      listener.point(0, -φ);
	      listener.point(-π, -φ);
	      listener.point(-π, 0);
	      listener.point(-π, φ);
	    } else if (abs(from[0] - to[0]) > ε) {
	      var s = from[0] < to[0] ? π : -π;
	      φ = direction * s / 2;
	      listener.point(-s, φ);
	      listener.point(0, φ);
	      listener.point(s, φ);
	    } else {
	      listener.point(to[0], to[1]);
	    }
	  }
	  function d3_geo_clipCircle(radius) {
	    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
	    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
	    function visible(λ, φ) {
	      return Math.cos(λ) * Math.cos(φ) > cr;
	    }
	    function clipLine(listener) {
	      var point0, c0, v0, v00, clean;
	      return {
	        lineStart: function() {
	          v00 = v0 = false;
	          clean = 1;
	        },
	        point: function(λ, φ) {
	          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
	          if (!point0 && (v00 = v0 = v)) listener.lineStart();
	          if (v !== v0) {
	            point2 = intersect(point0, point1);
	            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
	              point1[0] += ε;
	              point1[1] += ε;
	              v = visible(point1[0], point1[1]);
	            }
	          }
	          if (v !== v0) {
	            clean = 0;
	            if (v) {
	              listener.lineStart();
	              point2 = intersect(point1, point0);
	              listener.point(point2[0], point2[1]);
	            } else {
	              point2 = intersect(point0, point1);
	              listener.point(point2[0], point2[1]);
	              listener.lineEnd();
	            }
	            point0 = point2;
	          } else if (notHemisphere && point0 && smallRadius ^ v) {
	            var t;
	            if (!(c & c0) && (t = intersect(point1, point0, true))) {
	              clean = 0;
	              if (smallRadius) {
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	              } else {
	                listener.point(t[1][0], t[1][1]);
	                listener.lineEnd();
	                listener.lineStart();
	                listener.point(t[0][0], t[0][1]);
	              }
	            }
	          }
	          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
	            listener.point(point1[0], point1[1]);
	          }
	          point0 = point1, v0 = v, c0 = c;
	        },
	        lineEnd: function() {
	          if (v0) listener.lineEnd();
	          point0 = null;
	        },
	        clean: function() {
	          return clean | (v00 && v0) << 1;
	        }
	      };
	    }
	    function intersect(a, b, two) {
	      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
	      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
	      if (!determinant) return !two && a;
	      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
	      d3_geo_cartesianAdd(A, B);
	      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
	      if (t2 < 0) return;
	      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
	      d3_geo_cartesianAdd(q, A);
	      q = d3_geo_spherical(q);
	      if (!two) return q;
	      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
	      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
	      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
	      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
	      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
	        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
	        d3_geo_cartesianAdd(q1, A);
	        return [ q, d3_geo_spherical(q1) ];
	      }
	    }
	    function code(λ, φ) {
	      var r = smallRadius ? radius : π - radius, code = 0;
	      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
	      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
	      return code;
	    }
	  }
	  function d3_geom_clipLine(x0, y0, x1, y1) {
	    return function(line) {
	      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
	      r = x0 - ax;
	      if (!dx && r > 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dx > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = x1 - ax;
	      if (!dx && r < 0) return;
	      r /= dx;
	      if (dx < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dx > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      r = y0 - ay;
	      if (!dy && r > 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      } else if (dy > 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      }
	      r = y1 - ay;
	      if (!dy && r < 0) return;
	      r /= dy;
	      if (dy < 0) {
	        if (r > t1) return;
	        if (r > t0) t0 = r;
	      } else if (dy > 0) {
	        if (r < t0) return;
	        if (r < t1) t1 = r;
	      }
	      if (t0 > 0) line.a = {
	        x: ax + t0 * dx,
	        y: ay + t0 * dy
	      };
	      if (t1 < 1) line.b = {
	        x: ax + t1 * dx,
	        y: ay + t1 * dy
	      };
	      return line;
	    };
	  }
	  var d3_geo_clipExtentMAX = 1e9;
	  d3.geo.clipExtent = function() {
	    var x0, y0, x1, y1, stream, clip, clipExtent = {
	      stream: function(output) {
	        if (stream) stream.valid = false;
	        stream = clip(output);
	        stream.valid = true;
	        return stream;
	      },
	      extent: function(_) {
	        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
	        if (stream) stream.valid = false, stream = null;
	        return clipExtent;
	      }
	    };
	    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
	  };
	  function d3_geo_clipExtent(x0, y0, x1, y1) {
	    return function(listener) {
	      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
	      var clip = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          listener = bufferListener;
	          segments = [];
	          polygon = [];
	          clean = true;
	        },
	        polygonEnd: function() {
	          listener = listener_;
	          segments = d3.merge(segments);
	          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
	          if (inside || visible) {
	            listener.polygonStart();
	            if (inside) {
	              listener.lineStart();
	              interpolate(null, null, 1, listener);
	              listener.lineEnd();
	            }
	            if (visible) {
	              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
	            }
	            listener.polygonEnd();
	          }
	          segments = polygon = ring = null;
	        }
	      };
	      function insidePolygon(p) {
	        var wn = 0, n = polygon.length, y = p[1];
	        for (var i = 0; i < n; ++i) {
	          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
	            b = v[j];
	            if (a[1] <= y) {
	              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
	            } else {
	              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
	            }
	            a = b;
	          }
	        }
	        return wn !== 0;
	      }
	      function interpolate(from, to, direction, listener) {
	        var a = 0, a1 = 0;
	        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
	          do {
	            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
	          } while ((a = (a + direction + 4) % 4) !== a1);
	        } else {
	          listener.point(to[0], to[1]);
	        }
	      }
	      function pointVisible(x, y) {
	        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
	      }
	      function point(x, y) {
	        if (pointVisible(x, y)) listener.point(x, y);
	      }
	      var x__, y__, v__, x_, y_, v_, first, clean;
	      function lineStart() {
	        clip.point = linePoint;
	        if (polygon) polygon.push(ring = []);
	        first = true;
	        v_ = false;
	        x_ = y_ = NaN;
	      }
	      function lineEnd() {
	        if (segments) {
	          linePoint(x__, y__);
	          if (v__ && v_) bufferListener.rejoin();
	          segments.push(bufferListener.buffer());
	        }
	        clip.point = point;
	        if (v_) listener.lineEnd();
	      }
	      function linePoint(x, y) {
	        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
	        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
	        var v = pointVisible(x, y);
	        if (polygon) ring.push([ x, y ]);
	        if (first) {
	          x__ = x, y__ = y, v__ = v;
	          first = false;
	          if (v) {
	            listener.lineStart();
	            listener.point(x, y);
	          }
	        } else {
	          if (v && v_) listener.point(x, y); else {
	            var l = {
	              a: {
	                x: x_,
	                y: y_
	              },
	              b: {
	                x: x,
	                y: y
	              }
	            };
	            if (clipLine(l)) {
	              if (!v_) {
	                listener.lineStart();
	                listener.point(l.a.x, l.a.y);
	              }
	              listener.point(l.b.x, l.b.y);
	              if (!v) listener.lineEnd();
	              clean = false;
	            } else if (v) {
	              listener.lineStart();
	              listener.point(x, y);
	              clean = false;
	            }
	          }
	        }
	        x_ = x, y_ = y, v_ = v;
	      }
	      return clip;
	    };
	    function corner(p, direction) {
	      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
	    }
	    function compare(a, b) {
	      return comparePoints(a.x, b.x);
	    }
	    function comparePoints(a, b) {
	      var ca = corner(a, 1), cb = corner(b, 1);
	      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
	    }
	  }
	  function d3_geo_compose(a, b) {
	    function compose(x, y) {
	      return x = a(x, y), b(x[0], x[1]);
	    }
	    if (a.invert && b.invert) compose.invert = function(x, y) {
	      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
	    };
	    return compose;
	  }
	  function d3_geo_conic(projectAt) {
	    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
	    p.parallels = function(_) {
	      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
	      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
	    };
	    return p;
	  }
	  function d3_geo_conicEqualArea(φ0, φ1) {
	    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
	    function forward(λ, φ) {
	      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
	      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = ρ0 - y;
	      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEqualArea = function() {
	    return d3_geo_conic(d3_geo_conicEqualArea);
	  }).raw = d3_geo_conicEqualArea;
	  d3.geo.albers = function() {
	    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
	  };
	  d3.geo.albersUsa = function() {
	    var lower48 = d3.geo.albers();
	    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
	    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
	    var point, pointStream = {
	      point: function(x, y) {
	        point = [ x, y ];
	      }
	    }, lower48Point, alaskaPoint, hawaiiPoint;
	    function albersUsa(coordinates) {
	      var x = coordinates[0], y = coordinates[1];
	      point = null;
	      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
	      return point;
	    }
	    albersUsa.invert = function(coordinates) {
	      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
	      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
	    };
	    albersUsa.stream = function(stream) {
	      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
	      return {
	        point: function(x, y) {
	          lower48Stream.point(x, y);
	          alaskaStream.point(x, y);
	          hawaiiStream.point(x, y);
	        },
	        sphere: function() {
	          lower48Stream.sphere();
	          alaskaStream.sphere();
	          hawaiiStream.sphere();
	        },
	        lineStart: function() {
	          lower48Stream.lineStart();
	          alaskaStream.lineStart();
	          hawaiiStream.lineStart();
	        },
	        lineEnd: function() {
	          lower48Stream.lineEnd();
	          alaskaStream.lineEnd();
	          hawaiiStream.lineEnd();
	        },
	        polygonStart: function() {
	          lower48Stream.polygonStart();
	          alaskaStream.polygonStart();
	          hawaiiStream.polygonStart();
	        },
	        polygonEnd: function() {
	          lower48Stream.polygonEnd();
	          alaskaStream.polygonEnd();
	          hawaiiStream.polygonEnd();
	        }
	      };
	    };
	    albersUsa.precision = function(_) {
	      if (!arguments.length) return lower48.precision();
	      lower48.precision(_);
	      alaska.precision(_);
	      hawaii.precision(_);
	      return albersUsa;
	    };
	    albersUsa.scale = function(_) {
	      if (!arguments.length) return lower48.scale();
	      lower48.scale(_);
	      alaska.scale(_ * .35);
	      hawaii.scale(_);
	      return albersUsa.translate(lower48.translate());
	    };
	    albersUsa.translate = function(_) {
	      if (!arguments.length) return lower48.translate();
	      var k = lower48.scale(), x = +_[0], y = +_[1];
	      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
	      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
	      return albersUsa;
	    };
	    return albersUsa.scale(1070);
	  };
	  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
	    point: d3_noop,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: function() {
	      d3_geo_pathAreaPolygon = 0;
	      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
	      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
	    }
	  };
	  function d3_geo_pathAreaRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathArea.point = function(x, y) {
	      d3_geo_pathArea.point = nextPoint;
	      x00 = x0 = x, y00 = y0 = y;
	    };
	    function nextPoint(x, y) {
	      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
	      x0 = x, y0 = y;
	    }
	    d3_geo_pathArea.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
	  var d3_geo_pathBounds = {
	    point: d3_geo_pathBoundsPoint,
	    lineStart: d3_noop,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_pathBoundsPoint(x, y) {
	    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
	    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
	    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
	    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
	  }
	  function d3_geo_pathBuffer() {
	    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointCircle = d3_geo_pathBufferCircle(_);
	        return stream;
	      },
	      result: function() {
	        if (buffer.length) {
	          var result = buffer.join("");
	          buffer = [];
	          return result;
	        }
	      }
	    };
	    function point(x, y) {
	      buffer.push("M", x, ",", y, pointCircle);
	    }
	    function pointLineStart(x, y) {
	      buffer.push("M", x, ",", y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      buffer.push("L", x, ",", y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      buffer.push("Z");
	    }
	    return stream;
	  }
	  function d3_geo_pathBufferCircle(radius) {
	    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
	  }
	  var d3_geo_pathCentroid = {
	    point: d3_geo_pathCentroidPoint,
	    lineStart: d3_geo_pathCentroidLineStart,
	    lineEnd: d3_geo_pathCentroidLineEnd,
	    polygonStart: function() {
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
	    },
	    polygonEnd: function() {
	      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
	      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
	    }
	  };
	  function d3_geo_pathCentroidPoint(x, y) {
	    d3_geo_centroidX0 += x;
	    d3_geo_centroidY0 += y;
	    ++d3_geo_centroidZ0;
	  }
	  function d3_geo_pathCentroidLineStart() {
	    var x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	  }
	  function d3_geo_pathCentroidLineEnd() {
	    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
	  }
	  function d3_geo_pathCentroidRingStart() {
	    var x00, y00, x0, y0;
	    d3_geo_pathCentroid.point = function(x, y) {
	      d3_geo_pathCentroid.point = nextPoint;
	      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
	    };
	    function nextPoint(x, y) {
	      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
	      d3_geo_centroidX1 += z * (x0 + x) / 2;
	      d3_geo_centroidY1 += z * (y0 + y) / 2;
	      d3_geo_centroidZ1 += z;
	      z = y0 * x - x0 * y;
	      d3_geo_centroidX2 += z * (x0 + x);
	      d3_geo_centroidY2 += z * (y0 + y);
	      d3_geo_centroidZ2 += z * 3;
	      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
	    }
	    d3_geo_pathCentroid.lineEnd = function() {
	      nextPoint(x00, y00);
	    };
	  }
	  function d3_geo_pathContext(context) {
	    var pointRadius = 4.5;
	    var stream = {
	      point: point,
	      lineStart: function() {
	        stream.point = pointLineStart;
	      },
	      lineEnd: lineEnd,
	      polygonStart: function() {
	        stream.lineEnd = lineEndPolygon;
	      },
	      polygonEnd: function() {
	        stream.lineEnd = lineEnd;
	        stream.point = point;
	      },
	      pointRadius: function(_) {
	        pointRadius = _;
	        return stream;
	      },
	      result: d3_noop
	    };
	    function point(x, y) {
	      context.moveTo(x, y);
	      context.arc(x, y, pointRadius, 0, τ);
	    }
	    function pointLineStart(x, y) {
	      context.moveTo(x, y);
	      stream.point = pointLine;
	    }
	    function pointLine(x, y) {
	      context.lineTo(x, y);
	    }
	    function lineEnd() {
	      stream.point = point;
	    }
	    function lineEndPolygon() {
	      context.closePath();
	    }
	    return stream;
	  }
	  function d3_geo_resample(project) {
	    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
	    function resample(stream) {
	      return (maxDepth ? resampleRecursive : resampleNone)(stream);
	    }
	    function resampleNone(stream) {
	      return d3_geo_transformPoint(stream, function(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      });
	    }
	    function resampleRecursive(stream) {
	      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
	      var resample = {
	        point: point,
	        lineStart: lineStart,
	        lineEnd: lineEnd,
	        polygonStart: function() {
	          stream.polygonStart();
	          resample.lineStart = ringStart;
	        },
	        polygonEnd: function() {
	          stream.polygonEnd();
	          resample.lineStart = lineStart;
	        }
	      };
	      function point(x, y) {
	        x = project(x, y);
	        stream.point(x[0], x[1]);
	      }
	      function lineStart() {
	        x0 = NaN;
	        resample.point = linePoint;
	        stream.lineStart();
	      }
	      function linePoint(λ, φ) {
	        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
	        stream.point(x0, y0);
	      }
	      function lineEnd() {
	        resample.point = point;
	        stream.lineEnd();
	      }
	      function ringStart() {
	        lineStart();
	        resample.point = ringPoint;
	        resample.lineEnd = ringEnd;
	      }
	      function ringPoint(λ, φ) {
	        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
	        resample.point = linePoint;
	      }
	      function ringEnd() {
	        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
	        resample.lineEnd = lineEnd;
	        lineEnd();
	      }
	      return resample;
	    }
	    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
	      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
	      if (d2 > 4 * δ2 && depth--) {
	        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
	        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
	          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
	          stream.point(x2, y2);
	          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
	        }
	      }
	    }
	    resample.precision = function(_) {
	      if (!arguments.length) return Math.sqrt(δ2);
	      maxDepth = (δ2 = _ * _) > 0 && 16;
	      return resample;
	    };
	    return resample;
	  }
	  d3.geo.path = function() {
	    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
	    function path(object) {
	      if (object) {
	        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
	        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
	        d3.geo.stream(object, cacheStream);
	      }
	      return contextStream.result();
	    }
	    path.area = function(object) {
	      d3_geo_pathAreaSum = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathArea));
	      return d3_geo_pathAreaSum;
	    };
	    path.centroid = function(object) {
	      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
	      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
	      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
	    };
	    path.bounds = function(object) {
	      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
	      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
	      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
	    };
	    path.projection = function(_) {
	      if (!arguments.length) return projection;
	      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
	      return reset();
	    };
	    path.context = function(_) {
	      if (!arguments.length) return context;
	      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
	      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
	      return reset();
	    };
	    path.pointRadius = function(_) {
	      if (!arguments.length) return pointRadius;
	      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
	      return path;
	    };
	    function reset() {
	      cacheStream = null;
	      return path;
	    }
	    return path.projection(d3.geo.albersUsa()).context(null);
	  };
	  function d3_geo_pathProjectStream(project) {
	    var resample = d3_geo_resample(function(x, y) {
	      return project([ x * d3_degrees, y * d3_degrees ]);
	    });
	    return function(stream) {
	      return d3_geo_projectionRadians(resample(stream));
	    };
	  }
	  d3.geo.transform = function(methods) {
	    return {
	      stream: function(stream) {
	        var transform = new d3_geo_transform(stream);
	        for (var k in methods) transform[k] = methods[k];
	        return transform;
	      }
	    };
	  };
	  function d3_geo_transform(stream) {
	    this.stream = stream;
	  }
	  d3_geo_transform.prototype = {
	    point: function(x, y) {
	      this.stream.point(x, y);
	    },
	    sphere: function() {
	      this.stream.sphere();
	    },
	    lineStart: function() {
	      this.stream.lineStart();
	    },
	    lineEnd: function() {
	      this.stream.lineEnd();
	    },
	    polygonStart: function() {
	      this.stream.polygonStart();
	    },
	    polygonEnd: function() {
	      this.stream.polygonEnd();
	    }
	  };
	  function d3_geo_transformPoint(stream, point) {
	    return {
	      point: point,
	      sphere: function() {
	        stream.sphere();
	      },
	      lineStart: function() {
	        stream.lineStart();
	      },
	      lineEnd: function() {
	        stream.lineEnd();
	      },
	      polygonStart: function() {
	        stream.polygonStart();
	      },
	      polygonEnd: function() {
	        stream.polygonEnd();
	      }
	    };
	  }
	  d3.geo.projection = d3_geo_projection;
	  d3.geo.projectionMutator = d3_geo_projectionMutator;
	  function d3_geo_projection(project) {
	    return d3_geo_projectionMutator(function() {
	      return project;
	    })();
	  }
	  function d3_geo_projectionMutator(projectAt) {
	    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
	      x = project(x, y);
	      return [ x[0] * k + δx, δy - x[1] * k ];
	    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
	    function projection(point) {
	      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
	      return [ point[0] * k + δx, δy - point[1] * k ];
	    }
	    function invert(point) {
	      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
	      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
	    }
	    projection.stream = function(output) {
	      if (stream) stream.valid = false;
	      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
	      stream.valid = true;
	      return stream;
	    };
	    projection.clipAngle = function(_) {
	      if (!arguments.length) return clipAngle;
	      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
	      return invalidate();
	    };
	    projection.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent;
	      clipExtent = _;
	      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
	      return invalidate();
	    };
	    projection.scale = function(_) {
	      if (!arguments.length) return k;
	      k = +_;
	      return reset();
	    };
	    projection.translate = function(_) {
	      if (!arguments.length) return [ x, y ];
	      x = +_[0];
	      y = +_[1];
	      return reset();
	    };
	    projection.center = function(_) {
	      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
	      λ = _[0] % 360 * d3_radians;
	      φ = _[1] % 360 * d3_radians;
	      return reset();
	    };
	    projection.rotate = function(_) {
	      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
	      δλ = _[0] % 360 * d3_radians;
	      δφ = _[1] % 360 * d3_radians;
	      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
	      return reset();
	    };
	    d3.rebind(projection, projectResample, "precision");
	    function reset() {
	      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
	      var center = project(λ, φ);
	      δx = x - center[0] * k;
	      δy = y + center[1] * k;
	      return invalidate();
	    }
	    function invalidate() {
	      if (stream) stream.valid = false, stream = null;
	      return projection;
	    }
	    return function() {
	      project = projectAt.apply(this, arguments);
	      projection.invert = project.invert && invert;
	      return reset();
	    };
	  }
	  function d3_geo_projectionRadians(stream) {
	    return d3_geo_transformPoint(stream, function(x, y) {
	      stream.point(x * d3_radians, y * d3_radians);
	    });
	  }
	  function d3_geo_equirectangular(λ, φ) {
	    return [ λ, φ ];
	  }
	  (d3.geo.equirectangular = function() {
	    return d3_geo_projection(d3_geo_equirectangular);
	  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
	  d3.geo.rotation = function(rotate) {
	    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
	    function forward(coordinates) {
	      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    }
	    forward.invert = function(coordinates) {
	      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
	      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
	    };
	    return forward;
	  };
	  function d3_geo_identityRotation(λ, φ) {
	    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	  }
	  d3_geo_identityRotation.invert = d3_geo_equirectangular;
	  function d3_geo_rotation(δλ, δφ, δγ) {
	    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
	  }
	  function d3_geo_forwardRotationλ(δλ) {
	    return function(λ, φ) {
	      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
	    };
	  }
	  function d3_geo_rotationλ(δλ) {
	    var rotation = d3_geo_forwardRotationλ(δλ);
	    rotation.invert = d3_geo_forwardRotationλ(-δλ);
	    return rotation;
	  }
	  function d3_geo_rotationφγ(δφ, δγ) {
	    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
	    function rotation(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
	      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
	    }
	    rotation.invert = function(λ, φ) {
	      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
	      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
	    };
	    return rotation;
	  }
	  d3.geo.circle = function() {
	    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
	    function circle() {
	      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
	      interpolate(null, null, 1, {
	        point: function(x, y) {
	          ring.push(x = rotate(x, y));
	          x[0] *= d3_degrees, x[1] *= d3_degrees;
	        }
	      });
	      return {
	        type: "Polygon",
	        coordinates: [ ring ]
	      };
	    }
	    circle.origin = function(x) {
	      if (!arguments.length) return origin;
	      origin = x;
	      return circle;
	    };
	    circle.angle = function(x) {
	      if (!arguments.length) return angle;
	      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
	      return circle;
	    };
	    circle.precision = function(_) {
	      if (!arguments.length) return precision;
	      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
	      return circle;
	    };
	    return circle.angle(90);
	  };
	  function d3_geo_circleInterpolate(radius, precision) {
	    var cr = Math.cos(radius), sr = Math.sin(radius);
	    return function(from, to, direction, listener) {
	      var step = direction * precision;
	      if (from != null) {
	        from = d3_geo_circleAngle(cr, from);
	        to = d3_geo_circleAngle(cr, to);
	        if (direction > 0 ? from < to : from > to) from += direction * τ;
	      } else {
	        from = radius + direction * τ;
	        to = radius - .5 * step;
	      }
	      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
	        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
	      }
	    };
	  }
	  function d3_geo_circleAngle(cr, point) {
	    var a = d3_geo_cartesian(point);
	    a[0] -= cr;
	    d3_geo_cartesianNormalize(a);
	    var angle = d3_acos(-a[1]);
	    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
	  }
	  d3.geo.distance = function(a, b) {
	    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
	    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
	  };
	  d3.geo.graticule = function() {
	    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
	    function graticule() {
	      return {
	        type: "MultiLineString",
	        coordinates: lines()
	      };
	    }
	    function lines() {
	      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
	        return abs(x % DX) > ε;
	      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
	        return abs(y % DY) > ε;
	      }).map(y));
	    }
	    graticule.lines = function() {
	      return lines().map(function(coordinates) {
	        return {
	          type: "LineString",
	          coordinates: coordinates
	        };
	      });
	    };
	    graticule.outline = function() {
	      return {
	        type: "Polygon",
	        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
	      };
	    };
	    graticule.extent = function(_) {
	      if (!arguments.length) return graticule.minorExtent();
	      return graticule.majorExtent(_).minorExtent(_);
	    };
	    graticule.majorExtent = function(_) {
	      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
	      X0 = +_[0][0], X1 = +_[1][0];
	      Y0 = +_[0][1], Y1 = +_[1][1];
	      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
	      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.minorExtent = function(_) {
	      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
	      x0 = +_[0][0], x1 = +_[1][0];
	      y0 = +_[0][1], y1 = +_[1][1];
	      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
	      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
	      return graticule.precision(precision);
	    };
	    graticule.step = function(_) {
	      if (!arguments.length) return graticule.minorStep();
	      return graticule.majorStep(_).minorStep(_);
	    };
	    graticule.majorStep = function(_) {
	      if (!arguments.length) return [ DX, DY ];
	      DX = +_[0], DY = +_[1];
	      return graticule;
	    };
	    graticule.minorStep = function(_) {
	      if (!arguments.length) return [ dx, dy ];
	      dx = +_[0], dy = +_[1];
	      return graticule;
	    };
	    graticule.precision = function(_) {
	      if (!arguments.length) return precision;
	      precision = +_;
	      x = d3_geo_graticuleX(y0, y1, 90);
	      y = d3_geo_graticuleY(x0, x1, precision);
	      X = d3_geo_graticuleX(Y0, Y1, 90);
	      Y = d3_geo_graticuleY(X0, X1, precision);
	      return graticule;
	    };
	    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
	  };
	  function d3_geo_graticuleX(y0, y1, dy) {
	    var y = d3.range(y0, y1 - ε, dy).concat(y1);
	    return function(x) {
	      return y.map(function(y) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_geo_graticuleY(x0, x1, dx) {
	    var x = d3.range(x0, x1 - ε, dx).concat(x1);
	    return function(y) {
	      return x.map(function(x) {
	        return [ x, y ];
	      });
	    };
	  }
	  function d3_source(d) {
	    return d.source;
	  }
	  function d3_target(d) {
	    return d.target;
	  }
	  d3.geo.greatArc = function() {
	    var source = d3_source, source_, target = d3_target, target_;
	    function greatArc() {
	      return {
	        type: "LineString",
	        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
	      };
	    }
	    greatArc.distance = function() {
	      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
	    };
	    greatArc.source = function(_) {
	      if (!arguments.length) return source;
	      source = _, source_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.target = function(_) {
	      if (!arguments.length) return target;
	      target = _, target_ = typeof _ === "function" ? null : _;
	      return greatArc;
	    };
	    greatArc.precision = function() {
	      return arguments.length ? greatArc : 0;
	    };
	    return greatArc;
	  };
	  d3.geo.interpolate = function(source, target) {
	    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
	  };
	  function d3_geo_interpolate(x0, y0, x1, y1) {
	    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
	    var interpolate = d ? function(t) {
	      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
	      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
	    } : function() {
	      return [ x0 * d3_degrees, y0 * d3_degrees ];
	    };
	    interpolate.distance = d;
	    return interpolate;
	  }
	  d3.geo.length = function(object) {
	    d3_geo_lengthSum = 0;
	    d3.geo.stream(object, d3_geo_length);
	    return d3_geo_lengthSum;
	  };
	  var d3_geo_lengthSum;
	  var d3_geo_length = {
	    sphere: d3_noop,
	    point: d3_noop,
	    lineStart: d3_geo_lengthLineStart,
	    lineEnd: d3_noop,
	    polygonStart: d3_noop,
	    polygonEnd: d3_noop
	  };
	  function d3_geo_lengthLineStart() {
	    var λ0, sinφ0, cosφ0;
	    d3_geo_length.point = function(λ, φ) {
	      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
	      d3_geo_length.point = nextPoint;
	    };
	    d3_geo_length.lineEnd = function() {
	      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
	    };
	    function nextPoint(λ, φ) {
	      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
	      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
	      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
	    }
	  }
	  function d3_geo_azimuthal(scale, angle) {
	    function azimuthal(λ, φ) {
	      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
	      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
	    }
	    azimuthal.invert = function(x, y) {
	      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
	      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
	    };
	    return azimuthal;
	  }
	  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
	    return Math.sqrt(2 / (1 + cosλcosφ));
	  }, function(ρ) {
	    return 2 * Math.asin(ρ / 2);
	  });
	  (d3.geo.azimuthalEqualArea = function() {
	    return d3_geo_projection(d3_geo_azimuthalEqualArea);
	  }).raw = d3_geo_azimuthalEqualArea;
	  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
	    var c = Math.acos(cosλcosφ);
	    return c && c / Math.sin(c);
	  }, d3_identity);
	  (d3.geo.azimuthalEquidistant = function() {
	    return d3_geo_projection(d3_geo_azimuthalEquidistant);
	  }).raw = d3_geo_azimuthalEquidistant;
	  function d3_geo_conicConformal(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), t = function(φ) {
	      return Math.tan(π / 4 + φ / 2);
	    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
	    if (!n) return d3_geo_mercator;
	    function forward(λ, φ) {
	      if (F > 0) {
	        if (φ < -halfπ + ε) φ = -halfπ + ε;
	      } else {
	        if (φ > halfπ - ε) φ = halfπ - ε;
	      }
	      var ρ = F / Math.pow(t(φ), n);
	      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
	      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
	    };
	    return forward;
	  }
	  (d3.geo.conicConformal = function() {
	    return d3_geo_conic(d3_geo_conicConformal);
	  }).raw = d3_geo_conicConformal;
	  function d3_geo_conicEquidistant(φ0, φ1) {
	    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
	    if (abs(n) < ε) return d3_geo_equirectangular;
	    function forward(λ, φ) {
	      var ρ = G - φ;
	      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
	    }
	    forward.invert = function(x, y) {
	      var ρ0_y = G - y;
	      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
	    };
	    return forward;
	  }
	  (d3.geo.conicEquidistant = function() {
	    return d3_geo_conic(d3_geo_conicEquidistant);
	  }).raw = d3_geo_conicEquidistant;
	  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / cosλcosφ;
	  }, Math.atan);
	  (d3.geo.gnomonic = function() {
	    return d3_geo_projection(d3_geo_gnomonic);
	  }).raw = d3_geo_gnomonic;
	  function d3_geo_mercator(λ, φ) {
	    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
	  }
	  d3_geo_mercator.invert = function(x, y) {
	    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
	  };
	  function d3_geo_mercatorProjection(project) {
	    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
	    m.scale = function() {
	      var v = scale.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.translate = function() {
	      var v = translate.apply(m, arguments);
	      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
	    };
	    m.clipExtent = function(_) {
	      var v = clipExtent.apply(m, arguments);
	      if (v === m) {
	        if (clipAuto = _ == null) {
	          var k = π * scale(), t = translate();
	          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
	        }
	      } else if (clipAuto) {
	        v = null;
	      }
	      return v;
	    };
	    return m.clipExtent(null);
	  }
	  (d3.geo.mercator = function() {
	    return d3_geo_mercatorProjection(d3_geo_mercator);
	  }).raw = d3_geo_mercator;
	  var d3_geo_orthographic = d3_geo_azimuthal(function() {
	    return 1;
	  }, Math.asin);
	  (d3.geo.orthographic = function() {
	    return d3_geo_projection(d3_geo_orthographic);
	  }).raw = d3_geo_orthographic;
	  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
	    return 1 / (1 + cosλcosφ);
	  }, function(ρ) {
	    return 2 * Math.atan(ρ);
	  });
	  (d3.geo.stereographic = function() {
	    return d3_geo_projection(d3_geo_stereographic);
	  }).raw = d3_geo_stereographic;
	  function d3_geo_transverseMercator(λ, φ) {
	    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
	  }
	  d3_geo_transverseMercator.invert = function(x, y) {
	    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
	  };
	  (d3.geo.transverseMercator = function() {
	    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
	    projection.center = function(_) {
	      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);
	    };
	    projection.rotate = function(_) {
	      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
	      [ _[0], _[1], _[2] - 90 ]);
	    };
	    return projection.rotate([ 0, 0 ]);
	  }).raw = d3_geo_transverseMercator;
	  d3.geom = {};
	  function d3_geom_pointX(d) {
	    return d[0];
	  }
	  function d3_geom_pointY(d) {
	    return d[1];
	  }
	  d3.geom.hull = function(vertices) {
	    var x = d3_geom_pointX, y = d3_geom_pointY;
	    if (arguments.length) return hull(vertices);
	    function hull(data) {
	      if (data.length < 3) return [];
	      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
	      for (i = 0; i < n; i++) {
	        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
	      }
	      points.sort(d3_geom_hullOrder);
	      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
	      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
	      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
	      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
	      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
	      return polygon;
	    }
	    hull.x = function(_) {
	      return arguments.length ? (x = _, hull) : x;
	    };
	    hull.y = function(_) {
	      return arguments.length ? (y = _, hull) : y;
	    };
	    return hull;
	  };
	  function d3_geom_hullUpper(points) {
	    var n = points.length, hull = [ 0, 1 ], hs = 2;
	    for (var i = 2; i < n; i++) {
	      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
	      hull[hs++] = i;
	    }
	    return hull.slice(0, hs);
	  }
	  function d3_geom_hullOrder(a, b) {
	    return a[0] - b[0] || a[1] - b[1];
	  }
	  d3.geom.polygon = function(coordinates) {
	    d3_subclass(coordinates, d3_geom_polygonPrototype);
	    return coordinates;
	  };
	  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
	  d3_geom_polygonPrototype.area = function() {
	    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      area += a[1] * b[0] - a[0] * b[1];
	    }
	    return area * .5;
	  };
	  d3_geom_polygonPrototype.centroid = function(k) {
	    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
	    if (!arguments.length) k = -1 / (6 * this.area());
	    while (++i < n) {
	      a = b;
	      b = this[i];
	      c = a[0] * b[1] - b[0] * a[1];
	      x += (a[0] + b[0]) * c;
	      y += (a[1] + b[1]) * c;
	    }
	    return [ x * k, y * k ];
	  };
	  d3_geom_polygonPrototype.clip = function(subject) {
	    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
	    while (++i < n) {
	      input = subject.slice();
	      subject.length = 0;
	      b = this[i];
	      c = input[(m = input.length - closed) - 1];
	      j = -1;
	      while (++j < m) {
	        d = input[j];
	        if (d3_geom_polygonInside(d, a, b)) {
	          if (!d3_geom_polygonInside(c, a, b)) {
	            subject.push(d3_geom_polygonIntersect(c, d, a, b));
	          }
	          subject.push(d);
	        } else if (d3_geom_polygonInside(c, a, b)) {
	          subject.push(d3_geom_polygonIntersect(c, d, a, b));
	        }
	        c = d;
	      }
	      if (closed) subject.push(subject[0]);
	      a = b;
	    }
	    return subject;
	  };
	  function d3_geom_polygonInside(p, a, b) {
	    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
	  }
	  function d3_geom_polygonIntersect(c, d, a, b) {
	    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
	    return [ x1 + ua * x21, y1 + ua * y21 ];
	  }
	  function d3_geom_polygonClosed(coordinates) {
	    var a = coordinates[0], b = coordinates[coordinates.length - 1];
	    return !(a[0] - b[0] || a[1] - b[1]);
	  }
	  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
	  function d3_geom_voronoiBeach() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.edge = this.site = this.circle = null;
	  }
	  function d3_geom_voronoiCreateBeach(site) {
	    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
	    beach.site = site;
	    return beach;
	  }
	  function d3_geom_voronoiDetachBeach(beach) {
	    d3_geom_voronoiDetachCircle(beach);
	    d3_geom_voronoiBeaches.remove(beach);
	    d3_geom_voronoiBeachPool.push(beach);
	    d3_geom_voronoiRedBlackNode(beach);
	  }
	  function d3_geom_voronoiRemoveBeach(beach) {
	    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
	      x: x,
	      y: y
	    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
	    d3_geom_voronoiDetachBeach(beach);
	    var lArc = previous;
	    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
	      previous = lArc.P;
	      disappearing.unshift(lArc);
	      d3_geom_voronoiDetachBeach(lArc);
	      lArc = previous;
	    }
	    disappearing.unshift(lArc);
	    d3_geom_voronoiDetachCircle(lArc);
	    var rArc = next;
	    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
	      next = rArc.N;
	      disappearing.push(rArc);
	      d3_geom_voronoiDetachBeach(rArc);
	      rArc = next;
	    }
	    disappearing.push(rArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var nArcs = disappearing.length, iArc;
	    for (iArc = 1; iArc < nArcs; ++iArc) {
	      rArc = disappearing[iArc];
	      lArc = disappearing[iArc - 1];
	      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
	    }
	    lArc = disappearing[0];
	    rArc = disappearing[nArcs - 1];
	    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiAddBeach(site) {
	    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
	    while (node) {
	      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
	      if (dxl > ε) node = node.L; else {
	        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
	        if (dxr > ε) {
	          if (!node.R) {
	            lArc = node;
	            break;
	          }
	          node = node.R;
	        } else {
	          if (dxl > -ε) {
	            lArc = node.P;
	            rArc = node;
	          } else if (dxr > -ε) {
	            lArc = node;
	            rArc = node.N;
	          } else {
	            lArc = rArc = node;
	          }
	          break;
	        }
	      }
	    }
	    var newArc = d3_geom_voronoiCreateBeach(site);
	    d3_geom_voronoiBeaches.insert(lArc, newArc);
	    if (!lArc && !rArc) return;
	    if (lArc === rArc) {
	      d3_geom_voronoiDetachCircle(lArc);
	      rArc = d3_geom_voronoiCreateBeach(lArc.site);
	      d3_geom_voronoiBeaches.insert(newArc, rArc);
	      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      d3_geom_voronoiAttachCircle(lArc);
	      d3_geom_voronoiAttachCircle(rArc);
	      return;
	    }
	    if (!rArc) {
	      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
	      return;
	    }
	    d3_geom_voronoiDetachCircle(lArc);
	    d3_geom_voronoiDetachCircle(rArc);
	    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
	      x: (cy * hb - by * hc) / d + ax,
	      y: (bx * hc - cx * hb) / d + ay
	    };
	    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
	    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
	    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
	    d3_geom_voronoiAttachCircle(lArc);
	    d3_geom_voronoiAttachCircle(rArc);
	  }
	  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
	    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
	    if (!pby2) return rfocx;
	    var lArc = arc.P;
	    if (!lArc) return -Infinity;
	    site = lArc.site;
	    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
	    if (!plby2) return lfocx;
	    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
	    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
	    return (rfocx + lfocx) / 2;
	  }
	  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
	    var rArc = arc.N;
	    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
	    var site = arc.site;
	    return site.y === directrix ? site.x : Infinity;
	  }
	  function d3_geom_voronoiCell(site) {
	    this.site = site;
	    this.edges = [];
	  }
	  d3_geom_voronoiCell.prototype.prepare = function() {
	    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
	    while (iHalfEdge--) {
	      edge = halfEdges[iHalfEdge].edge;
	      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
	    }
	    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
	    return halfEdges.length;
	  };
	  function d3_geom_voronoiCloseCells(extent) {
	    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
	    while (iCell--) {
	      cell = cells[iCell];
	      if (!cell || !cell.prepare()) continue;
	      halfEdges = cell.edges;
	      nHalfEdges = halfEdges.length;
	      iHalfEdge = 0;
	      while (iHalfEdge < nHalfEdges) {
	        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
	        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
	        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
	          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
	            x: x0,
	            y: abs(x2 - x0) < ε ? y2 : y1
	          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
	            x: abs(y2 - y1) < ε ? x2 : x1,
	            y: y1
	          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
	            x: x1,
	            y: abs(x2 - x1) < ε ? y2 : y0
	          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
	            x: abs(y2 - y0) < ε ? x2 : x0,
	            y: y0
	          } : null), cell.site, null));
	          ++nHalfEdges;
	        }
	      }
	    }
	  }
	  function d3_geom_voronoiHalfEdgeOrder(a, b) {
	    return b.angle - a.angle;
	  }
	  function d3_geom_voronoiCircle() {
	    d3_geom_voronoiRedBlackNode(this);
	    this.x = this.y = this.arc = this.site = this.cy = null;
	  }
	  function d3_geom_voronoiAttachCircle(arc) {
	    var lArc = arc.P, rArc = arc.N;
	    if (!lArc || !rArc) return;
	    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
	    if (lSite === rSite) return;
	    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
	    var d = 2 * (ax * cy - ay * cx);
	    if (d >= -ε2) return;
	    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
	    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
	    circle.arc = arc;
	    circle.site = cSite;
	    circle.x = x + bx;
	    circle.y = cy + Math.sqrt(x * x + y * y);
	    circle.cy = cy;
	    arc.circle = circle;
	    var before = null, node = d3_geom_voronoiCircles._;
	    while (node) {
	      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
	        if (node.L) node = node.L; else {
	          before = node.P;
	          break;
	        }
	      } else {
	        if (node.R) node = node.R; else {
	          before = node;
	          break;
	        }
	      }
	    }
	    d3_geom_voronoiCircles.insert(before, circle);
	    if (!before) d3_geom_voronoiFirstCircle = circle;
	  }
	  function d3_geom_voronoiDetachCircle(arc) {
	    var circle = arc.circle;
	    if (circle) {
	      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
	      d3_geom_voronoiCircles.remove(circle);
	      d3_geom_voronoiCirclePool.push(circle);
	      d3_geom_voronoiRedBlackNode(circle);
	      arc.circle = null;
	    }
	  }
	  function d3_geom_voronoiClipEdges(extent) {
	    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
	    while (i--) {
	      e = edges[i];
	      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
	        e.a = e.b = null;
	        edges.splice(i, 1);
	      }
	    }
	  }
	  function d3_geom_voronoiConnectEdge(edge, extent) {
	    var vb = edge.b;
	    if (vb) return true;
	    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
	    if (ry === ly) {
	      if (fx < x0 || fx >= x1) return;
	      if (lx > rx) {
	        if (!va) va = {
	          x: fx,
	          y: y0
	        }; else if (va.y >= y1) return;
	        vb = {
	          x: fx,
	          y: y1
	        };
	      } else {
	        if (!va) va = {
	          x: fx,
	          y: y1
	        }; else if (va.y < y0) return;
	        vb = {
	          x: fx,
	          y: y0
	        };
	      }
	    } else {
	      fm = (lx - rx) / (ry - ly);
	      fb = fy - fm * fx;
	      if (fm < -1 || fm > 1) {
	        if (lx > rx) {
	          if (!va) va = {
	            x: (y0 - fb) / fm,
	            y: y0
	          }; else if (va.y >= y1) return;
	          vb = {
	            x: (y1 - fb) / fm,
	            y: y1
	          };
	        } else {
	          if (!va) va = {
	            x: (y1 - fb) / fm,
	            y: y1
	          }; else if (va.y < y0) return;
	          vb = {
	            x: (y0 - fb) / fm,
	            y: y0
	          };
	        }
	      } else {
	        if (ly < ry) {
	          if (!va) va = {
	            x: x0,
	            y: fm * x0 + fb
	          }; else if (va.x >= x1) return;
	          vb = {
	            x: x1,
	            y: fm * x1 + fb
	          };
	        } else {
	          if (!va) va = {
	            x: x1,
	            y: fm * x1 + fb
	          }; else if (va.x < x0) return;
	          vb = {
	            x: x0,
	            y: fm * x0 + fb
	          };
	        }
	      }
	    }
	    edge.a = va;
	    edge.b = vb;
	    return true;
	  }
	  function d3_geom_voronoiEdge(lSite, rSite) {
	    this.l = lSite;
	    this.r = rSite;
	    this.a = this.b = null;
	  }
	  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, rSite);
	    d3_geom_voronoiEdges.push(edge);
	    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
	    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
	    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
	    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
	    return edge;
	  }
	  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
	    var edge = new d3_geom_voronoiEdge(lSite, null);
	    edge.a = va;
	    edge.b = vb;
	    d3_geom_voronoiEdges.push(edge);
	    return edge;
	  }
	  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
	    if (!edge.a && !edge.b) {
	      edge.a = vertex;
	      edge.l = lSite;
	      edge.r = rSite;
	    } else if (edge.l === rSite) {
	      edge.b = vertex;
	    } else {
	      edge.a = vertex;
	    }
	  }
	  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
	    var va = edge.a, vb = edge.b;
	    this.edge = edge;
	    this.site = lSite;
	    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
	  }
	  d3_geom_voronoiHalfEdge.prototype = {
	    start: function() {
	      return this.edge.l === this.site ? this.edge.a : this.edge.b;
	    },
	    end: function() {
	      return this.edge.l === this.site ? this.edge.b : this.edge.a;
	    }
	  };
	  function d3_geom_voronoiRedBlackTree() {
	    this._ = null;
	  }
	  function d3_geom_voronoiRedBlackNode(node) {
	    node.U = node.C = node.L = node.R = node.P = node.N = null;
	  }
	  d3_geom_voronoiRedBlackTree.prototype = {
	    insert: function(after, node) {
	      var parent, grandpa, uncle;
	      if (after) {
	        node.P = after;
	        node.N = after.N;
	        if (after.N) after.N.P = node;
	        after.N = node;
	        if (after.R) {
	          after = after.R;
	          while (after.L) after = after.L;
	          after.L = node;
	        } else {
	          after.R = node;
	        }
	        parent = after;
	      } else if (this._) {
	        after = d3_geom_voronoiRedBlackFirst(this._);
	        node.P = null;
	        node.N = after;
	        after.P = after.L = node;
	        parent = after;
	      } else {
	        node.P = node.N = null;
	        this._ = node;
	        parent = null;
	      }
	      node.L = node.R = null;
	      node.U = parent;
	      node.C = true;
	      after = node;
	      while (parent && parent.C) {
	        grandpa = parent.U;
	        if (parent === grandpa.L) {
	          uncle = grandpa.R;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.R) {
	              d3_geom_voronoiRedBlackRotateLeft(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
	          }
	        } else {
	          uncle = grandpa.L;
	          if (uncle && uncle.C) {
	            parent.C = uncle.C = false;
	            grandpa.C = true;
	            after = grandpa;
	          } else {
	            if (after === parent.L) {
	              d3_geom_voronoiRedBlackRotateRight(this, parent);
	              after = parent;
	              parent = after.U;
	            }
	            parent.C = false;
	            grandpa.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
	          }
	        }
	        parent = after.U;
	      }
	      this._.C = false;
	    },
	    remove: function(node) {
	      if (node.N) node.N.P = node.P;
	      if (node.P) node.P.N = node.N;
	      node.N = node.P = null;
	      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
	      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
	      if (parent) {
	        if (parent.L === node) parent.L = next; else parent.R = next;
	      } else {
	        this._ = next;
	      }
	      if (left && right) {
	        red = next.C;
	        next.C = node.C;
	        next.L = left;
	        left.U = next;
	        if (next !== right) {
	          parent = next.U;
	          next.U = node.U;
	          node = next.R;
	          parent.L = node;
	          next.R = right;
	          right.U = next;
	        } else {
	          next.U = parent;
	          parent = next;
	          node = next.R;
	        }
	      } else {
	        red = node.C;
	        node = next;
	      }
	      if (node) node.U = parent;
	      if (red) return;
	      if (node && node.C) {
	        node.C = false;
	        return;
	      }
	      do {
	        if (node === this._) break;
	        if (node === parent.L) {
	          sibling = parent.R;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            sibling = parent.R;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.R || !sibling.R.C) {
	              sibling.L.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateRight(this, sibling);
	              sibling = parent.R;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.R.C = false;
	            d3_geom_voronoiRedBlackRotateLeft(this, parent);
	            node = this._;
	            break;
	          }
	        } else {
	          sibling = parent.L;
	          if (sibling.C) {
	            sibling.C = false;
	            parent.C = true;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            sibling = parent.L;
	          }
	          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
	            if (!sibling.L || !sibling.L.C) {
	              sibling.R.C = false;
	              sibling.C = true;
	              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
	              sibling = parent.L;
	            }
	            sibling.C = parent.C;
	            parent.C = sibling.L.C = false;
	            d3_geom_voronoiRedBlackRotateRight(this, parent);
	            node = this._;
	            break;
	          }
	        }
	        sibling.C = true;
	        node = parent;
	        parent = parent.U;
	      } while (!node.C);
	      if (node) node.C = false;
	    }
	  };
	  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
	    var p = node, q = node.R, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.R = q.L;
	    if (p.R) p.R.U = p;
	    q.L = p;
	  }
	  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
	    var p = node, q = node.L, parent = p.U;
	    if (parent) {
	      if (parent.L === p) parent.L = q; else parent.R = q;
	    } else {
	      tree._ = q;
	    }
	    q.U = parent;
	    p.U = q;
	    p.L = q.R;
	    if (p.L) p.L.U = p;
	    q.R = p;
	  }
	  function d3_geom_voronoiRedBlackFirst(node) {
	    while (node.L) node = node.L;
	    return node;
	  }
	  function d3_geom_voronoi(sites, bbox) {
	    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
	    d3_geom_voronoiEdges = [];
	    d3_geom_voronoiCells = new Array(sites.length);
	    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
	    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
	    while (true) {
	      circle = d3_geom_voronoiFirstCircle;
	      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
	        if (site.x !== x0 || site.y !== y0) {
	          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
	          d3_geom_voronoiAddBeach(site);
	          x0 = site.x, y0 = site.y;
	        }
	        site = sites.pop();
	      } else if (circle) {
	        d3_geom_voronoiRemoveBeach(circle.arc);
	      } else {
	        break;
	      }
	    }
	    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
	    var diagram = {
	      cells: d3_geom_voronoiCells,
	      edges: d3_geom_voronoiEdges
	    };
	    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
	    return diagram;
	  }
	  function d3_geom_voronoiVertexOrder(a, b) {
	    return b.y - a.y || b.x - a.x;
	  }
	  d3.geom.voronoi = function(points) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
	    if (points) return voronoi(points);
	    function voronoi(data) {
	      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
	      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
	        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
	          var s = e.start();
	          return [ s.x, s.y ];
	        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
	        polygon.point = data[i];
	      });
	      return polygons;
	    }
	    function sites(data) {
	      return data.map(function(d, i) {
	        return {
	          x: Math.round(fx(d, i) / ε) * ε,
	          y: Math.round(fy(d, i) / ε) * ε,
	          i: i
	        };
	      });
	    }
	    voronoi.links = function(data) {
	      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
	        return edge.l && edge.r;
	      }).map(function(edge) {
	        return {
	          source: data[edge.l.i],
	          target: data[edge.r.i]
	        };
	      });
	    };
	    voronoi.triangles = function(data) {
	      var triangles = [];
	      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
	        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
	        while (++j < m) {
	          e0 = e1;
	          s0 = s1;
	          e1 = edges[j].edge;
	          s1 = e1.l === site ? e1.r : e1.l;
	          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
	            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
	          }
	        }
	      });
	      return triangles;
	    };
	    voronoi.x = function(_) {
	      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
	    };
	    voronoi.y = function(_) {
	      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
	    };
	    voronoi.clipExtent = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
	      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
	      return voronoi;
	    };
	    voronoi.size = function(_) {
	      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
	      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
	    };
	    return voronoi;
	  };
	  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
	  function d3_geom_voronoiTriangleArea(a, b, c) {
	    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
	  }
	  d3.geom.delaunay = function(vertices) {
	    return d3.geom.voronoi().triangles(vertices);
	  };
	  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
	    if (compat = arguments.length) {
	      x = d3_geom_quadtreeCompatX;
	      y = d3_geom_quadtreeCompatY;
	      if (compat === 3) {
	        y2 = y1;
	        x2 = x1;
	        y1 = x1 = 0;
	      }
	      return quadtree(points);
	    }
	    function quadtree(data) {
	      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
	      if (x1 != null) {
	        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
	      } else {
	        x2_ = y2_ = -(x1_ = y1_ = Infinity);
	        xs = [], ys = [];
	        n = data.length;
	        if (compat) for (i = 0; i < n; ++i) {
	          d = data[i];
	          if (d.x < x1_) x1_ = d.x;
	          if (d.y < y1_) y1_ = d.y;
	          if (d.x > x2_) x2_ = d.x;
	          if (d.y > y2_) y2_ = d.y;
	          xs.push(d.x);
	          ys.push(d.y);
	        } else for (i = 0; i < n; ++i) {
	          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
	          if (x_ < x1_) x1_ = x_;
	          if (y_ < y1_) y1_ = y_;
	          if (x_ > x2_) x2_ = x_;
	          if (y_ > y2_) y2_ = y_;
	          xs.push(x_);
	          ys.push(y_);
	        }
	      }
	      var dx = x2_ - x1_, dy = y2_ - y1_;
	      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
	      function insert(n, d, x, y, x1, y1, x2, y2) {
	        if (isNaN(x) || isNaN(y)) return;
	        if (n.leaf) {
	          var nx = n.x, ny = n.y;
	          if (nx != null) {
	            if (abs(nx - x) + abs(ny - y) < .01) {
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            } else {
	              var nPoint = n.point;
	              n.x = n.y = n.point = null;
	              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
	              insertChild(n, d, x, y, x1, y1, x2, y2);
	            }
	          } else {
	            n.x = x, n.y = y, n.point = d;
	          }
	        } else {
	          insertChild(n, d, x, y, x1, y1, x2, y2);
	        }
	      }
	      function insertChild(n, d, x, y, x1, y1, x2, y2) {
	        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;
	        n.leaf = false;
	        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
	        if (right) x1 = sx; else x2 = sx;
	        if (bottom) y1 = sy; else y2 = sy;
	        insert(n, d, x, y, x1, y1, x2, y2);
	      }
	      var root = d3_geom_quadtreeNode();
	      root.add = function(d) {
	        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
	      };
	      root.visit = function(f) {
	        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
	      };
	      i = -1;
	      if (x1 == null) {
	        while (++i < n) {
	          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
	        }
	        --i;
	      } else data.forEach(root.add);
	      xs = ys = data = d = null;
	      return root;
	    }
	    quadtree.x = function(_) {
	      return arguments.length ? (x = _, quadtree) : x;
	    };
	    quadtree.y = function(_) {
	      return arguments.length ? (y = _, quadtree) : y;
	    };
	    quadtree.extent = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
	      y2 = +_[1][1];
	      return quadtree;
	    };
	    quadtree.size = function(_) {
	      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
	      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
	      return quadtree;
	    };
	    return quadtree;
	  };
	  function d3_geom_quadtreeCompatX(d) {
	    return d.x;
	  }
	  function d3_geom_quadtreeCompatY(d) {
	    return d.y;
	  }
	  function d3_geom_quadtreeNode() {
	    return {
	      leaf: true,
	      nodes: [],
	      point: null,
	      x: null,
	      y: null
	    };
	  }
	  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
	    if (!f(node, x1, y1, x2, y2)) {
	      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
	      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
	      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
	      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
	      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
	    }
	  }
	  d3.interpolateRgb = d3_interpolateRgb;
	  function d3_interpolateRgb(a, b) {
	    a = d3.rgb(a);
	    b = d3.rgb(b);
	    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
	    return function(t) {
	      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
	    };
	  }
	  d3.interpolateObject = d3_interpolateObject;
	  function d3_interpolateObject(a, b) {
	    var i = {}, c = {}, k;
	    for (k in a) {
	      if (k in b) {
	        i[k] = d3_interpolate(a[k], b[k]);
	      } else {
	        c[k] = a[k];
	      }
	    }
	    for (k in b) {
	      if (!(k in a)) {
	        c[k] = b[k];
	      }
	    }
	    return function(t) {
	      for (k in i) c[k] = i[k](t);
	      return c;
	    };
	  }
	  d3.interpolateNumber = d3_interpolateNumber;
	  function d3_interpolateNumber(a, b) {
	    b -= a = +a;
	    return function(t) {
	      return a + b * t;
	    };
	  }
	  d3.interpolateString = d3_interpolateString;
	  function d3_interpolateString(a, b) {
	    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
	    a = a + "", b = b + "";
	    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
	      if ((bs = bm.index) > bi) {
	        bs = b.substring(bi, bs);
	        if (s[i]) s[i] += bs; else s[++i] = bs;
	      }
	      if ((am = am[0]) === (bm = bm[0])) {
	        if (s[i]) s[i] += bm; else s[++i] = bm;
	      } else {
	        s[++i] = null;
	        q.push({
	          i: i,
	          x: d3_interpolateNumber(am, bm)
	        });
	      }
	      bi = d3_interpolate_numberB.lastIndex;
	    }
	    if (bi < b.length) {
	      bs = b.substring(bi);
	      if (s[i]) s[i] += bs; else s[++i] = bs;
	    }
	    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
	      return b(t) + "";
	    }) : function() {
	      return b;
	    } : (b = q.length, function(t) {
	      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    });
	  }
	  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
	  d3.interpolate = d3_interpolate;
	  function d3_interpolate(a, b) {
	    var i = d3.interpolators.length, f;
	    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
	    return f;
	  }
	  d3.interpolators = [ function(a, b) {
	    var t = typeof b;
	    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
	  } ];
	  d3.interpolateArray = d3_interpolateArray;
	  function d3_interpolateArray(a, b) {
	    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
	    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
	    for (;i < na; ++i) c[i] = a[i];
	    for (;i < nb; ++i) c[i] = b[i];
	    return function(t) {
	      for (i = 0; i < n0; ++i) c[i] = x[i](t);
	      return c;
	    };
	  }
	  var d3_ease_default = function() {
	    return d3_identity;
	  };
	  var d3_ease = d3.map({
	    linear: d3_ease_default,
	    poly: d3_ease_poly,
	    quad: function() {
	      return d3_ease_quad;
	    },
	    cubic: function() {
	      return d3_ease_cubic;
	    },
	    sin: function() {
	      return d3_ease_sin;
	    },
	    exp: function() {
	      return d3_ease_exp;
	    },
	    circle: function() {
	      return d3_ease_circle;
	    },
	    elastic: d3_ease_elastic,
	    back: d3_ease_back,
	    bounce: function() {
	      return d3_ease_bounce;
	    }
	  });
	  var d3_ease_mode = d3.map({
	    "in": d3_identity,
	    out: d3_ease_reverse,
	    "in-out": d3_ease_reflect,
	    "out-in": function(f) {
	      return d3_ease_reflect(d3_ease_reverse(f));
	    }
	  });
	  d3.ease = function(name) {
	    var i = name.indexOf("-"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : "in";
	    t = d3_ease.get(t) || d3_ease_default;
	    m = d3_ease_mode.get(m) || d3_identity;
	    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
	  };
	  function d3_ease_clamp(f) {
	    return function(t) {
	      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
	    };
	  }
	  function d3_ease_reverse(f) {
	    return function(t) {
	      return 1 - f(1 - t);
	    };
	  }
	  function d3_ease_reflect(f) {
	    return function(t) {
	      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
	    };
	  }
	  function d3_ease_quad(t) {
	    return t * t;
	  }
	  function d3_ease_cubic(t) {
	    return t * t * t;
	  }
	  function d3_ease_cubicInOut(t) {
	    if (t <= 0) return 0;
	    if (t >= 1) return 1;
	    var t2 = t * t, t3 = t2 * t;
	    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
	  }
	  function d3_ease_poly(e) {
	    return function(t) {
	      return Math.pow(t, e);
	    };
	  }
	  function d3_ease_sin(t) {
	    return 1 - Math.cos(t * halfπ);
	  }
	  function d3_ease_exp(t) {
	    return Math.pow(2, 10 * (t - 1));
	  }
	  function d3_ease_circle(t) {
	    return 1 - Math.sqrt(1 - t * t);
	  }
	  function d3_ease_elastic(a, p) {
	    var s;
	    if (arguments.length < 2) p = .45;
	    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
	    return function(t) {
	      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
	    };
	  }
	  function d3_ease_back(s) {
	    if (!s) s = 1.70158;
	    return function(t) {
	      return t * t * ((s + 1) * t - s);
	    };
	  }
	  function d3_ease_bounce(t) {
	    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
	  }
	  d3.interpolateHcl = d3_interpolateHcl;
	  function d3_interpolateHcl(a, b) {
	    a = d3.hcl(a);
	    b = d3.hcl(b);
	    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
	    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateHsl = d3_interpolateHsl;
	  function d3_interpolateHsl(a, b) {
	    a = d3.hsl(a);
	    b = d3.hsl(b);
	    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
	    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
	    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
	    return function(t) {
	      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
	    };
	  }
	  d3.interpolateLab = d3_interpolateLab;
	  function d3_interpolateLab(a, b) {
	    a = d3.lab(a);
	    b = d3.lab(b);
	    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
	    return function(t) {
	      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
	    };
	  }
	  d3.interpolateRound = d3_interpolateRound;
	  function d3_interpolateRound(a, b) {
	    b -= a;
	    return function(t) {
	      return Math.round(a + b * t);
	    };
	  }
	  d3.transform = function(string) {
	    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
	    return (d3.transform = function(string) {
	      if (string != null) {
	        g.setAttribute("transform", string);
	        var t = g.transform.baseVal.consolidate();
	      }
	      return new d3_transform(t ? t.matrix : d3_transformIdentity);
	    })(string);
	  };
	  function d3_transform(m) {
	    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
	    if (r0[0] * r1[1] < r1[0] * r0[1]) {
	      r0[0] *= -1;
	      r0[1] *= -1;
	      kx *= -1;
	      kz *= -1;
	    }
	    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
	    this.translate = [ m.e, m.f ];
	    this.scale = [ kx, ky ];
	    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
	  }
	  d3_transform.prototype.toString = function() {
	    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
	  };
	  function d3_transformDot(a, b) {
	    return a[0] * b[0] + a[1] * b[1];
	  }
	  function d3_transformNormalize(a) {
	    var k = Math.sqrt(d3_transformDot(a, a));
	    if (k) {
	      a[0] /= k;
	      a[1] /= k;
	    }
	    return k;
	  }
	  function d3_transformCombine(a, b, k) {
	    a[0] += k * b[0];
	    a[1] += k * b[1];
	    return a;
	  }
	  var d3_transformIdentity = {
	    a: 1,
	    b: 0,
	    c: 0,
	    d: 1,
	    e: 0,
	    f: 0
	  };
	  d3.interpolateTransform = d3_interpolateTransform;
	  function d3_interpolateTransform(a, b) {
	    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
	    if (ta[0] != tb[0] || ta[1] != tb[1]) {
	      s.push("translate(", null, ",", null, ")");
	      q.push({
	        i: 1,
	        x: d3_interpolateNumber(ta[0], tb[0])
	      }, {
	        i: 3,
	        x: d3_interpolateNumber(ta[1], tb[1])
	      });
	    } else if (tb[0] || tb[1]) {
	      s.push("translate(" + tb + ")");
	    } else {
	      s.push("");
	    }
	    if (ra != rb) {
	      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
	      q.push({
	        i: s.push(s.pop() + "rotate(", null, ")") - 2,
	        x: d3_interpolateNumber(ra, rb)
	      });
	    } else if (rb) {
	      s.push(s.pop() + "rotate(" + rb + ")");
	    }
	    if (wa != wb) {
	      q.push({
	        i: s.push(s.pop() + "skewX(", null, ")") - 2,
	        x: d3_interpolateNumber(wa, wb)
	      });
	    } else if (wb) {
	      s.push(s.pop() + "skewX(" + wb + ")");
	    }
	    if (ka[0] != kb[0] || ka[1] != kb[1]) {
	      n = s.push(s.pop() + "scale(", null, ",", null, ")");
	      q.push({
	        i: n - 4,
	        x: d3_interpolateNumber(ka[0], kb[0])
	      }, {
	        i: n - 2,
	        x: d3_interpolateNumber(ka[1], kb[1])
	      });
	    } else if (kb[0] != 1 || kb[1] != 1) {
	      s.push(s.pop() + "scale(" + kb + ")");
	    }
	    n = q.length;
	    return function(t) {
	      var i = -1, o;
	      while (++i < n) s[(o = q[i]).i] = o.x(t);
	      return s.join("");
	    };
	  }
	  function d3_uninterpolateNumber(a, b) {
	    b = b - (a = +a) ? 1 / (b - a) : 0;
	    return function(x) {
	      return (x - a) * b;
	    };
	  }
	  function d3_uninterpolateClamp(a, b) {
	    b = b - (a = +a) ? 1 / (b - a) : 0;
	    return function(x) {
	      return Math.max(0, Math.min(1, (x - a) * b));
	    };
	  }
	  d3.layout = {};
	  d3.layout.bundle = function() {
	    return function(links) {
	      var paths = [], i = -1, n = links.length;
	      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
	      return paths;
	    };
	  };
	  function d3_layout_bundlePath(link) {
	    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
	    while (start !== lca) {
	      start = start.parent;
	      points.push(start);
	    }
	    var k = points.length;
	    while (end !== lca) {
	      points.splice(k, 0, end);
	      end = end.parent;
	    }
	    return points;
	  }
	  function d3_layout_bundleAncestors(node) {
	    var ancestors = [], parent = node.parent;
	    while (parent != null) {
	      ancestors.push(node);
	      node = parent;
	      parent = parent.parent;
	    }
	    ancestors.push(node);
	    return ancestors;
	  }
	  function d3_layout_bundleLeastCommonAncestor(a, b) {
	    if (a === b) return a;
	    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
	    while (aNode === bNode) {
	      sharedNode = aNode;
	      aNode = aNodes.pop();
	      bNode = bNodes.pop();
	    }
	    return sharedNode;
	  }
	  d3.layout.chord = function() {
	    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
	    function relayout() {
	      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
	      chords = [];
	      groups = [];
	      k = 0, i = -1;
	      while (++i < n) {
	        x = 0, j = -1;
	        while (++j < n) {
	          x += matrix[i][j];
	        }
	        groupSums.push(x);
	        subgroupIndex.push(d3.range(n));
	        k += x;
	      }
	      if (sortGroups) {
	        groupIndex.sort(function(a, b) {
	          return sortGroups(groupSums[a], groupSums[b]);
	        });
	      }
	      if (sortSubgroups) {
	        subgroupIndex.forEach(function(d, i) {
	          d.sort(function(a, b) {
	            return sortSubgroups(matrix[i][a], matrix[i][b]);
	          });
	        });
	      }
	      k = (τ - padding * n) / k;
	      x = 0, i = -1;
	      while (++i < n) {
	        x0 = x, j = -1;
	        while (++j < n) {
	          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
	          subgroups[di + "-" + dj] = {
	            index: di,
	            subindex: dj,
	            startAngle: a0,
	            endAngle: a1,
	            value: v
	          };
	        }
	        groups[di] = {
	          index: di,
	          startAngle: x0,
	          endAngle: x,
	          value: (x - x0) / k
	        };
	        x += padding;
	      }
	      i = -1;
	      while (++i < n) {
	        j = i - 1;
	        while (++j < n) {
	          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
	          if (source.value || target.value) {
	            chords.push(source.value < target.value ? {
	              source: target,
	              target: source
	            } : {
	              source: source,
	              target: target
	            });
	          }
	        }
	      }
	      if (sortChords) resort();
	    }
	    function resort() {
	      chords.sort(function(a, b) {
	        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
	      });
	    }
	    chord.matrix = function(x) {
	      if (!arguments.length) return matrix;
	      n = (matrix = x) && matrix.length;
	      chords = groups = null;
	      return chord;
	    };
	    chord.padding = function(x) {
	      if (!arguments.length) return padding;
	      padding = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortGroups = function(x) {
	      if (!arguments.length) return sortGroups;
	      sortGroups = x;
	      chords = groups = null;
	      return chord;
	    };
	    chord.sortSubgroups = function(x) {
	      if (!arguments.length) return sortSubgroups;
	      sortSubgroups = x;
	      chords = null;
	      return chord;
	    };
	    chord.sortChords = function(x) {
	      if (!arguments.length) return sortChords;
	      sortChords = x;
	      if (chords) resort();
	      return chord;
	    };
	    chord.chords = function() {
	      if (!chords) relayout();
	      return chords;
	    };
	    chord.groups = function() {
	      if (!groups) relayout();
	      return groups;
	    };
	    return chord;
	  };
	  d3.layout.force = function() {
	    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
	    function repulse(node) {
	      return function(quad, x1, _, x2) {
	        if (quad.point !== node) {
	          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
	          if (dw * dw / theta2 < dn) {
	            if (dn < chargeDistance2) {
	              var k = quad.charge / dn;
	              node.px -= dx * k;
	              node.py -= dy * k;
	            }
	            return true;
	          }
	          if (quad.point && dn && dn < chargeDistance2) {
	            var k = quad.pointCharge / dn;
	            node.px -= dx * k;
	            node.py -= dy * k;
	          }
	        }
	        return !quad.charge;
	      };
	    }
	    force.tick = function() {
	      if ((alpha *= .99) < .005) {
	        event.end({
	          type: "end",
	          alpha: alpha = 0
	        });
	        return true;
	      }
	      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        s = o.source;
	        t = o.target;
	        x = t.x - s.x;
	        y = t.y - s.y;
	        if (l = x * x + y * y) {
	          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
	          x *= l;
	          y *= l;
	          t.x -= x * (k = s.weight / (t.weight + s.weight));
	          t.y -= y * k;
	          s.x += x * (k = 1 - k);
	          s.y += y * k;
	        }
	      }
	      if (k = alpha * gravity) {
	        x = size[0] / 2;
	        y = size[1] / 2;
	        i = -1;
	        if (k) while (++i < n) {
	          o = nodes[i];
	          o.x += (x - o.x) * k;
	          o.y += (y - o.y) * k;
	        }
	      }
	      if (charge) {
	        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
	        i = -1;
	        while (++i < n) {
	          if (!(o = nodes[i]).fixed) {
	            q.visit(repulse(o));
	          }
	        }
	      }
	      i = -1;
	      while (++i < n) {
	        o = nodes[i];
	        if (o.fixed) {
	          o.x = o.px;
	          o.y = o.py;
	        } else {
	          o.x -= (o.px - (o.px = o.x)) * friction;
	          o.y -= (o.py - (o.py = o.y)) * friction;
	        }
	      }
	      event.tick({
	        type: "tick",
	        alpha: alpha
	      });
	    };
	    force.nodes = function(x) {
	      if (!arguments.length) return nodes;
	      nodes = x;
	      return force;
	    };
	    force.links = function(x) {
	      if (!arguments.length) return links;
	      links = x;
	      return force;
	    };
	    force.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return force;
	    };
	    force.linkDistance = function(x) {
	      if (!arguments.length) return linkDistance;
	      linkDistance = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.distance = force.linkDistance;
	    force.linkStrength = function(x) {
	      if (!arguments.length) return linkStrength;
	      linkStrength = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.friction = function(x) {
	      if (!arguments.length) return friction;
	      friction = +x;
	      return force;
	    };
	    force.charge = function(x) {
	      if (!arguments.length) return charge;
	      charge = typeof x === "function" ? x : +x;
	      return force;
	    };
	    force.chargeDistance = function(x) {
	      if (!arguments.length) return Math.sqrt(chargeDistance2);
	      chargeDistance2 = x * x;
	      return force;
	    };
	    force.gravity = function(x) {
	      if (!arguments.length) return gravity;
	      gravity = +x;
	      return force;
	    };
	    force.theta = function(x) {
	      if (!arguments.length) return Math.sqrt(theta2);
	      theta2 = x * x;
	      return force;
	    };
	    force.alpha = function(x) {
	      if (!arguments.length) return alpha;
	      x = +x;
	      if (alpha) {
	        if (x > 0) alpha = x; else alpha = 0;
	      } else if (x > 0) {
	        event.start({
	          type: "start",
	          alpha: alpha = x
	        });
	        d3.timer(force.tick);
	      }
	      return force;
	    };
	    force.start = function() {
	      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
	      for (i = 0; i < n; ++i) {
	        (o = nodes[i]).index = i;
	        o.weight = 0;
	      }
	      for (i = 0; i < m; ++i) {
	        o = links[i];
	        if (typeof o.source == "number") o.source = nodes[o.source];
	        if (typeof o.target == "number") o.target = nodes[o.target];
	        ++o.source.weight;
	        ++o.target.weight;
	      }
	      for (i = 0; i < n; ++i) {
	        o = nodes[i];
	        if (isNaN(o.x)) o.x = position("x", w);
	        if (isNaN(o.y)) o.y = position("y", h);
	        if (isNaN(o.px)) o.px = o.x;
	        if (isNaN(o.py)) o.py = o.y;
	      }
	      distances = [];
	      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
	      strengths = [];
	      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
	      charges = [];
	      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
	      function position(dimension, size) {
	        if (!neighbors) {
	          neighbors = new Array(n);
	          for (j = 0; j < n; ++j) {
	            neighbors[j] = [];
	          }
	          for (j = 0; j < m; ++j) {
	            var o = links[j];
	            neighbors[o.source.index].push(o.target);
	            neighbors[o.target.index].push(o.source);
	          }
	        }
	        var candidates = neighbors[i], j = -1, m = candidates.length, x;
	        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;
	        return Math.random() * size;
	      }
	      return force.resume();
	    };
	    force.resume = function() {
	      return force.alpha(.1);
	    };
	    force.stop = function() {
	      return force.alpha(0);
	    };
	    force.drag = function() {
	      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
	      if (!arguments.length) return drag;
	      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
	    };
	    function dragmove(d) {
	      d.px = d3.event.x, d.py = d3.event.y;
	      force.resume();
	    }
	    return d3.rebind(force, event, "on");
	  };
	  function d3_layout_forceDragstart(d) {
	    d.fixed |= 2;
	  }
	  function d3_layout_forceDragend(d) {
	    d.fixed &= ~6;
	  }
	  function d3_layout_forceMouseover(d) {
	    d.fixed |= 4;
	    d.px = d.x, d.py = d.y;
	  }
	  function d3_layout_forceMouseout(d) {
	    d.fixed &= ~4;
	  }
	  function d3_layout_forceAccumulate(quad, alpha, charges) {
	    var cx = 0, cy = 0;
	    quad.charge = 0;
	    if (!quad.leaf) {
	      var nodes = quad.nodes, n = nodes.length, i = -1, c;
	      while (++i < n) {
	        c = nodes[i];
	        if (c == null) continue;
	        d3_layout_forceAccumulate(c, alpha, charges);
	        quad.charge += c.charge;
	        cx += c.charge * c.cx;
	        cy += c.charge * c.cy;
	      }
	    }
	    if (quad.point) {
	      if (!quad.leaf) {
	        quad.point.x += Math.random() - .5;
	        quad.point.y += Math.random() - .5;
	      }
	      var k = alpha * charges[quad.point.index];
	      quad.charge += quad.pointCharge = k;
	      cx += k * quad.point.x;
	      cy += k * quad.point.y;
	    }
	    quad.cx = cx / quad.charge;
	    quad.cy = cy / quad.charge;
	  }
	  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
	  d3.layout.hierarchy = function() {
	    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
	    function hierarchy(root) {
	      var stack = [ root ], nodes = [], node;
	      root.depth = 0;
	      while ((node = stack.pop()) != null) {
	        nodes.push(node);
	        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
	          var n, childs, child;
	          while (--n >= 0) {
	            stack.push(child = childs[n]);
	            child.parent = node;
	            child.depth = node.depth + 1;
	          }
	          if (value) node.value = 0;
	          node.children = childs;
	        } else {
	          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          delete node.children;
	        }
	      }
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var childs, parent;
	        if (sort && (childs = node.children)) childs.sort(sort);
	        if (value && (parent = node.parent)) parent.value += node.value;
	      });
	      return nodes;
	    }
	    hierarchy.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return hierarchy;
	    };
	    hierarchy.children = function(x) {
	      if (!arguments.length) return children;
	      children = x;
	      return hierarchy;
	    };
	    hierarchy.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return hierarchy;
	    };
	    hierarchy.revalue = function(root) {
	      if (value) {
	        d3_layout_hierarchyVisitBefore(root, function(node) {
	          if (node.children) node.value = 0;
	        });
	        d3_layout_hierarchyVisitAfter(root, function(node) {
	          var parent;
	          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
	          if (parent = node.parent) parent.value += node.value;
	        });
	      }
	      return root;
	    };
	    return hierarchy;
	  };
	  function d3_layout_hierarchyRebind(object, hierarchy) {
	    d3.rebind(object, hierarchy, "sort", "children", "value");
	    object.nodes = object;
	    object.links = d3_layout_hierarchyLinks;
	    return object;
	  }
	  function d3_layout_hierarchyVisitBefore(node, callback) {
	    var nodes = [ node ];
	    while ((node = nodes.pop()) != null) {
	      callback(node);
	      if ((children = node.children) && (n = children.length)) {
	        var n, children;
	        while (--n >= 0) nodes.push(children[n]);
	      }
	    }
	  }
	  function d3_layout_hierarchyVisitAfter(node, callback) {
	    var nodes = [ node ], nodes2 = [];
	    while ((node = nodes.pop()) != null) {
	      nodes2.push(node);
	      if ((children = node.children) && (n = children.length)) {
	        var i = -1, n, children;
	        while (++i < n) nodes.push(children[i]);
	      }
	    }
	    while ((node = nodes2.pop()) != null) {
	      callback(node);
	    }
	  }
	  function d3_layout_hierarchyChildren(d) {
	    return d.children;
	  }
	  function d3_layout_hierarchyValue(d) {
	    return d.value;
	  }
	  function d3_layout_hierarchySort(a, b) {
	    return b.value - a.value;
	  }
	  function d3_layout_hierarchyLinks(nodes) {
	    return d3.merge(nodes.map(function(parent) {
	      return (parent.children || []).map(function(child) {
	        return {
	          source: parent,
	          target: child
	        };
	      });
	    }));
	  }
	  d3.layout.partition = function() {
	    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
	    function position(node, x, dx, dy) {
	      var children = node.children;
	      node.x = x;
	      node.y = node.depth * dy;
	      node.dx = dx;
	      node.dy = dy;
	      if (children && (n = children.length)) {
	        var i = -1, n, c, d;
	        dx = node.value ? dx / node.value : 0;
	        while (++i < n) {
	          position(c = children[i], x, d = c.value * dx, dy);
	          x += d;
	        }
	      }
	    }
	    function depth(node) {
	      var children = node.children, d = 0;
	      if (children && (n = children.length)) {
	        var i = -1, n;
	        while (++i < n) d = Math.max(d, depth(children[i]));
	      }
	      return 1 + d;
	    }
	    function partition(d, i) {
	      var nodes = hierarchy.call(this, d, i);
	      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
	      return nodes;
	    }
	    partition.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return partition;
	    };
	    return d3_layout_hierarchyRebind(partition, hierarchy);
	  };
	  d3.layout.pie = function() {
	    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;
	    function pie(data) {
	      var values = data.map(function(d, i) {
	        return +value.call(pie, d, i);
	      });
	      var a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle);
	      var k = ((typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);
	      var index = d3.range(data.length);
	      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
	        return values[j] - values[i];
	      } : function(i, j) {
	        return sort(data[i], data[j]);
	      });
	      var arcs = [];
	      index.forEach(function(i) {
	        var d;
	        arcs[i] = {
	          data: data[i],
	          value: d = values[i],
	          startAngle: a,
	          endAngle: a += d * k
	        };
	      });
	      return arcs;
	    }
	    pie.value = function(x) {
	      if (!arguments.length) return value;
	      value = x;
	      return pie;
	    };
	    pie.sort = function(x) {
	      if (!arguments.length) return sort;
	      sort = x;
	      return pie;
	    };
	    pie.startAngle = function(x) {
	      if (!arguments.length) return startAngle;
	      startAngle = x;
	      return pie;
	    };
	    pie.endAngle = function(x) {
	      if (!arguments.length) return endAngle;
	      endAngle = x;
	      return pie;
	    };
	    return pie;
	  };
	  var d3_layout_pieSortByValue = {};
	  d3.layout.stack = function() {
	    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
	    function stack(data, index) {
	      var series = data.map(function(d, i) {
	        return values.call(stack, d, i);
	      });
	      var points = series.map(function(d) {
	        return d.map(function(v, i) {
	          return [ x.call(stack, v, i), y.call(stack, v, i) ];
	        });
	      });
	      var orders = order.call(stack, points, index);
	      series = d3.permute(series, orders);
	      points = d3.permute(points, orders);
	      var offsets = offset.call(stack, points, index);
	      var n = series.length, m = series[0].length, i, j, o;
	      for (j = 0; j < m; ++j) {
	        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
	        for (i = 1; i < n; ++i) {
	          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
	        }
	      }
	      return data;
	    }
	    stack.values = function(x) {
	      if (!arguments.length) return values;
	      values = x;
	      return stack;
	    };
	    stack.order = function(x) {
	      if (!arguments.length) return order;
	      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
	      return stack;
	    };
	    stack.offset = function(x) {
	      if (!arguments.length) return offset;
	      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
	      return stack;
	    };
	    stack.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      return stack;
	    };
	    stack.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      return stack;
	    };
	    stack.out = function(z) {
	      if (!arguments.length) return out;
	      out = z;
	      return stack;
	    };
	    return stack;
	  };
	  function d3_layout_stackX(d) {
	    return d.x;
	  }
	  function d3_layout_stackY(d) {
	    return d.y;
	  }
	  function d3_layout_stackOut(d, y0, y) {
	    d.y0 = y0;
	    d.y = y;
	  }
	  var d3_layout_stackOrders = d3.map({
	    "inside-out": function(data) {
	      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
	        return max[a] - max[b];
	      }), top = 0, bottom = 0, tops = [], bottoms = [];
	      for (i = 0; i < n; ++i) {
	        j = index[i];
	        if (top < bottom) {
	          top += sums[j];
	          tops.push(j);
	        } else {
	          bottom += sums[j];
	          bottoms.push(j);
	        }
	      }
	      return bottoms.reverse().concat(tops);
	    },
	    reverse: function(data) {
	      return d3.range(data.length).reverse();
	    },
	    "default": d3_layout_stackOrderDefault
	  });
	  var d3_layout_stackOffsets = d3.map({
	    silhouette: function(data) {
	      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o > max) max = o;
	        sums.push(o);
	      }
	      for (j = 0; j < m; ++j) {
	        y0[j] = (max - sums[j]) / 2;
	      }
	      return y0;
	    },
	    wiggle: function(data) {
	      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
	      y0[0] = o = o0 = 0;
	      for (j = 1; j < m; ++j) {
	        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
	        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
	          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
	            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
	          }
	          s2 += s3 * data[i][j][1];
	        }
	        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
	        if (o < o0) o0 = o;
	      }
	      for (j = 0; j < m; ++j) y0[j] -= o0;
	      return y0;
	    },
	    expand: function(data) {
	      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
	      for (j = 0; j < m; ++j) {
	        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
	        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
	      }
	      for (j = 0; j < m; ++j) y0[j] = 0;
	      return y0;
	    },
	    zero: d3_layout_stackOffsetZero
	  });
	  function d3_layout_stackOrderDefault(data) {
	    return d3.range(data.length);
	  }
	  function d3_layout_stackOffsetZero(data) {
	    var j = -1, m = data[0].length, y0 = [];
	    while (++j < m) y0[j] = 0;
	    return y0;
	  }
	  function d3_layout_stackMaxIndex(array) {
	    var i = 1, j = 0, v = array[0][1], k, n = array.length;
	    for (;i < n; ++i) {
	      if ((k = array[i][1]) > v) {
	        j = i;
	        v = k;
	      }
	    }
	    return j;
	  }
	  function d3_layout_stackReduceSum(d) {
	    return d.reduce(d3_layout_stackSum, 0);
	  }
	  function d3_layout_stackSum(p, d) {
	    return p + d[1];
	  }
	  d3.layout.histogram = function() {
	    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
	    function histogram(data, i) {
	      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
	      while (++i < m) {
	        bin = bins[i] = [];
	        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
	        bin.y = 0;
	      }
	      if (m > 0) {
	        i = -1;
	        while (++i < n) {
	          x = values[i];
	          if (x >= range[0] && x <= range[1]) {
	            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
	            bin.y += k;
	            bin.push(data[i]);
	          }
	        }
	      }
	      return bins;
	    }
	    histogram.value = function(x) {
	      if (!arguments.length) return valuer;
	      valuer = x;
	      return histogram;
	    };
	    histogram.range = function(x) {
	      if (!arguments.length) return ranger;
	      ranger = d3_functor(x);
	      return histogram;
	    };
	    histogram.bins = function(x) {
	      if (!arguments.length) return binner;
	      binner = typeof x === "number" ? function(range) {
	        return d3_layout_histogramBinFixed(range, x);
	      } : d3_functor(x);
	      return histogram;
	    };
	    histogram.frequency = function(x) {
	      if (!arguments.length) return frequency;
	      frequency = !!x;
	      return histogram;
	    };
	    return histogram;
	  };
	  function d3_layout_histogramBinSturges(range, values) {
	    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
	  }
	  function d3_layout_histogramBinFixed(range, n) {
	    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
	    while (++x <= n) f[x] = m * x + b;
	    return f;
	  }
	  function d3_layout_histogramRange(values) {
	    return [ d3.min(values), d3.max(values) ];
	  }
	  d3.layout.pack = function() {
	    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
	    function pack(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
	        return radius;
	      };
	      root.x = root.y = 0;
	      d3_layout_hierarchyVisitAfter(root, function(d) {
	        d.r = +r(d.value);
	      });
	      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	      if (padding) {
	        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r += dr;
	        });
	        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
	        d3_layout_hierarchyVisitAfter(root, function(d) {
	          d.r -= dr;
	        });
	      }
	      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
	      return nodes;
	    }
	    pack.size = function(_) {
	      if (!arguments.length) return size;
	      size = _;
	      return pack;
	    };
	    pack.radius = function(_) {
	      if (!arguments.length) return radius;
	      radius = _ == null || typeof _ === "function" ? _ : +_;
	      return pack;
	    };
	    pack.padding = function(_) {
	      if (!arguments.length) return padding;
	      padding = +_;
	      return pack;
	    };
	    return d3_layout_hierarchyRebind(pack, hierarchy);
	  };
	  function d3_layout_packSort(a, b) {
	    return a.value - b.value;
	  }
	  function d3_layout_packInsert(a, b) {
	    var c = a._pack_next;
	    a._pack_next = b;
	    b._pack_prev = a;
	    b._pack_next = c;
	    c._pack_prev = b;
	  }
	  function d3_layout_packSplice(a, b) {
	    a._pack_next = b;
	    b._pack_prev = a;
	  }
	  function d3_layout_packIntersects(a, b) {
	    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
	    return .999 * dr * dr > dx * dx + dy * dy;
	  }
	  function d3_layout_packSiblings(node) {
	    if (!(nodes = node.children) || !(n = nodes.length)) return;
	    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
	    function bound(node) {
	      xMin = Math.min(node.x - node.r, xMin);
	      xMax = Math.max(node.x + node.r, xMax);
	      yMin = Math.min(node.y - node.r, yMin);
	      yMax = Math.max(node.y + node.r, yMax);
	    }
	    nodes.forEach(d3_layout_packLink);
	    a = nodes[0];
	    a.x = -a.r;
	    a.y = 0;
	    bound(a);
	    if (n > 1) {
	      b = nodes[1];
	      b.x = b.r;
	      b.y = 0;
	      bound(b);
	      if (n > 2) {
	        c = nodes[2];
	        d3_layout_packPlace(a, b, c);
	        bound(c);
	        d3_layout_packInsert(a, c);
	        a._pack_prev = c;
	        d3_layout_packInsert(c, b);
	        b = a._pack_next;
	        for (i = 3; i < n; i++) {
	          d3_layout_packPlace(a, b, c = nodes[i]);
	          var isect = 0, s1 = 1, s2 = 1;
	          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
	            if (d3_layout_packIntersects(j, c)) {
	              isect = 1;
	              break;
	            }
	          }
	          if (isect == 1) {
	            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
	              if (d3_layout_packIntersects(k, c)) {
	                break;
	              }
	            }
	          }
	          if (isect) {
	            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
	            i--;
	          } else {
	            d3_layout_packInsert(a, c);
	            b = c;
	            bound(c);
	          }
	        }
	      }
	    }
	    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
	    for (i = 0; i < n; i++) {
	      c = nodes[i];
	      c.x -= cx;
	      c.y -= cy;
	      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
	    }
	    node.r = cr;
	    nodes.forEach(d3_layout_packUnlink);
	  }
	  function d3_layout_packLink(node) {
	    node._pack_next = node._pack_prev = node;
	  }
	  function d3_layout_packUnlink(node) {
	    delete node._pack_next;
	    delete node._pack_prev;
	  }
	  function d3_layout_packTransform(node, x, y, k) {
	    var children = node.children;
	    node.x = x += k * node.x;
	    node.y = y += k * node.y;
	    node.r *= k;
	    if (children) {
	      var i = -1, n = children.length;
	      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
	    }
	  }
	  function d3_layout_packPlace(a, b, c) {
	    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
	    if (db && (dx || dy)) {
	      var da = b.r + c.r, dc = dx * dx + dy * dy;
	      da *= da;
	      db *= db;
	      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
	      c.x = a.x + x * dx + y * dy;
	      c.y = a.y + x * dy - y * dx;
	    } else {
	      c.x = a.x + db;
	      c.y = a.y;
	    }
	  }
	  d3.layout.tree = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
	    function tree(d, i) {
	      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
	      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
	      d3_layout_hierarchyVisitBefore(root1, secondWalk);
	      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
	        var left = root0, right = root0, bottom = root0;
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          if (node.x < left.x) left = node;
	          if (node.x > right.x) right = node;
	          if (node.depth > bottom.depth) bottom = node;
	        });
	        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
	        d3_layout_hierarchyVisitBefore(root0, function(node) {
	          node.x = (node.x + tx) * kx;
	          node.y = node.depth * ky;
	        });
	      }
	      return nodes;
	    }
	    function wrapTree(root0) {
	      var root1 = {
	        A: null,
	        children: [ root0 ]
	      }, queue = [ root1 ], node1;
	      while ((node1 = queue.pop()) != null) {
	        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
	          queue.push((children[i] = child = {
	            _: children[i],
	            parent: node1,
	            children: (child = children[i].children) && child.slice() || [],
	            A: null,
	            a: null,
	            z: 0,
	            m: 0,
	            c: 0,
	            s: 0,
	            t: null,
	            i: i
	          }).a = child);
	        }
	      }
	      return root1.children[0];
	    }
	    function firstWalk(v) {
	      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
	      if (children.length) {
	        d3_layout_treeShift(v);
	        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
	        if (w) {
	          v.z = w.z + separation(v._, w._);
	          v.m = v.z - midpoint;
	        } else {
	          v.z = midpoint;
	        }
	      } else if (w) {
	        v.z = w.z + separation(v._, w._);
	      }
	      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
	    }
	    function secondWalk(v) {
	      v._.x = v.z + v.parent.m;
	      v.m += v.parent.m;
	    }
	    function apportion(v, w, ancestor) {
	      if (w) {
	        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
	        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
	          vom = d3_layout_treeLeft(vom);
	          vop = d3_layout_treeRight(vop);
	          vop.a = v;
	          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
	          if (shift > 0) {
	            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
	            sip += shift;
	            sop += shift;
	          }
	          sim += vim.m;
	          sip += vip.m;
	          som += vom.m;
	          sop += vop.m;
	        }
	        if (vim && !d3_layout_treeRight(vop)) {
	          vop.t = vim;
	          vop.m += sim - sop;
	        }
	        if (vip && !d3_layout_treeLeft(vom)) {
	          vom.t = vip;
	          vom.m += sip - som;
	          ancestor = v;
	        }
	      }
	      return ancestor;
	    }
	    function sizeNode(node) {
	      node.x *= size[0];
	      node.y = node.depth * size[1];
	    }
	    tree.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return tree;
	    };
	    tree.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null ? sizeNode : null;
	      return tree;
	    };
	    tree.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) == null ? null : sizeNode;
	      return tree;
	    };
	    return d3_layout_hierarchyRebind(tree, hierarchy);
	  };
	  function d3_layout_treeSeparation(a, b) {
	    return a.parent == b.parent ? 1 : 2;
	  }
	  function d3_layout_treeLeft(v) {
	    var children = v.children;
	    return children.length ? children[0] : v.t;
	  }
	  function d3_layout_treeRight(v) {
	    var children = v.children, n;
	    return (n = children.length) ? children[n - 1] : v.t;
	  }
	  function d3_layout_treeMove(wm, wp, shift) {
	    var change = shift / (wp.i - wm.i);
	    wp.c -= change;
	    wp.s += shift;
	    wm.c += change;
	    wp.z += shift;
	    wp.m += shift;
	  }
	  function d3_layout_treeShift(v) {
	    var shift = 0, change = 0, children = v.children, i = children.length, w;
	    while (--i >= 0) {
	      w = children[i];
	      w.z += shift;
	      w.m += shift;
	      shift += w.s + (change += w.c);
	    }
	  }
	  function d3_layout_treeAncestor(vim, v, ancestor) {
	    return vim.a.parent === v.parent ? vim.a : ancestor;
	  }
	  d3.layout.cluster = function() {
	    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
	    function cluster(d, i) {
	      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
	      d3_layout_hierarchyVisitAfter(root, function(node) {
	        var children = node.children;
	        if (children && children.length) {
	          node.x = d3_layout_clusterX(children);
	          node.y = d3_layout_clusterY(children);
	        } else {
	          node.x = previousNode ? x += separation(node, previousNode) : 0;
	          node.y = 0;
	          previousNode = node;
	        }
	      });
	      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
	      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
	        node.x = (node.x - root.x) * size[0];
	        node.y = (root.y - node.y) * size[1];
	      } : function(node) {
	        node.x = (node.x - x0) / (x1 - x0) * size[0];
	        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
	      });
	      return nodes;
	    }
	    cluster.separation = function(x) {
	      if (!arguments.length) return separation;
	      separation = x;
	      return cluster;
	    };
	    cluster.size = function(x) {
	      if (!arguments.length) return nodeSize ? null : size;
	      nodeSize = (size = x) == null;
	      return cluster;
	    };
	    cluster.nodeSize = function(x) {
	      if (!arguments.length) return nodeSize ? size : null;
	      nodeSize = (size = x) != null;
	      return cluster;
	    };
	    return d3_layout_hierarchyRebind(cluster, hierarchy);
	  };
	  function d3_layout_clusterY(children) {
	    return 1 + d3.max(children, function(child) {
	      return child.y;
	    });
	  }
	  function d3_layout_clusterX(children) {
	    return children.reduce(function(x, child) {
	      return x + child.x;
	    }, 0) / children.length;
	  }
	  function d3_layout_clusterLeft(node) {
	    var children = node.children;
	    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
	  }
	  function d3_layout_clusterRight(node) {
	    var children = node.children, n;
	    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
	  }
	  d3.layout.treemap = function() {
	    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
	    function scale(children, k) {
	      var i = -1, n = children.length, child, area;
	      while (++i < n) {
	        area = (child = children[i]).value * (k < 0 ? 0 : k);
	        child.area = isNaN(area) || area <= 0 ? 0 : area;
	      }
	    }
	    function squarify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while ((n = remaining.length) > 0) {
	          row.push(child = remaining[n - 1]);
	          row.area += child.area;
	          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
	            remaining.pop();
	            best = score;
	          } else {
	            row.area -= row.pop().area;
	            position(row, u, rect, false);
	            u = Math.min(rect.dx, rect.dy);
	            row.length = row.area = 0;
	            best = Infinity;
	          }
	        }
	        if (row.length) {
	          position(row, u, rect, true);
	          row.length = row.area = 0;
	        }
	        children.forEach(squarify);
	      }
	    }
	    function stickify(node) {
	      var children = node.children;
	      if (children && children.length) {
	        var rect = pad(node), remaining = children.slice(), child, row = [];
	        scale(remaining, rect.dx * rect.dy / node.value);
	        row.area = 0;
	        while (child = remaining.pop()) {
	          row.push(child);
	          row.area += child.area;
	          if (child.z != null) {
	            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
	            row.length = row.area = 0;
	          }
	        }
	        children.forEach(stickify);
	      }
	    }
	    function worst(row, u) {
	      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
	      while (++i < n) {
	        if (!(r = row[i].area)) continue;
	        if (r < rmin) rmin = r;
	        if (r > rmax) rmax = r;
	      }
	      s *= s;
	      u *= u;
	      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
	    }
	    function position(row, u, rect, flush) {
	      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
	      if (u == rect.dx) {
	        if (flush || v > rect.dy) v = rect.dy;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dy = v;
	          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
	        }
	        o.z = true;
	        o.dx += rect.x + rect.dx - x;
	        rect.y += v;
	        rect.dy -= v;
	      } else {
	        if (flush || v > rect.dx) v = rect.dx;
	        while (++i < n) {
	          o = row[i];
	          o.x = x;
	          o.y = y;
	          o.dx = v;
	          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
	        }
	        o.z = false;
	        o.dy += rect.y + rect.dy - y;
	        rect.x += v;
	        rect.dx -= v;
	      }
	    }
	    function treemap(d) {
	      var nodes = stickies || hierarchy(d), root = nodes[0];
	      root.x = 0;
	      root.y = 0;
	      root.dx = size[0];
	      root.dy = size[1];
	      if (stickies) hierarchy.revalue(root);
	      scale([ root ], root.dx * root.dy / root.value);
	      (stickies ? stickify : squarify)(root);
	      if (sticky) stickies = nodes;
	      return nodes;
	    }
	    treemap.size = function(x) {
	      if (!arguments.length) return size;
	      size = x;
	      return treemap;
	    };
	    treemap.padding = function(x) {
	      if (!arguments.length) return padding;
	      function padFunction(node) {
	        var p = x.call(treemap, node, node.depth);
	        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
	      }
	      function padConstant(node) {
	        return d3_layout_treemapPad(node, x);
	      }
	      var type;
	      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
	      padConstant) : padConstant;
	      return treemap;
	    };
	    treemap.round = function(x) {
	      if (!arguments.length) return round != Number;
	      round = x ? Math.round : Number;
	      return treemap;
	    };
	    treemap.sticky = function(x) {
	      if (!arguments.length) return sticky;
	      sticky = x;
	      stickies = null;
	      return treemap;
	    };
	    treemap.ratio = function(x) {
	      if (!arguments.length) return ratio;
	      ratio = x;
	      return treemap;
	    };
	    treemap.mode = function(x) {
	      if (!arguments.length) return mode;
	      mode = x + "";
	      return treemap;
	    };
	    return d3_layout_hierarchyRebind(treemap, hierarchy);
	  };
	  function d3_layout_treemapPadNull(node) {
	    return {
	      x: node.x,
	      y: node.y,
	      dx: node.dx,
	      dy: node.dy
	    };
	  }
	  function d3_layout_treemapPad(node, padding) {
	    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
	    if (dx < 0) {
	      x += dx / 2;
	      dx = 0;
	    }
	    if (dy < 0) {
	      y += dy / 2;
	      dy = 0;
	    }
	    return {
	      x: x,
	      y: y,
	      dx: dx,
	      dy: dy
	    };
	  }
	  d3.random = {
	    normal: function(µ, σ) {
	      var n = arguments.length;
	      if (n < 2) σ = 1;
	      if (n < 1) µ = 0;
	      return function() {
	        var x, y, r;
	        do {
	          x = Math.random() * 2 - 1;
	          y = Math.random() * 2 - 1;
	          r = x * x + y * y;
	        } while (!r || r > 1);
	        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
	      };
	    },
	    logNormal: function() {
	      var random = d3.random.normal.apply(d3, arguments);
	      return function() {
	        return Math.exp(random());
	      };
	    },
	    bates: function(m) {
	      var random = d3.random.irwinHall(m);
	      return function() {
	        return random() / m;
	      };
	    },
	    irwinHall: function(m) {
	      return function() {
	        for (var s = 0, j = 0; j < m; j++) s += Math.random();
	        return s;
	      };
	    }
	  };
	  d3.scale = {};
	  function d3_scaleExtent(domain) {
	    var start = domain[0], stop = domain[domain.length - 1];
	    return start < stop ? [ start, stop ] : [ stop, start ];
	  }
	  function d3_scaleRange(scale) {
	    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
	  }
	  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
	    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
	    return function(x) {
	      return i(u(x));
	    };
	  }
	  function d3_scale_nice(domain, nice) {
	    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
	    if (x1 < x0) {
	      dx = i0, i0 = i1, i1 = dx;
	      dx = x0, x0 = x1, x1 = dx;
	    }
	    domain[i0] = nice.floor(x0);
	    domain[i1] = nice.ceil(x1);
	    return domain;
	  }
	  function d3_scale_niceStep(step) {
	    return step ? {
	      floor: function(x) {
	        return Math.floor(x / step) * step;
	      },
	      ceil: function(x) {
	        return Math.ceil(x / step) * step;
	      }
	    } : d3_scale_niceIdentity;
	  }
	  var d3_scale_niceIdentity = {
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
	    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
	    if (domain[k] < domain[0]) {
	      domain = domain.slice().reverse();
	      range = range.slice().reverse();
	    }
	    while (++j <= k) {
	      u.push(uninterpolate(domain[j - 1], domain[j]));
	      i.push(interpolate(range[j - 1], range[j]));
	    }
	    return function(x) {
	      var j = d3.bisect(domain, x, 1, k) - 1;
	      return i[j](u[j](x));
	    };
	  }
	  d3.scale.linear = function() {
	    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
	  };
	  function d3_scale_linear(domain, range, interpolate, clamp) {
	    var output, input;
	    function rescale() {
	      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
	      output = linear(domain, range, uninterpolate, interpolate);
	      input = linear(range, domain, uninterpolate, d3_interpolate);
	      return scale;
	    }
	    function scale(x) {
	      return output(x);
	    }
	    scale.invert = function(y) {
	      return input(y);
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(Number);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.rangeRound = function(x) {
	      return scale.range(x).interpolate(d3_interpolateRound);
	    };
	    scale.clamp = function(x) {
	      if (!arguments.length) return clamp;
	      clamp = x;
	      return rescale();
	    };
	    scale.interpolate = function(x) {
	      if (!arguments.length) return interpolate;
	      interpolate = x;
	      return rescale();
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      d3_scale_linearNice(domain, m);
	      return rescale();
	    };
	    scale.copy = function() {
	      return d3_scale_linear(domain, range, interpolate, clamp);
	    };
	    return rescale();
	  }
	  function d3_scale_linearRebind(scale, linear) {
	    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
	  }
	  function d3_scale_linearNice(domain, m) {
	    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
	  }
	  function d3_scale_linearTickRange(domain, m) {
	    if (m == null) m = 10;
	    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
	    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
	    extent[0] = Math.ceil(extent[0] / step) * step;
	    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
	    extent[2] = step;
	    return extent;
	  }
	  function d3_scale_linearTicks(domain, m) {
	    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
	  }
	  function d3_scale_linearTickFormat(domain, m, format) {
	    var range = d3_scale_linearTickRange(domain, m);
	    if (format) {
	      var match = d3_format_re.exec(format);
	      match.shift();
	      if (match[8] === "s") {
	        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
	        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
	        match[8] = "f";
	        format = d3.format(match.join(""));
	        return function(d) {
	          return format(prefix.scale(d)) + prefix.symbol;
	        };
	      }
	      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
	      format = match.join("");
	    } else {
	      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
	    }
	    return d3.format(format);
	  }
	  var d3_scale_linearFormatSignificant = {
	    s: 1,
	    g: 1,
	    p: 1,
	    r: 1,
	    e: 1
	  };
	  function d3_scale_linearPrecision(value) {
	    return -Math.floor(Math.log(value) / Math.LN10 + .01);
	  }
	  function d3_scale_linearFormatPrecision(type, range) {
	    var p = d3_scale_linearPrecision(range[2]);
	    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
	  }
	  d3.scale.log = function() {
	    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
	  };
	  function d3_scale_log(linear, base, positive, domain) {
	    function log(x) {
	      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
	    }
	    function pow(x) {
	      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
	    }
	    function scale(x) {
	      return linear(log(x));
	    }
	    scale.invert = function(x) {
	      return pow(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      positive = x[0] >= 0;
	      linear.domain((domain = x.map(Number)).map(log));
	      return scale;
	    };
	    scale.base = function(_) {
	      if (!arguments.length) return base;
	      base = +_;
	      linear.domain(domain.map(log));
	      return scale;
	    };
	    scale.nice = function() {
	      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
	      linear.domain(niced);
	      domain = niced.map(pow);
	      return scale;
	    };
	    scale.ticks = function() {
	      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
	      if (isFinite(j - i)) {
	        if (positive) {
	          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
	          ticks.push(pow(i));
	        } else {
	          ticks.push(pow(i));
	          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
	        }
	        for (i = 0; ticks[i] < u; i++) {}
	        for (j = ticks.length; ticks[j - 1] > v; j--) {}
	        ticks = ticks.slice(i, j);
	      }
	      return ticks;
	    };
	    scale.tickFormat = function(n, format) {
	      if (!arguments.length) return d3_scale_logFormat;
	      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
	      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, 
	      Math.floor), e;
	      return function(d) {
	        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
	      };
	    };
	    scale.copy = function() {
	      return d3_scale_log(linear.copy(), base, positive, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
	    floor: function(x) {
	      return -Math.ceil(-x);
	    },
	    ceil: function(x) {
	      return -Math.floor(-x);
	    }
	  };
	  d3.scale.pow = function() {
	    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
	  };
	  function d3_scale_pow(linear, exponent, domain) {
	    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
	    function scale(x) {
	      return linear(powp(x));
	    }
	    scale.invert = function(x) {
	      return powb(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      linear.domain((domain = x.map(Number)).map(powp));
	      return scale;
	    };
	    scale.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    scale.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    scale.nice = function(m) {
	      return scale.domain(d3_scale_linearNice(domain, m));
	    };
	    scale.exponent = function(x) {
	      if (!arguments.length) return exponent;
	      powp = d3_scale_powPow(exponent = x);
	      powb = d3_scale_powPow(1 / exponent);
	      linear.domain(domain.map(powp));
	      return scale;
	    };
	    scale.copy = function() {
	      return d3_scale_pow(linear.copy(), exponent, domain);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_scale_powPow(e) {
	    return function(x) {
	      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
	    };
	  }
	  d3.scale.sqrt = function() {
	    return d3.scale.pow().exponent(.5);
	  };
	  d3.scale.ordinal = function() {
	    return d3_scale_ordinal([], {
	      t: "range",
	      a: [ [] ]
	    });
	  };
	  function d3_scale_ordinal(domain, ranger) {
	    var index, range, rangeBand;
	    function scale(x) {
	      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
	    }
	    function steps(start, step) {
	      return d3.range(domain.length).map(function(i) {
	        return start + step * i;
	      });
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = [];
	      index = new d3_Map();
	      var i = -1, n = x.length, xi;
	      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
	      return scale[ranger.t].apply(scale, ranger.a);
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      rangeBand = 0;
	      ranger = {
	        t: "range",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangePoints = function(x, padding) {
	      if (arguments.length < 2) padding = 0;
	      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);
	      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);
	      rangeBand = 0;
	      ranger = {
	        t: "rangePoints",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
	      range = steps(start + step * outerPadding, step);
	      if (reverse) range.reverse();
	      rangeBand = step * (1 - padding);
	      ranger = {
	        t: "rangeBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeRoundBands = function(x, padding, outerPadding) {
	      if (arguments.length < 2) padding = 0;
	      if (arguments.length < 3) outerPadding = padding;
	      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;
	      range = steps(start + Math.round(error / 2), step);
	      if (reverse) range.reverse();
	      rangeBand = Math.round(step * (1 - padding));
	      ranger = {
	        t: "rangeRoundBands",
	        a: arguments
	      };
	      return scale;
	    };
	    scale.rangeBand = function() {
	      return rangeBand;
	    };
	    scale.rangeExtent = function() {
	      return d3_scaleExtent(ranger.a[0]);
	    };
	    scale.copy = function() {
	      return d3_scale_ordinal(domain, ranger);
	    };
	    return scale.domain(domain);
	  }
	  d3.scale.category10 = function() {
	    return d3.scale.ordinal().range(d3_category10);
	  };
	  d3.scale.category20 = function() {
	    return d3.scale.ordinal().range(d3_category20);
	  };
	  d3.scale.category20b = function() {
	    return d3.scale.ordinal().range(d3_category20b);
	  };
	  d3.scale.category20c = function() {
	    return d3.scale.ordinal().range(d3_category20c);
	  };
	  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
	  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
	  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
	  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
	  d3.scale.quantile = function() {
	    return d3_scale_quantile([], []);
	  };
	  function d3_scale_quantile(domain, range) {
	    var thresholds;
	    function rescale() {
	      var k = 0, q = range.length;
	      thresholds = [];
	      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
	      return scale;
	    }
	    function scale(x) {
	      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.filter(d3_number).sort(d3_ascending);
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.quantiles = function() {
	      return thresholds;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantile(domain, range);
	    };
	    return rescale();
	  }
	  d3.scale.quantize = function() {
	    return d3_scale_quantize(0, 1, [ 0, 1 ]);
	  };
	  function d3_scale_quantize(x0, x1, range) {
	    var kx, i;
	    function scale(x) {
	      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
	    }
	    function rescale() {
	      kx = range.length / (x1 - x0);
	      i = range.length - 1;
	      return scale;
	    }
	    scale.domain = function(x) {
	      if (!arguments.length) return [ x0, x1 ];
	      x0 = +x[0];
	      x1 = +x[x.length - 1];
	      return rescale();
	    };
	    scale.range = function(x) {
	      if (!arguments.length) return range;
	      range = x;
	      return rescale();
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      y = y < 0 ? NaN : y / kx + x0;
	      return [ y, y + 1 / kx ];
	    };
	    scale.copy = function() {
	      return d3_scale_quantize(x0, x1, range);
	    };
	    return rescale();
	  }
	  d3.scale.threshold = function() {
	    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
	  };
	  function d3_scale_threshold(domain, range) {
	    function scale(x) {
	      if (x <= x) return range[d3.bisect(domain, x)];
	    }
	    scale.domain = function(_) {
	      if (!arguments.length) return domain;
	      domain = _;
	      return scale;
	    };
	    scale.range = function(_) {
	      if (!arguments.length) return range;
	      range = _;
	      return scale;
	    };
	    scale.invertExtent = function(y) {
	      y = range.indexOf(y);
	      return [ domain[y - 1], domain[y] ];
	    };
	    scale.copy = function() {
	      return d3_scale_threshold(domain, range);
	    };
	    return scale;
	  }
	  d3.scale.identity = function() {
	    return d3_scale_identity([ 0, 1 ]);
	  };
	  function d3_scale_identity(domain) {
	    function identity(x) {
	      return +x;
	    }
	    identity.invert = identity;
	    identity.domain = identity.range = function(x) {
	      if (!arguments.length) return domain;
	      domain = x.map(identity);
	      return identity;
	    };
	    identity.ticks = function(m) {
	      return d3_scale_linearTicks(domain, m);
	    };
	    identity.tickFormat = function(m, format) {
	      return d3_scale_linearTickFormat(domain, m, format);
	    };
	    identity.copy = function() {
	      return d3_scale_identity(domain);
	    };
	    return identity;
	  }
	  d3.svg = {};
	  d3.svg.arc = function() {
	    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function arc() {
	      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, 
	      a0 = a1, a1 = da), a1 - a0), df = da < π ? "0" : "1", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);
	      return da >= d3_svg_arcMax ? r0 ? "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "M0," + r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + -r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + r0 + "Z" : "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "Z" : r0 ? "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L" + r0 * c1 + "," + r0 * s1 + "A" + r0 + "," + r0 + " 0 " + df + ",0 " + r0 * c0 + "," + r0 * s0 + "Z" : "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L0,0" + "Z";
	    }
	    arc.innerRadius = function(v) {
	      if (!arguments.length) return innerRadius;
	      innerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.outerRadius = function(v) {
	      if (!arguments.length) return outerRadius;
	      outerRadius = d3_functor(v);
	      return arc;
	    };
	    arc.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return arc;
	    };
	    arc.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return arc;
	    };
	    arc.centroid = function() {
	      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;
	      return [ Math.cos(a) * r, Math.sin(a) * r ];
	    };
	    return arc;
	  };
	  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;
	  function d3_svg_arcInnerRadius(d) {
	    return d.innerRadius;
	  }
	  function d3_svg_arcOuterRadius(d) {
	    return d.outerRadius;
	  }
	  function d3_svg_arcStartAngle(d) {
	    return d.startAngle;
	  }
	  function d3_svg_arcEndAngle(d) {
	    return d.endAngle;
	  }
	  function d3_svg_line(projection) {
	    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
	    function line(data) {
	      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
	      function segment() {
	        segments.push("M", interpolate(projection(points), tension));
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
	        } else if (points.length) {
	          segment();
	          points = [];
	        }
	      }
	      if (points.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    line.x = function(_) {
	      if (!arguments.length) return x;
	      x = _;
	      return line;
	    };
	    line.y = function(_) {
	      if (!arguments.length) return y;
	      y = _;
	      return line;
	    };
	    line.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return line;
	    };
	    line.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      return line;
	    };
	    line.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return line;
	    };
	    return line;
	  }
	  d3.svg.line = function() {
	    return d3_svg_line(d3_identity);
	  };
	  var d3_svg_lineInterpolators = d3.map({
	    linear: d3_svg_lineLinear,
	    "linear-closed": d3_svg_lineLinearClosed,
	    step: d3_svg_lineStep,
	    "step-before": d3_svg_lineStepBefore,
	    "step-after": d3_svg_lineStepAfter,
	    basis: d3_svg_lineBasis,
	    "basis-open": d3_svg_lineBasisOpen,
	    "basis-closed": d3_svg_lineBasisClosed,
	    bundle: d3_svg_lineBundle,
	    cardinal: d3_svg_lineCardinal,
	    "cardinal-open": d3_svg_lineCardinalOpen,
	    "cardinal-closed": d3_svg_lineCardinalClosed,
	    monotone: d3_svg_lineMonotone
	  });
	  d3_svg_lineInterpolators.forEach(function(key, value) {
	    value.key = key;
	    value.closed = /-closed$/.test(key);
	  });
	  function d3_svg_lineLinear(points) {
	    return points.join("L");
	  }
	  function d3_svg_lineLinearClosed(points) {
	    return d3_svg_lineLinear(points) + "Z";
	  }
	  function d3_svg_lineStep(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
	    if (n > 1) path.push("H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepBefore(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
	    return path.join("");
	  }
	  function d3_svg_lineStepAfter(points) {
	    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
	    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
	    return path.join("");
	  }
	  function d3_svg_lineCardinalOpen(points, tension) {
	    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineCardinalClosed(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
	    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
	  }
	  function d3_svg_lineCardinal(points, tension) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
	  }
	  function d3_svg_lineHermite(points, tangents) {
	    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
	      return d3_svg_lineLinear(points);
	    }
	    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
	    if (quad) {
	      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
	      p0 = points[1];
	      pi = 2;
	    }
	    if (tangents.length > 1) {
	      t = tangents[1];
	      p = points[pi];
	      pi++;
	      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      for (var i = 2; i < tangents.length; i++, pi++) {
	        p = points[pi];
	        t = tangents[i];
	        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
	      }
	    }
	    if (quad) {
	      var lp = points[pi];
	      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
	    }
	    return path;
	  }
	  function d3_svg_lineCardinalTangents(points, tension) {
	    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
	    while (++i < n) {
	      p0 = p1;
	      p1 = p2;
	      p2 = points[i];
	      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineBasis(points) {
	    if (points.length < 3) return d3_svg_lineLinear(points);
	    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    points.push(points[n - 1]);
	    while (++i <= n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    points.pop();
	    path.push("L", pi);
	    return path.join("");
	  }
	  function d3_svg_lineBasisOpen(points) {
	    if (points.length < 4) return d3_svg_lineLinear(points);
	    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
	    while (++i < 3) {
	      pi = points[i];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
	    --i;
	    while (++i < n) {
	      pi = points[i];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBasisClosed(points) {
	    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
	    while (++i < 4) {
	      pi = points[i % n];
	      px.push(pi[0]);
	      py.push(pi[1]);
	    }
	    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
	    --i;
	    while (++i < m) {
	      pi = points[i % n];
	      px.shift();
	      px.push(pi[0]);
	      py.shift();
	      py.push(pi[1]);
	      d3_svg_lineBasisBezier(path, px, py);
	    }
	    return path.join("");
	  }
	  function d3_svg_lineBundle(points, tension) {
	    var n = points.length - 1;
	    if (n) {
	      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
	      while (++i <= n) {
	        p = points[i];
	        t = i / n;
	        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
	        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
	      }
	    }
	    return d3_svg_lineBasis(points);
	  }
	  function d3_svg_lineDot4(a, b) {
	    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
	  }
	  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
	  function d3_svg_lineBasisBezier(path, x, y) {
	    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
	  }
	  function d3_svg_lineSlope(p0, p1) {
	    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
	  }
	  function d3_svg_lineFiniteDifferences(points) {
	    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
	    while (++i < j) {
	      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
	    }
	    m[i] = d;
	    return m;
	  }
	  function d3_svg_lineMonotoneTangents(points) {
	    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
	    while (++i < j) {
	      d = d3_svg_lineSlope(points[i], points[i + 1]);
	      if (abs(d) < ε) {
	        m[i] = m[i + 1] = 0;
	      } else {
	        a = m[i] / d;
	        b = m[i + 1] / d;
	        s = a * a + b * b;
	        if (s > 9) {
	          s = d * 3 / Math.sqrt(s);
	          m[i] = s * a;
	          m[i + 1] = s * b;
	        }
	      }
	    }
	    i = -1;
	    while (++i <= j) {
	      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
	      tangents.push([ s || 0, m[i] * s || 0 ]);
	    }
	    return tangents;
	  }
	  function d3_svg_lineMonotone(points) {
	    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
	  }
	  d3.svg.line.radial = function() {
	    var line = d3_svg_line(d3_svg_lineRadial);
	    line.radius = line.x, delete line.x;
	    line.angle = line.y, delete line.y;
	    return line;
	  };
	  function d3_svg_lineRadial(points) {
	    var point, i = -1, n = points.length, r, a;
	    while (++i < n) {
	      point = points[i];
	      r = point[0];
	      a = point[1] + d3_svg_arcOffset;
	      point[0] = r * Math.cos(a);
	      point[1] = r * Math.sin(a);
	    }
	    return points;
	  }
	  function d3_svg_area(projection) {
	    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
	    function area(data) {
	      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
	        return x;
	      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
	        return y;
	      } : d3_functor(y1), x, y;
	      function segment() {
	        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
	      }
	      while (++i < n) {
	        if (defined.call(this, d = data[i], i)) {
	          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
	          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
	        } else if (points0.length) {
	          segment();
	          points0 = [];
	          points1 = [];
	        }
	      }
	      if (points0.length) segment();
	      return segments.length ? segments.join("") : null;
	    }
	    area.x = function(_) {
	      if (!arguments.length) return x1;
	      x0 = x1 = _;
	      return area;
	    };
	    area.x0 = function(_) {
	      if (!arguments.length) return x0;
	      x0 = _;
	      return area;
	    };
	    area.x1 = function(_) {
	      if (!arguments.length) return x1;
	      x1 = _;
	      return area;
	    };
	    area.y = function(_) {
	      if (!arguments.length) return y1;
	      y0 = y1 = _;
	      return area;
	    };
	    area.y0 = function(_) {
	      if (!arguments.length) return y0;
	      y0 = _;
	      return area;
	    };
	    area.y1 = function(_) {
	      if (!arguments.length) return y1;
	      y1 = _;
	      return area;
	    };
	    area.defined = function(_) {
	      if (!arguments.length) return defined;
	      defined = _;
	      return area;
	    };
	    area.interpolate = function(_) {
	      if (!arguments.length) return interpolateKey;
	      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
	      interpolateReverse = interpolate.reverse || interpolate;
	      L = interpolate.closed ? "M" : "L";
	      return area;
	    };
	    area.tension = function(_) {
	      if (!arguments.length) return tension;
	      tension = _;
	      return area;
	    };
	    return area;
	  }
	  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
	  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
	  d3.svg.area = function() {
	    return d3_svg_area(d3_identity);
	  };
	  d3.svg.area.radial = function() {
	    var area = d3_svg_area(d3_svg_lineRadial);
	    area.radius = area.x, delete area.x;
	    area.innerRadius = area.x0, delete area.x0;
	    area.outerRadius = area.x1, delete area.x1;
	    area.angle = area.y, delete area.y;
	    area.startAngle = area.y0, delete area.y0;
	    area.endAngle = area.y1, delete area.y1;
	    return area;
	  };
	  d3.svg.chord = function() {
	    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
	    function chord(d, i) {
	      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
	      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
	    }
	    function subgroup(self, f, d, i) {
	      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;
	      return {
	        r: r,
	        a0: a0,
	        a1: a1,
	        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
	        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
	      };
	    }
	    function equals(a, b) {
	      return a.a0 == b.a0 && a.a1 == b.a1;
	    }
	    function arc(r, p, a) {
	      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
	    }
	    function curve(r0, p0, r1, p1) {
	      return "Q 0,0 " + p1;
	    }
	    chord.radius = function(v) {
	      if (!arguments.length) return radius;
	      radius = d3_functor(v);
	      return chord;
	    };
	    chord.source = function(v) {
	      if (!arguments.length) return source;
	      source = d3_functor(v);
	      return chord;
	    };
	    chord.target = function(v) {
	      if (!arguments.length) return target;
	      target = d3_functor(v);
	      return chord;
	    };
	    chord.startAngle = function(v) {
	      if (!arguments.length) return startAngle;
	      startAngle = d3_functor(v);
	      return chord;
	    };
	    chord.endAngle = function(v) {
	      if (!arguments.length) return endAngle;
	      endAngle = d3_functor(v);
	      return chord;
	    };
	    return chord;
	  };
	  function d3_svg_chordRadius(d) {
	    return d.radius;
	  }
	  d3.svg.diagonal = function() {
	    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
	    function diagonal(d, i) {
	      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
	        x: p0.x,
	        y: m
	      }, {
	        x: p3.x,
	        y: m
	      }, p3 ];
	      p = p.map(projection);
	      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
	    }
	    diagonal.source = function(x) {
	      if (!arguments.length) return source;
	      source = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.target = function(x) {
	      if (!arguments.length) return target;
	      target = d3_functor(x);
	      return diagonal;
	    };
	    diagonal.projection = function(x) {
	      if (!arguments.length) return projection;
	      projection = x;
	      return diagonal;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalProjection(d) {
	    return [ d.x, d.y ];
	  }
	  d3.svg.diagonal.radial = function() {
	    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
	    diagonal.projection = function(x) {
	      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
	    };
	    return diagonal;
	  };
	  function d3_svg_diagonalRadialProjection(projection) {
	    return function() {
	      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;
	      return [ r * Math.cos(a), r * Math.sin(a) ];
	    };
	  }
	  d3.svg.symbol = function() {
	    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
	    function symbol(d, i) {
	      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
	    }
	    symbol.type = function(x) {
	      if (!arguments.length) return type;
	      type = d3_functor(x);
	      return symbol;
	    };
	    symbol.size = function(x) {
	      if (!arguments.length) return size;
	      size = d3_functor(x);
	      return symbol;
	    };
	    return symbol;
	  };
	  function d3_svg_symbolSize() {
	    return 64;
	  }
	  function d3_svg_symbolType() {
	    return "circle";
	  }
	  function d3_svg_symbolCircle(size) {
	    var r = Math.sqrt(size / π);
	    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
	  }
	  var d3_svg_symbols = d3.map({
	    circle: d3_svg_symbolCircle,
	    cross: function(size) {
	      var r = Math.sqrt(size / 5) / 2;
	      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
	    },
	    diamond: function(size) {
	      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
	      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
	    },
	    square: function(size) {
	      var r = Math.sqrt(size) / 2;
	      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
	    },
	    "triangle-down": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
	    },
	    "triangle-up": function(size) {
	      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
	      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
	    }
	  });
	  d3.svg.symbolTypes = d3_svg_symbols.keys();
	  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
	  function d3_transition(groups, id) {
	    d3_subclass(groups, d3_transitionPrototype);
	    groups.id = id;
	    return groups;
	  }
	  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
	  d3_transitionPrototype.call = d3_selectionPrototype.call;
	  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
	  d3_transitionPrototype.node = d3_selectionPrototype.node;
	  d3_transitionPrototype.size = d3_selectionPrototype.size;
	  d3.transition = function(selection) {
	    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();
	  };
	  d3.transition.prototype = d3_transitionPrototype;
	  d3_transitionPrototype.select = function(selector) {
	    var id = this.id, subgroups = [], subgroup, subnode, node;
	    selector = d3_selection_selector(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
	          if ("__data__" in node) subnode.__data__ = node.__data__;
	          d3_transitionNode(subnode, i, id, node.__transition__[id]);
	          subgroup.push(subnode);
	        } else {
	          subgroup.push(null);
	        }
	      }
	    }
	    return d3_transition(subgroups, id);
	  };
	  d3_transitionPrototype.selectAll = function(selector) {
	    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;
	    selector = d3_selection_selectorAll(selector);
	    for (var j = -1, m = this.length; ++j < m; ) {
	      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
	        if (node = group[i]) {
	          transition = node.__transition__[id];
	          subnodes = selector.call(node, node.__data__, i, j);
	          subgroups.push(subgroup = []);
	          for (var k = -1, o = subnodes.length; ++k < o; ) {
	            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);
	            subgroup.push(subnode);
	          }
	        }
	      }
	    }
	    return d3_transition(subgroups, id);
	  };
	  d3_transitionPrototype.filter = function(filter) {
	    var subgroups = [], subgroup, group, node;
	    if (typeof filter !== "function") filter = d3_selection_filter(filter);
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
	          subgroup.push(node);
	        }
	      }
	    }
	    return d3_transition(subgroups, this.id);
	  };
	  d3_transitionPrototype.tween = function(name, tween) {
	    var id = this.id;
	    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);
	    return d3_selection_each(this, tween == null ? function(node) {
	      node.__transition__[id].tween.remove(name);
	    } : function(node) {
	      node.__transition__[id].tween.set(name, tween);
	    });
	  };
	  function d3_transition_tween(groups, name, value, tween) {
	    var id = groups.id;
	    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
	      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
	    } : (value = tween(value), function(node) {
	      node.__transition__[id].tween.set(name, value);
	    }));
	  }
	  d3_transitionPrototype.attr = function(nameNS, value) {
	    if (arguments.length < 2) {
	      for (value in nameNS) this.attr(value, nameNS[value]);
	      return this;
	    }
	    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
	    function attrNull() {
	      this.removeAttribute(name);
	    }
	    function attrNullNS() {
	      this.removeAttributeNS(name.space, name.local);
	    }
	    function attrTween(b) {
	      return b == null ? attrNull : (b += "", function() {
	        var a = this.getAttribute(name), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttribute(name, i(t));
	        });
	      });
	    }
	    function attrTweenNS(b) {
	      return b == null ? attrNullNS : (b += "", function() {
	        var a = this.getAttributeNS(name.space, name.local), i;
	        return a !== b && (i = interpolate(a, b), function(t) {
	          this.setAttributeNS(name.space, name.local, i(t));
	        });
	      });
	    }
	    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.attrTween = function(nameNS, tween) {
	    var name = d3.ns.qualify(nameNS);
	    function attrTween(d, i) {
	      var f = tween.call(this, d, i, this.getAttribute(name));
	      return f && function(t) {
	        this.setAttribute(name, f(t));
	      };
	    }
	    function attrTweenNS(d, i) {
	      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
	      return f && function(t) {
	        this.setAttributeNS(name.space, name.local, f(t));
	      };
	    }
	    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
	  };
	  d3_transitionPrototype.style = function(name, value, priority) {
	    var n = arguments.length;
	    if (n < 3) {
	      if (typeof name !== "string") {
	        if (n < 2) value = "";
	        for (priority in name) this.style(priority, name[priority], value);
	        return this;
	      }
	      priority = "";
	    }
	    function styleNull() {
	      this.style.removeProperty(name);
	    }
	    function styleString(b) {
	      return b == null ? styleNull : (b += "", function() {
	        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;
	        return a !== b && (i = d3_interpolate(a, b), function(t) {
	          this.style.setProperty(name, i(t), priority);
	        });
	      });
	    }
	    return d3_transition_tween(this, "style." + name, value, styleString);
	  };
	  d3_transitionPrototype.styleTween = function(name, tween, priority) {
	    if (arguments.length < 3) priority = "";
	    function styleTween(d, i) {
	      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
	      return f && function(t) {
	        this.style.setProperty(name, f(t), priority);
	      };
	    }
	    return this.tween("style." + name, styleTween);
	  };
	  d3_transitionPrototype.text = function(value) {
	    return d3_transition_tween(this, "text", value, d3_transition_text);
	  };
	  function d3_transition_text(b) {
	    if (b == null) b = "";
	    return function() {
	      this.textContent = b;
	    };
	  }
	  d3_transitionPrototype.remove = function() {
	    return this.each("end.transition", function() {
	      var p;
	      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);
	    });
	  };
	  d3_transitionPrototype.ease = function(value) {
	    var id = this.id;
	    if (arguments.length < 1) return this.node().__transition__[id].ease;
	    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
	    return d3_selection_each(this, function(node) {
	      node.__transition__[id].ease = value;
	    });
	  };
	  d3_transitionPrototype.delay = function(value) {
	    var id = this.id;
	    if (arguments.length < 1) return this.node().__transition__[id].delay;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);
	    } : (value = +value, function(node) {
	      node.__transition__[id].delay = value;
	    }));
	  };
	  d3_transitionPrototype.duration = function(value) {
	    var id = this.id;
	    if (arguments.length < 1) return this.node().__transition__[id].duration;
	    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
	      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));
	    } : (value = Math.max(1, value), function(node) {
	      node.__transition__[id].duration = value;
	    }));
	  };
	  d3_transitionPrototype.each = function(type, listener) {
	    var id = this.id;
	    if (arguments.length < 2) {
	      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
	      d3_transitionInheritId = id;
	      d3_selection_each(this, function(node, i, j) {
	        d3_transitionInherit = node.__transition__[id];
	        type.call(node, node.__data__, i, j);
	      });
	      d3_transitionInherit = inherit;
	      d3_transitionInheritId = inheritId;
	    } else {
	      d3_selection_each(this, function(node) {
	        var transition = node.__transition__[id];
	        (transition.event || (transition.event = d3.dispatch("start", "end"))).on(type, listener);
	      });
	    }
	    return this;
	  };
	  d3_transitionPrototype.transition = function() {
	    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;
	    for (var j = 0, m = this.length; j < m; j++) {
	      subgroups.push(subgroup = []);
	      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
	        if (node = group[i]) {
	          transition = Object.create(node.__transition__[id0]);
	          transition.delay += transition.duration;
	          d3_transitionNode(node, i, id1, transition);
	        }
	        subgroup.push(node);
	      }
	    }
	    return d3_transition(subgroups, id1);
	  };
	  function d3_transitionNode(node, i, id, inherit) {
	    var lock = node.__transition__ || (node.__transition__ = {
	      active: 0,
	      count: 0
	    }), transition = lock[id];
	    if (!transition) {
	      var time = inherit.time;
	      transition = lock[id] = {
	        tween: new d3_Map(),
	        time: time,
	        ease: inherit.ease,
	        delay: inherit.delay,
	        duration: inherit.duration
	      };
	      ++lock.count;
	      d3.timer(function(elapsed) {
	        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];
	        timer.t = delay + time;
	        if (delay <= elapsed) return start(elapsed - delay);
	        timer.c = start;
	        function start(elapsed) {
	          if (lock.active > id) return stop();
	          lock.active = id;
	          transition.event && transition.event.start.call(node, d, i);
	          transition.tween.forEach(function(key, value) {
	            if (value = value.call(node, d, i)) {
	              tweened.push(value);
	            }
	          });
	          d3.timer(function() {
	            timer.c = tick(elapsed || 1) ? d3_true : tick;
	            return 1;
	          }, 0, time);
	        }
	        function tick(elapsed) {
	          if (lock.active !== id) return stop();
	          var t = elapsed / duration, e = ease(t), n = tweened.length;
	          while (n > 0) {
	            tweened[--n].call(node, e);
	          }
	          if (t >= 1) {
	            transition.event && transition.event.end.call(node, d, i);
	            return stop();
	          }
	        }
	        function stop() {
	          if (--lock.count) delete lock[id]; else delete node.__transition__;
	          return 1;
	        }
	      }, 0, time);
	    }
	  }
	  d3.svg.axis = function() {
	    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
	    function axis(g) {
	      g.each(function() {
	        var g = d3.select(this);
	        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
	        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickTransform;
	        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
	        d3.transition(path));
	        tickEnter.append("line");
	        tickEnter.append("text");
	        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text");
	        switch (orient) {
	         case "bottom":
	          {
	            tickTransform = d3_svg_axisX;
	            lineEnter.attr("y2", innerTickSize);
	            textEnter.attr("y", Math.max(innerTickSize, 0) + tickPadding);
	            lineUpdate.attr("x2", 0).attr("y2", innerTickSize);
	            textUpdate.attr("x", 0).attr("y", Math.max(innerTickSize, 0) + tickPadding);
	            text.attr("dy", ".71em").style("text-anchor", "middle");
	            pathUpdate.attr("d", "M" + range[0] + "," + outerTickSize + "V0H" + range[1] + "V" + outerTickSize);
	            break;
	          }

	         case "top":
	          {
	            tickTransform = d3_svg_axisX;
	            lineEnter.attr("y2", -innerTickSize);
	            textEnter.attr("y", -(Math.max(innerTickSize, 0) + tickPadding));
	            lineUpdate.attr("x2", 0).attr("y2", -innerTickSize);
	            textUpdate.attr("x", 0).attr("y", -(Math.max(innerTickSize, 0) + tickPadding));
	            text.attr("dy", "0em").style("text-anchor", "middle");
	            pathUpdate.attr("d", "M" + range[0] + "," + -outerTickSize + "V0H" + range[1] + "V" + -outerTickSize);
	            break;
	          }

	         case "left":
	          {
	            tickTransform = d3_svg_axisY;
	            lineEnter.attr("x2", -innerTickSize);
	            textEnter.attr("x", -(Math.max(innerTickSize, 0) + tickPadding));
	            lineUpdate.attr("x2", -innerTickSize).attr("y2", 0);
	            textUpdate.attr("x", -(Math.max(innerTickSize, 0) + tickPadding)).attr("y", 0);
	            text.attr("dy", ".32em").style("text-anchor", "end");
	            pathUpdate.attr("d", "M" + -outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + -outerTickSize);
	            break;
	          }

	         case "right":
	          {
	            tickTransform = d3_svg_axisY;
	            lineEnter.attr("x2", innerTickSize);
	            textEnter.attr("x", Math.max(innerTickSize, 0) + tickPadding);
	            lineUpdate.attr("x2", innerTickSize).attr("y2", 0);
	            textUpdate.attr("x", Math.max(innerTickSize, 0) + tickPadding).attr("y", 0);
	            text.attr("dy", ".32em").style("text-anchor", "start");
	            pathUpdate.attr("d", "M" + outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + outerTickSize);
	            break;
	          }
	        }
	        if (scale1.rangeBand) {
	          var x = scale1, dx = x.rangeBand() / 2;
	          scale0 = scale1 = function(d) {
	            return x(d) + dx;
	          };
	        } else if (scale0.rangeBand) {
	          scale0 = scale1;
	        } else {
	          tickExit.call(tickTransform, scale1);
	        }
	        tickEnter.call(tickTransform, scale0);
	        tickUpdate.call(tickTransform, scale1);
	      });
	    }
	    axis.scale = function(x) {
	      if (!arguments.length) return scale;
	      scale = x;
	      return axis;
	    };
	    axis.orient = function(x) {
	      if (!arguments.length) return orient;
	      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
	      return axis;
	    };
	    axis.ticks = function() {
	      if (!arguments.length) return tickArguments_;
	      tickArguments_ = arguments;
	      return axis;
	    };
	    axis.tickValues = function(x) {
	      if (!arguments.length) return tickValues;
	      tickValues = x;
	      return axis;
	    };
	    axis.tickFormat = function(x) {
	      if (!arguments.length) return tickFormat_;
	      tickFormat_ = x;
	      return axis;
	    };
	    axis.tickSize = function(x) {
	      var n = arguments.length;
	      if (!n) return innerTickSize;
	      innerTickSize = +x;
	      outerTickSize = +arguments[n - 1];
	      return axis;
	    };
	    axis.innerTickSize = function(x) {
	      if (!arguments.length) return innerTickSize;
	      innerTickSize = +x;
	      return axis;
	    };
	    axis.outerTickSize = function(x) {
	      if (!arguments.length) return outerTickSize;
	      outerTickSize = +x;
	      return axis;
	    };
	    axis.tickPadding = function(x) {
	      if (!arguments.length) return tickPadding;
	      tickPadding = +x;
	      return axis;
	    };
	    axis.tickSubdivide = function() {
	      return arguments.length && axis;
	    };
	    return axis;
	  };
	  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
	    top: 1,
	    right: 1,
	    bottom: 1,
	    left: 1
	  };
	  function d3_svg_axisX(selection, x) {
	    selection.attr("transform", function(d) {
	      return "translate(" + x(d) + ",0)";
	    });
	  }
	  function d3_svg_axisY(selection, y) {
	    selection.attr("transform", function(d) {
	      return "translate(0," + y(d) + ")";
	    });
	  }
	  d3.svg.brush = function() {
	    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
	    function brush(g) {
	      g.each(function() {
	        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
	        var background = g.selectAll(".background").data([ 0 ]);
	        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
	        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
	        var resize = g.selectAll(".resize").data(resizes, d3_identity);
	        resize.exit().remove();
	        resize.enter().append("g").attr("class", function(d) {
	          return "resize " + d;
	        }).style("cursor", function(d) {
	          return d3_svg_brushCursor[d];
	        }).append("rect").attr("x", function(d) {
	          return /[ew]$/.test(d) ? -3 : null;
	        }).attr("y", function(d) {
	          return /^[ns]/.test(d) ? -3 : null;
	        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
	        resize.style("display", brush.empty() ? "none" : null);
	        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
	        if (x) {
	          range = d3_scaleRange(x);
	          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
	          redrawX(gUpdate);
	        }
	        if (y) {
	          range = d3_scaleRange(y);
	          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
	          redrawY(gUpdate);
	        }
	        redraw(gUpdate);
	      });
	    }
	    brush.event = function(g) {
	      g.each(function() {
	        var event_ = event.of(this, arguments), extent1 = {
	          x: xExtent,
	          y: yExtent,
	          i: xExtentDomain,
	          j: yExtentDomain
	        }, extent0 = this.__chart__ || extent1;
	        this.__chart__ = extent1;
	        if (d3_transitionInheritId) {
	          d3.select(this).transition().each("start.brush", function() {
	            xExtentDomain = extent0.i;
	            yExtentDomain = extent0.j;
	            xExtent = extent0.x;
	            yExtent = extent0.y;
	            event_({
	              type: "brushstart"
	            });
	          }).tween("brush:brush", function() {
	            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
	            xExtentDomain = yExtentDomain = null;
	            return function(t) {
	              xExtent = extent1.x = xi(t);
	              yExtent = extent1.y = yi(t);
	              event_({
	                type: "brush",
	                mode: "resize"
	              });
	            };
	          }).each("end.brush", function() {
	            xExtentDomain = extent1.i;
	            yExtentDomain = extent1.j;
	            event_({
	              type: "brush",
	              mode: "resize"
	            });
	            event_({
	              type: "brushend"
	            });
	          });
	        } else {
	          event_({
	            type: "brushstart"
	          });
	          event_({
	            type: "brush",
	            mode: "resize"
	          });
	          event_({
	            type: "brushend"
	          });
	        }
	      });
	    };
	    function redraw(g) {
	      g.selectAll(".resize").attr("transform", function(d) {
	        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
	      });
	    }
	    function redrawX(g) {
	      g.select(".extent").attr("x", xExtent[0]);
	      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
	    }
	    function redrawY(g) {
	      g.select(".extent").attr("y", yExtent[0]);
	      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
	    }
	    function brushstart() {
	      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;
	      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);
	      if (d3.event.changedTouches) {
	        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
	      } else {
	        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
	      }
	      g.interrupt().selectAll("*").interrupt();
	      if (dragging) {
	        origin[0] = xExtent[0] - origin[0];
	        origin[1] = yExtent[0] - origin[1];
	      } else if (resizing) {
	        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
	        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
	        origin[0] = xExtent[ex];
	        origin[1] = yExtent[ey];
	      } else if (d3.event.altKey) center = origin.slice();
	      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
	      d3.select("body").style("cursor", eventTarget.style("cursor"));
	      event_({
	        type: "brushstart"
	      });
	      brushmove();
	      function keydown() {
	        if (d3.event.keyCode == 32) {
	          if (!dragging) {
	            center = null;
	            origin[0] -= xExtent[1];
	            origin[1] -= yExtent[1];
	            dragging = 2;
	          }
	          d3_eventPreventDefault();
	        }
	      }
	      function keyup() {
	        if (d3.event.keyCode == 32 && dragging == 2) {
	          origin[0] += xExtent[1];
	          origin[1] += yExtent[1];
	          dragging = 0;
	          d3_eventPreventDefault();
	        }
	      }
	      function brushmove() {
	        var point = d3.mouse(target), moved = false;
	        if (offset) {
	          point[0] += offset[0];
	          point[1] += offset[1];
	        }
	        if (!dragging) {
	          if (d3.event.altKey) {
	            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
	            origin[0] = xExtent[+(point[0] < center[0])];
	            origin[1] = yExtent[+(point[1] < center[1])];
	          } else center = null;
	        }
	        if (resizingX && move1(point, x, 0)) {
	          redrawX(g);
	          moved = true;
	        }
	        if (resizingY && move1(point, y, 1)) {
	          redrawY(g);
	          moved = true;
	        }
	        if (moved) {
	          redraw(g);
	          event_({
	            type: "brush",
	            mode: dragging ? "move" : "resize"
	          });
	        }
	      }
	      function move1(point, scale, i) {
	        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
	        if (dragging) {
	          r0 -= position;
	          r1 -= size + position;
	        }
	        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
	        if (dragging) {
	          max = (min += position) + size;
	        } else {
	          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
	          if (position < min) {
	            max = min;
	            min = position;
	          } else {
	            max = position;
	          }
	        }
	        if (extent[0] != min || extent[1] != max) {
	          if (i) yExtentDomain = null; else xExtentDomain = null;
	          extent[0] = min;
	          extent[1] = max;
	          return true;
	        }
	      }
	      function brushend() {
	        brushmove();
	        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
	        d3.select("body").style("cursor", null);
	        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
	        dragRestore();
	        event_({
	          type: "brushend"
	        });
	      }
	    }
	    brush.x = function(z) {
	      if (!arguments.length) return x;
	      x = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.y = function(z) {
	      if (!arguments.length) return y;
	      y = z;
	      resizes = d3_svg_brushResizes[!x << 1 | !y];
	      return brush;
	    };
	    brush.clamp = function(z) {
	      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
	      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
	      return brush;
	    };
	    brush.extent = function(z) {
	      var x0, x1, y0, y1, t;
	      if (!arguments.length) {
	        if (x) {
	          if (xExtentDomain) {
	            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
	          } else {
	            x0 = xExtent[0], x1 = xExtent[1];
	            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
	            if (x1 < x0) t = x0, x0 = x1, x1 = t;
	          }
	        }
	        if (y) {
	          if (yExtentDomain) {
	            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
	          } else {
	            y0 = yExtent[0], y1 = yExtent[1];
	            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
	            if (y1 < y0) t = y0, y0 = y1, y1 = t;
	          }
	        }
	        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
	      }
	      if (x) {
	        x0 = z[0], x1 = z[1];
	        if (y) x0 = x0[0], x1 = x1[0];
	        xExtentDomain = [ x0, x1 ];
	        if (x.invert) x0 = x(x0), x1 = x(x1);
	        if (x1 < x0) t = x0, x0 = x1, x1 = t;
	        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
	      }
	      if (y) {
	        y0 = z[0], y1 = z[1];
	        if (x) y0 = y0[1], y1 = y1[1];
	        yExtentDomain = [ y0, y1 ];
	        if (y.invert) y0 = y(y0), y1 = y(y1);
	        if (y1 < y0) t = y0, y0 = y1, y1 = t;
	        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
	      }
	      return brush;
	    };
	    brush.clear = function() {
	      if (!brush.empty()) {
	        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
	        xExtentDomain = yExtentDomain = null;
	      }
	      return brush;
	    };
	    brush.empty = function() {
	      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
	    };
	    return d3.rebind(brush, event, "on");
	  };
	  var d3_svg_brushCursor = {
	    n: "ns-resize",
	    e: "ew-resize",
	    s: "ns-resize",
	    w: "ew-resize",
	    nw: "nwse-resize",
	    ne: "nesw-resize",
	    se: "nwse-resize",
	    sw: "nesw-resize"
	  };
	  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
	  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
	  var d3_time_formatUtc = d3_time_format.utc;
	  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
	  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
	  function d3_time_formatIsoNative(date) {
	    return date.toISOString();
	  }
	  d3_time_formatIsoNative.parse = function(string) {
	    var date = new Date(string);
	    return isNaN(date) ? null : date;
	  };
	  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
	  d3_time.second = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 1e3) * 1e3);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
	  }, function(date) {
	    return date.getSeconds();
	  });
	  d3_time.seconds = d3_time.second.range;
	  d3_time.seconds.utc = d3_time.second.utc.range;
	  d3_time.minute = d3_time_interval(function(date) {
	    return new d3_date(Math.floor(date / 6e4) * 6e4);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
	  }, function(date) {
	    return date.getMinutes();
	  });
	  d3_time.minutes = d3_time.minute.range;
	  d3_time.minutes.utc = d3_time.minute.utc.range;
	  d3_time.hour = d3_time_interval(function(date) {
	    var timezone = date.getTimezoneOffset() / 60;
	    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
	  }, function(date, offset) {
	    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
	  }, function(date) {
	    return date.getHours();
	  });
	  d3_time.hours = d3_time.hour.range;
	  d3_time.hours.utc = d3_time.hour.utc.range;
	  d3_time.month = d3_time_interval(function(date) {
	    date = d3_time.day(date);
	    date.setDate(1);
	    return date;
	  }, function(date, offset) {
	    date.setMonth(date.getMonth() + offset);
	  }, function(date) {
	    return date.getMonth();
	  });
	  d3_time.months = d3_time.month.range;
	  d3_time.months.utc = d3_time.month.utc.range;
	  function d3_time_scale(linear, methods, format) {
	    function scale(x) {
	      return linear(x);
	    }
	    scale.invert = function(x) {
	      return d3_time_scaleDate(linear.invert(x));
	    };
	    scale.domain = function(x) {
	      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
	      linear.domain(x);
	      return scale;
	    };
	    function tickMethod(extent, count) {
	      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
	      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
	        return d / 31536e6;
	      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
	    }
	    scale.nice = function(interval, skip) {
	      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
	      if (method) interval = method[0], skip = method[1];
	      function skipped(date) {
	        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
	      }
	      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
	        floor: function(date) {
	          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
	          return date;
	        },
	        ceil: function(date) {
	          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
	          return date;
	        }
	      } : interval));
	    };
	    scale.ticks = function(interval, skip) {
	      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
	        range: interval
	      }, skip ];
	      if (method) interval = method[0], skip = method[1];
	      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
	    };
	    scale.tickFormat = function() {
	      return format;
	    };
	    scale.copy = function() {
	      return d3_time_scale(linear.copy(), methods, format);
	    };
	    return d3_scale_linearRebind(scale, linear);
	  }
	  function d3_time_scaleDate(t) {
	    return new Date(t);
	  }
	  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
	  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
	  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
	    return d.getMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getHours();
	  } ], [ "%a %d", function(d) {
	    return d.getDay() && d.getDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getMonth();
	  } ], [ "%Y", d3_true ] ]);
	  var d3_time_scaleMilliseconds = {
	    range: function(start, stop, step) {
	      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
	    },
	    floor: d3_identity,
	    ceil: d3_identity
	  };
	  d3_time_scaleLocalMethods.year = d3_time.year;
	  d3_time.scale = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
	  };
	  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
	    return [ m[0].utc, m[1] ];
	  });
	  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
	    return d.getUTCMilliseconds();
	  } ], [ ":%S", function(d) {
	    return d.getUTCSeconds();
	  } ], [ "%I:%M", function(d) {
	    return d.getUTCMinutes();
	  } ], [ "%I %p", function(d) {
	    return d.getUTCHours();
	  } ], [ "%a %d", function(d) {
	    return d.getUTCDay() && d.getUTCDate() != 1;
	  } ], [ "%b %d", function(d) {
	    return d.getUTCDate() != 1;
	  } ], [ "%B", function(d) {
	    return d.getUTCMonth();
	  } ], [ "%Y", d3_true ] ]);
	  d3_time_scaleUtcMethods.year = d3_time.year.utc;
	  d3_time.scale.utc = function() {
	    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
	  };
	  d3.text = d3_xhrType(function(request) {
	    return request.responseText;
	  });
	  d3.json = function(url, callback) {
	    return d3_xhr(url, "application/json", d3_json, callback);
	  };
	  function d3_json(request) {
	    return JSON.parse(request.responseText);
	  }
	  d3.html = function(url, callback) {
	    return d3_xhr(url, "text/html", d3_html, callback);
	  };
	  function d3_html(request) {
	    var range = d3_document.createRange();
	    range.selectNode(d3_document.body);
	    return range.createContextualFragment(request.responseText);
	  }
	  d3.xml = d3_xhrType(function(request) {
	    return request.responseXML;
	  });
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_RESULT__ = __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : module.exports = __WEBPACK_AMD_DEFINE_FACTORY__));
	  } else if (typeof module === "object" && module.exports) {
	    module.exports = d3;
	  } else {
	    this.d3 = d3;
	  }
	}();

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	var Duration = (function () {

	    var millisecond = 1,
	        second      = 1000 * millisecond,
	        minute      = 60   * second,
	        hour        = 60   * minute,
	        day         = 24   * hour,
	        week        = 7    * day;

	    var unitMap = {
	        "ms" : millisecond,
	        "s"  : second,
	        "m"  : minute,
	        "h"  : hour,
	        "d"  : day,
	        "w"  : week
	    };

	    var Duration = function (value) {
	        if (value instanceof Duration) {
	          return value;
	        }
	        switch (typeof value) {
	            case "number":
	                this._milliseconds = value;
	                break;
	            case "string":
	                this._milliseconds = Duration.parse(value).valueOf();
	                break;
	            case "undefined":
	                this._milliseconds = 0;
	                break;
	            default:
	                throw new Error("invalid duration: " + value);
	        }
	    };

	    Duration.millisecond = new Duration(millisecond);
	    Duration.second      = new Duration(second);
	    Duration.minute      = new Duration(minute);
	    Duration.hour        = new Duration(hour);
	    Duration.day         = new Duration(day);
	    Duration.week        = new Duration(week);

	    Duration.prototype.nanoseconds = function () {
	        return this._milliseconds * 1000000;
	    };

	    Duration.prototype.microseconds = function () {
	        return this._milliseconds * 1000;
	    };

	    Duration.prototype.milliseconds = function () {
	        return this._milliseconds;
	    };

	    Duration.prototype.seconds = function () {
	        return Math.floor(this._milliseconds / second);
	    };

	    Duration.prototype.minutes = function () {
	        return Math.floor(this._milliseconds / minute);
	    };

	    Duration.prototype.hours = function () {
	        return Math.floor(this._milliseconds / hour);
	    };

	    Duration.prototype.days = function () {
	      return Math.floor(this._milliseconds / day);
	    };

	    Duration.prototype.weeks = function () {
	      return Math.floor(this._milliseconds / week);
	    };

	    Duration.prototype.toString = function () {
	      var str          = "",
	          milliseconds = Math.abs(this._milliseconds),
	          sign         = this._milliseconds < 0 ? "-" : "";

	      // no units for 0 duration
	      if (milliseconds === 0) {
	        return "0";
	      }

	      // days
	      var days = Math.floor(milliseconds / day);
	      if (days !== 0) {
	        milliseconds -= day * days;
	        str += days.toString() + "d";
	      }

	      // hours
	      var hours = Math.floor(milliseconds / hour);
	      if (hours !== 0) {
	        milliseconds -= hour * hours;
	        str += hours.toString() + "h";
	      }

	      // minutes
	      var minutes = Math.floor(milliseconds / minute);
	      if (minutes !== 0) {
	        milliseconds -= minute * minutes;
	        str += minutes.toString() + "m";
	      }

	      // seconds
	      var seconds = Math.floor(milliseconds / second);
	      if (seconds !== 0) {
	        milliseconds -= second * seconds;
	        str += seconds.toString() + "s";
	      }

	      // milliseconds
	      if (milliseconds !== 0) {
	        str += milliseconds.toString() + "ms";
	      }

	      return sign + str;
	    };

	    Duration.prototype.valueOf = function () {
	      return this._milliseconds;
	    };

	    Duration.parse = function (duration) {

	        if (duration === "0" || duration === "+0" || duration === "-0") {
	          return new Duration(0);
	        }

	        var regex = /([\-\+\d\.]+)([a-z]+)/g,
	            total = 0,
	            count = 0,
	            sign  = duration[0] === '-' ? -1 : 1,
	            unit, value, match;

	        while (match = regex.exec(duration)) {

	            unit  = match[2];
	            value = Math.abs(parseFloat(match[1]));
	            count++;

	            if (isNaN(value)) {
	              throw new Error("invalid duration");
	            }

	            if (typeof unitMap[unit] === "undefined") {
	              throw new Error("invalid unit: " + unit);
	            }

	            total += value * unitMap[unit];
	        }

	        if (count === 0) {
	          throw new Error("invalid duration");
	        }

	        return new Duration(total * sign);
	    };

	    Duration.fromMicroseconds = function (us) {
	        var ms = Math.floor(us / 1000);
	        return new Duration(ms);
	    };

	    Duration.fromNanoseconds = function (ns) {
	        var ms = Math.floor(ns / 1000000);
	        return new Duration(ms);
	    };

	    return Duration;

	}).call(this);

	if (true) {
	   module.exports = Duration;
	}


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {//! moment.js
	//! version : 2.6.0
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	(function (undefined) {

	    /************************************
	        Constants
	    ************************************/

	    var moment,
	        VERSION = "2.6.0",
	        // the global-scope this is NOT the global object in Node.js
	        globalScope = typeof global !== 'undefined' ? global : this,
	        oldGlobalMoment,
	        round = Math.round,
	        i,

	        YEAR = 0,
	        MONTH = 1,
	        DATE = 2,
	        HOUR = 3,
	        MINUTE = 4,
	        SECOND = 5,
	        MILLISECOND = 6,

	        // internal storage for language config files
	        languages = {},

	        // moment internal properties
	        momentProperties = {
	            _isAMomentObject: null,
	            _i : null,
	            _f : null,
	            _l : null,
	            _strict : null,
	            _isUTC : null,
	            _offset : null,  // optional. Combine with _isUTC
	            _pf : null,
	            _lang : null  // optional
	        },

	        // check for nodeJS
	        hasModule = (typeof module !== 'undefined' && module.exports),

	        // ASP.NET json date format regex
	        aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
	        aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,

	        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,

	        // format tokens
	        formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,
	        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,

	        // parsing token regexes
	        parseTokenOneOrTwoDigits = /\d\d?/, // 0 - 99
	        parseTokenOneToThreeDigits = /\d{1,3}/, // 0 - 999
	        parseTokenOneToFourDigits = /\d{1,4}/, // 0 - 9999
	        parseTokenOneToSixDigits = /[+\-]?\d{1,6}/, // -999,999 - 999,999
	        parseTokenDigits = /\d+/, // nonzero number of digits
	        parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.
	        parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
	        parseTokenT = /T/i, // T (ISO separator)
	        parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
	        parseTokenOrdinal = /\d{1,2}/,

	        //strict parsing regexes
	        parseTokenOneDigit = /\d/, // 0 - 9
	        parseTokenTwoDigits = /\d\d/, // 00 - 99
	        parseTokenThreeDigits = /\d{3}/, // 000 - 999
	        parseTokenFourDigits = /\d{4}/, // 0000 - 9999
	        parseTokenSixDigits = /[+-]?\d{6}/, // -999,999 - 999,999
	        parseTokenSignedNumber = /[+-]?\d+/, // -inf - inf

	        // iso 8601 regex
	        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	        isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,

	        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',

	        isoDates = [
	            ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
	            ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
	            ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
	            ['GGGG-[W]WW', /\d{4}-W\d{2}/],
	            ['YYYY-DDD', /\d{4}-\d{3}/]
	        ],

	        // iso time formats and regexes
	        isoTimes = [
	            ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
	            ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
	            ['HH:mm', /(T| )\d\d:\d\d/],
	            ['HH', /(T| )\d\d/]
	        ],

	        // timezone chunker "+10:00" > ["10", "00"] or "-1530" > ["-15", "30"]
	        parseTimezoneChunker = /([\+\-]|\d\d)/gi,

	        // getter and setter names
	        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
	        unitMillisecondFactors = {
	            'Milliseconds' : 1,
	            'Seconds' : 1e3,
	            'Minutes' : 6e4,
	            'Hours' : 36e5,
	            'Days' : 864e5,
	            'Months' : 2592e6,
	            'Years' : 31536e6
	        },

	        unitAliases = {
	            ms : 'millisecond',
	            s : 'second',
	            m : 'minute',
	            h : 'hour',
	            d : 'day',
	            D : 'date',
	            w : 'week',
	            W : 'isoWeek',
	            M : 'month',
	            Q : 'quarter',
	            y : 'year',
	            DDD : 'dayOfYear',
	            e : 'weekday',
	            E : 'isoWeekday',
	            gg: 'weekYear',
	            GG: 'isoWeekYear'
	        },

	        camelFunctions = {
	            dayofyear : 'dayOfYear',
	            isoweekday : 'isoWeekday',
	            isoweek : 'isoWeek',
	            weekyear : 'weekYear',
	            isoweekyear : 'isoWeekYear'
	        },

	        // format function strings
	        formatFunctions = {},

	        // tokens to ordinalize and pad
	        ordinalizeTokens = 'DDD w W M D d'.split(' '),
	        paddedTokens = 'M D H h m s w W'.split(' '),

	        formatTokenFunctions = {
	            M    : function () {
	                return this.month() + 1;
	            },
	            MMM  : function (format) {
	                return this.lang().monthsShort(this, format);
	            },
	            MMMM : function (format) {
	                return this.lang().months(this, format);
	            },
	            D    : function () {
	                return this.date();
	            },
	            DDD  : function () {
	                return this.dayOfYear();
	            },
	            d    : function () {
	                return this.day();
	            },
	            dd   : function (format) {
	                return this.lang().weekdaysMin(this, format);
	            },
	            ddd  : function (format) {
	                return this.lang().weekdaysShort(this, format);
	            },
	            dddd : function (format) {
	                return this.lang().weekdays(this, format);
	            },
	            w    : function () {
	                return this.week();
	            },
	            W    : function () {
	                return this.isoWeek();
	            },
	            YY   : function () {
	                return leftZeroFill(this.year() % 100, 2);
	            },
	            YYYY : function () {
	                return leftZeroFill(this.year(), 4);
	            },
	            YYYYY : function () {
	                return leftZeroFill(this.year(), 5);
	            },
	            YYYYYY : function () {
	                var y = this.year(), sign = y >= 0 ? '+' : '-';
	                return sign + leftZeroFill(Math.abs(y), 6);
	            },
	            gg   : function () {
	                return leftZeroFill(this.weekYear() % 100, 2);
	            },
	            gggg : function () {
	                return leftZeroFill(this.weekYear(), 4);
	            },
	            ggggg : function () {
	                return leftZeroFill(this.weekYear(), 5);
	            },
	            GG   : function () {
	                return leftZeroFill(this.isoWeekYear() % 100, 2);
	            },
	            GGGG : function () {
	                return leftZeroFill(this.isoWeekYear(), 4);
	            },
	            GGGGG : function () {
	                return leftZeroFill(this.isoWeekYear(), 5);
	            },
	            e : function () {
	                return this.weekday();
	            },
	            E : function () {
	                return this.isoWeekday();
	            },
	            a    : function () {
	                return this.lang().meridiem(this.hours(), this.minutes(), true);
	            },
	            A    : function () {
	                return this.lang().meridiem(this.hours(), this.minutes(), false);
	            },
	            H    : function () {
	                return this.hours();
	            },
	            h    : function () {
	                return this.hours() % 12 || 12;
	            },
	            m    : function () {
	                return this.minutes();
	            },
	            s    : function () {
	                return this.seconds();
	            },
	            S    : function () {
	                return toInt(this.milliseconds() / 100);
	            },
	            SS   : function () {
	                return leftZeroFill(toInt(this.milliseconds() / 10), 2);
	            },
	            SSS  : function () {
	                return leftZeroFill(this.milliseconds(), 3);
	            },
	            SSSS : function () {
	                return leftZeroFill(this.milliseconds(), 3);
	            },
	            Z    : function () {
	                var a = -this.zone(),
	                    b = "+";
	                if (a < 0) {
	                    a = -a;
	                    b = "-";
	                }
	                return b + leftZeroFill(toInt(a / 60), 2) + ":" + leftZeroFill(toInt(a) % 60, 2);
	            },
	            ZZ   : function () {
	                var a = -this.zone(),
	                    b = "+";
	                if (a < 0) {
	                    a = -a;
	                    b = "-";
	                }
	                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
	            },
	            z : function () {
	                return this.zoneAbbr();
	            },
	            zz : function () {
	                return this.zoneName();
	            },
	            X    : function () {
	                return this.unix();
	            },
	            Q : function () {
	                return this.quarter();
	            }
	        },

	        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];

	    function defaultParsingFlags() {
	        // We need to deep clone this object, and es5 standard is not very
	        // helpful.
	        return {
	            empty : false,
	            unusedTokens : [],
	            unusedInput : [],
	            overflow : -2,
	            charsLeftOver : 0,
	            nullInput : false,
	            invalidMonth : null,
	            invalidFormat : false,
	            userInvalidated : false,
	            iso: false
	        };
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;
	        function printMsg() {
	            if (moment.suppressDeprecationWarnings === false &&
	                    typeof console !== 'undefined' && console.warn) {
	                console.warn("Deprecation warning: " + msg);
	            }
	        }
	        return extend(function () {
	            if (firstTime) {
	                printMsg();
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    function padToken(func, count) {
	        return function (a) {
	            return leftZeroFill(func.call(this, a), count);
	        };
	    }
	    function ordinalizeToken(func, period) {
	        return function (a) {
	            return this.lang().ordinal(func.call(this, a), period);
	        };
	    }

	    while (ordinalizeTokens.length) {
	        i = ordinalizeTokens.pop();
	        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
	    }
	    while (paddedTokens.length) {
	        i = paddedTokens.pop();
	        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
	    }
	    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);


	    /************************************
	        Constructors
	    ************************************/

	    function Language() {

	    }

	    // Moment prototype object
	    function Moment(config) {
	        checkOverflow(config);
	        extend(this, config);
	    }

	    // Duration Constructor
	    function Duration(duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 36e5; // 1000 * 60 * 60
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._bubble();
	    }

	    /************************************
	        Helpers
	    ************************************/


	    function extend(a, b) {
	        for (var i in b) {
	            if (b.hasOwnProperty(i)) {
	                a[i] = b[i];
	            }
	        }

	        if (b.hasOwnProperty("toString")) {
	            a.toString = b.toString;
	        }

	        if (b.hasOwnProperty("valueOf")) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function cloneMoment(m) {
	        var result = {}, i;
	        for (i in m) {
	            if (m.hasOwnProperty(i) && momentProperties.hasOwnProperty(i)) {
	                result[i] = m[i];
	            }
	        }

	        return result;
	    }

	    function absRound(number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    // left zero fill a number
	    // see http://jsperf.com/left-zero-filling for performance comparison
	    function leftZeroFill(number, targetLength, forceSign) {
	        var output = '' + Math.abs(number),
	            sign = number >= 0;

	        while (output.length < targetLength) {
	            output = '0' + output;
	        }
	        return (sign ? (forceSign ? '+' : '') : '-') + output;
	    }

	    // helper function for _.addTime and _.subtractTime
	    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = duration._days,
	            months = duration._months;
	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(+mom._d + milliseconds * isAdding);
	        }
	        if (days) {
	            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            moment.updateOffset(mom, days || months);
	        }
	    }

	    // check if is an array
	    function isArray(input) {
	        return Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return  Object.prototype.toString.call(input) === '[object Date]' ||
	                input instanceof Date;
	    }

	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function normalizeUnits(units) {
	        if (units) {
	            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
	            units = unitAliases[units] || camelFunctions[lowered] || lowered;
	        }
	        return units;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (inputObject.hasOwnProperty(prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeList(field) {
	        var count, setter;

	        if (field.indexOf('week') === 0) {
	            count = 7;
	            setter = 'day';
	        }
	        else if (field.indexOf('month') === 0) {
	            count = 12;
	            setter = 'month';
	        }
	        else {
	            return;
	        }

	        moment[field] = function (format, index) {
	            var i, getter,
	                method = moment.fn._lang[field],
	                results = [];

	            if (typeof format === 'number') {
	                index = format;
	                format = undefined;
	            }

	            getter = function (i) {
	                var m = moment().utc().set(setter, i);
	                return method.call(moment.fn._lang, m, format || '');
	            };

	            if (index != null) {
	                return getter(index);
	            }
	            else {
	                for (i = 0; i < count; i++) {
	                    results.push(getter(i));
	                }
	                return results;
	            }
	        };
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            if (coercedNumber >= 0) {
	                value = Math.floor(coercedNumber);
	            } else {
	                value = Math.ceil(coercedNumber);
	            }
	        }

	        return value;
	    }

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    function weeksInYear(year, dow, doy) {
	        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;
	    }

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    function checkOverflow(m) {
	        var overflow;
	        if (m._a && m._pf.overflow === -2) {
	            overflow =
	                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :
	                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :
	                m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR :
	                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :
	                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :
	                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }

	            m._pf.overflow = overflow;
	        }
	    }

	    function isValid(m) {
	        if (m._isValid == null) {
	            m._isValid = !isNaN(m._d.getTime()) &&
	                m._pf.overflow < 0 &&
	                !m._pf.empty &&
	                !m._pf.invalidMonth &&
	                !m._pf.nullInput &&
	                !m._pf.invalidFormat &&
	                !m._pf.userInvalidated;

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    m._pf.charsLeftOver === 0 &&
	                    m._pf.unusedTokens.length === 0;
	            }
	        }
	        return m._isValid;
	    }

	    function normalizeLanguage(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function makeAs(input, model) {
	        return model._isUTC ? moment(input).zone(model._offset || 0) :
	            moment(input).local();
	    }

	    /************************************
	        Languages
	    ************************************/


	    extend(Language.prototype, {

	        set : function (config) {
	            var prop, i;
	            for (i in config) {
	                prop = config[i];
	                if (typeof prop === 'function') {
	                    this[i] = prop;
	                } else {
	                    this['_' + i] = prop;
	                }
	            }
	        },

	        _months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
	        months : function (m) {
	            return this._months[m.month()];
	        },

	        _monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
	        monthsShort : function (m) {
	            return this._monthsShort[m.month()];
	        },

	        monthsParse : function (monthName) {
	            var i, mom, regex;

	            if (!this._monthsParse) {
	                this._monthsParse = [];
	            }

	            for (i = 0; i < 12; i++) {
	                // make the regex if we don't have it already
	                if (!this._monthsParse[i]) {
	                    mom = moment.utc([2000, i]);
	                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	                }
	                // test the regex
	                if (this._monthsParse[i].test(monthName)) {
	                    return i;
	                }
	            }
	        },

	        _weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
	        weekdays : function (m) {
	            return this._weekdays[m.day()];
	        },

	        _weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
	        weekdaysShort : function (m) {
	            return this._weekdaysShort[m.day()];
	        },

	        _weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
	        weekdaysMin : function (m) {
	            return this._weekdaysMin[m.day()];
	        },

	        weekdaysParse : function (weekdayName) {
	            var i, mom, regex;

	            if (!this._weekdaysParse) {
	                this._weekdaysParse = [];
	            }

	            for (i = 0; i < 7; i++) {
	                // make the regex if we don't have it already
	                if (!this._weekdaysParse[i]) {
	                    mom = moment([2000, 1]).day(i);
	                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	                }
	                // test the regex
	                if (this._weekdaysParse[i].test(weekdayName)) {
	                    return i;
	                }
	            }
	        },

	        _longDateFormat : {
	            LT : "h:mm A",
	            L : "MM/DD/YYYY",
	            LL : "MMMM D YYYY",
	            LLL : "MMMM D YYYY LT",
	            LLLL : "dddd, MMMM D YYYY LT"
	        },
	        longDateFormat : function (key) {
	            var output = this._longDateFormat[key];
	            if (!output && this._longDateFormat[key.toUpperCase()]) {
	                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
	                    return val.slice(1);
	                });
	                this._longDateFormat[key] = output;
	            }
	            return output;
	        },

	        isPM : function (input) {
	            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	            // Using charAt should be more compatible.
	            return ((input + '').toLowerCase().charAt(0) === 'p');
	        },

	        _meridiemParse : /[ap]\.?m?\.?/i,
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'pm' : 'PM';
	            } else {
	                return isLower ? 'am' : 'AM';
	            }
	        },

	        _calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendar[key];
	            return typeof output === 'function' ? output.apply(mom) : output;
	        },

	        _relativeTime : {
	            future : "in %s",
	            past : "%s ago",
	            s : "a few seconds",
	            m : "a minute",
	            mm : "%d minutes",
	            h : "an hour",
	            hh : "%d hours",
	            d : "a day",
	            dd : "%d days",
	            M : "a month",
	            MM : "%d months",
	            y : "a year",
	            yy : "%d years"
	        },
	        relativeTime : function (number, withoutSuffix, string, isFuture) {
	            var output = this._relativeTime[string];
	            return (typeof output === 'function') ?
	                output(number, withoutSuffix, string, isFuture) :
	                output.replace(/%d/i, number);
	        },
	        pastFuture : function (diff, output) {
	            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
	        },

	        ordinal : function (number) {
	            return this._ordinal.replace("%d", number);
	        },
	        _ordinal : "%d",

	        preparse : function (string) {
	            return string;
	        },

	        postformat : function (string) {
	            return string;
	        },

	        week : function (mom) {
	            return weekOfYear(mom, this._week.dow, this._week.doy).week;
	        },

	        _week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        },

	        _invalidDate: 'Invalid date',
	        invalidDate: function () {
	            return this._invalidDate;
	        }
	    });

	    // Loads a language definition into the `languages` cache.  The function
	    // takes a key and optionally values.  If not in the browser and no values
	    // are provided, it will load the language file module.  As a convenience,
	    // this function also returns the language values.
	    function loadLang(key, values) {
	        values.abbr = key;
	        if (!languages[key]) {
	            languages[key] = new Language();
	        }
	        languages[key].set(values);
	        return languages[key];
	    }

	    // Remove a language from the `languages` cache. Mostly useful in tests.
	    function unloadLang(key) {
	        delete languages[key];
	    }

	    // Determines which language definition to use and returns it.
	    //
	    // With no parameters, it will return the global language.  If you
	    // pass in a language key, such as 'en', it will return the
	    // definition for 'en', so long as 'en' has already been loaded using
	    // moment.lang.
	    function getLangDefinition(key) {
	        var i = 0, j, lang, next, split,
	            get = function (k) {
	                if (!languages[k] && hasModule) {
	                    try {
	                        __webpack_require__(60)("./" + k);
	                    } catch (e) { }
	                }
	                return languages[k];
	            };

	        if (!key) {
	            return moment.fn._lang;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            lang = get(key);
	            if (lang) {
	                return lang;
	            }
	            key = [key];
	        }

	        //pick the language from the array
	        //try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	        //substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	        while (i < key.length) {
	            split = normalizeLanguage(key[i]).split('-');
	            j = split.length;
	            next = normalizeLanguage(key[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                lang = get(split.slice(0, j).join('-'));
	                if (lang) {
	                    return lang;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return moment.fn._lang;
	    }

	    /************************************
	        Formatting
	    ************************************/


	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, "");
	        }
	        return input.replace(/\\/g, "");
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = "";
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {

	        if (!m.isValid()) {
	            return m.lang().invalidDate();
	        }

	        format = expandFormat(format, m.lang());

	        if (!formatFunctions[format]) {
	            formatFunctions[format] = makeFormatFunction(format);
	        }

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, lang) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return lang.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }


	    /************************************
	        Parsing
	    ************************************/


	    // get the regex to find the next token
	    function getParseRegexForToken(token, config) {
	        var a, strict = config._strict;
	        switch (token) {
	        case 'Q':
	            return parseTokenOneDigit;
	        case 'DDDD':
	            return parseTokenThreeDigits;
	        case 'YYYY':
	        case 'GGGG':
	        case 'gggg':
	            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
	        case 'Y':
	        case 'G':
	        case 'g':
	            return parseTokenSignedNumber;
	        case 'YYYYYY':
	        case 'YYYYY':
	        case 'GGGGG':
	        case 'ggggg':
	            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
	        case 'S':
	            if (strict) { return parseTokenOneDigit; }
	            /* falls through */
	        case 'SS':
	            if (strict) { return parseTokenTwoDigits; }
	            /* falls through */
	        case 'SSS':
	            if (strict) { return parseTokenThreeDigits; }
	            /* falls through */
	        case 'DDD':
	            return parseTokenOneToThreeDigits;
	        case 'MMM':
	        case 'MMMM':
	        case 'dd':
	        case 'ddd':
	        case 'dddd':
	            return parseTokenWord;
	        case 'a':
	        case 'A':
	            return getLangDefinition(config._l)._meridiemParse;
	        case 'X':
	            return parseTokenTimestampMs;
	        case 'Z':
	        case 'ZZ':
	            return parseTokenTimezone;
	        case 'T':
	            return parseTokenT;
	        case 'SSSS':
	            return parseTokenDigits;
	        case 'MM':
	        case 'DD':
	        case 'YY':
	        case 'GG':
	        case 'gg':
	        case 'HH':
	        case 'hh':
	        case 'mm':
	        case 'ss':
	        case 'ww':
	        case 'WW':
	            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
	        case 'M':
	        case 'D':
	        case 'd':
	        case 'H':
	        case 'h':
	        case 'm':
	        case 's':
	        case 'w':
	        case 'W':
	        case 'e':
	        case 'E':
	            return parseTokenOneOrTwoDigits;
	        case 'Do':
	            return parseTokenOrdinal;
	        default :
	            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), "i"));
	            return a;
	        }
	    }

	    function timezoneMinutesFromString(string) {
	        string = string || "";
	        var possibleTzMatches = (string.match(parseTokenTimezone) || []),
	            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],
	            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
	            minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? -minutes : minutes;
	    }

	    // function to convert string input to date
	    function addTimeToArrayFromToken(token, input, config) {
	        var a, datePartArray = config._a;

	        switch (token) {
	        // QUARTER
	        case 'Q':
	            if (input != null) {
	                datePartArray[MONTH] = (toInt(input) - 1) * 3;
	            }
	            break;
	        // MONTH
	        case 'M' : // fall through to MM
	        case 'MM' :
	            if (input != null) {
	                datePartArray[MONTH] = toInt(input) - 1;
	            }
	            break;
	        case 'MMM' : // fall through to MMMM
	        case 'MMMM' :
	            a = getLangDefinition(config._l).monthsParse(input);
	            // if we didn't find a month name, mark the date as invalid.
	            if (a != null) {
	                datePartArray[MONTH] = a;
	            } else {
	                config._pf.invalidMonth = input;
	            }
	            break;
	        // DAY OF MONTH
	        case 'D' : // fall through to DD
	        case 'DD' :
	            if (input != null) {
	                datePartArray[DATE] = toInt(input);
	            }
	            break;
	        case 'Do' :
	            if (input != null) {
	                datePartArray[DATE] = toInt(parseInt(input, 10));
	            }
	            break;
	        // DAY OF YEAR
	        case 'DDD' : // fall through to DDDD
	        case 'DDDD' :
	            if (input != null) {
	                config._dayOfYear = toInt(input);
	            }

	            break;
	        // YEAR
	        case 'YY' :
	            datePartArray[YEAR] = moment.parseTwoDigitYear(input);
	            break;
	        case 'YYYY' :
	        case 'YYYYY' :
	        case 'YYYYYY' :
	            datePartArray[YEAR] = toInt(input);
	            break;
	        // AM / PM
	        case 'a' : // fall through to A
	        case 'A' :
	            config._isPm = getLangDefinition(config._l).isPM(input);
	            break;
	        // 24 HOUR
	        case 'H' : // fall through to hh
	        case 'HH' : // fall through to hh
	        case 'h' : // fall through to hh
	        case 'hh' :
	            datePartArray[HOUR] = toInt(input);
	            break;
	        // MINUTE
	        case 'm' : // fall through to mm
	        case 'mm' :
	            datePartArray[MINUTE] = toInt(input);
	            break;
	        // SECOND
	        case 's' : // fall through to ss
	        case 'ss' :
	            datePartArray[SECOND] = toInt(input);
	            break;
	        // MILLISECOND
	        case 'S' :
	        case 'SS' :
	        case 'SSS' :
	        case 'SSSS' :
	            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
	            break;
	        // UNIX TIMESTAMP WITH MS
	        case 'X':
	            config._d = new Date(parseFloat(input) * 1000);
	            break;
	        // TIMEZONE
	        case 'Z' : // fall through to ZZ
	        case 'ZZ' :
	            config._useUTC = true;
	            config._tzm = timezoneMinutesFromString(input);
	            break;
	        case 'w':
	        case 'ww':
	        case 'W':
	        case 'WW':
	        case 'd':
	        case 'dd':
	        case 'ddd':
	        case 'dddd':
	        case 'e':
	        case 'E':
	            token = token.substr(0, 1);
	            /* falls through */
	        case 'gg':
	        case 'gggg':
	        case 'GG':
	        case 'GGGG':
	        case 'GGGGG':
	            token = token.substr(0, 2);
	            if (input) {
	                config._w = config._w || {};
	                config._w[token] = input;
	            }
	            break;
	        }
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function dateFromConfig(config) {
	        var i, date, input = [], currentDate,
	            yearToUse, fixYear, w, temp, lang, weekday, week;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            fixYear = function (val) {
	                var intVal = parseInt(val, 10);
	                return val ?
	                  (val.length < 3 ? (intVal > 68 ? 1900 + intVal : 2000 + intVal) : intVal) :
	                  (config._a[YEAR] == null ? moment().weekYear() : config._a[YEAR]);
	            };

	            w = config._w;
	            if (w.GG != null || w.W != null || w.E != null) {
	                temp = dayOfYearFromWeeks(fixYear(w.GG), w.W || 1, w.E, 4, 1);
	            }
	            else {
	                lang = getLangDefinition(config._l);
	                weekday = w.d != null ?  parseWeekday(w.d, lang) :
	                  (w.e != null ?  parseInt(w.e, 10) + lang._week.dow : 0);

	                week = parseInt(w.w, 10) || 1;

	                //if we're parsing 'd', then the low day numbers may be next week
	                if (w.d != null && weekday < lang._week.dow) {
	                    week++;
	                }

	                temp = dayOfYearFromWeeks(fixYear(w.gg), week, weekday, lang._week.doy, lang._week.dow);
	            }

	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = config._a[YEAR] == null ? currentDate[YEAR] : config._a[YEAR];

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                config._pf._overflowDayOfYear = true;
	            }

	            date = makeUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // add the offsets to the time to be parsed so that we can have a clean array for checking isValid
	        input[HOUR] += toInt((config._tzm || 0) / 60);
	        input[MINUTE] += toInt((config._tzm || 0) % 60);

	        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
	    }

	    function dateFromObject(config) {
	        var normalizedInput;

	        if (config._d) {
	            return;
	        }

	        normalizedInput = normalizeObjectUnits(config._i);
	        config._a = [
	            normalizedInput.year,
	            normalizedInput.month,
	            normalizedInput.day,
	            normalizedInput.hour,
	            normalizedInput.minute,
	            normalizedInput.second,
	            normalizedInput.millisecond
	        ];

	        dateFromConfig(config);
	    }

	    function currentDateArray(config) {
	        var now = new Date();
	        if (config._useUTC) {
	            return [
	                now.getUTCFullYear(),
	                now.getUTCMonth(),
	                now.getUTCDate()
	            ];
	        } else {
	            return [now.getFullYear(), now.getMonth(), now.getDate()];
	        }
	    }

	    // date from string and format string
	    function makeDateFromStringAndFormat(config) {

	        config._a = [];
	        config._pf.empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var lang = getLangDefinition(config._l),
	            string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, lang).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    config._pf.unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    config._pf.empty = false;
	                }
	                else {
	                    config._pf.unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                config._pf.unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        config._pf.charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            config._pf.unusedInput.push(string);
	        }

	        // handle am pm
	        if (config._isPm && config._a[HOUR] < 12) {
	            config._a[HOUR] += 12;
	        }
	        // if is 12 am, change hours to 0
	        if (config._isPm === false && config._a[HOUR] === 12) {
	            config._a[HOUR] = 0;
	        }

	        dateFromConfig(config);
	        checkOverflow(config);
	    }

	    function unescapeFormat(s) {
	        return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        });
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function regexpEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    // date from string and array of format strings
	    function makeDateFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            config._pf.invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = extend({}, config);
	            tempConfig._pf = defaultParsingFlags();
	            tempConfig._f = config._f[i];
	            makeDateFromStringAndFormat(tempConfig);

	            if (!isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += tempConfig._pf.charsLeftOver;

	            //or tokens
	            currentScore += tempConfig._pf.unusedTokens.length * 10;

	            tempConfig._pf.score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    // date from iso format
	    function makeDateFromString(config) {
	        var i, l,
	            string = config._i,
	            match = isoRegex.exec(string);

	        if (match) {
	            config._pf.iso = true;
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(string)) {
	                    // match[5] should be "T" or undefined
	                    config._f = isoDates[i][0] + (match[6] || " ");
	                    break;
	                }
	            }
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(string)) {
	                    config._f += isoTimes[i][0];
	                    break;
	                }
	            }
	            if (string.match(parseTokenTimezone)) {
	                config._f += "Z";
	            }
	            makeDateFromStringAndFormat(config);
	        }
	        else {
	            moment.createFromInputFallback(config);
	        }
	    }

	    function makeDateFromInput(config) {
	        var input = config._i,
	            matched = aspNetJsonRegex.exec(input);

	        if (input === undefined) {
	            config._d = new Date();
	        } else if (matched) {
	            config._d = new Date(+matched[1]);
	        } else if (typeof input === 'string') {
	            makeDateFromString(config);
	        } else if (isArray(input)) {
	            config._a = input.slice(0);
	            dateFromConfig(config);
	        } else if (isDate(input)) {
	            config._d = new Date(+input);
	        } else if (typeof(input) === 'object') {
	            dateFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            moment.createFromInputFallback(config);
	        }
	    }

	    function makeDate(y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor doesn't accept years < 1970
	        if (y < 1970) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function makeUTCDate(y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	        if (y < 1970) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    function parseWeekday(input, language) {
	        if (typeof input === 'string') {
	            if (!isNaN(input)) {
	                input = parseInt(input, 10);
	            }
	            else {
	                input = language.weekdaysParse(input);
	                if (typeof input !== 'number') {
	                    return null;
	                }
	            }
	        }
	        return input;
	    }

	    /************************************
	        Relative Time
	    ************************************/


	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {
	        return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function relativeTime(milliseconds, withoutSuffix, lang) {
	        var seconds = round(Math.abs(milliseconds) / 1000),
	            minutes = round(seconds / 60),
	            hours = round(minutes / 60),
	            days = round(hours / 24),
	            years = round(days / 365),
	            args = seconds < 45 && ['s', seconds] ||
	                minutes === 1 && ['m'] ||
	                minutes < 45 && ['mm', minutes] ||
	                hours === 1 && ['h'] ||
	                hours < 22 && ['hh', hours] ||
	                days === 1 && ['d'] ||
	                days <= 25 && ['dd', days] ||
	                days <= 45 && ['M'] ||
	                days < 345 && ['MM', round(days / 30)] ||
	                years === 1 && ['y'] || ['yy', years];
	        args[2] = withoutSuffix;
	        args[3] = milliseconds > 0;
	        args[4] = lang;
	        return substituteTimeAgo.apply({}, args);
	    }


	    /************************************
	        Week of Year
	    ************************************/


	    // firstDayOfWeek       0 = sun, 6 = sat
	    //                      the day of the week that starts the week
	    //                      (usually sunday or monday)
	    // firstDayOfWeekOfYear 0 = sun, 6 = sat
	    //                      the first week is the week that contains the first
	    //                      of this day of the week
	    //                      (eg. ISO weeks use thursday (4))
	    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
	        var end = firstDayOfWeekOfYear - firstDayOfWeek,
	            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
	            adjustedMoment;


	        if (daysToDayOfWeek > end) {
	            daysToDayOfWeek -= 7;
	        }

	        if (daysToDayOfWeek < end - 7) {
	            daysToDayOfWeek += 7;
	        }

	        adjustedMoment = moment(mom).add('d', daysToDayOfWeek);
	        return {
	            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
	            year: adjustedMoment.year()
	        };
	    }

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
	        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;

	        weekday = weekday != null ? weekday : firstDayOfWeek;
	        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
	        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;

	        return {
	            year: dayOfYear > 0 ? year : year - 1,
	            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
	        };
	    }

	    /************************************
	        Top Level Functions
	    ************************************/

	    function makeMoment(config) {
	        var input = config._i,
	            format = config._f;

	        if (input === null || (format === undefined && input === '')) {
	            return moment.invalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = getLangDefinition().preparse(input);
	        }

	        if (moment.isMoment(input)) {
	            config = cloneMoment(input);

	            config._d = new Date(+input._d);
	        } else if (format) {
	            if (isArray(format)) {
	                makeDateFromStringAndArray(config);
	            } else {
	                makeDateFromStringAndFormat(config);
	            }
	        } else {
	            makeDateFromInput(config);
	        }

	        return new Moment(config);
	    }

	    moment = function (input, format, lang, strict) {
	        var c;

	        if (typeof(lang) === "boolean") {
	            strict = lang;
	            lang = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c = {};
	        c._isAMomentObject = true;
	        c._i = input;
	        c._f = format;
	        c._l = lang;
	        c._strict = strict;
	        c._isUTC = false;
	        c._pf = defaultParsingFlags();

	        return makeMoment(c);
	    };

	    moment.suppressDeprecationWarnings = false;

	    moment.createFromInputFallback = deprecate(
	            "moment construction falls back to js Date. This is " +
	            "discouraged and will be removed in upcoming major " +
	            "release. Please refer to " +
	            "https://github.com/moment/moment/issues/1407 for more info.",
	            function (config) {
	        config._d = new Date(config._i);
	    });

	    // creating with utc
	    moment.utc = function (input, format, lang, strict) {
	        var c;

	        if (typeof(lang) === "boolean") {
	            strict = lang;
	            lang = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c = {};
	        c._isAMomentObject = true;
	        c._useUTC = true;
	        c._isUTC = true;
	        c._l = lang;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;
	        c._pf = defaultParsingFlags();

	        return makeMoment(c).utc();
	    };

	    // creating with unix timestamp (in seconds)
	    moment.unix = function (input) {
	        return moment(input * 1000);
	    };

	    // duration
	    moment.duration = function (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            parseIso;

	        if (moment.isDuration(input)) {
	            duration = {
	                ms: input._milliseconds,
	                d: input._days,
	                M: input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
	            sign = (match[1] === "-") ? -1 : 1;
	            duration = {
	                y: 0,
	                d: toInt(match[DATE]) * sign,
	                h: toInt(match[HOUR]) * sign,
	                m: toInt(match[MINUTE]) * sign,
	                s: toInt(match[SECOND]) * sign,
	                ms: toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = isoDurationRegex.exec(input))) {
	            sign = (match[1] === "-") ? -1 : 1;
	            parseIso = function (inp) {
	                // We'd normally use ~~inp for this, but unfortunately it also
	                // converts floats to ints.
	                // inp may be undefined, so careful calling replace on it.
	                var res = inp && parseFloat(inp.replace(',', '.'));
	                // apply sign while we're at it
	                return (isNaN(res) ? 0 : res) * sign;
	            };
	            duration = {
	                y: parseIso(match[2]),
	                M: parseIso(match[3]),
	                d: parseIso(match[4]),
	                h: parseIso(match[5]),
	                m: parseIso(match[6]),
	                s: parseIso(match[7]),
	                w: parseIso(match[8])
	            };
	        }

	        ret = new Duration(duration);

	        if (moment.isDuration(input) && input.hasOwnProperty('_lang')) {
	            ret._lang = input._lang;
	        }

	        return ret;
	    };

	    // version number
	    moment.version = VERSION;

	    // default format
	    moment.defaultFormat = isoFormat;

	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    moment.momentProperties = momentProperties;

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    moment.updateOffset = function () {};

	    // This function will load languages and then set the global language.  If
	    // no arguments are passed in, it will simply return the current global
	    // language key.
	    moment.lang = function (key, values) {
	        var r;
	        if (!key) {
	            return moment.fn._lang._abbr;
	        }
	        if (values) {
	            loadLang(normalizeLanguage(key), values);
	        } else if (values === null) {
	            unloadLang(key);
	            key = 'en';
	        } else if (!languages[key]) {
	            getLangDefinition(key);
	        }
	        r = moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);
	        return r._abbr;
	    };

	    // returns language data
	    moment.langData = function (key) {
	        if (key && key._lang && key._lang._abbr) {
	            key = key._lang._abbr;
	        }
	        return getLangDefinition(key);
	    };

	    // compare moment object
	    moment.isMoment = function (obj) {
	        return obj instanceof Moment ||
	            (obj != null &&  obj.hasOwnProperty('_isAMomentObject'));
	    };

	    // for typechecking Duration objects
	    moment.isDuration = function (obj) {
	        return obj instanceof Duration;
	    };

	    for (i = lists.length - 1; i >= 0; --i) {
	        makeList(lists[i]);
	    }

	    moment.normalizeUnits = function (units) {
	        return normalizeUnits(units);
	    };

	    moment.invalid = function (flags) {
	        var m = moment.utc(NaN);
	        if (flags != null) {
	            extend(m._pf, flags);
	        }
	        else {
	            m._pf.userInvalidated = true;
	        }

	        return m;
	    };

	    moment.parseZone = function () {
	        return moment.apply(null, arguments).parseZone();
	    };

	    moment.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    /************************************
	        Moment Prototype
	    ************************************/


	    extend(moment.fn = Moment.prototype, {

	        clone : function () {
	            return moment(this);
	        },

	        valueOf : function () {
	            return +this._d + ((this._offset || 0) * 60000);
	        },

	        unix : function () {
	            return Math.floor(+this / 1000);
	        },

	        toString : function () {
	            return this.clone().lang('en').format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
	        },

	        toDate : function () {
	            return this._offset ? new Date(+this) : this._d;
	        },

	        toISOString : function () {
	            var m = moment(this).utc();
	            if (0 < m.year() && m.year() <= 9999) {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            } else {
	                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        },

	        toArray : function () {
	            var m = this;
	            return [
	                m.year(),
	                m.month(),
	                m.date(),
	                m.hours(),
	                m.minutes(),
	                m.seconds(),
	                m.milliseconds()
	            ];
	        },

	        isValid : function () {
	            return isValid(this);
	        },

	        isDSTShifted : function () {

	            if (this._a) {
	                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
	            }

	            return false;
	        },

	        parsingFlags : function () {
	            return extend({}, this._pf);
	        },

	        invalidAt: function () {
	            return this._pf.overflow;
	        },

	        utc : function () {
	            return this.zone(0);
	        },

	        local : function () {
	            this.zone(0);
	            this._isUTC = false;
	            return this;
	        },

	        format : function (inputString) {
	            var output = formatMoment(this, inputString || moment.defaultFormat);
	            return this.lang().postformat(output);
	        },

	        add : function (input, val) {
	            var dur;
	            // switch args to support add('s', 1) and add(1, 's')
	            if (typeof input === 'string') {
	                dur = moment.duration(+val, input);
	            } else {
	                dur = moment.duration(input, val);
	            }
	            addOrSubtractDurationFromMoment(this, dur, 1);
	            return this;
	        },

	        subtract : function (input, val) {
	            var dur;
	            // switch args to support subtract('s', 1) and subtract(1, 's')
	            if (typeof input === 'string') {
	                dur = moment.duration(+val, input);
	            } else {
	                dur = moment.duration(input, val);
	            }
	            addOrSubtractDurationFromMoment(this, dur, -1);
	            return this;
	        },

	        diff : function (input, units, asFloat) {
	            var that = makeAs(input, this),
	                zoneDiff = (this.zone() - that.zone()) * 6e4,
	                diff, output;

	            units = normalizeUnits(units);

	            if (units === 'year' || units === 'month') {
	                // average number of days in the months in the given dates
	                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2
	                // difference in months
	                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());
	                // adjust by taking difference in days, average number of days
	                // and dst in the given months.
	                output += ((this - moment(this).startOf('month')) -
	                        (that - moment(that).startOf('month'))) / diff;
	                // same as above but with zones, to negate all dst
	                output -= ((this.zone() - moment(this).startOf('month').zone()) -
	                        (that.zone() - moment(that).startOf('month').zone())) * 6e4 / diff;
	                if (units === 'year') {
	                    output = output / 12;
	                }
	            } else {
	                diff = (this - that);
	                output = units === 'second' ? diff / 1e3 : // 1000
	                    units === 'minute' ? diff / 6e4 : // 1000 * 60
	                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60
	                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                    diff;
	            }
	            return asFloat ? output : absRound(output);
	        },

	        from : function (time, withoutSuffix) {
	            return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);
	        },

	        fromNow : function (withoutSuffix) {
	            return this.from(moment(), withoutSuffix);
	        },

	        calendar : function () {
	            // We want to compare the start of today, vs this.
	            // Getting start-of-today depends on whether we're zone'd or not.
	            var sod = makeAs(moment(), this).startOf('day'),
	                diff = this.diff(sod, 'days', true),
	                format = diff < -6 ? 'sameElse' :
	                    diff < -1 ? 'lastWeek' :
	                    diff < 0 ? 'lastDay' :
	                    diff < 1 ? 'sameDay' :
	                    diff < 2 ? 'nextDay' :
	                    diff < 7 ? 'nextWeek' : 'sameElse';
	            return this.format(this.lang().calendar(format, this));
	        },

	        isLeapYear : function () {
	            return isLeapYear(this.year());
	        },

	        isDST : function () {
	            return (this.zone() < this.clone().month(0).zone() ||
	                this.zone() < this.clone().month(5).zone());
	        },

	        day : function (input) {
	            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	            if (input != null) {
	                input = parseWeekday(input, this.lang());
	                return this.add({ d : input - day });
	            } else {
	                return day;
	            }
	        },

	        month : makeAccessor('Month', true),

	        startOf: function (units) {
	            units = normalizeUnits(units);
	            // the following switch intentionally omits break keywords
	            // to utilize falling through the cases.
	            switch (units) {
	            case 'year':
	                this.month(0);
	                /* falls through */
	            case 'quarter':
	            case 'month':
	                this.date(1);
	                /* falls through */
	            case 'week':
	            case 'isoWeek':
	            case 'day':
	                this.hours(0);
	                /* falls through */
	            case 'hour':
	                this.minutes(0);
	                /* falls through */
	            case 'minute':
	                this.seconds(0);
	                /* falls through */
	            case 'second':
	                this.milliseconds(0);
	                /* falls through */
	            }

	            // weeks are a special case
	            if (units === 'week') {
	                this.weekday(0);
	            } else if (units === 'isoWeek') {
	                this.isoWeekday(1);
	            }

	            // quarters are also special
	            if (units === 'quarter') {
	                this.month(Math.floor(this.month() / 3) * 3);
	            }

	            return this;
	        },

	        endOf: function (units) {
	            units = normalizeUnits(units);
	            return this.startOf(units).add((units === 'isoWeek' ? 'week' : units), 1).subtract('ms', 1);
	        },

	        isAfter: function (input, units) {
	            units = typeof units !== 'undefined' ? units : 'millisecond';
	            return +this.clone().startOf(units) > +moment(input).startOf(units);
	        },

	        isBefore: function (input, units) {
	            units = typeof units !== 'undefined' ? units : 'millisecond';
	            return +this.clone().startOf(units) < +moment(input).startOf(units);
	        },

	        isSame: function (input, units) {
	            units = units || 'ms';
	            return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);
	        },

	        min: function (other) {
	            other = moment.apply(null, arguments);
	            return other < this ? this : other;
	        },

	        max: function (other) {
	            other = moment.apply(null, arguments);
	            return other > this ? this : other;
	        },

	        // keepTime = true means only change the timezone, without affecting
	        // the local hour. So 5:31:26 +0300 --[zone(2, true)]--> 5:31:26 +0200
	        // It is possible that 5:31:26 doesn't exist int zone +0200, so we
	        // adjust the time as needed, to be valid.
	        //
	        // Keeping the time actually adds/subtracts (one hour)
	        // from the actual represented time. That is why we call updateOffset
	        // a second time. In case it wants us to change the offset again
	        // _changeInProgress == true case, then we have to adjust, because
	        // there is no such time in the given timezone.
	        zone : function (input, keepTime) {
	            var offset = this._offset || 0;
	            if (input != null) {
	                if (typeof input === "string") {
	                    input = timezoneMinutesFromString(input);
	                }
	                if (Math.abs(input) < 16) {
	                    input = input * 60;
	                }
	                this._offset = input;
	                this._isUTC = true;
	                if (offset !== input) {
	                    if (!keepTime || this._changeInProgress) {
	                        addOrSubtractDurationFromMoment(this,
	                                moment.duration(offset - input, 'm'), 1, false);
	                    } else if (!this._changeInProgress) {
	                        this._changeInProgress = true;
	                        moment.updateOffset(this, true);
	                        this._changeInProgress = null;
	                    }
	                }
	            } else {
	                return this._isUTC ? offset : this._d.getTimezoneOffset();
	            }
	            return this;
	        },

	        zoneAbbr : function () {
	            return this._isUTC ? "UTC" : "";
	        },

	        zoneName : function () {
	            return this._isUTC ? "Coordinated Universal Time" : "";
	        },

	        parseZone : function () {
	            if (this._tzm) {
	                this.zone(this._tzm);
	            } else if (typeof this._i === 'string') {
	                this.zone(this._i);
	            }
	            return this;
	        },

	        hasAlignedHourOffset : function (input) {
	            if (!input) {
	                input = 0;
	            }
	            else {
	                input = moment(input).zone();
	            }

	            return (this.zone() - input) % 60 === 0;
	        },

	        daysInMonth : function () {
	            return daysInMonth(this.year(), this.month());
	        },

	        dayOfYear : function (input) {
	            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
	            return input == null ? dayOfYear : this.add("d", (input - dayOfYear));
	        },

	        quarter : function (input) {
	            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	        },

	        weekYear : function (input) {
	            var year = weekOfYear(this, this.lang()._week.dow, this.lang()._week.doy).year;
	            return input == null ? year : this.add("y", (input - year));
	        },

	        isoWeekYear : function (input) {
	            var year = weekOfYear(this, 1, 4).year;
	            return input == null ? year : this.add("y", (input - year));
	        },

	        week : function (input) {
	            var week = this.lang().week(this);
	            return input == null ? week : this.add("d", (input - week) * 7);
	        },

	        isoWeek : function (input) {
	            var week = weekOfYear(this, 1, 4).week;
	            return input == null ? week : this.add("d", (input - week) * 7);
	        },

	        weekday : function (input) {
	            var weekday = (this.day() + 7 - this.lang()._week.dow) % 7;
	            return input == null ? weekday : this.add("d", input - weekday);
	        },

	        isoWeekday : function (input) {
	            // behaves the same as moment#day except
	            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	            // as a setter, sunday should belong to the previous week.
	            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	        },

	        isoWeeksInYear : function () {
	            return weeksInYear(this.year(), 1, 4);
	        },

	        weeksInYear : function () {
	            var weekInfo = this._lang._week;
	            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	        },

	        get : function (units) {
	            units = normalizeUnits(units);
	            return this[units]();
	        },

	        set : function (units, value) {
	            units = normalizeUnits(units);
	            if (typeof this[units] === 'function') {
	                this[units](value);
	            }
	            return this;
	        },

	        // If passed a language key, it will set the language for this
	        // instance.  Otherwise, it will return the language configuration
	        // variables for this instance.
	        lang : function (key) {
	            if (key === undefined) {
	                return this._lang;
	            } else {
	                this._lang = getLangDefinition(key);
	                return this;
	            }
	        }
	    });

	    function rawMonthSetter(mom, value) {
	        var dayOfMonth;

	        // TODO: Move this out of here!
	        if (typeof value === 'string') {
	            value = mom.lang().monthsParse(value);
	            // TODO: Another silent failure?
	            if (typeof value !== 'number') {
	                return mom;
	            }
	        }

	        dayOfMonth = Math.min(mom.date(),
	                daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function rawGetter(mom, unit) {
	        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
	    }

	    function rawSetter(mom, unit, value) {
	        if (unit === 'Month') {
	            return rawMonthSetter(mom, value);
	        } else {
	            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }

	    function makeAccessor(unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                rawSetter(this, unit, value);
	                moment.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return rawGetter(this, unit);
	            }
	        };
	    }

	    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
	    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
	    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
	    // moment.fn.month is defined separately
	    moment.fn.date = makeAccessor('Date', true);
	    moment.fn.dates = deprecate("dates accessor is deprecated. Use date instead.", makeAccessor('Date', true));
	    moment.fn.year = makeAccessor('FullYear', true);
	    moment.fn.years = deprecate("years accessor is deprecated. Use year instead.", makeAccessor('FullYear', true));

	    // add plural methods
	    moment.fn.days = moment.fn.day;
	    moment.fn.months = moment.fn.month;
	    moment.fn.weeks = moment.fn.week;
	    moment.fn.isoWeeks = moment.fn.isoWeek;
	    moment.fn.quarters = moment.fn.quarter;

	    // add aliased format methods
	    moment.fn.toJSON = moment.fn.toISOString;

	    /************************************
	        Duration Prototype
	    ************************************/


	    extend(moment.duration.fn = Duration.prototype, {

	        _bubble : function () {
	            var milliseconds = this._milliseconds,
	                days = this._days,
	                months = this._months,
	                data = this._data,
	                seconds, minutes, hours, years;

	            // The following code bubbles up values, see the tests for
	            // examples of what that means.
	            data.milliseconds = milliseconds % 1000;

	            seconds = absRound(milliseconds / 1000);
	            data.seconds = seconds % 60;

	            minutes = absRound(seconds / 60);
	            data.minutes = minutes % 60;

	            hours = absRound(minutes / 60);
	            data.hours = hours % 24;

	            days += absRound(hours / 24);
	            data.days = days % 30;

	            months += absRound(days / 30);
	            data.months = months % 12;

	            years = absRound(months / 12);
	            data.years = years;
	        },

	        weeks : function () {
	            return absRound(this.days() / 7);
	        },

	        valueOf : function () {
	            return this._milliseconds +
	              this._days * 864e5 +
	              (this._months % 12) * 2592e6 +
	              toInt(this._months / 12) * 31536e6;
	        },

	        humanize : function (withSuffix) {
	            var difference = +this,
	                output = relativeTime(difference, !withSuffix, this.lang());

	            if (withSuffix) {
	                output = this.lang().pastFuture(difference, output);
	            }

	            return this.lang().postformat(output);
	        },

	        add : function (input, val) {
	            // supports only 2.0-style add(1, 's') or add(moment)
	            var dur = moment.duration(input, val);

	            this._milliseconds += dur._milliseconds;
	            this._days += dur._days;
	            this._months += dur._months;

	            this._bubble();

	            return this;
	        },

	        subtract : function (input, val) {
	            var dur = moment.duration(input, val);

	            this._milliseconds -= dur._milliseconds;
	            this._days -= dur._days;
	            this._months -= dur._months;

	            this._bubble();

	            return this;
	        },

	        get : function (units) {
	            units = normalizeUnits(units);
	            return this[units.toLowerCase() + 's']();
	        },

	        as : function (units) {
	            units = normalizeUnits(units);
	            return this['as' + units.charAt(0).toUpperCase() + units.slice(1) + 's']();
	        },

	        lang : moment.fn.lang,

	        toIsoString : function () {
	            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	            var years = Math.abs(this.years()),
	                months = Math.abs(this.months()),
	                days = Math.abs(this.days()),
	                hours = Math.abs(this.hours()),
	                minutes = Math.abs(this.minutes()),
	                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);

	            if (!this.asSeconds()) {
	                // this is the same as C#'s (Noda) and python (isodate)...
	                // but not other JS (goog.date)
	                return 'P0D';
	            }

	            return (this.asSeconds() < 0 ? '-' : '') +
	                'P' +
	                (years ? years + 'Y' : '') +
	                (months ? months + 'M' : '') +
	                (days ? days + 'D' : '') +
	                ((hours || minutes || seconds) ? 'T' : '') +
	                (hours ? hours + 'H' : '') +
	                (minutes ? minutes + 'M' : '') +
	                (seconds ? seconds + 'S' : '');
	        }
	    });

	    function makeDurationGetter(name) {
	        moment.duration.fn[name] = function () {
	            return this._data[name];
	        };
	    }

	    function makeDurationAsGetter(name, factor) {
	        moment.duration.fn['as' + name] = function () {
	            return +this / factor;
	        };
	    }

	    for (i in unitMillisecondFactors) {
	        if (unitMillisecondFactors.hasOwnProperty(i)) {
	            makeDurationAsGetter(i, unitMillisecondFactors[i]);
	            makeDurationGetter(i.toLowerCase());
	        }
	    }

	    makeDurationAsGetter('Weeks', 6048e5);
	    moment.duration.fn.asMonths = function () {
	        return (+this - this.years() * 31536e6) / 2592e6 + this.years() * 12;
	    };


	    /************************************
	        Default Lang
	    ************************************/


	    // Set default language, other languages will inherit from English.
	    moment.lang('en', {
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    /* EMBED_LANGUAGES */

	    /************************************
	        Exposing Moment
	    ************************************/

	    function makeGlobal(shouldDeprecate) {
	        /*global ender:false */
	        if (typeof ender !== 'undefined') {
	            return;
	        }
	        oldGlobalMoment = globalScope.moment;
	        if (shouldDeprecate) {
	            globalScope.moment = deprecate(
	                    "Accessing Moment through the global scope is " +
	                    "deprecated, and will be removed in an upcoming " +
	                    "release.",
	                    moment);
	        } else {
	            globalScope.moment = moment;
	        }
	    }

	    // CommonJS module is defined
	    if (hasModule) {
	        module.exports = moment;
	    } else if (true) {
	        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, module) {
	            if (module.config && module.config() && module.config().noGlobal === true) {
	                // release the global variable
	                globalScope.moment = oldGlobalMoment;
	            }

	            return moment;
	        }.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	        makeGlobal(true);
	    } else {
	        makeGlobal();
	    }
	}).call(this);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(135)(module)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**
	 * @license
	 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
	 * Build: `lodash -o ./dist/lodash.compat.js`
	 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
	 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
	 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 * Available under MIT license <http://lodash.com/license>
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre ES5 environments */
	  var undefined;

	  /** Used to pool arrays and objects used internally */
	  var arrayPool = [],
	      objectPool = [];

	  /** Used to generate unique IDs */
	  var idCounter = 0;

	  /** Used internally to indicate various things */
	  var indicatorObject = {};

	  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
	  var keyPrefix = +new Date + '';

	  /** Used as the size when optimizations are enabled for large arrays */
	  var largeArraySize = 75;

	  /** Used as the max size of the `arrayPool` and `objectPool` */
	  var maxPoolSize = 40;

	  /** Used to detect and test whitespace */
	  var whitespace = (
	    // whitespace
	    ' \t\x0B\f\xA0\ufeff' +

	    // line terminators
	    '\n\r\u2028\u2029' +

	    // unicode category "Zs" space separators
	    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
	  );

	  /** Used to match empty string literals in compiled template source */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /**
	   * Used to match ES6 template delimiters
	   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match regexp flags from their coerced string values */
	  var reFlags = /\w*$/;

	  /** Used to detected named functions */
	  var reFuncName = /^\s*function[ \n\r\t]+\w/;

	  /** Used to match "interpolate" template delimiters */
	  var reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match leading whitespace and zeros to be removed */
	  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

	  /** Used to ensure capturing order of template delimiters */
	  var reNoMatch = /($^)/;

	  /** Used to detect functions containing a `this` reference */
	  var reThis = /\bthis\b/;

	  /** Used to match unescaped characters in compiled string literals */
	  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

	  /** Used to assign default `context` object properties */
	  var contextProps = [
	    'Array', 'Boolean', 'Date', 'Error', 'Function', 'Math', 'Number', 'Object',
	    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
	    'parseInt', 'setTimeout'
	  ];

	  /** Used to fix the JScript [[DontEnum]] bug */
	  var shadowedProps = [
	    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',
	    'toLocaleString', 'toString', 'valueOf'
	  ];

	  /** Used to make template sourceURLs easier to identify */
	  var templateCounter = 0;

	  /** `Object#toString` result shortcuts */
	  var argsClass = '[object Arguments]',
	      arrayClass = '[object Array]',
	      boolClass = '[object Boolean]',
	      dateClass = '[object Date]',
	      errorClass = '[object Error]',
	      funcClass = '[object Function]',
	      numberClass = '[object Number]',
	      objectClass = '[object Object]',
	      regexpClass = '[object RegExp]',
	      stringClass = '[object String]';

	  /** Used to identify object classifications that `_.clone` supports */
	  var cloneableClasses = {};
	  cloneableClasses[funcClass] = false;
	  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
	  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
	  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
	  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

	  /** Used as an internal `_.debounce` options object */
	  var debounceOptions = {
	    'leading': false,
	    'maxWait': 0,
	    'trailing': false
	  };

	  /** Used as the property descriptor for `__bindData__` */
	  var descriptor = {
	    'configurable': false,
	    'enumerable': false,
	    'value': null,
	    'writable': false
	  };

	  /** Used as the data object for `iteratorTemplate` */
	  var iteratorData = {
	    'args': '',
	    'array': null,
	    'bottom': '',
	    'firstArg': '',
	    'init': '',
	    'keys': null,
	    'loop': '',
	    'shadowedProps': null,
	    'support': null,
	    'top': '',
	    'useHas': false
	  };

	  /** Used to determine if values are of the language type Object */
	  var objectTypes = {
	    'boolean': false,
	    'function': true,
	    'object': true,
	    'number': false,
	    'string': false,
	    'undefined': false
	  };

	  /** Used to escape characters for inclusion in compiled string literals */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\t': 't',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Used as a reference to the global object */
	  var root = (objectTypes[typeof window] && window) || this;

	  /** Detect free variable `exports` */
	  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

	  /** Detect free variable `module` */
	  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

	  /** Detect the popular CommonJS extension `module.exports` */
	  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

	  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
	  var freeGlobal = objectTypes[typeof global] && global;
	  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
	    root = freeGlobal;
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * The base implementation of `_.indexOf` without support for binary searches
	   * or `fromIndex` constraints.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} [fromIndex=0] The index to search from.
	   * @returns {number} Returns the index of the matched value or `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    var index = (fromIndex || 0) - 1,
	        length = array ? array.length : 0;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * An implementation of `_.contains` for cache objects that mimics the return
	   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
	   *
	   * @private
	   * @param {Object} cache The cache object to inspect.
	   * @param {*} value The value to search for.
	   * @returns {number} Returns `0` if `value` is found, else `-1`.
	   */
	  function cacheIndexOf(cache, value) {
	    var type = typeof value;
	    cache = cache.cache;

	    if (type == 'boolean' || value == null) {
	      return cache[value] ? 0 : -1;
	    }
	    if (type != 'number' && type != 'string') {
	      type = 'object';
	    }
	    var key = type == 'number' ? value : keyPrefix + value;
	    cache = (cache = cache[type]) && cache[key];

	    return type == 'object'
	      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
	      : (cache ? 0 : -1);
	  }

	  /**
	   * Adds a given value to the corresponding cache object.
	   *
	   * @private
	   * @param {*} value The value to add to the cache.
	   */
	  function cachePush(value) {
	    var cache = this.cache,
	        type = typeof value;

	    if (type == 'boolean' || value == null) {
	      cache[value] = true;
	    } else {
	      if (type != 'number' && type != 'string') {
	        type = 'object';
	      }
	      var key = type == 'number' ? value : keyPrefix + value,
	          typeCache = cache[type] || (cache[type] = {});

	      if (type == 'object') {
	        (typeCache[key] || (typeCache[key] = [])).push(value);
	      } else {
	        typeCache[key] = true;
	      }
	    }
	  }

	  /**
	   * Used by `_.max` and `_.min` as the default callback when a given
	   * collection is a string value.
	   *
	   * @private
	   * @param {string} value The character to inspect.
	   * @returns {number} Returns the code unit of given character.
	   */
	  function charAtCallback(value) {
	    return value.charCodeAt(0);
	  }

	  /**
	   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
	   * them in ascending order.
	   *
	   * @private
	   * @param {Object} a The object to compare to `b`.
	   * @param {Object} b The object to compare to `a`.
	   * @returns {number} Returns the sort order indicator of `1` or `-1`.
	   */
	  function compareAscending(a, b) {
	    var ac = a.criteria,
	        bc = b.criteria,
	        index = -1,
	        length = ac.length;

	    while (++index < length) {
	      var value = ac[index],
	          other = bc[index];

	      if (value !== other) {
	        if (value > other || typeof value == 'undefined') {
	          return 1;
	        }
	        if (value < other || typeof other == 'undefined') {
	          return -1;
	        }
	      }
	    }
	    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	    // that causes it, under certain circumstances, to return the same value for
	    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
	    //
	    // This also ensures a stable sort in V8 and other engines.
	    // See http://code.google.com/p/v8/issues/detail?id=90
	    return a.index - b.index;
	  }

	  /**
	   * Creates a cache object to optimize linear searches of large arrays.
	   *
	   * @private
	   * @param {Array} [array=[]] The array to search.
	   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
	   */
	  function createCache(array) {
	    var index = -1,
	        length = array.length,
	        first = array[0],
	        mid = array[(length / 2) | 0],
	        last = array[length - 1];

	    if (first && typeof first == 'object' &&
	        mid && typeof mid == 'object' && last && typeof last == 'object') {
	      return false;
	    }
	    var cache = getObject();
	    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

	    var result = getObject();
	    result.array = array;
	    result.cache = cache;
	    result.push = cachePush;

	    while (++index < length) {
	      result.push(array[index]);
	    }
	    return result;
	  }

	  /**
	   * Used by `template` to escape characters for inclusion in compiled
	   * string literals.
	   *
	   * @private
	   * @param {string} match The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(match) {
	    return '\\' + stringEscapes[match];
	  }

	  /**
	   * Gets an array from the array pool or creates a new one if the pool is empty.
	   *
	   * @private
	   * @returns {Array} The array from the pool.
	   */
	  function getArray() {
	    return arrayPool.pop() || [];
	  }

	  /**
	   * Gets an object from the object pool or creates a new one if the pool is empty.
	   *
	   * @private
	   * @returns {Object} The object from the pool.
	   */
	  function getObject() {
	    return objectPool.pop() || {
	      'array': null,
	      'cache': null,
	      'criteria': null,
	      'false': false,
	      'index': 0,
	      'null': false,
	      'number': null,
	      'object': null,
	      'push': null,
	      'string': null,
	      'true': false,
	      'undefined': false,
	      'value': null
	    };
	  }

	  /**
	   * Checks if `value` is a DOM node in IE < 9.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if the `value` is a DOM node, else `false`.
	   */
	  function isNode(value) {
	    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`
	    // methods that are `typeof` "string" and still can coerce nodes to strings
	    return typeof value.toString != 'function' && typeof (value + '') == 'string';
	  }

	  /**
	   * Releases the given array back to the array pool.
	   *
	   * @private
	   * @param {Array} [array] The array to release.
	   */
	  function releaseArray(array) {
	    array.length = 0;
	    if (arrayPool.length < maxPoolSize) {
	      arrayPool.push(array);
	    }
	  }

	  /**
	   * Releases the given object back to the object pool.
	   *
	   * @private
	   * @param {Object} [object] The object to release.
	   */
	  function releaseObject(object) {
	    var cache = object.cache;
	    if (cache) {
	      releaseObject(cache);
	    }
	    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
	    if (objectPool.length < maxPoolSize) {
	      objectPool.push(object);
	    }
	  }

	  /**
	   * Slices the `collection` from the `start` index up to, but not including,
	   * the `end` index.
	   *
	   * Note: This function is used instead of `Array#slice` to support node lists
	   * in IE < 9 and to ensure dense arrays are returned.
	   *
	   * @private
	   * @param {Array|Object|string} collection The collection to slice.
	   * @param {number} start The start index.
	   * @param {number} end The end index.
	   * @returns {Array} Returns the new array.
	   */
	  function slice(array, start, end) {
	    start || (start = 0);
	    if (typeof end == 'undefined') {
	      end = array ? array.length : 0;
	    }
	    var index = -1,
	        length = end - start || 0,
	        result = Array(length < 0 ? 0 : length);

	    while (++index < length) {
	      result[index] = array[start + index];
	    }
	    return result;
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new `lodash` function using the given context object.
	   *
	   * @static
	   * @memberOf _
	   * @category Utilities
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns the `lodash` function.
	   */
	  function runInContext(context) {
	    // Avoid issues with some ES3 environments that attempt to use values, named
	    // after built-in constructors like `Object`, for the creation of literals.
	    // ES5 clears this up by stating that literals must use built-in constructors.
	    // See http://es5.github.io/#x11.1.5.
	    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

	    /** Native constructor references */
	    var Array = context.Array,
	        Boolean = context.Boolean,
	        Date = context.Date,
	        Error = context.Error,
	        Function = context.Function,
	        Math = context.Math,
	        Number = context.Number,
	        Object = context.Object,
	        RegExp = context.RegExp,
	        String = context.String,
	        TypeError = context.TypeError;

	    /**
	     * Used for `Array` method references.
	     *
	     * Normally `Array.prototype` would suffice, however, using an array literal
	     * avoids issues in Narwhal.
	     */
	    var arrayRef = [];

	    /** Used for native method references */
	    var errorProto = Error.prototype,
	        objectProto = Object.prototype,
	        stringProto = String.prototype;

	    /** Used to restore the original `_` reference in `noConflict` */
	    var oldDash = context._;

	    /** Used to resolve the internal [[Class]] of values */
	    var toString = objectProto.toString;

	    /** Used to detect if a method is native */
	    var reNative = RegExp('^' +
	      String(toString)
	        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
	        .replace(/toString| for [^\]]+/g, '.*?') + '$'
	    );

	    /** Native method shortcuts */
	    var ceil = Math.ceil,
	        clearTimeout = context.clearTimeout,
	        floor = Math.floor,
	        fnToString = Function.prototype.toString,
	        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
	        hasOwnProperty = objectProto.hasOwnProperty,
	        push = arrayRef.push,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        setTimeout = context.setTimeout,
	        splice = arrayRef.splice,
	        unshift = arrayRef.unshift;

	    /** Used to set meta data on functions */
	    var defineProperty = (function() {
	      // IE 8 only accepts DOM elements
	      try {
	        var o = {},
	            func = isNative(func = Object.defineProperty) && func,
	            result = func(o, o, o) && func;
	      } catch(e) { }
	      return result;
	    }());

	    /* Native method shortcuts for methods with the same name as other `lodash` methods */
	    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
	        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
	        nativeIsFinite = context.isFinite,
	        nativeIsNaN = context.isNaN,
	        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random;

	    /** Used to lookup a built-in constructor by [[Class]] */
	    var ctorByClass = {};
	    ctorByClass[arrayClass] = Array;
	    ctorByClass[boolClass] = Boolean;
	    ctorByClass[dateClass] = Date;
	    ctorByClass[funcClass] = Function;
	    ctorByClass[objectClass] = Object;
	    ctorByClass[numberClass] = Number;
	    ctorByClass[regexpClass] = RegExp;
	    ctorByClass[stringClass] = String;

	    /** Used to avoid iterating non-enumerable properties in IE < 9 */
	    var nonEnumProps = {};
	    nonEnumProps[arrayClass] = nonEnumProps[dateClass] = nonEnumProps[numberClass] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };
	    nonEnumProps[boolClass] = nonEnumProps[stringClass] = { 'constructor': true, 'toString': true, 'valueOf': true };
	    nonEnumProps[errorClass] = nonEnumProps[funcClass] = nonEnumProps[regexpClass] = { 'constructor': true, 'toString': true };
	    nonEnumProps[objectClass] = { 'constructor': true };

	    (function() {
	      var length = shadowedProps.length;
	      while (length--) {
	        var key = shadowedProps[length];
	        for (var className in nonEnumProps) {
	          if (hasOwnProperty.call(nonEnumProps, className) && !hasOwnProperty.call(nonEnumProps[className], key)) {
	            nonEnumProps[className][key] = false;
	          }
	        }
	      }
	    }());

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps the given value to enable intuitive
	     * method chaining.
	     *
	     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
	     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
	     * and `unshift`
	     *
	     * Chaining is supported in custom builds as long as the `value` method is
	     * implicitly or explicitly included in the build.
	     *
	     * The chainable wrapper functions are:
	     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
	     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
	     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
	     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
	     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
	     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
	     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
	     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
	     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
	     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
	     * and `zip`
	     *
	     * The non-chainable wrapper functions are:
	     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
	     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
	     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
	     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
	     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
	     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
	     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
	     * `template`, `unescape`, `uniqueId`, and `value`
	     *
	     * The wrapper functions `first` and `last` return wrapped values when `n` is
	     * provided, otherwise they return unwrapped values.
	     *
	     * Explicit chaining can be enabled by using the `_.chain` method.
	     *
	     * @name _
	     * @constructor
	     * @category Chaining
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns a `lodash` instance.
	     * @example
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // returns an unwrapped value
	     * wrapped.reduce(function(sum, num) {
	     *   return sum + num;
	     * });
	     * // => 6
	     *
	     * // returns a wrapped value
	     * var squares = wrapped.map(function(num) {
	     *   return num * num;
	     * });
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
	      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
	       ? value
	       : new lodashWrapper(value);
	    }

	    /**
	     * A fast path for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @param {boolean} chainAll A flag to enable chaining for all methods
	     * @returns {Object} Returns a `lodash` instance.
	     */
	    function lodashWrapper(value, chainAll) {
	      this.__chain__ = !!chainAll;
	      this.__wrapped__ = value;
	    }
	    // ensure `new lodashWrapper` is an instance of `lodash`
	    lodashWrapper.prototype = lodash.prototype;

	    /**
	     * An object used to flag environments features.
	     *
	     * @static
	     * @memberOf _
	     * @type Object
	     */
	    var support = lodash.support = {};

	    (function() {
	      var ctor = function() { this.x = 1; },
	          object = { '0': 1, 'length': 1 },
	          props = [];

	      ctor.prototype = { 'valueOf': 1, 'y': 1 };
	      for (var key in new ctor) { props.push(key); }
	      for (key in arguments) { }

	      /**
	       * Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.argsClass = toString.call(arguments) == argsClass;

	      /**
	       * Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.argsObject = arguments.constructor == Object && !(arguments instanceof Array);

	      /**
	       * Detect if `name` or `message` properties of `Error.prototype` are
	       * enumerable by default. (IE < 9, Safari < 5.1)
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') || propertyIsEnumerable.call(errorProto, 'name');

	      /**
	       * Detect if `prototype` properties are enumerable by default.
	       *
	       * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1
	       * (if the prototype or a property on the prototype has been set)
	       * incorrectly sets a function's `prototype` property [[Enumerable]]
	       * value to `true`.
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.enumPrototypes = propertyIsEnumerable.call(ctor, 'prototype');

	      /**
	       * Detect if functions can be decompiled by `Function#toString`
	       * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

	      /**
	       * Detect if `Function#name` is supported (all but IE).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.funcNames = typeof Function.name == 'string';

	      /**
	       * Detect if `arguments` object indexes are non-enumerable
	       * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.nonEnumArgs = key != 0;

	      /**
	       * Detect if properties shadowing those on `Object.prototype` are non-enumerable.
	       *
	       * In IE < 9 an objects own properties, shadowing non-enumerable ones, are
	       * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.nonEnumShadows = !/valueOf/.test(props);

	      /**
	       * Detect if own properties are iterated after inherited properties (all but IE < 9).
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.ownLast = props[0] != 'x';

	      /**
	       * Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.
	       *
	       * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`
	       * and `splice()` functions that fail to remove the last element, `value[0]`,
	       * of array-like objects even though the `length` property is set to `0`.
	       * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`
	       * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.spliceObjects = (arrayRef.splice.call(object, 0, 1), !object[0]);

	      /**
	       * Detect lack of support for accessing string characters by index.
	       *
	       * IE < 8 can't access characters by index and IE 8 can only access
	       * characters by index on string literals.
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';

	      /**
	       * Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)
	       * and that the JS engine errors when attempting to coerce an object to
	       * a string without a `toString` function.
	       *
	       * @memberOf _.support
	       * @type boolean
	       */
	      try {
	        support.nodeClass = !(toString.call(document) == objectClass && !({ 'toString': 0 } + ''));
	      } catch(e) {
	        support.nodeClass = true;
	      }
	    }(1));

	    /**
	     * By default, the template delimiters used by Lo-Dash are similar to those in
	     * embedded Ruby (ERB). Change the following template settings to use alternative
	     * delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type Object
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type RegExp
	       */
	      'escape': /<%-([\s\S]+?)%>/g,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type RegExp
	       */
	      'evaluate': /<%([\s\S]+?)%>/g,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type RegExp
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type string
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type Object
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type Function
	         */
	        '_': lodash
	      }
	    };

	    /*--------------------------------------------------------------------------*/

	    /**
	     * The template used to create iterator functions.
	     *
	     * @private
	     * @param {Object} data The data object used to populate the text.
	     * @returns {string} Returns the interpolated text.
	     */
	    var iteratorTemplate = function(obj) {

	      var __p = 'var index, iterable = ' +
	      (obj.firstArg) +
	      ', result = ' +
	      (obj.init) +
	      ';\nif (!iterable) return result;\n' +
	      (obj.top) +
	      ';';
	       if (obj.array) {
	      __p += '\nvar length = iterable.length; index = -1;\nif (' +
	      (obj.array) +
	      ') {  ';
	       if (support.unindexedChars) {
	      __p += '\n  if (isString(iterable)) {\n    iterable = iterable.split(\'\')\n  }  ';
	       }
	      __p += '\n  while (++index < length) {\n    ' +
	      (obj.loop) +
	      ';\n  }\n}\nelse {  ';
	       } else if (support.nonEnumArgs) {
	      __p += '\n  var length = iterable.length; index = -1;\n  if (length && isArguments(iterable)) {\n    while (++index < length) {\n      index += \'\';\n      ' +
	      (obj.loop) +
	      ';\n    }\n  } else {  ';
	       }

	       if (support.enumPrototypes) {
	      __p += '\n  var skipProto = typeof iterable == \'function\';\n  ';
	       }

	       if (support.enumErrorProps) {
	      __p += '\n  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\n  ';
	       }

	          var conditions = [];    if (support.enumPrototypes) { conditions.push('!(skipProto && index == "prototype")'); }    if (support.enumErrorProps)  { conditions.push('!(skipErrorProps && (index == "message" || index == "name"))'); }

	       if (obj.useHas && obj.keys) {
	      __p += '\n  var ownIndex = -1,\n      ownProps = objectTypes[typeof iterable] && keys(iterable),\n      length = ownProps ? ownProps.length : 0;\n\n  while (++ownIndex < length) {\n    index = ownProps[ownIndex];\n';
	          if (conditions.length) {
	      __p += '    if (' +
	      (conditions.join(' && ')) +
	      ') {\n  ';
	       }
	      __p +=
	      (obj.loop) +
	      ';    ';
	       if (conditions.length) {
	      __p += '\n    }';
	       }
	      __p += '\n  }  ';
	       } else {
	      __p += '\n  for (index in iterable) {\n';
	          if (obj.useHas) { conditions.push("hasOwnProperty.call(iterable, index)"); }    if (conditions.length) {
	      __p += '    if (' +
	      (conditions.join(' && ')) +
	      ') {\n  ';
	       }
	      __p +=
	      (obj.loop) +
	      ';    ';
	       if (conditions.length) {
	      __p += '\n    }';
	       }
	      __p += '\n  }    ';
	       if (support.nonEnumShadows) {
	      __p += '\n\n  if (iterable !== objectProto) {\n    var ctor = iterable.constructor,\n        isProto = iterable === (ctor && ctor.prototype),\n        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\n        nonEnum = nonEnumProps[className];\n      ';
	       for (k = 0; k < 7; k++) {
	      __p += '\n    index = \'' +
	      (obj.shadowedProps[k]) +
	      '\';\n    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))';
	              if (!obj.useHas) {
	      __p += ' || (!nonEnum[index] && iterable[index] !== objectProto[index])';
	       }
	      __p += ') {\n      ' +
	      (obj.loop) +
	      ';\n    }      ';
	       }
	      __p += '\n  }    ';
	       }

	       }

	       if (obj.array || support.nonEnumArgs) {
	      __p += '\n}';
	       }
	      __p +=
	      (obj.bottom) +
	      ';\nreturn result';

	      return __p
	    };

	    /*--------------------------------------------------------------------------*/

	    /**
	     * The base implementation of `_.bind` that creates the bound function and
	     * sets its meta data.
	     *
	     * @private
	     * @param {Array} bindData The bind data array.
	     * @returns {Function} Returns the new bound function.
	     */
	    function baseBind(bindData) {
	      var func = bindData[0],
	          partialArgs = bindData[2],
	          thisArg = bindData[4];

	      function bound() {
	        // `Function#bind` spec
	        // http://es5.github.io/#x15.3.4.5
	        if (partialArgs) {
	          // avoid `arguments` object deoptimizations by using `slice` instead
	          // of `Array.prototype.slice.call` and not assigning `arguments` to a
	          // variable as a ternary expression
	          var args = slice(partialArgs);
	          push.apply(args, arguments);
	        }
	        // mimic the constructor's `return` behavior
	        // http://es5.github.io/#x13.2.2
	        if (this instanceof bound) {
	          // ensure `new bound` is an instance of `func`
	          var thisBinding = baseCreate(func.prototype),
	              result = func.apply(thisBinding, args || arguments);
	          return isObject(result) ? result : thisBinding;
	        }
	        return func.apply(thisArg, args || arguments);
	      }
	      setBindData(bound, bindData);
	      return bound;
	    }

	    /**
	     * The base implementation of `_.clone` without argument juggling or support
	     * for `thisArg` binding.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep=false] Specify a deep clone.
	     * @param {Function} [callback] The function to customize cloning values.
	     * @param {Array} [stackA=[]] Tracks traversed source objects.
	     * @param {Array} [stackB=[]] Associates clones with source counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, isDeep, callback, stackA, stackB) {
	      if (callback) {
	        var result = callback(value);
	        if (typeof result != 'undefined') {
	          return result;
	        }
	      }
	      // inspect [[Class]]
	      var isObj = isObject(value);
	      if (isObj) {
	        var className = toString.call(value);
	        if (!cloneableClasses[className] || (!support.nodeClass && isNode(value))) {
	          return value;
	        }
	        var ctor = ctorByClass[className];
	        switch (className) {
	          case boolClass:
	          case dateClass:
	            return new ctor(+value);

	          case numberClass:
	          case stringClass:
	            return new ctor(value);

	          case regexpClass:
	            result = ctor(value.source, reFlags.exec(value));
	            result.lastIndex = value.lastIndex;
	            return result;
	        }
	      } else {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isDeep) {
	        // check for circular references and return corresponding clone
	        var initedStack = !stackA;
	        stackA || (stackA = getArray());
	        stackB || (stackB = getArray());

	        var length = stackA.length;
	        while (length--) {
	          if (stackA[length] == value) {
	            return stackB[length];
	          }
	        }
	        result = isArr ? ctor(value.length) : {};
	      }
	      else {
	        result = isArr ? slice(value) : assign({}, value);
	      }
	      // add array properties assigned by `RegExp#exec`
	      if (isArr) {
	        if (hasOwnProperty.call(value, 'index')) {
	          result.index = value.index;
	        }
	        if (hasOwnProperty.call(value, 'input')) {
	          result.input = value.input;
	        }
	      }
	      // exit for shallow clone
	      if (!isDeep) {
	        return result;
	      }
	      // add the source value to the stack of traversed objects
	      // and associate it with its clone
	      stackA.push(value);
	      stackB.push(result);

	      // recursively populate clone (susceptible to call stack limits)
	      (isArr ? baseEach : forOwn)(value, function(objValue, key) {
	        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
	      });

	      if (initedStack) {
	        releaseArray(stackA);
	        releaseArray(stackB);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    function baseCreate(prototype, properties) {
	      return isObject(prototype) ? nativeCreate(prototype) : {};
	    }
	    // fallback for browsers without `Object.create`
	    if (!nativeCreate) {
	      baseCreate = (function() {
	        function Object() {}
	        return function(prototype) {
	          if (isObject(prototype)) {
	            Object.prototype = prototype;
	            var result = new Object;
	            Object.prototype = null;
	          }
	          return result || context.Object();
	        };
	      }());
	    }

	    /**
	     * The base implementation of `_.createCallback` without support for creating
	     * "_.pluck" or "_.where" style callbacks.
	     *
	     * @private
	     * @param {*} [func=identity] The value to convert to a callback.
	     * @param {*} [thisArg] The `this` binding of the created callback.
	     * @param {number} [argCount] The number of arguments the callback accepts.
	     * @returns {Function} Returns a callback function.
	     */
	    function baseCreateCallback(func, thisArg, argCount) {
	      if (typeof func != 'function') {
	        return identity;
	      }
	      // exit early for no `thisArg` or already bound by `Function#bind`
	      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
	        return func;
	      }
	      var bindData = func.__bindData__;
	      if (typeof bindData == 'undefined') {
	        if (support.funcNames) {
	          bindData = !func.name;
	        }
	        bindData = bindData || !support.funcDecomp;
	        if (!bindData) {
	          var source = fnToString.call(func);
	          if (!support.funcNames) {
	            bindData = !reFuncName.test(source);
	          }
	          if (!bindData) {
	            // checks if `func` references the `this` keyword and stores the result
	            bindData = reThis.test(source);
	            setBindData(func, bindData);
	          }
	        }
	      }
	      // exit early if there are no `this` references or `func` is bound
	      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
	        return func;
	      }
	      switch (argCount) {
	        case 1: return function(value) {
	          return func.call(thisArg, value);
	        };
	        case 2: return function(a, b) {
	          return func.call(thisArg, a, b);
	        };
	        case 3: return function(value, index, collection) {
	          return func.call(thisArg, value, index, collection);
	        };
	        case 4: return function(accumulator, value, index, collection) {
	          return func.call(thisArg, accumulator, value, index, collection);
	        };
	      }
	      return bind(func, thisArg);
	    }

	    /**
	     * The base implementation of `createWrapper` that creates the wrapper and
	     * sets its meta data.
	     *
	     * @private
	     * @param {Array} bindData The bind data array.
	     * @returns {Function} Returns the new function.
	     */
	    function baseCreateWrapper(bindData) {
	      var func = bindData[0],
	          bitmask = bindData[1],
	          partialArgs = bindData[2],
	          partialRightArgs = bindData[3],
	          thisArg = bindData[4],
	          arity = bindData[5];

	      var isBind = bitmask & 1,
	          isBindKey = bitmask & 2,
	          isCurry = bitmask & 4,
	          isCurryBound = bitmask & 8,
	          key = func;

	      function bound() {
	        var thisBinding = isBind ? thisArg : this;
	        if (partialArgs) {
	          var args = slice(partialArgs);
	          push.apply(args, arguments);
	        }
	        if (partialRightArgs || isCurry) {
	          args || (args = slice(arguments));
	          if (partialRightArgs) {
	            push.apply(args, partialRightArgs);
	          }
	          if (isCurry && args.length < arity) {
	            bitmask |= 16 & ~32;
	            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
	          }
	        }
	        args || (args = arguments);
	        if (isBindKey) {
	          func = thisBinding[key];
	        }
	        if (this instanceof bound) {
	          thisBinding = baseCreate(func.prototype);
	          var result = func.apply(thisBinding, args);
	          return isObject(result) ? result : thisBinding;
	        }
	        return func.apply(thisBinding, args);
	      }
	      setBindData(bound, bindData);
	      return bound;
	    }

	    /**
	     * The base implementation of `_.difference` that accepts a single array
	     * of values to exclude.
	     *
	     * @private
	     * @param {Array} array The array to process.
	     * @param {Array} [values] The array of values to exclude.
	     * @returns {Array} Returns a new array of filtered values.
	     */
	    function baseDifference(array, values) {
	      var index = -1,
	          indexOf = getIndexOf(),
	          length = array ? array.length : 0,
	          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
	          result = [];

	      if (isLarge) {
	        var cache = createCache(values);
	        if (cache) {
	          indexOf = cacheIndexOf;
	          values = cache;
	        } else {
	          isLarge = false;
	        }
	      }
	      while (++index < length) {
	        var value = array[index];
	        if (indexOf(values, value) < 0) {
	          result.push(value);
	        }
	      }
	      if (isLarge) {
	        releaseObject(values);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` without support for callback
	     * shorthands or `thisArg` binding.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
	     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
	     * @param {number} [fromIndex=0] The index to start from.
	     * @returns {Array} Returns a new flattened array.
	     */
	    function baseFlatten(array, isShallow, isStrict, fromIndex) {
	      var index = (fromIndex || 0) - 1,
	          length = array ? array.length : 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];

	        if (value && typeof value == 'object' && typeof value.length == 'number'
	            && (isArray(value) || isArguments(value))) {
	          // recursively flatten arrays (susceptible to call stack limits)
	          if (!isShallow) {
	            value = baseFlatten(value, isShallow, isStrict);
	          }
	          var valIndex = -1,
	              valLength = value.length,
	              resIndex = result.length;

	          result.length += valLength;
	          while (++valIndex < valLength) {
	            result[resIndex++] = value[valIndex];
	          }
	        } else if (!isStrict) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
	     * that allows partial "_.where" style comparisons.
	     *
	     * @private
	     * @param {*} a The value to compare.
	     * @param {*} b The other value to compare.
	     * @param {Function} [callback] The function to customize comparing values.
	     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
	     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
	     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
	      // used to indicate that when comparing objects, `a` has at least the properties of `b`
	      if (callback) {
	        var result = callback(a, b);
	        if (typeof result != 'undefined') {
	          return !!result;
	        }
	      }
	      // exit early for identical values
	      if (a === b) {
	        // treat `+0` vs. `-0` as not equal
	        return a !== 0 || (1 / a == 1 / b);
	      }
	      var type = typeof a,
	          otherType = typeof b;

	      // exit early for unlike primitive values
	      if (a === a &&
	          !(a && objectTypes[type]) &&
	          !(b && objectTypes[otherType])) {
	        return false;
	      }
	      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
	      // http://es5.github.io/#x15.3.4.4
	      if (a == null || b == null) {
	        return a === b;
	      }
	      // compare [[Class]] names
	      var className = toString.call(a),
	          otherClass = toString.call(b);

	      if (className == argsClass) {
	        className = objectClass;
	      }
	      if (otherClass == argsClass) {
	        otherClass = objectClass;
	      }
	      if (className != otherClass) {
	        return false;
	      }
	      switch (className) {
	        case boolClass:
	        case dateClass:
	          // coerce dates and booleans to numbers, dates to milliseconds and booleans
	          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
	          return +a == +b;

	        case numberClass:
	          // treat `NaN` vs. `NaN` as equal
	          return (a != +a)
	            ? b != +b
	            // but treat `+0` vs. `-0` as not equal
	            : (a == 0 ? (1 / a == 1 / b) : a == +b);

	        case regexpClass:
	        case stringClass:
	          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
	          // treat string primitives and their corresponding object instances as equal
	          return a == String(b);
	      }
	      var isArr = className == arrayClass;
	      if (!isArr) {
	        // unwrap any `lodash` wrapped values
	        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
	            bWrapped = hasOwnProperty.call(b, '__wrapped__');

	        if (aWrapped || bWrapped) {
	          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
	        }
	        // exit for functions and DOM nodes
	        if (className != objectClass || (!support.nodeClass && (isNode(a) || isNode(b)))) {
	          return false;
	        }
	        // in older versions of Opera, `arguments` objects have `Array` constructors
	        var ctorA = !support.argsObject && isArguments(a) ? Object : a.constructor,
	            ctorB = !support.argsObject && isArguments(b) ? Object : b.constructor;

	        // non `Object` object instances with different constructors are not equal
	        if (ctorA != ctorB &&
	              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
	              ('constructor' in a && 'constructor' in b)
	            ) {
	          return false;
	        }
	      }
	      // assume cyclic structures are equal
	      // the algorithm for detecting cyclic structures is adapted from ES 5.1
	      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
	      var initedStack = !stackA;
	      stackA || (stackA = getArray());
	      stackB || (stackB = getArray());

	      var length = stackA.length;
	      while (length--) {
	        if (stackA[length] == a) {
	          return stackB[length] == b;
	        }
	      }
	      var size = 0;
	      result = true;

	      // add `a` and `b` to the stack of traversed objects
	      stackA.push(a);
	      stackB.push(b);

	      // recursively compare objects and arrays (susceptible to call stack limits)
	      if (isArr) {
	        // compare lengths to determine if a deep comparison is necessary
	        length = a.length;
	        size = b.length;
	        result = size == length;

	        if (result || isWhere) {
	          // deep compare the contents, ignoring non-numeric properties
	          while (size--) {
	            var index = length,
	                value = b[size];

	            if (isWhere) {
	              while (index--) {
	                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
	                  break;
	                }
	              }
	            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
	              break;
	            }
	          }
	        }
	      }
	      else {
	        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
	        // which, in this case, is more costly
	        forIn(b, function(value, key, b) {
	          if (hasOwnProperty.call(b, key)) {
	            // count the number of properties.
	            size++;
	            // deep compare each property value.
	            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
	          }
	        });

	        if (result && !isWhere) {
	          // ensure both objects have the same number of properties
	          forIn(a, function(value, key, a) {
	            if (hasOwnProperty.call(a, key)) {
	              // `size` will be `-1` if `a` has more properties than `b`
	              return (result = --size > -1);
	            }
	          });
	        }
	      }
	      stackA.pop();
	      stackB.pop();

	      if (initedStack) {
	        releaseArray(stackA);
	        releaseArray(stackB);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.merge` without argument juggling or support
	     * for `thisArg` binding.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {Function} [callback] The function to customize merging properties.
	     * @param {Array} [stackA=[]] Tracks traversed source objects.
	     * @param {Array} [stackB=[]] Associates values with source counterparts.
	     */
	    function baseMerge(object, source, callback, stackA, stackB) {
	      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
	        var found,
	            isArr,
	            result = source,
	            value = object[key];

	        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
	          // avoid merging previously merged cyclic sources
	          var stackLength = stackA.length;
	          while (stackLength--) {
	            if ((found = stackA[stackLength] == source)) {
	              value = stackB[stackLength];
	              break;
	            }
	          }
	          if (!found) {
	            var isShallow;
	            if (callback) {
	              result = callback(value, source);
	              if ((isShallow = typeof result != 'undefined')) {
	                value = result;
	              }
	            }
	            if (!isShallow) {
	              value = isArr
	                ? (isArray(value) ? value : [])
	                : (isPlainObject(value) ? value : {});
	            }
	            // add `source` and associated `value` to the stack of traversed objects
	            stackA.push(source);
	            stackB.push(value);

	            // recursively merge objects and arrays (susceptible to call stack limits)
	            if (!isShallow) {
	              baseMerge(value, source, callback, stackA, stackB);
	            }
	          }
	        }
	        else {
	          if (callback) {
	            result = callback(value, source);
	            if (typeof result == 'undefined') {
	              result = source;
	            }
	          }
	          if (typeof result != 'undefined') {
	            value = result;
	          }
	        }
	        object[key] = value;
	      });
	    }

	    /**
	     * The base implementation of `_.random` without argument juggling or support
	     * for returning floating-point numbers.
	     *
	     * @private
	     * @param {number} min The minimum possible value.
	     * @param {number} max The maximum possible value.
	     * @returns {number} Returns a random number.
	     */
	    function baseRandom(min, max) {
	      return min + floor(nativeRandom() * (max - min + 1));
	    }

	    /**
	     * The base implementation of `_.uniq` without support for callback shorthands
	     * or `thisArg` binding.
	     *
	     * @private
	     * @param {Array} array The array to process.
	     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
	     * @param {Function} [callback] The function called per iteration.
	     * @returns {Array} Returns a duplicate-value-free array.
	     */
	    function baseUniq(array, isSorted, callback) {
	      var index = -1,
	          indexOf = getIndexOf(),
	          length = array ? array.length : 0,
	          result = [];

	      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
	          seen = (callback || isLarge) ? getArray() : result;

	      if (isLarge) {
	        var cache = createCache(seen);
	        indexOf = cacheIndexOf;
	        seen = cache;
	      }
	      while (++index < length) {
	        var value = array[index],
	            computed = callback ? callback(value, index, array) : value;

	        if (isSorted
	              ? !index || seen[seen.length - 1] !== computed
	              : indexOf(seen, computed) < 0
	            ) {
	          if (callback || isLarge) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      if (isLarge) {
	        releaseArray(seen.array);
	        releaseObject(seen);
	      } else if (callback) {
	        releaseArray(seen);
	      }
	      return result;
	    }

	    /**
	     * Creates a function that aggregates a collection, creating an object composed
	     * of keys generated from the results of running each element of the collection
	     * through a callback. The given `setter` function sets the keys and values
	     * of the composed object.
	     *
	     * @private
	     * @param {Function} setter The setter function.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter) {
	      return function(collection, callback, thisArg) {
	        var result = {};
	        callback = lodash.createCallback(callback, thisArg, 3);

	        if (isArray(collection)) {
	          var index = -1,
	              length = collection.length;

	          while (++index < length) {
	            var value = collection[index];
	            setter(result, value, callback(value, index, collection), collection);
	          }
	        } else {
	          baseEach(collection, function(value, key, collection) {
	            setter(result, value, callback(value, key, collection), collection);
	          });
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that, when called, either curries or invokes `func`
	     * with an optional `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to reference.
	     * @param {number} bitmask The bitmask of method flags to compose.
	     *  The bitmask may be composed of the following flags:
	     *  1 - `_.bind`
	     *  2 - `_.bindKey`
	     *  4 - `_.curry`
	     *  8 - `_.curry` (bound)
	     *  16 - `_.partial`
	     *  32 - `_.partialRight`
	     * @param {Array} [partialArgs] An array of arguments to prepend to those
	     *  provided to the new function.
	     * @param {Array} [partialRightArgs] An array of arguments to append to those
	     *  provided to the new function.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new function.
	     */
	    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
	      var isBind = bitmask & 1,
	          isBindKey = bitmask & 2,
	          isCurry = bitmask & 4,
	          isCurryBound = bitmask & 8,
	          isPartial = bitmask & 16,
	          isPartialRight = bitmask & 32;

	      if (!isBindKey && !isFunction(func)) {
	        throw new TypeError;
	      }
	      if (isPartial && !partialArgs.length) {
	        bitmask &= ~16;
	        isPartial = partialArgs = false;
	      }
	      if (isPartialRight && !partialRightArgs.length) {
	        bitmask &= ~32;
	        isPartialRight = partialRightArgs = false;
	      }
	      var bindData = func && func.__bindData__;
	      if (bindData && bindData !== true) {
	        // clone `bindData`
	        bindData = slice(bindData);
	        if (bindData[2]) {
	          bindData[2] = slice(bindData[2]);
	        }
	        if (bindData[3]) {
	          bindData[3] = slice(bindData[3]);
	        }
	        // set `thisBinding` is not previously bound
	        if (isBind && !(bindData[1] & 1)) {
	          bindData[4] = thisArg;
	        }
	        // set if previously bound but not currently (subsequent curried functions)
	        if (!isBind && bindData[1] & 1) {
	          bitmask |= 8;
	        }
	        // set curried arity if not yet set
	        if (isCurry && !(bindData[1] & 4)) {
	          bindData[5] = arity;
	        }
	        // append partial left arguments
	        if (isPartial) {
	          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
	        }
	        // append partial right arguments
	        if (isPartialRight) {
	          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
	        }
	        // merge flags
	        bindData[1] |= bitmask;
	        return createWrapper.apply(null, bindData);
	      }
	      // fast path for `_.bind`
	      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
	      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
	    }

	    /**
	     * Creates compiled iteration functions.
	     *
	     * @private
	     * @param {...Object} [options] The compile options object(s).
	     * @param {string} [options.array] Code to determine if the iterable is an array or array-like.
	     * @param {boolean} [options.useHas] Specify using `hasOwnProperty` checks in the object loop.
	     * @param {Function} [options.keys] A reference to `_.keys` for use in own property iteration.
	     * @param {string} [options.args] A comma separated string of iteration function arguments.
	     * @param {string} [options.top] Code to execute before the iteration branches.
	     * @param {string} [options.loop] Code to execute in the object loop.
	     * @param {string} [options.bottom] Code to execute after the iteration branches.
	     * @returns {Function} Returns the compiled function.
	     */
	    function createIterator() {
	      // data properties
	      iteratorData.shadowedProps = shadowedProps;

	      // iterator options
	      iteratorData.array = iteratorData.bottom = iteratorData.loop = iteratorData.top = '';
	      iteratorData.init = 'iterable';
	      iteratorData.useHas = true;

	      // merge options into a template data object
	      for (var object, index = 0; object = arguments[index]; index++) {
	        for (var key in object) {
	          iteratorData[key] = object[key];
	        }
	      }
	      var args = iteratorData.args;
	      iteratorData.firstArg = /^[^,]+/.exec(args)[0];

	      // create the function factory
	      var factory = Function(
	          'baseCreateCallback, errorClass, errorProto, hasOwnProperty, ' +
	          'indicatorObject, isArguments, isArray, isString, keys, objectProto, ' +
	          'objectTypes, nonEnumProps, stringClass, stringProto, toString',
	        'return function(' + args + ') {\n' + iteratorTemplate(iteratorData) + '\n}'
	      );

	      // return the compiled function
	      return factory(
	        baseCreateCallback, errorClass, errorProto, hasOwnProperty,
	        indicatorObject, isArguments, isArray, isString, iteratorData.keys, objectProto,
	        objectTypes, nonEnumProps, stringClass, stringProto, toString
	      );
	    }

	    /**
	     * Used by `escape` to convert characters to HTML entities.
	     *
	     * @private
	     * @param {string} match The matched character to escape.
	     * @returns {string} Returns the escaped character.
	     */
	    function escapeHtmlChar(match) {
	      return htmlEscapes[match];
	    }

	    /**
	     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
	     * customized, this method returns the custom method, otherwise it returns
	     * the `baseIndexOf` function.
	     *
	     * @private
	     * @returns {Function} Returns the "indexOf" function.
	     */
	    function getIndexOf() {
	      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
	      return result;
	    }

	    /**
	     * Checks if `value` is a native function.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
	     */
	    function isNative(value) {
	      return typeof value == 'function' && reNative.test(value);
	    }

	    /**
	     * Sets `this` binding data on a given function.
	     *
	     * @private
	     * @param {Function} func The function to set data on.
	     * @param {Array} value The data array to set.
	     */
	    var setBindData = !defineProperty ? noop : function(func, value) {
	      descriptor.value = value;
	      defineProperty(func, '__bindData__', descriptor);
	    };

	    /**
	     * A fallback implementation of `isPlainObject` which checks if a given value
	     * is an object created by the `Object` constructor, assuming objects created
	     * by the `Object` constructor have no inherited enumerable properties and that
	     * there are no `Object.prototype` extensions.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     */
	    function shimIsPlainObject(value) {
	      var ctor,
	          result;

	      // avoid non Object objects, `arguments` objects, and DOM elements
	      if (!(value && toString.call(value) == objectClass) ||
	          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor)) ||
	          (!support.argsClass && isArguments(value)) ||
	          (!support.nodeClass && isNode(value))) {
	        return false;
	      }
	      // IE < 9 iterates inherited properties before own properties. If the first
	      // iterated property is an object's own property then there are no inherited
	      // enumerable properties.
	      if (support.ownLast) {
	        forIn(value, function(value, key, object) {
	          result = hasOwnProperty.call(object, key);
	          return false;
	        });
	        return result !== false;
	      }
	      // In most environments an object's own properties are iterated before
	      // its inherited properties. If the last iterated property is an object's
	      // own property then there are no inherited enumerable properties.
	      forIn(value, function(value, key) {
	        result = key;
	      });
	      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
	    }

	    /**
	     * Used by `unescape` to convert HTML entities to characters.
	     *
	     * @private
	     * @param {string} match The matched character to unescape.
	     * @returns {string} Returns the unescaped character.
	     */
	    function unescapeHtmlChar(match) {
	      return htmlUnescapes[match];
	    }

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Checks if `value` is an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
	     * @example
	     *
	     * (function() { return _.isArguments(arguments); })(1, 2, 3);
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	      return value && typeof value == 'object' && typeof value.length == 'number' &&
	        toString.call(value) == argsClass || false;
	    }
	    // fallback for browsers that can't detect `arguments` objects by [[Class]]
	    if (!support.argsClass) {
	      isArguments = function(value) {
	        return value && typeof value == 'object' && typeof value.length == 'number' &&
	          hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee') || false;
	      };
	    }

	    /**
	     * Checks if `value` is an array.
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
	     * @example
	     *
	     * (function() { return _.isArray(arguments); })();
	     * // => false
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     */
	    var isArray = nativeIsArray || function(value) {
	      return value && typeof value == 'object' && typeof value.length == 'number' &&
	        toString.call(value) == arrayClass || false;
	    };

	    /**
	     * A fallback implementation of `Object.keys` which produces an array of the
	     * given object's own enumerable property names.
	     *
	     * @private
	     * @type Function
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns an array of property names.
	     */
	    var shimKeys = createIterator({
	      'args': 'object',
	      'init': '[]',
	      'top': 'if (!(objectTypes[typeof object])) return result',
	      'loop': 'result.push(index)'
	    });

	    /**
	     * Creates an array composed of the own enumerable property names of an object.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns an array of property names.
	     * @example
	     *
	     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
	     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
	     */
	    var keys = !nativeKeys ? shimKeys : function(object) {
	      if (!isObject(object)) {
	        return [];
	      }
	      if ((support.enumPrototypes && typeof object == 'function') ||
	          (support.nonEnumArgs && object.length && isArguments(object))) {
	        return shimKeys(object);
	      }
	      return nativeKeys(object);
	    };

	    /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */
	    var eachIteratorOptions = {
	      'args': 'collection, callback, thisArg',
	      'top': "callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3)",
	      'array': "typeof length == 'number'",
	      'keys': keys,
	      'loop': 'if (callback(iterable[index], index, collection) === false) return result'
	    };

	    /** Reusable iterator options for `assign` and `defaults` */
	    var defaultsIteratorOptions = {
	      'args': 'object, source, guard',
	      'top':
	        'var args = arguments,\n' +
	        '    argsIndex = 0,\n' +
	        "    argsLength = typeof guard == 'number' ? 2 : args.length;\n" +
	        'while (++argsIndex < argsLength) {\n' +
	        '  iterable = args[argsIndex];\n' +
	        '  if (iterable && objectTypes[typeof iterable]) {',
	      'keys': keys,
	      'loop': "if (typeof result[index] == 'undefined') result[index] = iterable[index]",
	      'bottom': '  }\n}'
	    };

	    /** Reusable iterator options for `forIn` and `forOwn` */
	    var forOwnIteratorOptions = {
	      'top': 'if (!objectTypes[typeof iterable]) return result;\n' + eachIteratorOptions.top,
	      'array': false
	    };

	    /**
	     * Used to convert characters to HTML entities:
	     *
	     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
	     * don't require escaping in HTML and have no special meaning unless they're part
	     * of a tag or an unquoted attribute value.
	     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
	     */
	    var htmlEscapes = {
	      '&': '&amp;',
	      '<': '&lt;',
	      '>': '&gt;',
	      '"': '&quot;',
	      "'": '&#39;'
	    };

	    /** Used to convert HTML entities to characters */
	    var htmlUnescapes = invert(htmlEscapes);

	    /** Used to match HTML entities and HTML characters */
	    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
	        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

	    /**
	     * A function compiled to iterate `arguments` objects, arrays, objects, and
	     * strings consistenly across environments, executing the callback for each
	     * element in the collection. The callback is bound to `thisArg` and invoked
	     * with three arguments; (value, index|key, collection). Callbacks may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @type Function
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array|Object|string} Returns `collection`.
	     */
	    var baseEach = createIterator(eachIteratorOptions);

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable properties of source object(s) to the destination
	     * object. Subsequent sources will overwrite property assignments of previous
	     * sources. If a callback is provided it will be executed to produce the
	     * assigned values. The callback is bound to `thisArg` and invoked with two
	     * arguments; (objectValue, sourceValue).
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @alias extend
	     * @category Objects
	     * @param {Object} object The destination object.
	     * @param {...Object} [source] The source objects.
	     * @param {Function} [callback] The function to customize assigning values.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns the destination object.
	     * @example
	     *
	     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
	     * // => { 'name': 'fred', 'employer': 'slate' }
	     *
	     * var defaults = _.partialRight(_.assign, function(a, b) {
	     *   return typeof a == 'undefined' ? b : a;
	     * });
	     *
	     * var object = { 'name': 'barney' };
	     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
	     * // => { 'name': 'barney', 'employer': 'slate' }
	     */
	    var assign = createIterator(defaultsIteratorOptions, {
	      'top':
	        defaultsIteratorOptions.top.replace(';',
	          ';\n' +
	          "if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n" +
	          '  var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n' +
	          "} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n" +
	          '  callback = args[--argsLength];\n' +
	          '}'
	        ),
	      'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'
	    });

	    /**
	     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
	     * be cloned, otherwise they will be assigned by reference. If a callback
	     * is provided it will be executed to produce the cloned values. If the
	     * callback returns `undefined` cloning will be handled by the method instead.
	     * The callback is bound to `thisArg` and invoked with one argument; (value).
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep=false] Specify a deep clone.
	     * @param {Function} [callback] The function to customize cloning values.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * var shallow = _.clone(characters);
	     * shallow[0] === characters[0];
	     * // => true
	     *
	     * var deep = _.clone(characters, true);
	     * deep[0] === characters[0];
	     * // => false
	     *
	     * _.mixin({
	     *   'clone': _.partialRight(_.clone, function(value) {
	     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
	     *   })
	     * });
	     *
	     * var clone = _.clone(document.body);
	     * clone.childNodes.length;
	     * // => 0
	     */
	    function clone(value, isDeep, callback, thisArg) {
	      // allows working with "Collections" methods without using their `index`
	      // and `collection` arguments for `isDeep` and `callback`
	      if (typeof isDeep != 'boolean' && isDeep != null) {
	        thisArg = callback;
	        callback = isDeep;
	        isDeep = false;
	      }
	      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
	    }

	    /**
	     * Creates a deep clone of `value`. If a callback is provided it will be
	     * executed to produce the cloned values. If the callback returns `undefined`
	     * cloning will be handled by the method instead. The callback is bound to
	     * `thisArg` and invoked with one argument; (value).
	     *
	     * Note: This method is loosely based on the structured clone algorithm. Functions
	     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
	     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
	     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to deep clone.
	     * @param {Function} [callback] The function to customize cloning values.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * var deep = _.cloneDeep(characters);
	     * deep[0] === characters[0];
	     * // => false
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'node': element
	     * };
	     *
	     * var clone = _.cloneDeep(view, function(value) {
	     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
	     * });
	     *
	     * clone.node == view.node;
	     * // => false
	     */
	    function cloneDeep(value, callback, thisArg) {
	      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
	    }

	    /**
	     * Creates an object that inherits from the given `prototype` object. If a
	     * `properties` object is provided its own enumerable properties are assigned
	     * to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties ? assign(result, properties) : result;
	    }

	    /**
	     * Assigns own enumerable properties of source object(s) to the destination
	     * object for all destination properties that resolve to `undefined`. Once a
	     * property is set, additional defaults of the same property will be ignored.
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @category Objects
	     * @param {Object} object The destination object.
	     * @param {...Object} [source] The source objects.
	     * @param- {Object} [guard] Allows working with `_.reduce` without using its
	     *  `key` and `object` arguments as sources.
	     * @returns {Object} Returns the destination object.
	     * @example
	     *
	     * var object = { 'name': 'barney' };
	     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
	     * // => { 'name': 'barney', 'employer': 'slate' }
	     */
	    var defaults = createIterator(defaultsIteratorOptions);

	    /**
	     * This method is like `_.findIndex` except that it returns the key of the
	     * first element that passes the callback check, instead of the element itself.
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to search.
	     * @param {Function|Object|string} [callback=identity] The function called per
	     *  iteration. If a property name or object is provided it will be used to
	     *  create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
	     * @example
	     *
	     * var characters = {
	     *   'barney': {  'age': 36, 'blocked': false },
	     *   'fred': {    'age': 40, 'blocked': true },
	     *   'pebbles': { 'age': 1,  'blocked': false }
	     * };
	     *
	     * _.findKey(characters, function(chr) {
	     *   return chr.age < 40;
	     * });
	     * // => 'barney' (property order is not guaranteed across environments)
	     *
	     * // using "_.where" callback shorthand
	     * _.findKey(characters, { 'age': 1 });
	     * // => 'pebbles'
	     *
	     * // using "_.pluck" callback shorthand
	     * _.findKey(characters, 'blocked');
	     * // => 'fred'
	     */
	    function findKey(object, callback, thisArg) {
	      var result;
	      callback = lodash.createCallback(callback, thisArg, 3);
	      forOwn(object, function(value, key, object) {
	        if (callback(value, key, object)) {
	          result = key;
	          return false;
	        }
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements
	     * of a `collection` in the opposite order.
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to search.
	     * @param {Function|Object|string} [callback=identity] The function called per
	     *  iteration. If a property name or object is provided it will be used to
	     *  create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
	     * @example
	     *
	     * var characters = {
	     *   'barney': {  'age': 36, 'blocked': true },
	     *   'fred': {    'age': 40, 'blocked': false },
	     *   'pebbles': { 'age': 1,  'blocked': true }
	     * };
	     *
	     * _.findLastKey(characters, function(chr) {
	     *   return chr.age < 40;
	     * });
	     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
	     *
	     * // using "_.where" callback shorthand
	     * _.findLastKey(characters, { 'age': 40 });
	     * // => 'fred'
	     *
	     * // using "_.pluck" callback shorthand
	     * _.findLastKey(characters, 'blocked');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, callback, thisArg) {
	      var result;
	      callback = lodash.createCallback(callback, thisArg, 3);
	      forOwnRight(object, function(value, key, object) {
	        if (callback(value, key, object)) {
	          result = key;
	          return false;
	        }
	      });
	      return result;
	    }

	    /**
	     * Iterates over own and inherited enumerable properties of an object,
	     * executing the callback for each property. The callback is bound to `thisArg`
	     * and invoked with three arguments; (value, key, object). Callbacks may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @category Objects
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * Shape.prototype.move = function(x, y) {
	     *   this.x += x;
	     *   this.y += y;
	     * };
	     *
	     * _.forIn(new Shape, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
	     */
	    var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {
	      'useHas': false
	    });

	    /**
	     * This method is like `_.forIn` except that it iterates over elements
	     * of a `collection` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * Shape.prototype.move = function(x, y) {
	     *   this.x += x;
	     *   this.y += y;
	     * };
	     *
	     * _.forInRight(new Shape, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
	     */
	    function forInRight(object, callback, thisArg) {
	      var pairs = [];

	      forIn(object, function(value, key) {
	        pairs.push(key, value);
	      });

	      var length = pairs.length;
	      callback = baseCreateCallback(callback, thisArg, 3);
	      while (length--) {
	        if (callback(pairs[length--], pairs[length], object) === false) {
	          break;
	        }
	      }
	      return object;
	    }

	    /**
	     * Iterates over own enumerable properties of an object, executing the callback
	     * for each property. The callback is bound to `thisArg` and invoked with three
	     * arguments; (value, key, object). Callbacks may exit iteration early by
	     * explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @category Objects
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
	     *   console.log(key);
	     * });
	     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
	     */
	    var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);

	    /**
	     * This method is like `_.forOwn` except that it iterates over elements
	     * of a `collection` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
	     *   console.log(key);
	     * });
	     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
	     */
	    function forOwnRight(object, callback, thisArg) {
	      var props = keys(object),
	          length = props.length;

	      callback = baseCreateCallback(callback, thisArg, 3);
	      while (length--) {
	        var key = props[length];
	        if (callback(object[key], key, object) === false) {
	          break;
	        }
	      }
	      return object;
	    }

	    /**
	     * Creates a sorted array of property names of all enumerable properties,
	     * own and inherited, of `object` that have function values.
	     *
	     * @static
	     * @memberOf _
	     * @alias methods
	     * @category Objects
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns an array of property names that have function values.
	     * @example
	     *
	     * _.functions(_);
	     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
	     */
	    function functions(object) {
	      var result = [];
	      forIn(object, function(value, key) {
	        if (isFunction(value)) {
	          result.push(key);
	        }
	      });
	      return result.sort();
	    }

	    /**
	     * Checks if the specified property name exists as a direct property of `object`,
	     * instead of an inherited property.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to inspect.
	     * @param {string} key The name of the property to check.
	     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
	     * @example
	     *
	     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
	     * // => true
	     */
	    function has(object, key) {
	      return object ? hasOwnProperty.call(object, key) : false;
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of the given object.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the created inverted object.
	     * @example
	     *
	     * _.invert({ 'first': 'fred', 'second': 'barney' });
	     * // => { 'fred': 'first', 'barney': 'second' }
	     */
	    function invert(object) {
	      var index = -1,
	          props = keys(object),
	          length = props.length,
	          result = {};

	      while (++index < length) {
	        var key = props[index];
	        result[object[key]] = key;
	      }
	      return result;
	    }

	    /**
	     * Checks if `value` is a boolean value.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
	     * @example
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        value && typeof value == 'object' && toString.call(value) == boolClass || false;
	    }

	    /**
	     * Checks if `value` is a date.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     */
	    function isDate(value) {
	      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
	    }

	    /**
	     * Checks if `value` is a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     */
	    function isElement(value) {
	      return value && value.nodeType === 1 || false;
	    }

	    /**
	     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
	     * length of `0` and objects with no own enumerable properties are considered
	     * "empty".
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Array|Object|string} value The value to inspect.
	     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({});
	     * // => true
	     *
	     * _.isEmpty('');
	     * // => true
	     */
	    function isEmpty(value) {
	      var result = true;
	      if (!value) {
	        return result;
	      }
	      var className = toString.call(value),
	          length = value.length;

	      if ((className == arrayClass || className == stringClass ||
	          (support.argsClass ? className == argsClass : isArguments(value))) ||
	          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
	        return !length;
	      }
	      forOwn(value, function() {
	        return (result = false);
	      });
	      return result;
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent to each other. If a callback is provided it will be executed
	     * to compare values. If the callback returns `undefined` comparisons will
	     * be handled by the method instead. The callback is bound to `thisArg` and
	     * invoked with two arguments; (a, b).
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} a The value to compare.
	     * @param {*} b The other value to compare.
	     * @param {Function} [callback] The function to customize comparing values.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'name': 'fred' };
	     * var copy = { 'name': 'fred' };
	     *
	     * object == copy;
	     * // => false
	     *
	     * _.isEqual(object, copy);
	     * // => true
	     *
	     * var words = ['hello', 'goodbye'];
	     * var otherWords = ['hi', 'goodbye'];
	     *
	     * _.isEqual(words, otherWords, function(a, b) {
	     *   var reGreet = /^(?:hello|hi)$/i,
	     *       aGreet = _.isString(a) && reGreet.test(a),
	     *       bGreet = _.isString(b) && reGreet.test(b);
	     *
	     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
	     * });
	     * // => true
	     */
	    function isEqual(a, b, callback, thisArg) {
	      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
	    }

	    /**
	     * Checks if `value` is, or can be coerced to, a finite number.
	     *
	     * Note: This is not the same as native `isFinite` which will return true for
	     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
	     * @example
	     *
	     * _.isFinite(-101);
	     * // => true
	     *
	     * _.isFinite('10');
	     * // => true
	     *
	     * _.isFinite(true);
	     * // => false
	     *
	     * _.isFinite('');
	     * // => false
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     */
	    function isFinite(value) {
	      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
	    }

	    /**
	     * Checks if `value` is a function.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     */
	    function isFunction(value) {
	      return typeof value == 'function';
	    }
	    // fallback for older versions of Chrome and Safari
	    if (isFunction(/x/)) {
	      isFunction = function(value) {
	        return typeof value == 'function' && toString.call(value) == funcClass;
	      };
	    }

	    /**
	     * Checks if `value` is the language type of Object.
	     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(1);
	     * // => false
	     */
	    function isObject(value) {
	      // check if the value is the ECMAScript language type of Object
	      // http://es5.github.io/#x8
	      // and avoid a V8 bug
	      // http://code.google.com/p/v8/issues/detail?id=2291
	      return !!(value && objectTypes[typeof value]);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * Note: This is not the same as native `isNaN` which will return `true` for
	     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // `NaN` as a primitive is the only value that is not equal to itself
	      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(undefined);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is a number.
	     *
	     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
	     * @example
	     *
	     * _.isNumber(8.4 * 5);
	     * // => true
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        value && typeof value == 'object' && toString.call(value) == numberClass || false;
	    }

	    /**
	     * Checks if `value` is an object created by the `Object` constructor.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * _.isPlainObject(new Shape);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     */
	    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
	      if (!(value && toString.call(value) == objectClass) || (!support.argsClass && isArguments(value))) {
	        return false;
	      }
	      var valueOf = value.valueOf,
	          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

	      return objProto
	        ? (value == objProto || getPrototypeOf(value) == objProto)
	        : shimIsPlainObject(value);
	    };

	    /**
	     * Checks if `value` is a regular expression.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
	     * @example
	     *
	     * _.isRegExp(/fred/);
	     * // => true
	     */
	    function isRegExp(value) {
	      return value && objectTypes[typeof value] && toString.call(value) == regexpClass || false;
	    }

	    /**
	     * Checks if `value` is a string.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
	     * @example
	     *
	     * _.isString('fred');
	     * // => true
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        value && typeof value == 'object' && toString.call(value) == stringClass || false;
	    }

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     */
	    function isUndefined(value) {
	      return typeof value == 'undefined';
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated by
	     * running each own enumerable property of `object` through the callback.
	     * The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, key, object).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
	     * @example
	     *
	     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
	     * // => { 'a': 3, 'b': 6, 'c': 9 }
	     *
	     * var characters = {
	     *   'fred': { 'name': 'fred', 'age': 40 },
	     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
	     * };
	     *
	     * // using "_.pluck" callback shorthand
	     * _.mapValues(characters, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 }
	     */
	    function mapValues(object, callback, thisArg) {
	      var result = {};
	      callback = lodash.createCallback(callback, thisArg, 3);

	      forOwn(object, function(value, key, object) {
	        result[key] = callback(value, key, object);
	      });
	      return result;
	    }

	    /**
	     * Recursively merges own enumerable properties of the source object(s), that
	     * don't resolve to `undefined` into the destination object. Subsequent sources
	     * will overwrite property assignments of previous sources. If a callback is
	     * provided it will be executed to produce the merged values of the destination
	     * and source properties. If the callback returns `undefined` merging will
	     * be handled by the method instead. The callback is bound to `thisArg` and
	     * invoked with two arguments; (objectValue, sourceValue).
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The destination object.
	     * @param {...Object} [source] The source objects.
	     * @param {Function} [callback] The function to customize merging properties.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns the destination object.
	     * @example
	     *
	     * var names = {
	     *   'characters': [
	     *     { 'name': 'barney' },
	     *     { 'name': 'fred' }
	     *   ]
	     * };
	     *
	     * var ages = {
	     *   'characters': [
	     *     { 'age': 36 },
	     *     { 'age': 40 }
	     *   ]
	     * };
	     *
	     * _.merge(names, ages);
	     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
	     *
	     * var food = {
	     *   'fruits': ['apple'],
	     *   'vegetables': ['beet']
	     * };
	     *
	     * var otherFood = {
	     *   'fruits': ['banana'],
	     *   'vegetables': ['carrot']
	     * };
	     *
	     * _.merge(food, otherFood, function(a, b) {
	     *   return _.isArray(a) ? a.concat(b) : undefined;
	     * });
	     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
	     */
	    function merge(object) {
	      var args = arguments,
	          length = 2;

	      if (!isObject(object)) {
	        return object;
	      }
	      // allows working with `_.reduce` and `_.reduceRight` without using
	      // their `index` and `collection` arguments
	      if (typeof args[2] != 'number') {
	        length = args.length;
	      }
	      if (length > 3 && typeof args[length - 2] == 'function') {
	        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
	      } else if (length > 2 && typeof args[length - 1] == 'function') {
	        callback = args[--length];
	      }
	      var sources = slice(arguments, 1, length),
	          index = -1,
	          stackA = getArray(),
	          stackB = getArray();

	      while (++index < length) {
	        baseMerge(object, sources[index], callback, stackA, stackB);
	      }
	      releaseArray(stackA);
	      releaseArray(stackB);
	      return object;
	    }

	    /**
	     * Creates a shallow clone of `object` excluding the specified properties.
	     * Property names may be specified as individual arguments or as arrays of
	     * property names. If a callback is provided it will be executed for each
	     * property of `object` omitting the properties the callback returns truey
	     * for. The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The source object.
	     * @param {Function|...string|string[]} [callback] The properties to omit or the
	     *  function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns an object without the omitted properties.
	     * @example
	     *
	     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
	     * // => { 'name': 'fred' }
	     *
	     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
	     *   return typeof value == 'number';
	     * });
	     * // => { 'name': 'fred' }
	     */
	    function omit(object, callback, thisArg) {
	      var result = {};
	      if (typeof callback != 'function') {
	        var props = [];
	        forIn(object, function(value, key) {
	          props.push(key);
	        });
	        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

	        var index = -1,
	            length = props.length;

	        while (++index < length) {
	          var key = props[index];
	          result[key] = object[key];
	        }
	      } else {
	        callback = lodash.createCallback(callback, thisArg, 3);
	        forIn(object, function(value, key, object) {
	          if (!callback(value, key, object)) {
	            result[key] = value;
	          }
	        });
	      }
	      return result;
	    }

	    /**
	     * Creates a two dimensional array of an object's key-value pairs,
	     * i.e. `[[key1, value1], [key2, value2]]`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns new array of key-value pairs.
	     * @example
	     *
	     * _.pairs({ 'barney': 36, 'fred': 40 });
	     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
	     */
	    function pairs(object) {
	      var index = -1,
	          props = keys(object),
	          length = props.length,
	          result = Array(length);

	      while (++index < length) {
	        var key = props[index];
	        result[index] = [key, object[key]];
	      }
	      return result;
	    }

	    /**
	     * Creates a shallow clone of `object` composed of the specified properties.
	     * Property names may be specified as individual arguments or as arrays of
	     * property names. If a callback is provided it will be executed for each
	     * property of `object` picking the properties the callback returns truey
	     * for. The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The source object.
	     * @param {Function|...string|string[]} [callback] The function called per
	     *  iteration or property names to pick, specified as individual property
	     *  names or arrays of property names.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns an object composed of the picked properties.
	     * @example
	     *
	     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
	     * // => { 'name': 'fred' }
	     *
	     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
	     *   return key.charAt(0) != '_';
	     * });
	     * // => { 'name': 'fred' }
	     */
	    function pick(object, callback, thisArg) {
	      var result = {};
	      if (typeof callback != 'function') {
	        var index = -1,
	            props = baseFlatten(arguments, true, false, 1),
	            length = isObject(object) ? props.length : 0;

	        while (++index < length) {
	          var key = props[index];
	          if (key in object) {
	            result[key] = object[key];
	          }
	        }
	      } else {
	        callback = lodash.createCallback(callback, thisArg, 3);
	        forIn(object, function(value, key, object) {
	          if (callback(value, key, object)) {
	            result[key] = value;
	          }
	        });
	      }
	      return result;
	    }

	    /**
	     * An alternative to `_.reduce` this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable properties through a callback, with each callback execution
	     * potentially mutating the `accumulator` object. The callback is bound to
	     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
	     * Callbacks may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Array|Object} object The object to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
	     *   num *= num;
	     *   if (num % 2) {
	     *     return result.push(num) < 3;
	     *   }
	     * });
	     * // => [1, 9, 25]
	     *
	     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
	     *   result[key] = num * 3;
	     * });
	     * // => { 'a': 3, 'b': 6, 'c': 9 }
	     */
	    function transform(object, callback, accumulator, thisArg) {
	      var isArr = isArray(object);
	      if (accumulator == null) {
	        if (isArr) {
	          accumulator = [];
	        } else {
	          var ctor = object && object.constructor,
	              proto = ctor && ctor.prototype;

	          accumulator = baseCreate(proto);
	        }
	      }
	      if (callback) {
	        callback = lodash.createCallback(callback, thisArg, 4);
	        (isArr ? baseEach : forOwn)(object, function(value, index, object) {
	          return callback(accumulator, value, index, object);
	        });
	      }
	      return accumulator;
	    }

	    /**
	     * Creates an array composed of the own enumerable property values of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @category Objects
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns an array of property values.
	     * @example
	     *
	     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
	     * // => [1, 2, 3] (property order is not guaranteed across environments)
	     */
	    function values(object) {
	      var index = -1,
	          props = keys(object),
	          length = props.length,
	          result = Array(length);

	      while (++index < length) {
	        result[index] = object[props[index]];
	      }
	      return result;
	    }

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements from the specified indexes, or keys, of the
	     * `collection`. Indexes may be specified as individual arguments or as arrays
	     * of indexes.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
	     *   to retrieve, specified as individual indexes or arrays of indexes.
	     * @returns {Array} Returns a new array of elements corresponding to the
	     *  provided indexes.
	     * @example
	     *
	     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
	     * // => ['a', 'c', 'e']
	     *
	     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
	     * // => ['fred', 'pebbles']
	     */
	    function at(collection) {
	      var args = arguments,
	          index = -1,
	          props = baseFlatten(args, true, false, 1),
	          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
	          result = Array(length);

	      if (support.unindexedChars && isString(collection)) {
	        collection = collection.split('');
	      }
	      while(++index < length) {
	        result[index] = collection[props[index]];
	      }
	      return result;
	    }

	    /**
	     * Checks if a given value is present in a collection using strict equality
	     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
	     * offset from the end of the collection.
	     *
	     * @static
	     * @memberOf _
	     * @alias include
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {*} target The value to check for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
	     * @example
	     *
	     * _.contains([1, 2, 3], 1);
	     * // => true
	     *
	     * _.contains([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
	     * // => true
	     *
	     * _.contains('pebbles', 'eb');
	     * // => true
	     */
	    function contains(collection, target, fromIndex) {
	      var index = -1,
	          indexOf = getIndexOf(),
	          length = collection ? collection.length : 0,
	          result = false;

	      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
	      if (isArray(collection)) {
	        result = indexOf(collection, target, fromIndex) > -1;
	      } else if (typeof length == 'number') {
	        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
	      } else {
	        baseEach(collection, function(value) {
	          if (++index >= fromIndex) {
	            return !(result = value === target);
	          }
	        });
	      }
	      return result;
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` through the callback. The corresponding value
	     * of each key is the number of times the key was returned by the callback.
	     * The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
	    });

	    /**
	     * Checks if the given callback returns truey value for **all** elements of
	     * a collection. The callback is bound to `thisArg` and invoked with three
	     * arguments; (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias all
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {boolean} Returns `true` if all elements passed the callback check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes']);
	     * // => false
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.every(characters, 'age');
	     * // => true
	     *
	     * // using "_.where" callback shorthand
	     * _.every(characters, { 'age': 36 });
	     * // => false
	     */
	    function every(collection, callback, thisArg) {
	      var result = true;
	      callback = lodash.createCallback(callback, thisArg, 3);

	      if (isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          if (!(result = !!callback(collection[index], index, collection))) {
	            break;
	          }
	        }
	      } else {
	        baseEach(collection, function(value, index, collection) {
	          return (result = !!callback(value, index, collection));
	        });
	      }
	      return result;
	    }

	    /**
	     * Iterates over elements of a collection, returning an array of all elements
	     * the callback returns truey for. The callback is bound to `thisArg` and
	     * invoked with three arguments; (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias select
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new array of elements that passed the callback check.
	     * @example
	     *
	     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
	     * // => [2, 4, 6]
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36, 'blocked': false },
	     *   { 'name': 'fred',   'age': 40, 'blocked': true }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.filter(characters, 'blocked');
	     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
	     *
	     * // using "_.where" callback shorthand
	     * _.filter(characters, { 'age': 36 });
	     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
	     */
	    function filter(collection, callback, thisArg) {
	      var result = [];
	      callback = lodash.createCallback(callback, thisArg, 3);

	      if (isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          var value = collection[index];
	          if (callback(value, index, collection)) {
	            result.push(value);
	          }
	        }
	      } else {
	        baseEach(collection, function(value, index, collection) {
	          if (callback(value, index, collection)) {
	            result.push(value);
	          }
	        });
	      }
	      return result;
	    }

	    /**
	     * Iterates over elements of a collection, returning the first element that
	     * the callback returns truey for. The callback is bound to `thisArg` and
	     * invoked with three arguments; (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias detect, findWhere
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the found element, else `undefined`.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'age': 36, 'blocked': false },
	     *   { 'name': 'fred',    'age': 40, 'blocked': true },
	     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
	     * ];
	     *
	     * _.find(characters, function(chr) {
	     *   return chr.age < 40;
	     * });
	     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
	     *
	     * // using "_.where" callback shorthand
	     * _.find(characters, { 'age': 1 });
	     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
	     *
	     * // using "_.pluck" callback shorthand
	     * _.find(characters, 'blocked');
	     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
	     */
	    function find(collection, callback, thisArg) {
	      callback = lodash.createCallback(callback, thisArg, 3);

	      if (isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          var value = collection[index];
	          if (callback(value, index, collection)) {
	            return value;
	          }
	        }
	      } else {
	        var result;
	        baseEach(collection, function(value, index, collection) {
	          if (callback(value, index, collection)) {
	            result = value;
	            return false;
	          }
	        });
	        return result;
	      }
	    }

	    /**
	     * This method is like `_.find` except that it iterates over elements
	     * of a `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the found element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(num) {
	     *   return num % 2 == 1;
	     * });
	     * // => 3
	     */
	    function findLast(collection, callback, thisArg) {
	      var result;
	      callback = lodash.createCallback(callback, thisArg, 3);
	      forEachRight(collection, function(value, index, collection) {
	        if (callback(value, index, collection)) {
	          result = value;
	          return false;
	        }
	      });
	      return result;
	    }

	    /**
	     * Iterates over elements of a collection, executing the callback for each
	     * element. The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, index|key, collection). Callbacks may exit iteration early by
	     * explicitly returning `false`.
	     *
	     * Note: As with other "Collections" methods, objects with a `length` property
	     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
	     * may be used for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @alias each
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array|Object|string} Returns `collection`.
	     * @example
	     *
	     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
	     * // => logs each number and returns '1,2,3'
	     *
	     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
	     * // => logs each number and returns the object (property order is not guaranteed across environments)
	     */
	    function forEach(collection, callback, thisArg) {
	      if (callback && typeof thisArg == 'undefined' && isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          if (callback(collection[index], index, collection) === false) {
	            break;
	          }
	        }
	      } else {
	        baseEach(collection, callback, thisArg);
	      }
	      return collection;
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements
	     * of a `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @alias eachRight
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array|Object|string} Returns `collection`.
	     * @example
	     *
	     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
	     * // => logs each number from right to left and returns '3,2,1'
	     */
	    function forEachRight(collection, callback, thisArg) {
	      var iterable = collection,
	          length = collection ? collection.length : 0;

	      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
	      if (isArray(collection)) {
	        while (length--) {
	          if (callback(collection[length], length, collection) === false) {
	            break;
	          }
	        }
	      } else {
	        if (typeof length != 'number') {
	          var props = keys(collection);
	          length = props.length;
	        } else if (support.unindexedChars && isString(collection)) {
	          iterable = collection.split('');
	        }
	        baseEach(collection, function(value, key, collection) {
	          key = props ? props[--length] : --length;
	          return callback(iterable[key], key, collection);
	        });
	      }
	      return collection;
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of a collection through the callback. The corresponding value
	     * of each key is an array of the elements responsible for generating the key.
	     * The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
	     * // => { '4': [4.2], '6': [6.1, 6.4] }
	     *
	     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
	     * // => { '4': [4.2], '6': [6.1, 6.4] }
	     *
	     * // using "_.pluck" callback shorthand
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of the collection through the given callback. The corresponding
	     * value of each key is the last element responsible for generating the key.
	     * The callback is bound to `thisArg` and invoked with three arguments;
	     * (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var keys = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.indexBy(keys, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     */
	    var indexBy = createAggregator(function(result, value, key) {
	      result[key] = value;
	    });

	    /**
	     * Invokes the method named by `methodName` on each element in the `collection`
	     * returning an array of the results of each invoked method. Additional arguments
	     * will be provided to each invoked method. If `methodName` is a function it
	     * will be invoked for, and `this` bound to, each element in the `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|string} methodName The name of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [arg] Arguments to invoke the method with.
	     * @returns {Array} Returns a new array of the results of each invoked method.
	     * @example
	     *
	     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invoke([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    function invoke(collection, methodName) {
	      var args = slice(arguments, 2),
	          index = -1,
	          isFunc = typeof methodName == 'function',
	          length = collection ? collection.length : 0,
	          result = Array(typeof length == 'number' ? length : 0);

	      forEach(collection, function(value) {
	        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
	      });
	      return result;
	    }

	    /**
	     * Creates an array of values by running each element in the collection
	     * through the callback. The callback is bound to `thisArg` and invoked with
	     * three arguments; (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias collect
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new array of the results of each `callback` execution.
	     * @example
	     *
	     * _.map([1, 2, 3], function(num) { return num * 3; });
	     * // => [3, 6, 9]
	     *
	     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
	     * // => [3, 6, 9] (property order is not guaranteed across environments)
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.map(characters, 'name');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, callback, thisArg) {
	      var index = -1,
	          length = collection ? collection.length : 0,
	          result = Array(typeof length == 'number' ? length : 0);

	      callback = lodash.createCallback(callback, thisArg, 3);
	      if (isArray(collection)) {
	        while (++index < length) {
	          result[index] = callback(collection[index], index, collection);
	        }
	      } else {
	        baseEach(collection, function(value, key, collection) {
	          result[++index] = callback(value, key, collection);
	        });
	      }
	      return result;
	    }

	    /**
	     * Retrieves the maximum value of a collection. If the collection is empty or
	     * falsey `-Infinity` is returned. If a callback is provided it will be executed
	     * for each value in the collection to generate the criterion by which the value
	     * is ranked. The callback is bound to `thisArg` and invoked with three
	     * arguments; (value, index, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.max(characters, function(chr) { return chr.age; });
	     * // => { 'name': 'fred', 'age': 40 };
	     *
	     * // using "_.pluck" callback shorthand
	     * _.max(characters, 'age');
	     * // => { 'name': 'fred', 'age': 40 };
	     */
	    function max(collection, callback, thisArg) {
	      var computed = -Infinity,
	          result = computed;

	      // allows working with functions like `_.map` without using
	      // their `index` argument as a callback
	      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
	        callback = null;
	      }
	      if (callback == null && isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          var value = collection[index];
	          if (value > result) {
	            result = value;
	          }
	        }
	      } else {
	        callback = (callback == null && isString(collection))
	          ? charAtCallback
	          : lodash.createCallback(callback, thisArg, 3);

	        baseEach(collection, function(value, index, collection) {
	          var current = callback(value, index, collection);
	          if (current > computed) {
	            computed = current;
	            result = value;
	          }
	        });
	      }
	      return result;
	    }

	    /**
	     * Retrieves the minimum value of a collection. If the collection is empty or
	     * falsey `Infinity` is returned. If a callback is provided it will be executed
	     * for each value in the collection to generate the criterion by which the value
	     * is ranked. The callback is bound to `thisArg` and invoked with three
	     * arguments; (value, index, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.min(characters, function(chr) { return chr.age; });
	     * // => { 'name': 'barney', 'age': 36 };
	     *
	     * // using "_.pluck" callback shorthand
	     * _.min(characters, 'age');
	     * // => { 'name': 'barney', 'age': 36 };
	     */
	    function min(collection, callback, thisArg) {
	      var computed = Infinity,
	          result = computed;

	      // allows working with functions like `_.map` without using
	      // their `index` argument as a callback
	      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
	        callback = null;
	      }
	      if (callback == null && isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          var value = collection[index];
	          if (value < result) {
	            result = value;
	          }
	        }
	      } else {
	        callback = (callback == null && isString(collection))
	          ? charAtCallback
	          : lodash.createCallback(callback, thisArg, 3);

	        baseEach(collection, function(value, index, collection) {
	          var current = callback(value, index, collection);
	          if (current < computed) {
	            computed = current;
	            result = value;
	          }
	        });
	      }
	      return result;
	    }

	    /**
	     * Retrieves the value of a specified property from all elements in the collection.
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {string} property The name of the property to pluck.
	     * @returns {Array} Returns a new array of property values.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.pluck(characters, 'name');
	     * // => ['barney', 'fred']
	     */
	    var pluck = map;

	    /**
	     * Reduces a collection to a value which is the accumulated result of running
	     * each element in the collection through the callback, where each successive
	     * callback execution consumes the return value of the previous execution. If
	     * `accumulator` is not provided the first element of the collection will be
	     * used as the initial `accumulator` value. The callback is bound to `thisArg`
	     * and invoked with four arguments; (accumulator, value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @alias foldl, inject
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [accumulator] Initial value of the accumulator.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var sum = _.reduce([1, 2, 3], function(sum, num) {
	     *   return sum + num;
	     * });
	     * // => 6
	     *
	     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
	     *   result[key] = num * 3;
	     *   return result;
	     * }, {});
	     * // => { 'a': 3, 'b': 6, 'c': 9 }
	     */
	    function reduce(collection, callback, accumulator, thisArg) {
	      var noaccum = arguments.length < 3;
	      callback = lodash.createCallback(callback, thisArg, 4);

	      if (isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        if (noaccum) {
	          accumulator = collection[++index];
	        }
	        while (++index < length) {
	          accumulator = callback(accumulator, collection[index], index, collection);
	        }
	      } else {
	        baseEach(collection, function(value, index, collection) {
	          accumulator = noaccum
	            ? (noaccum = false, value)
	            : callback(accumulator, value, index, collection)
	        });
	      }
	      return accumulator;
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements
	     * of a `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @alias foldr
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function} [callback=identity] The function called per iteration.
	     * @param {*} [accumulator] Initial value of the accumulator.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var list = [[0, 1], [2, 3], [4, 5]];
	     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, callback, accumulator, thisArg) {
	      var noaccum = arguments.length < 3;
	      callback = lodash.createCallback(callback, thisArg, 4);
	      forEachRight(collection, function(value, index, collection) {
	        accumulator = noaccum
	          ? (noaccum = false, value)
	          : callback(accumulator, value, index, collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The opposite of `_.filter` this method returns the elements of a
	     * collection that the callback does **not** return truey for.
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new array of elements that failed the callback check.
	     * @example
	     *
	     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
	     * // => [1, 3, 5]
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36, 'blocked': false },
	     *   { 'name': 'fred',   'age': 40, 'blocked': true }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.reject(characters, 'blocked');
	     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
	     *
	     * // using "_.where" callback shorthand
	     * _.reject(characters, { 'age': 36 });
	     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
	     */
	    function reject(collection, callback, thisArg) {
	      callback = lodash.createCallback(callback, thisArg, 3);
	      return filter(collection, function(value, index, collection) {
	        return !callback(value, index, collection);
	      });
	    }

	    /**
	     * Retrieves a random element or `n` random elements from a collection.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to sample.
	     * @param {number} [n] The number of elements to sample.
	     * @param- {Object} [guard] Allows working with functions like `_.map`
	     *  without using their `index` arguments as `n`.
	     * @returns {Array} Returns the random sample(s) of `collection`.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     *
	     * _.sample([1, 2, 3, 4], 2);
	     * // => [3, 1]
	     */
	    function sample(collection, n, guard) {
	      if (collection && typeof collection.length != 'number') {
	        collection = values(collection);
	      } else if (support.unindexedChars && isString(collection)) {
	        collection = collection.split('');
	      }
	      if (n == null || guard) {
	        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
	      }
	      var result = shuffle(collection);
	      result.length = nativeMin(nativeMax(0, n), result.length);
	      return result;
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the Fisher-Yates
	     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to shuffle.
	     * @returns {Array} Returns a new shuffled collection.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4, 5, 6]);
	     * // => [4, 1, 6, 3, 5, 2]
	     */
	    function shuffle(collection) {
	      var index = -1,
	          length = collection ? collection.length : 0,
	          result = Array(typeof length == 'number' ? length : 0);

	      forEach(collection, function(value) {
	        var rand = baseRandom(0, ++index);
	        result[index] = result[rand];
	        result[rand] = value;
	      });
	      return result;
	    }

	    /**
	     * Gets the size of the `collection` by returning `collection.length` for arrays
	     * and array-like objects or the number of own enumerable properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to inspect.
	     * @returns {number} Returns `collection.length` or number of own enumerable properties.
	     * @example
	     *
	     * _.size([1, 2]);
	     * // => 2
	     *
	     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
	     * // => 3
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      var length = collection ? collection.length : 0;
	      return typeof length == 'number' ? length : keys(collection).length;
	    }

	    /**
	     * Checks if the callback returns a truey value for **any** element of a
	     * collection. The function returns as soon as it finds a passing value and
	     * does not iterate over the entire collection. The callback is bound to
	     * `thisArg` and invoked with three arguments; (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias any
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {boolean} Returns `true` if any element passed the callback check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36, 'blocked': false },
	     *   { 'name': 'fred',   'age': 40, 'blocked': true }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.some(characters, 'blocked');
	     * // => true
	     *
	     * // using "_.where" callback shorthand
	     * _.some(characters, { 'age': 1 });
	     * // => false
	     */
	    function some(collection, callback, thisArg) {
	      var result;
	      callback = lodash.createCallback(callback, thisArg, 3);

	      if (isArray(collection)) {
	        var index = -1,
	            length = collection.length;

	        while (++index < length) {
	          if ((result = callback(collection[index], index, collection))) {
	            break;
	          }
	        }
	      } else {
	        baseEach(collection, function(value, index, collection) {
	          return !(result = callback(value, index, collection));
	        });
	      }
	      return !!result;
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection through the callback. This method
	     * performs a stable sort, that is, it will preserve the original sort order
	     * of equal elements. The callback is bound to `thisArg` and invoked with
	     * three arguments; (value, index|key, collection).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an array of property names is provided for `callback` the collection
	     * will be sorted by each property value.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new array of sorted elements.
	     * @example
	     *
	     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
	     * // => [3, 1, 2]
	     *
	     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
	     * // => [3, 1, 2]
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'age': 36 },
	     *   { 'name': 'fred',    'age': 40 },
	     *   { 'name': 'barney',  'age': 26 },
	     *   { 'name': 'fred',    'age': 30 }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.map(_.sortBy(characters, 'age'), _.values);
	     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
	     *
	     * // sorting by multiple properties
	     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
	     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
	     */
	    function sortBy(collection, callback, thisArg) {
	      var index = -1,
	          isArr = isArray(callback),
	          length = collection ? collection.length : 0,
	          result = Array(typeof length == 'number' ? length : 0);

	      if (!isArr) {
	        callback = lodash.createCallback(callback, thisArg, 3);
	      }
	      forEach(collection, function(value, key, collection) {
	        var object = result[++index] = getObject();
	        if (isArr) {
	          object.criteria = map(callback, function(key) { return value[key]; });
	        } else {
	          (object.criteria = getArray())[0] = callback(value, key, collection);
	        }
	        object.index = index;
	        object.value = value;
	      });

	      length = result.length;
	      result.sort(compareAscending);
	      while (length--) {
	        var object = result[length];
	        result[length] = object.value;
	        if (!isArr) {
	          releaseArray(object.criteria);
	        }
	        releaseObject(object);
	      }
	      return result;
	    }

	    /**
	     * Converts the `collection` to an array.
	     *
	     * @static
	     * @memberOf _
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to convert.
	     * @returns {Array} Returns the new converted array.
	     * @example
	     *
	     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
	     * // => [2, 3, 4]
	     */
	    function toArray(collection) {
	      if (collection && typeof collection.length == 'number') {
	        return (support.unindexedChars && isString(collection))
	          ? collection.split('')
	          : slice(collection);
	      }
	      return values(collection);
	    }

	    /**
	     * Performs a deep comparison of each element in a `collection` to the given
	     * `properties` object, returning an array of all elements that have equivalent
	     * property values.
	     *
	     * @static
	     * @memberOf _
	     * @type Function
	     * @category Collections
	     * @param {Array|Object|string} collection The collection to iterate over.
	     * @param {Object} props The object of property values to filter by.
	     * @returns {Array} Returns a new array of elements that have the given properties.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
	     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
	     * ];
	     *
	     * _.where(characters, { 'age': 36 });
	     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
	     *
	     * _.where(characters, { 'pets': ['dino'] });
	     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
	     */
	    var where = filter;

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are all falsey.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns a new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array ? array.length : 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array excluding all values of the provided arrays using strict
	     * equality for comparisons, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to process.
	     * @param {...Array} [values] The arrays of values to exclude.
	     * @returns {Array} Returns a new array of filtered values.
	     * @example
	     *
	     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
	     * // => [1, 3, 4]
	     */
	    function difference(array) {
	      return baseDifference(array, baseFlatten(arguments, true, true, 1));
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element that passes the callback check, instead of the element itself.
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to search.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'age': 36, 'blocked': false },
	     *   { 'name': 'fred',    'age': 40, 'blocked': true },
	     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
	     * ];
	     *
	     * _.findIndex(characters, function(chr) {
	     *   return chr.age < 20;
	     * });
	     * // => 2
	     *
	     * // using "_.where" callback shorthand
	     * _.findIndex(characters, { 'age': 36 });
	     * // => 0
	     *
	     * // using "_.pluck" callback shorthand
	     * _.findIndex(characters, 'blocked');
	     * // => 1
	     */
	    function findIndex(array, callback, thisArg) {
	      var index = -1,
	          length = array ? array.length : 0;

	      callback = lodash.createCallback(callback, thisArg, 3);
	      while (++index < length) {
	        if (callback(array[index], index, array)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of a `collection` from right to left.
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to search.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'age': 36, 'blocked': true },
	     *   { 'name': 'fred',    'age': 40, 'blocked': false },
	     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
	     * ];
	     *
	     * _.findLastIndex(characters, function(chr) {
	     *   return chr.age > 30;
	     * });
	     * // => 1
	     *
	     * // using "_.where" callback shorthand
	     * _.findLastIndex(characters, { 'age': 36 });
	     * // => 0
	     *
	     * // using "_.pluck" callback shorthand
	     * _.findLastIndex(characters, 'blocked');
	     * // => 2
	     */
	    function findLastIndex(array, callback, thisArg) {
	      var length = array ? array.length : 0;
	      callback = lodash.createCallback(callback, thisArg, 3);
	      while (length--) {
	        if (callback(array[length], length, array)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Gets the first element or first `n` elements of an array. If a callback
	     * is provided elements at the beginning of the array are returned as long
	     * as the callback returns truey. The callback is bound to `thisArg` and
	     * invoked with three arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias head, take
	     * @category Arrays
	     * @param {Array} array The array to query.
	     * @param {Function|Object|number|string} [callback] The function called
	     *  per element or the number of elements to return. If a property name or
	     *  object is provided it will be used to create a "_.pluck" or "_.where"
	     *  style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the first element(s) of `array`.
	     * @example
	     *
	     * _.first([1, 2, 3]);
	     * // => 1
	     *
	     * _.first([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.first([1, 2, 3], function(num) {
	     *   return num < 3;
	     * });
	     * // => [1, 2]
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
	     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
	     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.first(characters, 'blocked');
	     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
	     *
	     * // using "_.where" callback shorthand
	     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
	     * // => ['barney', 'fred']
	     */
	    function first(array, callback, thisArg) {
	      var n = 0,
	          length = array ? array.length : 0;

	      if (typeof callback != 'number' && callback != null) {
	        var index = -1;
	        callback = lodash.createCallback(callback, thisArg, 3);
	        while (++index < length && callback(array[index], index, array)) {
	          n++;
	        }
	      } else {
	        n = callback;
	        if (n == null || thisArg) {
	          return array ? array[0] : undefined;
	        }
	      }
	      return slice(array, 0, nativeMin(nativeMax(0, n), length));
	    }

	    /**
	     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
	     * is truey, the array will only be flattened a single level. If a callback
	     * is provided each element of the array is passed through the callback before
	     * flattening. The callback is bound to `thisArg` and invoked with three
	     * arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to flatten.
	     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2], [3, [[4]]]]);
	     * // => [1, 2, 3, 4];
	     *
	     * _.flatten([1, [2], [3, [[4]]]], true);
	     * // => [1, 2, 3, [[4]]];
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
	     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.flatten(characters, 'pets');
	     * // => ['hoppy', 'baby puss', 'dino']
	     */
	    function flatten(array, isShallow, callback, thisArg) {
	      // juggle arguments
	      if (typeof isShallow != 'boolean' && isShallow != null) {
	        thisArg = callback;
	        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
	        isShallow = false;
	      }
	      if (callback != null) {
	        array = map(array, callback, thisArg);
	      }
	      return baseFlatten(array, isShallow);
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found using
	     * strict equality for comparisons, i.e. `===`. If the array is already sorted
	     * providing `true` for `fromIndex` will run a faster binary search.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
	     *  to perform a binary search on a sorted array.
	     * @returns {number} Returns the index of the matched value or `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
	     * // => 1
	     *
	     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
	     * // => 4
	     *
	     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
	     * // => 2
	     */
	    function indexOf(array, value, fromIndex) {
	      if (typeof fromIndex == 'number') {
	        var length = array ? array.length : 0;
	        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
	      } else if (fromIndex) {
	        var index = sortedIndex(array, value);
	        return array[index] === value ? index : -1;
	      }
	      return baseIndexOf(array, value, fromIndex);
	    }

	    /**
	     * Gets all but the last element or last `n` elements of an array. If a
	     * callback is provided elements at the end of the array are excluded from
	     * the result as long as the callback returns truey. The callback is bound
	     * to `thisArg` and invoked with three arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to query.
	     * @param {Function|Object|number|string} [callback=1] The function called
	     *  per element or the number of elements to exclude. If a property name or
	     *  object is provided it will be used to create a "_.pluck" or "_.where"
	     *  style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.initial([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.initial([1, 2, 3], function(num) {
	     *   return num > 1;
	     * });
	     * // => [1]
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
	     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
	     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.initial(characters, 'blocked');
	     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
	     *
	     * // using "_.where" callback shorthand
	     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
	     * // => ['barney', 'fred']
	     */
	    function initial(array, callback, thisArg) {
	      var n = 0,
	          length = array ? array.length : 0;

	      if (typeof callback != 'number' && callback != null) {
	        var index = length;
	        callback = lodash.createCallback(callback, thisArg, 3);
	        while (index-- && callback(array[index], index, array)) {
	          n++;
	        }
	      } else {
	        n = (callback == null || thisArg) ? 1 : callback || n;
	      }
	      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
	    }

	    /**
	     * Creates an array of unique values present in all provided arrays using
	     * strict equality for comparisons, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {...Array} [array] The arrays to inspect.
	     * @returns {Array} Returns an array of shared values.
	     * @example
	     *
	     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
	     * // => [1, 2]
	     */
	    function intersection() {
	      var args = [],
	          argsIndex = -1,
	          argsLength = arguments.length,
	          caches = getArray(),
	          indexOf = getIndexOf(),
	          trustIndexOf = indexOf === baseIndexOf,
	          seen = getArray();

	      while (++argsIndex < argsLength) {
	        var value = arguments[argsIndex];
	        if (isArray(value) || isArguments(value)) {
	          args.push(value);
	          caches.push(trustIndexOf && value.length >= largeArraySize &&
	            createCache(argsIndex ? args[argsIndex] : seen));
	        }
	      }
	      var array = args[0],
	          index = -1,
	          length = array ? array.length : 0,
	          result = [];

	      outer:
	      while (++index < length) {
	        var cache = caches[0];
	        value = array[index];

	        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
	          argsIndex = argsLength;
	          (cache || seen).push(value);
	          while (--argsIndex) {
	            cache = caches[argsIndex];
	            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	      }
	      while (argsLength--) {
	        cache = caches[argsLength];
	        if (cache) {
	          releaseObject(cache);
	        }
	      }
	      releaseArray(caches);
	      releaseArray(seen);
	      return result;
	    }

	    /**
	     * Gets the last element or last `n` elements of an array. If a callback is
	     * provided elements at the end of the array are returned as long as the
	     * callback returns truey. The callback is bound to `thisArg` and invoked
	     * with three arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to query.
	     * @param {Function|Object|number|string} [callback] The function called
	     *  per element or the number of elements to return. If a property name or
	     *  object is provided it will be used to create a "_.pluck" or "_.where"
	     *  style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {*} Returns the last element(s) of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     *
	     * _.last([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.last([1, 2, 3], function(num) {
	     *   return num > 1;
	     * });
	     * // => [2, 3]
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
	     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
	     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.pluck(_.last(characters, 'blocked'), 'name');
	     * // => ['fred', 'pebbles']
	     *
	     * // using "_.where" callback shorthand
	     * _.last(characters, { 'employer': 'na' });
	     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
	     */
	    function last(array, callback, thisArg) {
	      var n = 0,
	          length = array ? array.length : 0;

	      if (typeof callback != 'number' && callback != null) {
	        var index = length;
	        callback = lodash.createCallback(callback, thisArg, 3);
	        while (index-- && callback(array[index], index, array)) {
	          n++;
	        }
	      } else {
	        n = callback;
	        if (n == null || thisArg) {
	          return array ? array[length - 1] : undefined;
	        }
	      }
	      return slice(array, nativeMax(0, length - n));
	    }

	    /**
	     * Gets the index at which the last occurrence of `value` is found using strict
	     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
	     * as the offset from the end of the collection.
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value or `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
	     * // => 4
	     *
	     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var index = array ? array.length : 0;
	      if (typeof fromIndex == 'number') {
	        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
	      }
	      while (index--) {
	        if (array[index] === value) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Removes all provided values from the given array using strict equality for
	     * comparisons, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to modify.
	     * @param {...*} [value] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     * _.pull(array, 2, 3);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    function pull(array) {
	      var args = arguments,
	          argsIndex = 0,
	          argsLength = args.length,
	          length = array ? array.length : 0;

	      while (++argsIndex < argsLength) {
	        var index = -1,
	            value = args[argsIndex];
	        while (++index < length) {
	          if (array[index] === value) {
	            splice.call(array, index--, 1);
	            length--;
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to but not including `end`. If `start` is less than `stop` a
	     * zero-length range is created unless a negative `step` is specified.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns a new range array.
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    function range(start, end, step) {
	      start = +start || 0;
	      step = typeof step == 'number' ? step : (+step || 1);

	      if (end == null) {
	        end = start;
	        start = 0;
	      }
	      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
	      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
	      var index = -1,
	          length = nativeMax(0, ceil((end - start) / (step || 1))),
	          result = Array(length);

	      while (++index < length) {
	        result[index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * Removes all elements from an array that the callback returns truey for
	     * and returns an array of removed elements. The callback is bound to `thisArg`
	     * and invoked with three arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to modify.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4, 5, 6];
	     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
	     *
	     * console.log(array);
	     * // => [1, 3, 5]
	     *
	     * console.log(evens);
	     * // => [2, 4, 6]
	     */
	    function remove(array, callback, thisArg) {
	      var index = -1,
	          length = array ? array.length : 0,
	          result = [];

	      callback = lodash.createCallback(callback, thisArg, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (callback(value, index, array)) {
	          result.push(value);
	          splice.call(array, index--, 1);
	          length--;
	        }
	      }
	      return result;
	    }

	    /**
	     * The opposite of `_.initial` this method gets all but the first element or
	     * first `n` elements of an array. If a callback function is provided elements
	     * at the beginning of the array are excluded from the result as long as the
	     * callback returns truey. The callback is bound to `thisArg` and invoked
	     * with three arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias drop, tail
	     * @category Arrays
	     * @param {Array} array The array to query.
	     * @param {Function|Object|number|string} [callback=1] The function called
	     *  per element or the number of elements to exclude. If a property name or
	     *  object is provided it will be used to create a "_.pluck" or "_.where"
	     *  style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a slice of `array`.
	     * @example
	     *
	     * _.rest([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.rest([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.rest([1, 2, 3], function(num) {
	     *   return num < 3;
	     * });
	     * // => [3]
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
	     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
	     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
	     * ];
	     *
	     * // using "_.pluck" callback shorthand
	     * _.pluck(_.rest(characters, 'blocked'), 'name');
	     * // => ['fred', 'pebbles']
	     *
	     * // using "_.where" callback shorthand
	     * _.rest(characters, { 'employer': 'slate' });
	     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
	     */
	    function rest(array, callback, thisArg) {
	      if (typeof callback != 'number' && callback != null) {
	        var n = 0,
	            index = -1,
	            length = array ? array.length : 0;

	        callback = lodash.createCallback(callback, thisArg, 3);
	        while (++index < length && callback(array[index], index, array)) {
	          n++;
	        }
	      } else {
	        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
	      }
	      return slice(array, n);
	    }

	    /**
	     * Uses a binary search to determine the smallest index at which a value
	     * should be inserted into a given sorted array in order to maintain the sort
	     * order of the array. If a callback is provided it will be executed for
	     * `value` and each element of `array` to compute their sort ranking. The
	     * callback is bound to `thisArg` and invoked with one argument; (value).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([20, 30, 50], 40);
	     * // => 2
	     *
	     * // using "_.pluck" callback shorthand
	     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
	     * // => 2
	     *
	     * var dict = {
	     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
	     * };
	     *
	     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
	     *   return dict.wordToNumber[word];
	     * });
	     * // => 2
	     *
	     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
	     *   return this.wordToNumber[word];
	     * }, dict);
	     * // => 2
	     */
	    function sortedIndex(array, value, callback, thisArg) {
	      var low = 0,
	          high = array ? array.length : low;

	      // explicitly reference `identity` for better inlining in Firefox
	      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
	      value = callback(value);

	      while (low < high) {
	        var mid = (low + high) >>> 1;
	        (callback(array[mid]) < value)
	          ? low = mid + 1
	          : high = mid;
	      }
	      return low;
	    }

	    /**
	     * Creates an array of unique values, in order, of the provided arrays using
	     * strict equality for comparisons, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {...Array} [array] The arrays to inspect.
	     * @returns {Array} Returns an array of combined values.
	     * @example
	     *
	     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
	     * // => [1, 2, 3, 5, 4]
	     */
	    function union() {
	      return baseUniq(baseFlatten(arguments, true, true));
	    }

	    /**
	     * Creates a duplicate-value-free version of an array using strict equality
	     * for comparisons, i.e. `===`. If the array is sorted, providing
	     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
	     * each element of `array` is passed through the callback before uniqueness
	     * is computed. The callback is bound to `thisArg` and invoked with three
	     * arguments; (value, index, array).
	     *
	     * If a property name is provided for `callback` the created "_.pluck" style
	     * callback will return the property value of the given element.
	     *
	     * If an object is provided for `callback` the created "_.where" style callback
	     * will return `true` for elements that have the properties of the given object,
	     * else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @alias unique
	     * @category Arrays
	     * @param {Array} array The array to process.
	     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
	     * @param {Function|Object|string} [callback=identity] The function called
	     *  per iteration. If a property name or object is provided it will be used
	     *  to create a "_.pluck" or "_.where" style callback, respectively.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns a duplicate-value-free array.
	     * @example
	     *
	     * _.uniq([1, 2, 1, 3, 1]);
	     * // => [1, 2, 3]
	     *
	     * _.uniq([1, 1, 2, 2, 3], true);
	     * // => [1, 2, 3]
	     *
	     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
	     * // => ['A', 'b', 'C']
	     *
	     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
	     * // => [1, 2.5, 3]
	     *
	     * // using "_.pluck" callback shorthand
	     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniq(array, isSorted, callback, thisArg) {
	      // juggle arguments
	      if (typeof isSorted != 'boolean' && isSorted != null) {
	        thisArg = callback;
	        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
	        isSorted = false;
	      }
	      if (callback != null) {
	        callback = lodash.createCallback(callback, thisArg, 3);
	      }
	      return baseUniq(array, isSorted, callback);
	    }

	    /**
	     * Creates an array excluding all provided values using strict equality for
	     * comparisons, i.e. `===`.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {Array} array The array to filter.
	     * @param {...*} [value] The values to exclude.
	     * @returns {Array} Returns a new array of filtered values.
	     * @example
	     *
	     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
	     * // => [2, 3, 4]
	     */
	    function without(array) {
	      return baseDifference(array, slice(arguments, 1));
	    }

	    /**
	     * Creates an array that is the symmetric difference of the provided arrays.
	     * See http://en.wikipedia.org/wiki/Symmetric_difference.
	     *
	     * @static
	     * @memberOf _
	     * @category Arrays
	     * @param {...Array} [array] The arrays to inspect.
	     * @returns {Array} Returns an array of values.
	     * @example
	     *
	     * _.xor([1, 2, 3], [5, 2, 1, 4]);
	     * // => [3, 5, 4]
	     *
	     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
	     * // => [1, 4, 5]
	     */
	    function xor() {
	      var index = -1,
	          length = arguments.length;

	      while (++index < length) {
	        var array = arguments[index];
	        if (isArray(array) || isArguments(array)) {
	          var result = result
	            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
	            : array;
	        }
	      }
	      return result || [];
	    }

	    /**
	     * Creates an array of grouped elements, the first of which contains the first
	     * elements of the given arrays, the second of which contains the second
	     * elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @alias unzip
	     * @category Arrays
	     * @param {...Array} [array] Arrays to process.
	     * @returns {Array} Returns a new array of grouped elements.
	     * @example
	     *
	     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     */
	    function zip() {
	      var array = arguments.length > 1 ? arguments : arguments[0],
	          index = -1,
	          length = array ? max(pluck(array, 'length')) : 0,
	          result = Array(length < 0 ? 0 : length);

	      while (++index < length) {
	        result[index] = pluck(array, index);
	      }
	      return result;
	    }

	    /**
	     * Creates an object composed from arrays of `keys` and `values`. Provide
	     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
	     * or two arrays, one of `keys` and one of corresponding `values`.
	     *
	     * @static
	     * @memberOf _
	     * @alias object
	     * @category Arrays
	     * @param {Array} keys The array of keys.
	     * @param {Array} [values=[]] The array of values.
	     * @returns {Object} Returns an object composed of the given keys and
	     *  corresponding values.
	     * @example
	     *
	     * _.zipObject(['fred', 'barney'], [30, 40]);
	     * // => { 'fred': 30, 'barney': 40 }
	     */
	    function zipObject(keys, values) {
	      var index = -1,
	          length = keys ? keys.length : 0,
	          result = {};

	      if (!values && length && !isArray(keys[0])) {
	        values = [];
	      }
	      while (++index < length) {
	        var key = keys[index];
	        if (values) {
	          result[key] = values[index];
	        } else if (key) {
	          result[key[0]] = key[1];
	        }
	      }
	      return result;
	    }

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Creates a function that executes `func`, with  the `this` binding and
	     * arguments of the created function, only after being called `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {number} n The number of times the function must be called before
	     *  `func` is executed.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('Done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => logs 'Done saving!', after all saves have completed
	     */
	    function after(n, func) {
	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that, when called, invokes `func` with the `this`
	     * binding of `thisArg` and prepends any additional `bind` arguments to those
	     * provided to the bound function.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to bind.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {...*} [arg] Arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var func = function(greeting) {
	     *   return greeting + ' ' + this.name;
	     * };
	     *
	     * func = _.bind(func, { 'name': 'fred' }, 'hi');
	     * func();
	     * // => 'hi fred'
	     */
	    function bind(func, thisArg) {
	      return arguments.length > 2
	        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
	        : createWrapper(func, 1, null, null, thisArg);
	    }

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method. Method names may be specified as individual arguments or as arrays
	     * of method names. If no method names are provided all the function properties
	     * of `object` will be bound.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...string} [methodName] The object method names to
	     *  bind, specified as individual method names or arrays of method names.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'onClick': function() { console.log('clicked ' + this.label); }
	     * };
	     *
	     * _.bindAll(view);
	     * jQuery('#docs').on('click', view.onClick);
	     * // => logs 'clicked docs', when the button is clicked
	     */
	    function bindAll(object) {
	      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
	          index = -1,
	          length = funcs.length;

	      while (++index < length) {
	        var key = funcs[index];
	        object[key] = createWrapper(object[key], 1, null, null, object);
	      }
	      return object;
	    }

	    /**
	     * Creates a function that, when called, invokes the method at `object[key]`
	     * and prepends any additional `bindKey` arguments to those provided to the bound
	     * function. This method differs from `_.bind` by allowing bound functions to
	     * reference methods that will be redefined or don't yet exist.
	     * See http://michaux.ca/articles/lazy-function-definition-pattern.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Object} object The object the method belongs to.
	     * @param {string} key The key of the method.
	     * @param {...*} [arg] Arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'name': 'fred',
	     *   'greet': function(greeting) {
	     *     return greeting + ' ' + this.name;
	     *   }
	     * };
	     *
	     * var func = _.bindKey(object, 'greet', 'hi');
	     * func();
	     * // => 'hi fred'
	     *
	     * object.greet = function(greeting) {
	     *   return greeting + 'ya ' + this.name + '!';
	     * };
	     *
	     * func();
	     * // => 'hiya fred!'
	     */
	    function bindKey(object, key) {
	      return arguments.length > 2
	        ? createWrapper(key, 19, slice(arguments, 2), null, object)
	        : createWrapper(key, 3, null, null, object);
	    }

	    /**
	     * Creates a function that is the composition of the provided functions,
	     * where each function consumes the return value of the function that follows.
	     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
	     * Each function is executed with the `this` binding of the composed function.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {...Function} [func] Functions to compose.
	     * @returns {Function} Returns the new composed function.
	     * @example
	     *
	     * var realNameMap = {
	     *   'pebbles': 'penelope'
	     * };
	     *
	     * var format = function(name) {
	     *   name = realNameMap[name.toLowerCase()] || name;
	     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
	     * };
	     *
	     * var greet = function(formatted) {
	     *   return 'Hiya ' + formatted + '!';
	     * };
	     *
	     * var welcome = _.compose(greet, format);
	     * welcome('pebbles');
	     * // => 'Hiya Penelope!'
	     */
	    function compose() {
	      var funcs = arguments,
	          length = funcs.length;

	      while (length--) {
	        if (!isFunction(funcs[length])) {
	          throw new TypeError;
	        }
	      }
	      return function() {
	        var args = arguments,
	            length = funcs.length;

	        while (length--) {
	          args = [funcs[length].apply(this, args)];
	        }
	        return args[0];
	      };
	    }

	    /**
	     * Creates a function which accepts one or more arguments of `func` that when
	     * invoked either executes `func` returning its result, if all `func` arguments
	     * have been provided, or returns a function that accepts one or more of the
	     * remaining `func` arguments, and so on. The arity of `func` can be specified
	     * if `func.length` is not sufficient.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var curried = _.curry(function(a, b, c) {
	     *   console.log(a + b + c);
	     * });
	     *
	     * curried(1)(2)(3);
	     * // => 6
	     *
	     * curried(1, 2)(3);
	     * // => 6
	     *
	     * curried(1, 2, 3);
	     * // => 6
	     */
	    function curry(func, arity) {
	      arity = typeof arity == 'number' ? arity : (+arity || func.length);
	      return createWrapper(func, 4, null, null, null, arity);
	    }

	    /**
	     * Creates a function that will delay the execution of `func` until after
	     * `wait` milliseconds have elapsed since the last time it was invoked.
	     * Provide an options object to indicate that `func` should be invoked on
	     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
	     * to the debounced function will return the result of the last `func` call.
	     *
	     * Note: If `leading` and `trailing` options are `true` `func` will be called
	     * on the trailing edge of the timeout only if the the debounced function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to debounce.
	     * @param {number} wait The number of milliseconds to delay.
	     * @param {Object} [options] The options object.
	     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
	     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
	     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // avoid costly calculations while the window size is in flux
	     * var lazyLayout = _.debounce(calculateLayout, 150);
	     * jQuery(window).on('resize', lazyLayout);
	     *
	     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
	     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * });
	     *
	     * // ensure `batchLog` is executed once after 1 second of debounced calls
	     * var source = new EventSource('/stream');
	     * source.addEventListener('message', _.debounce(batchLog, 250, {
	     *   'maxWait': 1000
	     * }, false);
	     */
	    function debounce(func, wait, options) {
	      var args,
	          maxTimeoutId,
	          result,
	          stamp,
	          thisArg,
	          timeoutId,
	          trailingCall,
	          lastCalled = 0,
	          maxWait = false,
	          trailing = true;

	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      wait = nativeMax(0, wait) || 0;
	      if (options === true) {
	        var leading = true;
	        trailing = false;
	      } else if (isObject(options)) {
	        leading = options.leading;
	        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
	        trailing = 'trailing' in options ? options.trailing : trailing;
	      }
	      var delayed = function() {
	        var remaining = wait - (now() - stamp);
	        if (remaining <= 0) {
	          if (maxTimeoutId) {
	            clearTimeout(maxTimeoutId);
	          }
	          var isCalled = trailingCall;
	          maxTimeoutId = timeoutId = trailingCall = undefined;
	          if (isCalled) {
	            lastCalled = now();
	            result = func.apply(thisArg, args);
	            if (!timeoutId && !maxTimeoutId) {
	              args = thisArg = null;
	            }
	          }
	        } else {
	          timeoutId = setTimeout(delayed, remaining);
	        }
	      };

	      var maxDelayed = function() {
	        if (timeoutId) {
	          clearTimeout(timeoutId);
	        }
	        maxTimeoutId = timeoutId = trailingCall = undefined;
	        if (trailing || (maxWait !== wait)) {
	          lastCalled = now();
	          result = func.apply(thisArg, args);
	          if (!timeoutId && !maxTimeoutId) {
	            args = thisArg = null;
	          }
	        }
	      };

	      return function() {
	        args = arguments;
	        stamp = now();
	        thisArg = this;
	        trailingCall = trailing && (timeoutId || !leading);

	        if (maxWait === false) {
	          var leadingCall = leading && !timeoutId;
	        } else {
	          if (!maxTimeoutId && !leading) {
	            lastCalled = stamp;
	          }
	          var remaining = maxWait - (stamp - lastCalled),
	              isCalled = remaining <= 0;

	          if (isCalled) {
	            if (maxTimeoutId) {
	              maxTimeoutId = clearTimeout(maxTimeoutId);
	            }
	            lastCalled = stamp;
	            result = func.apply(thisArg, args);
	          }
	          else if (!maxTimeoutId) {
	            maxTimeoutId = setTimeout(maxDelayed, remaining);
	          }
	        }
	        if (isCalled && timeoutId) {
	          timeoutId = clearTimeout(timeoutId);
	        }
	        else if (!timeoutId && wait !== maxWait) {
	          timeoutId = setTimeout(delayed, wait);
	        }
	        if (leadingCall) {
	          isCalled = true;
	          result = func.apply(thisArg, args);
	        }
	        if (isCalled && !timeoutId && !maxTimeoutId) {
	          args = thisArg = null;
	        }
	        return result;
	      };
	    }

	    /**
	     * Defers executing the `func` function until the current call stack has cleared.
	     * Additional arguments will be provided to `func` when it is invoked.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to defer.
	     * @param {...*} [arg] Arguments to invoke the function with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) { console.log(text); }, 'deferred');
	     * // logs 'deferred' after one or more milliseconds
	     */
	    function defer(func) {
	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      var args = slice(arguments, 1);
	      return setTimeout(function() { func.apply(undefined, args); }, 1);
	    }

	    /**
	     * Executes the `func` function after `wait` milliseconds. Additional arguments
	     * will be provided to `func` when it is invoked.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay execution.
	     * @param {...*} [arg] Arguments to invoke the function with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) { console.log(text); }, 1000, 'later');
	     * // => logs 'later' after one second
	     */
	    function delay(func, wait) {
	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      var args = slice(arguments, 2);
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided it will be used to determine the cache key for storing the result
	     * based on the arguments provided to the memoized function. By default, the
	     * first argument provided to the memoized function is used as the cache key.
	     * The `func` is executed with the `this` binding of the memoized function.
	     * The result cache is exposed as the `cache` property on the memoized function.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] A function used to resolve the cache key.
	     * @returns {Function} Returns the new memoizing function.
	     * @example
	     *
	     * var fibonacci = _.memoize(function(n) {
	     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
	     * });
	     *
	     * fibonacci(9)
	     * // => 34
	     *
	     * var data = {
	     *   'fred': { 'name': 'fred', 'age': 40 },
	     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
	     * };
	     *
	     * // modifying the result cache
	     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
	     * get('pebbles');
	     * // => { 'name': 'pebbles', 'age': 1 }
	     *
	     * get.cache.pebbles.name = 'penelope';
	     * get('pebbles');
	     * // => { 'name': 'penelope', 'age': 1 }
	     */
	    function memoize(func, resolver) {
	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      var memoized = function() {
	        var cache = memoized.cache,
	            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

	        return hasOwnProperty.call(cache, key)
	          ? cache[key]
	          : (cache[key] = func.apply(this, arguments));
	      }
	      memoized.cache = {};
	      return memoized;
	    }

	    /**
	     * Creates a function that is restricted to execute `func` once. Repeat calls to
	     * the function will return the value of the first call. The `func` is executed
	     * with the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` executes `createApplication` once
	     */
	    function once(func) {
	      var ran,
	          result;

	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      return function() {
	        if (ran) {
	          return result;
	        }
	        ran = true;
	        result = func.apply(this, arguments);

	        // clear the `func` variable so the function may be garbage collected
	        func = null;
	        return result;
	      };
	    }

	    /**
	     * Creates a function that, when called, invokes `func` with any additional
	     * `partial` arguments prepended to those provided to the new function. This
	     * method is similar to `_.bind` except it does **not** alter the `this` binding.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [arg] Arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) { return greeting + ' ' + name; };
	     * var hi = _.partial(greet, 'hi');
	     * hi('fred');
	     * // => 'hi fred'
	     */
	    function partial(func) {
	      return createWrapper(func, 16, slice(arguments, 1));
	    }

	    /**
	     * This method is like `_.partial` except that `partial` arguments are
	     * appended to those provided to the new function.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [arg] Arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
	     *
	     * var options = {
	     *   'variable': 'data',
	     *   'imports': { 'jq': $ }
	     * };
	     *
	     * defaultsDeep(options, _.templateSettings);
	     *
	     * options.variable
	     * // => 'data'
	     *
	     * options.imports
	     * // => { '_': _, 'jq': $ }
	     */
	    function partialRight(func) {
	      return createWrapper(func, 32, null, slice(arguments, 1));
	    }

	    /**
	     * Creates a function that, when executed, will only call the `func` function
	     * at most once per every `wait` milliseconds. Provide an options object to
	     * indicate that `func` should be invoked on the leading and/or trailing edge
	     * of the `wait` timeout. Subsequent calls to the throttled function will
	     * return the result of the last `func` call.
	     *
	     * Note: If `leading` and `trailing` options are `true` `func` will be called
	     * on the trailing edge of the timeout only if the the throttled function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {Function} func The function to throttle.
	     * @param {number} wait The number of milliseconds to throttle executions to.
	     * @param {Object} [options] The options object.
	     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // avoid excessively updating the position while scrolling
	     * var throttled = _.throttle(updatePosition, 100);
	     * jQuery(window).on('scroll', throttled);
	     *
	     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
	     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
	     *   'trailing': false
	     * }));
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (!isFunction(func)) {
	        throw new TypeError;
	      }
	      if (options === false) {
	        leading = false;
	      } else if (isObject(options)) {
	        leading = 'leading' in options ? options.leading : leading;
	        trailing = 'trailing' in options ? options.trailing : trailing;
	      }
	      debounceOptions.leading = leading;
	      debounceOptions.maxWait = wait;
	      debounceOptions.trailing = trailing;

	      return debounce(func, wait, debounceOptions);
	    }

	    /**
	     * Creates a function that provides `value` to the wrapper function as its
	     * first argument. Additional arguments provided to the function are appended
	     * to those provided to the wrapper function. The wrapper is executed with
	     * the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @category Functions
	     * @param {*} value The value to wrap.
	     * @param {Function} wrapper The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('Fred, Wilma, & Pebbles');
	     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      return createWrapper(wrapper, 16, [value]);
	    }

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var object = { 'name': 'fred' };
	     * var getter = _.constant(object);
	     * getter() === object;
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Produces a callback bound to an optional `thisArg`. If `func` is a property
	     * name the created callback will return the property value for a given element.
	     * If `func` is an object the created callback will return `true` for elements
	     * that contain the equivalent object properties, otherwise it will return `false`.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {*} [func=identity] The value to convert to a callback.
	     * @param {*} [thisArg] The `this` binding of the created callback.
	     * @param {number} [argCount] The number of arguments the callback accepts.
	     * @returns {Function} Returns a callback function.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * // wrap to create custom callback shorthands
	     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
	     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
	     *   return !match ? func(callback, thisArg) : function(object) {
	     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
	     *   };
	     * });
	     *
	     * _.filter(characters, 'age__gt38');
	     * // => [{ 'name': 'fred', 'age': 40 }]
	     */
	    function createCallback(func, thisArg, argCount) {
	      var type = typeof func;
	      if (func == null || type == 'function') {
	        return baseCreateCallback(func, thisArg, argCount);
	      }
	      // handle "_.pluck" style callback shorthands
	      if (type != 'object') {
	        return property(func);
	      }
	      var props = keys(func),
	          key = props[0],
	          a = func[key];

	      // handle "_.where" style callback shorthands
	      if (props.length == 1 && a === a && !isObject(a)) {
	        // fast path the common case of providing an object with a single
	        // property containing a primitive value
	        return function(object) {
	          var b = object[key];
	          return a === b && (a !== 0 || (1 / a == 1 / b));
	        };
	      }
	      return function(object) {
	        var length = props.length,
	            result = false;

	        while (length--) {
	          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
	            break;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
	     * corresponding HTML entities.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {string} string The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('Fred, Wilma, & Pebbles');
	     * // => 'Fred, Wilma, &amp; Pebbles'
	     */
	    function escape(string) {
	      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
	    }

	    /**
	     * This method returns the first argument provided to it.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'name': 'fred' };
	     * _.identity(object) === object;
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Adds function properties of a source object to the destination object.
	     * If `object` is a function methods will be added to its prototype as well.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {Function|Object} [object=lodash] object The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options] The options object.
	     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
	     * @example
	     *
	     * function capitalize(string) {
	     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
	     * }
	     *
	     * _.mixin({ 'capitalize': capitalize });
	     * _.capitalize('fred');
	     * // => 'Fred'
	     *
	     * _('fred').capitalize().value();
	     * // => 'Fred'
	     *
	     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
	     * _('fred').capitalize();
	     * // => 'Fred'
	     */
	    function mixin(object, source, options) {
	      var chain = true,
	          methodNames = source && functions(source);

	      if (!source || (!options && !methodNames.length)) {
	        if (options == null) {
	          options = source;
	        }
	        ctor = lodashWrapper;
	        source = object;
	        object = lodash;
	        methodNames = functions(source);
	      }
	      if (options === false) {
	        chain = false;
	      } else if (isObject(options) && 'chain' in options) {
	        chain = options.chain;
	      }
	      var ctor = object,
	          isFunc = isFunction(ctor);

	      forEach(methodNames, function(methodName) {
	        var func = object[methodName] = source[methodName];
	        if (isFunc) {
	          ctor.prototype[methodName] = function() {
	            var chainAll = this.__chain__,
	                value = this.__wrapped__,
	                args = [value];

	            push.apply(args, arguments);
	            var result = func.apply(object, args);
	            if (chain || chainAll) {
	              if (value === result && isObject(result)) {
	                return this;
	              }
	              result = new ctor(result);
	              result.__chain__ = chainAll;
	            }
	            return result;
	          };
	        }
	      });
	    }

	    /**
	     * Reverts the '_' variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      context._ = oldDash;
	      return this;
	    }

	    /**
	     * A no-operation function.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @example
	     *
	     * var object = { 'name': 'fred' };
	     * _.noop(object) === undefined;
	     * // => true
	     */
	    function noop() {
	      // no operation performed
	    }

	    /**
	     * Gets the number of milliseconds that have elapsed since the Unix epoch
	     * (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @example
	     *
	     * var stamp = _.now();
	     * _.defer(function() { console.log(_.now() - stamp); });
	     * // => logs the number of milliseconds it took for the deferred function to be called
	     */
	    var now = isNative(now = Date.now) && now || function() {
	      return new Date().getTime();
	    };

	    /**
	     * Converts the given value into an integer of the specified radix.
	     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
	     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
	     * implementations. See http://es5.github.io/#E.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {string} value The value to parse.
	     * @param {number} [radix] The radix used to interpret the value to parse.
	     * @returns {number} Returns the new integer value.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     */
	    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
	      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
	      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
	    };

	    /**
	     * Creates a "_.pluck" style function, which returns the `key` value of a
	     * given object.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {string} key The name of the property to retrieve.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'fred',   'age': 40 },
	     *   { 'name': 'barney', 'age': 36 }
	     * ];
	     *
	     * var getName = _.property('name');
	     *
	     * _.map(characters, getName);
	     * // => ['barney', 'fred']
	     *
	     * _.sortBy(characters, getName);
	     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
	     */
	    function property(key) {
	      return function(object) {
	        return object[key];
	      };
	    }

	    /**
	     * Produces a random number between `min` and `max` (inclusive). If only one
	     * argument is provided a number between `0` and the given number will be
	     * returned. If `floating` is truey or either `min` or `max` are floats a
	     * floating-point number will be returned instead of an integer.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {number} [min=0] The minimum possible value.
	     * @param {number} [max=1] The maximum possible value.
	     * @param {boolean} [floating=false] Specify returning a floating-point number.
	     * @returns {number} Returns a random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(min, max, floating) {
	      var noMin = min == null,
	          noMax = max == null;

	      if (floating == null) {
	        if (typeof min == 'boolean' && noMax) {
	          floating = min;
	          min = 1;
	        }
	        else if (!noMax && typeof max == 'boolean') {
	          floating = max;
	          noMax = true;
	        }
	      }
	      if (noMin && noMax) {
	        max = 1;
	      }
	      min = +min || 0;
	      if (noMax) {
	        max = min;
	        min = 0;
	      } else {
	        max = +max || 0;
	      }
	      if (floating || min % 1 || max % 1) {
	        var rand = nativeRandom();
	        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
	      }
	      return baseRandom(min, max);
	    }

	    /**
	     * Resolves the value of property `key` on `object`. If `key` is a function
	     * it will be invoked with the `this` binding of `object` and its result returned,
	     * else the property value is returned. If `object` is falsey then `undefined`
	     * is returned.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {Object} object The object to inspect.
	     * @param {string} key The name of the property to resolve.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = {
	     *   'cheese': 'crumpets',
	     *   'stuff': function() {
	     *     return 'nonsense';
	     *   }
	     * };
	     *
	     * _.result(object, 'cheese');
	     * // => 'crumpets'
	     *
	     * _.result(object, 'stuff');
	     * // => 'nonsense'
	     */
	    function result(object, key) {
	      if (object) {
	        var value = object[key];
	        return isFunction(value) ? object[key]() : value;
	      }
	    }

	    /**
	     * A micro-templating method that handles arbitrary delimiters, preserves
	     * whitespace, and correctly escapes quotes within interpolated code.
	     *
	     * Note: In the development build, `_.template` utilizes sourceURLs for easier
	     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
	     *
	     * For more information on precompiling templates see:
	     * http://lodash.com/custom-builds
	     *
	     * For more information on Chrome extension sandboxes see:
	     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {string} text The template text.
	     * @param {Object} data The data object used to populate the text.
	     * @param {Object} [options] The options object.
	     * @param {RegExp} [options.escape] The "escape" delimiter.
	     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
	     * @param {Object} [options.imports] An object to import into the template as local variables.
	     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
	     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
	     * @param {string} [variable] The data object variable name.
	     * @returns {Function|string} Returns a compiled function when no `data` object
	     *  is given, else it returns the interpolated text.
	     * @example
	     *
	     * // using the "interpolate" delimiter to create a compiled template
	     * var compiled = _.template('hello <%= name %>');
	     * compiled({ 'name': 'fred' });
	     * // => 'hello fred'
	     *
	     * // using the "escape" delimiter to escape HTML in data property values
	     * _.template('<b><%- value %></b>', { 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // using the "evaluate" delimiter to generate HTML
	     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
	     * _.template(list, { 'people': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
	     * _.template('hello ${ name }', { 'name': 'pebbles' });
	     * // => 'hello pebbles'
	     *
	     * // using the internal `print` function in "evaluate" delimiters
	     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // using a custom template delimiters
	     * _.templateSettings = {
	     *   'interpolate': /{{([\s\S]+?)}}/g
	     * };
	     *
	     * _.template('hello {{ name }}!', { 'name': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // using the `imports` option to import jQuery
	     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
	     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // using the `sourceURL` option to specify a custom sourceURL for the template
	     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
	     *
	     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
	     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     *   var __t, __p = '', __e = _.escape;
	     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
	     *   return __p;
	     * }
	     *
	     * // using the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and a stack trace
	     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(text, data, options) {
	      // based on John Resig's `tmpl` implementation
	      // http://ejohn.org/blog/javascript-micro-templating/
	      // and Laura Doktorova's doT.js
	      // https://github.com/olado/doT
	      var settings = lodash.templateSettings;
	      text = String(text || '');

	      // avoid missing dependencies when `iteratorTemplate` is not defined
	      options = defaults({}, options, settings);

	      var imports = defaults({}, options.imports, settings.imports),
	          importsKeys = keys(imports),
	          importsValues = values(imports);

	      var isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // compile the regexp to match each delimiter
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // escape characters that cannot be included in string literals
	        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // replace delimiters with snippets
	        if (escapeValue) {
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // the JS engine embedded in Adobe products requires returning the `match`
	        // string in order to produce the correct `offset` value
	        return match;
	      });

	      source += "';\n";

	      // if `variable` is not specified, wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain
	      var variable = options.variable,
	          hasVariable = variable;

	      if (!hasVariable) {
	        variable = 'obj';
	        source = 'with (' + variable + ') {\n' + source + '\n}\n';
	      }
	      // cleanup code by stripping empty strings
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // frame code as the function body
	      source = 'function(' + variable + ') {\n' +
	        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
	        "var __t, __p = '', __e = _.escape" +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      // Use a sourceURL for easier debugging.
	      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
	      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

	      try {
	        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
	      } catch(e) {
	        e.source = source;
	        throw e;
	      }
	      if (data) {
	        return result(data);
	      }
	      // provide the compiled function's source by its `toString` method, in
	      // supported environments, or the `source` property as a convenience for
	      // inlining compiled templates during the build process
	      result.source = source;
	      return result;
	    }

	    /**
	     * Executes the callback `n` times, returning an array of the results
	     * of each callback execution. The callback is bound to `thisArg` and invoked
	     * with one argument; (index).
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {number} n The number of times to execute the callback.
	     * @param {Function} callback The function called per iteration.
	     * @param {*} [thisArg] The `this` binding of `callback`.
	     * @returns {Array} Returns an array of the results of each `callback` execution.
	     * @example
	     *
	     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
	     * // => [3, 6, 4]
	     *
	     * _.times(3, function(n) { mage.castSpell(n); });
	     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
	     *
	     * _.times(3, function(n) { this.cast(n); }, mage);
	     * // => also calls `mage.castSpell(n)` three times
	     */
	    function times(n, callback, thisArg) {
	      n = (n = +n) > -1 ? n : 0;
	      var index = -1,
	          result = Array(n);

	      callback = baseCreateCallback(callback, thisArg, 1);
	      while (++index < n) {
	        result[index] = callback(index);
	      }
	      return result;
	    }

	    /**
	     * The inverse of `_.escape` this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
	     * corresponding characters.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {string} string The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('Fred, Barney &amp; Pebbles');
	     * // => 'Fred, Barney & Pebbles'
	     */
	    function unescape(string) {
	      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
	    }

	    /**
	     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
	     *
	     * @static
	     * @memberOf _
	     * @category Utilities
	     * @param {string} [prefix] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return String(prefix == null ? '' : prefix) + id;
	    }

	    /*--------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object that wraps the given value with explicit
	     * method chaining enabled.
	     *
	     * @static
	     * @memberOf _
	     * @category Chaining
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney',  'age': 36 },
	     *   { 'name': 'fred',    'age': 40 },
	     *   { 'name': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _.chain(characters)
	     *     .sortBy('age')
	     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
	     *     .first()
	     *     .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      value = new lodashWrapper(value);
	      value.__chain__ = true;
	      return value;
	    }

	    /**
	     * Invokes `interceptor` with the `value` as the first argument and then
	     * returns `value`. The purpose of this method is to "tap into" a method
	     * chain in order to perform operations on intermediate results within
	     * the chain.
	     *
	     * @static
	     * @memberOf _
	     * @category Chaining
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3, 4])
	     *  .tap(function(array) { array.pop(); })
	     *  .reverse()
	     *  .value();
	     * // => [3, 2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * Enables explicit method chaining on the wrapper object.
	     *
	     * @name chain
	     * @memberOf _
	     * @category Chaining
	     * @returns {*} Returns the wrapper object.
	     * @example
	     *
	     * var characters = [
	     *   { 'name': 'barney', 'age': 36 },
	     *   { 'name': 'fred',   'age': 40 }
	     * ];
	     *
	     * // without explicit chaining
	     * _(characters).first();
	     * // => { 'name': 'barney', 'age': 36 }
	     *
	     * // with explicit chaining
	     * _(characters).chain()
	     *   .first()
	     *   .pick('age')
	     *   .value();
	     * // => { 'age': 36 }
	     */
	    function wrapperChain() {
	      this.__chain__ = true;
	      return this;
	    }

	    /**
	     * Produces the `toString` result of the wrapped value.
	     *
	     * @name toString
	     * @memberOf _
	     * @category Chaining
	     * @returns {string} Returns the string result.
	     * @example
	     *
	     * _([1, 2, 3]).toString();
	     * // => '1,2,3'
	     */
	    function wrapperToString() {
	      return String(this.__wrapped__);
	    }

	    /**
	     * Extracts the wrapped value.
	     *
	     * @name valueOf
	     * @memberOf _
	     * @alias value
	     * @category Chaining
	     * @returns {*} Returns the wrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).valueOf();
	     * // => [1, 2, 3]
	     */
	    function wrapperValueOf() {
	      return this.__wrapped__;
	    }

	    /*--------------------------------------------------------------------------*/

	    // add functions that return wrapped values when chaining
	    lodash.after = after;
	    lodash.assign = assign;
	    lodash.at = at;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.chain = chain;
	    lodash.compact = compact;
	    lodash.compose = compose;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.createCallback = createCallback;
	    lodash.curry = curry;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.filter = filter;
	    lodash.flatten = flatten;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.functions = functions;
	    lodash.groupBy = groupBy;
	    lodash.indexBy = indexBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.invert = invert;
	    lodash.invoke = invoke;
	    lodash.keys = keys;
	    lodash.map = map;
	    lodash.mapValues = mapValues;
	    lodash.max = max;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.min = min;
	    lodash.omit = omit;
	    lodash.once = once;
	    lodash.pairs = pairs;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.pick = pick;
	    lodash.pluck = pluck;
	    lodash.property = property;
	    lodash.pull = pull;
	    lodash.range = range;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.shuffle = shuffle;
	    lodash.sortBy = sortBy;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.times = times;
	    lodash.toArray = toArray;
	    lodash.transform = transform;
	    lodash.union = union;
	    lodash.uniq = uniq;
	    lodash.values = values;
	    lodash.where = where;
	    lodash.without = without;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;

	    // add aliases
	    lodash.collect = map;
	    lodash.drop = rest;
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.extend = assign;
	    lodash.methods = functions;
	    lodash.object = zipObject;
	    lodash.select = filter;
	    lodash.tail = rest;
	    lodash.unique = uniq;
	    lodash.unzip = zip;

	    // add functions to `lodash.prototype`
	    mixin(lodash);

	    /*--------------------------------------------------------------------------*/

	    // add functions that return unwrapped values when chaining
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.contains = contains;
	    lodash.escape = escape;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.has = has;
	    lodash.identity = identity;
	    lodash.indexOf = indexOf;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isBoolean = isBoolean;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isNaN = isNaN;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isString = isString;
	    lodash.isUndefined = isUndefined;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.mixin = mixin;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.result = result;
	    lodash.runInContext = runInContext;
	    lodash.size = size;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.template = template;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;

	    // add aliases
	    lodash.all = every;
	    lodash.any = some;
	    lodash.detect = find;
	    lodash.findWhere = find;
	    lodash.foldl = reduce;
	    lodash.foldr = reduceRight;
	    lodash.include = contains;
	    lodash.inject = reduce;

	    mixin(function() {
	      var source = {}
	      forOwn(lodash, function(func, methodName) {
	        if (!lodash.prototype[methodName]) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }(), false);

	    /*--------------------------------------------------------------------------*/

	    // add functions capable of returning wrapped and unwrapped values when chaining
	    lodash.first = first;
	    lodash.last = last;
	    lodash.sample = sample;

	    // add aliases
	    lodash.take = first;
	    lodash.head = first;

	    forOwn(lodash, function(func, methodName) {
	      var callbackable = methodName !== 'sample';
	      if (!lodash.prototype[methodName]) {
	        lodash.prototype[methodName]= function(n, guard) {
	          var chainAll = this.__chain__,
	              result = func(this.__wrapped__, n, guard);

	          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
	            ? result
	            : new lodashWrapper(result, chainAll);
	        };
	      }
	    });

	    /*--------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type string
	     */
	    lodash.VERSION = '2.4.1';

	    // add "Chaining" functions to the wrapper
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.toString = wrapperToString;
	    lodash.prototype.value = wrapperValueOf;
	    lodash.prototype.valueOf = wrapperValueOf;

	    // add `Array` functions that return unwrapped values
	    baseEach(['join', 'pop', 'shift'], function(methodName) {
	      var func = arrayRef[methodName];
	      lodash.prototype[methodName] = function() {
	        var chainAll = this.__chain__,
	            result = func.apply(this.__wrapped__, arguments);

	        return chainAll
	          ? new lodashWrapper(result, chainAll)
	          : result;
	      };
	    });

	    // add `Array` functions that return the existing wrapped value
	    baseEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
	      var func = arrayRef[methodName];
	      lodash.prototype[methodName] = function() {
	        func.apply(this.__wrapped__, arguments);
	        return this;
	      };
	    });

	    // add `Array` functions that return new wrapped values
	    baseEach(['concat', 'slice', 'splice'], function(methodName) {
	      var func = arrayRef[methodName];
	      lodash.prototype[methodName] = function() {
	        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
	      };
	    });

	    // avoid array-like object bugs with `Array#shift` and `Array#splice`
	    // in IE < 9, Firefox < 10, Narwhal, and RingoJS
	    if (!support.spliceObjects) {
	      baseEach(['pop', 'shift', 'splice'], function(methodName) {
	        var func = arrayRef[methodName],
	            isSplice = methodName == 'splice';

	        lodash.prototype[methodName] = function() {
	          var chainAll = this.__chain__,
	              value = this.__wrapped__,
	              result = func.apply(value, arguments);

	          if (value.length === 0) {
	            delete value[0];
	          }
	          return (chainAll || isSplice)
	            ? new lodashWrapper(result, chainAll)
	            : result;
	        };
	      });
	    }

	    return lodash;
	  }

	  /*--------------------------------------------------------------------------*/

	  // expose Lo-Dash
	  var _ = runInContext();

	  // some AMD build optimizers like r.js check for condition patterns like the following:
	  if (true) {
	    // Expose Lo-Dash to the global object even when an AMD loader is present in
	    // case Lo-Dash is loaded with a RequireJS shim config.
	    // See http://requirejs.org/docs/api.html#config-shim
	    root._ = _;

	    // define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // check for `exports` after `define` in case a build optimizer adds an `exports` object
	  else if (freeExports && freeModule) {
	    // in Node.js or RingoJS
	    if (moduleExports) {
	      (freeModule.exports = _)._ = _;
	    }
	    // in Narwhal or Rhino -require
	    else {
	      freeExports._ = _;
	    }
	  }
	  else {
	    // in a browser or Rhino
	    root._ = _;
	  }
	}.call(this));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(135)(module), (function() { return this; }())))

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;

	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;

	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;

	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;

	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;

	  if (!this._events)
	    this._events = {};

	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        throw TypeError('Uncaught, unspecified "error" event.');
	      }
	      return false;
	    }
	  }

	  handler = this._events[type];

	  if (isUndefined(handler))
	    return false;

	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        len = arguments.length;
	        args = new Array(len - 1);
	        for (i = 1; i < len; i++)
	          args[i - 1] = arguments[i];
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    len = arguments.length;
	    args = new Array(len - 1);
	    for (i = 1; i < len; i++)
	      args[i - 1] = arguments[i];

	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }

	  return true;
	};

	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events)
	    this._events = {};

	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);

	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];

	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    var m;
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }

	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }

	  return this;
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  var fired = false;

	  function g() {
	    this.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }

	  g.listener = listener;
	  this.on(type, g);

	  return this;
	};

	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events || !this._events[type])
	    return this;

	  list = this._events[type];
	  length = list.length;
	  position = -1;

	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);

	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }

	    if (position < 0)
	      return this;

	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }

	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;

	  if (!this._events)
	    return this;

	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }

	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }

	  listeners = this._events[type];

	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];

	  return this;
	};

	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};

	EventEmitter.listenerCount = function(emitter, type) {
	  var ret;
	  if (!emitter._events || !emitter._events[type])
	    ret = 0;
	  else if (isFunction(emitter._events[type]))
	    ret = 1;
	  else
	    ret = emitter._events[type].length;
	  return ret;
	};

	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function isNumber(arg) {
	  return typeof arg === 'number';
	}

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./ar": 65,
		"./ar-ma": 64,
		"./ar-ma.js": 64,
		"./ar.js": 65,
		"./bg": 66,
		"./bg.js": 66,
		"./br": 67,
		"./br.js": 67,
		"./bs": 68,
		"./bs.js": 68,
		"./ca": 69,
		"./ca.js": 69,
		"./cs": 70,
		"./cs.js": 70,
		"./cv": 71,
		"./cv.js": 71,
		"./cy": 72,
		"./cy.js": 72,
		"./da": 73,
		"./da.js": 73,
		"./de": 74,
		"./de.js": 74,
		"./el": 75,
		"./el.js": 75,
		"./en-au": 76,
		"./en-au.js": 76,
		"./en-ca": 77,
		"./en-ca.js": 77,
		"./en-gb": 78,
		"./en-gb.js": 78,
		"./eo": 79,
		"./eo.js": 79,
		"./es": 80,
		"./es.js": 80,
		"./et": 81,
		"./et.js": 81,
		"./eu": 82,
		"./eu.js": 82,
		"./fa": 83,
		"./fa.js": 83,
		"./fi": 84,
		"./fi.js": 84,
		"./fo": 85,
		"./fo.js": 85,
		"./fr": 87,
		"./fr-ca": 86,
		"./fr-ca.js": 86,
		"./fr.js": 87,
		"./gl": 88,
		"./gl.js": 88,
		"./he": 89,
		"./he.js": 89,
		"./hi": 90,
		"./hi.js": 90,
		"./hr": 91,
		"./hr.js": 91,
		"./hu": 92,
		"./hu.js": 92,
		"./hy-am": 93,
		"./hy-am.js": 93,
		"./id": 94,
		"./id.js": 94,
		"./is": 95,
		"./is.js": 95,
		"./it": 96,
		"./it.js": 96,
		"./ja": 97,
		"./ja.js": 97,
		"./ka": 98,
		"./ka.js": 98,
		"./km": 99,
		"./km.js": 99,
		"./ko": 100,
		"./ko.js": 100,
		"./lb": 101,
		"./lb.js": 101,
		"./lt": 102,
		"./lt.js": 102,
		"./lv": 103,
		"./lv.js": 103,
		"./mk": 104,
		"./mk.js": 104,
		"./ml": 105,
		"./ml.js": 105,
		"./mr": 106,
		"./mr.js": 106,
		"./ms-my": 107,
		"./ms-my.js": 107,
		"./nb": 108,
		"./nb.js": 108,
		"./ne": 109,
		"./ne.js": 109,
		"./nl": 110,
		"./nl.js": 110,
		"./nn": 111,
		"./nn.js": 111,
		"./pl": 112,
		"./pl.js": 112,
		"./pt": 114,
		"./pt-br": 113,
		"./pt-br.js": 113,
		"./pt.js": 114,
		"./ro": 115,
		"./ro.js": 115,
		"./ru": 116,
		"./ru.js": 116,
		"./sk": 117,
		"./sk.js": 117,
		"./sl": 118,
		"./sl.js": 118,
		"./sq": 119,
		"./sq.js": 119,
		"./sr": 121,
		"./sr-cyr": 120,
		"./sr-cyr.js": 120,
		"./sr.js": 121,
		"./sv": 122,
		"./sv.js": 122,
		"./ta": 123,
		"./ta.js": 123,
		"./th": 124,
		"./th.js": 124,
		"./tl-ph": 125,
		"./tl-ph.js": 125,
		"./tr": 126,
		"./tr.js": 126,
		"./tzm": 128,
		"./tzm-la": 127,
		"./tzm-la.js": 127,
		"./tzm.js": 128,
		"./uk": 129,
		"./uk.js": 129,
		"./uz": 130,
		"./uz.js": 130,
		"./vi": 131,
		"./vi.js": 131,
		"./zh-cn": 132,
		"./zh-cn.js": 132,
		"./zh-tw": 133,
		"./zh-tw.js": 133
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	(function(exports){
	crossfilter.version = "1.3.7";
	function crossfilter_identity(d) {
	  return d;
	}
	crossfilter.permute = permute;

	function permute(array, index) {
	  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {
	    copy[i] = array[index[i]];
	  }
	  return copy;
	}
	var bisect = crossfilter.bisect = bisect_by(crossfilter_identity);

	bisect.by = bisect_by;

	function bisect_by(f) {

	  // Locate the insertion point for x in a to maintain sorted order. The
	  // arguments lo and hi may be used to specify a subset of the array which
	  // should be considered; by default the entire array is used. If x is already
	  // present in a, the insertion point will be before (to the left of) any
	  // existing entries. The return value is suitable for use as the first
	  // argument to `array.splice` assuming that a is already sorted.
	  //
	  // The returned insertion point i partitions the array a into two halves so
	  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in
	  // a[i:hi] for the right side.
	  function bisectLeft(a, x, lo, hi) {
	    while (lo < hi) {
	      var mid = lo + hi >>> 1;
	      if (f(a[mid]) < x) lo = mid + 1;
	      else hi = mid;
	    }
	    return lo;
	  }

	  // Similar to bisectLeft, but returns an insertion point which comes after (to
	  // the right of) any existing entries of x in a.
	  //
	  // The returned insertion point i partitions the array into two halves so that
	  // all v <= x for v in a[lo:i] for the left side and all v > x for v in
	  // a[i:hi] for the right side.
	  function bisectRight(a, x, lo, hi) {
	    while (lo < hi) {
	      var mid = lo + hi >>> 1;
	      if (x < f(a[mid])) hi = mid;
	      else lo = mid + 1;
	    }
	    return lo;
	  }

	  bisectRight.right = bisectRight;
	  bisectRight.left = bisectLeft;
	  return bisectRight;
	}
	var heap = crossfilter.heap = heap_by(crossfilter_identity);

	heap.by = heap_by;

	function heap_by(f) {

	  // Builds a binary heap within the specified array a[lo:hi]. The heap has the
	  // property such that the parent a[lo+i] is always less than or equal to its
	  // two children: a[lo+2*i+1] and a[lo+2*i+2].
	  function heap(a, lo, hi) {
	    var n = hi - lo,
	        i = (n >>> 1) + 1;
	    while (--i > 0) sift(a, i, n, lo);
	    return a;
	  }

	  // Sorts the specified array a[lo:hi] in descending order, assuming it is
	  // already a heap.
	  function sort(a, lo, hi) {
	    var n = hi - lo,
	        t;
	    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);
	    return a;
	  }

	  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous
	  // slice of array a[lo:lo+n]. This method can also be used to update the heap
	  // incrementally, without incurring the full cost of reconstructing the heap.
	  function sift(a, i, n, lo) {
	    var d = a[--lo + i],
	        x = f(d),
	        child;
	    while ((child = i << 1) <= n) {
	      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;
	      if (x <= f(a[lo + child])) break;
	      a[lo + i] = a[lo + child];
	      i = child;
	    }
	    a[lo + i] = d;
	  }

	  heap.sort = sort;
	  return heap;
	}
	var heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);

	heapselect.by = heapselect_by;

	function heapselect_by(f) {
	  var heap = heap_by(f);

	  // Returns a new array containing the top k elements in the array a[lo:hi].
	  // The returned array is not sorted, but maintains the heap property. If k is
	  // greater than hi - lo, then fewer than k elements will be returned. The
	  // order of elements in a is unchanged by this operation.
	  function heapselect(a, lo, hi, k) {
	    var queue = new Array(k = Math.min(hi - lo, k)),
	        min,
	        i,
	        x,
	        d;

	    for (i = 0; i < k; ++i) queue[i] = a[lo++];
	    heap(queue, 0, k);

	    if (lo < hi) {
	      min = f(queue[0]);
	      do {
	        if (x = f(d = a[lo]) > min) {
	          queue[0] = d;
	          min = f(heap(queue, 0, k)[0]);
	        }
	      } while (++lo < hi);
	    }

	    return queue;
	  }

	  return heapselect;
	}
	var insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);

	insertionsort.by = insertionsort_by;

	function insertionsort_by(f) {

	  function insertionsort(a, lo, hi) {
	    for (var i = lo + 1; i < hi; ++i) {
	      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {
	        a[j] = a[j - 1];
	      }
	      a[j] = t;
	    }
	    return a;
	  }

	  return insertionsort;
	}
	// Algorithm designed by Vladimir Yaroslavskiy.
	// Implementation based on the Dart project; see lib/dart/LICENSE for details.

	var quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);

	quicksort.by = quicksort_by;

	function quicksort_by(f) {
	  var insertionsort = insertionsort_by(f);

	  function sort(a, lo, hi) {
	    return (hi - lo < quicksort_sizeThreshold
	        ? insertionsort
	        : quicksort)(a, lo, hi);
	  }

	  function quicksort(a, lo, hi) {
	    // Compute the two pivots by looking at 5 elements.
	    var sixth = (hi - lo) / 6 | 0,
	        i1 = lo + sixth,
	        i5 = hi - 1 - sixth,
	        i3 = lo + hi - 1 >> 1,  // The midpoint.
	        i2 = i3 - sixth,
	        i4 = i3 + sixth;

	    var e1 = a[i1], x1 = f(e1),
	        e2 = a[i2], x2 = f(e2),
	        e3 = a[i3], x3 = f(e3),
	        e4 = a[i4], x4 = f(e4),
	        e5 = a[i5], x5 = f(e5);

	    var t;

	    // Sort the selected 5 elements using a sorting network.
	    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;
	    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;
	    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;
	    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;
	    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;
	    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;
	    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;
	    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;
	    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;

	    var pivot1 = e2, pivotValue1 = x2,
	        pivot2 = e4, pivotValue2 = x4;

	    // e2 and e4 have been saved in the pivot variables. They will be written
	    // back, once the partitioning is finished.
	    a[i1] = e1;
	    a[i2] = a[lo];
	    a[i3] = e3;
	    a[i4] = a[hi - 1];
	    a[i5] = e5;

	    var less = lo + 1,   // First element in the middle partition.
	        great = hi - 2;  // Last element in the middle partition.

	    // Note that for value comparison, <, <=, >= and > coerce to a primitive via
	    // Object.prototype.valueOf; == and === do not, so in order to be consistent
	    // with natural order (such as for Date objects), we must do two compares.
	    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;
	    if (pivotsEqual) {

	      // Degenerated case where the partitioning becomes a dutch national flag
	      // problem.
	      //
	      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]
	      //  ^             ^          ^             ^            ^
	      // left         less         k           great         right
	      //
	      // a[left] and a[right] are undefined and are filled after the
	      // partitioning.
	      //
	      // Invariants:
	      //   1) for x in ]left, less[ : x < pivot.
	      //   2) for x in [less, k[ : x == pivot.
	      //   3) for x in ]great, right[ : x > pivot.
	      for (var k = less; k <= great; ++k) {
	        var ek = a[k], xk = f(ek);
	        if (xk < pivotValue1) {
	          if (k !== less) {
	            a[k] = a[less];
	            a[less] = ek;
	          }
	          ++less;
	        } else if (xk > pivotValue1) {

	          // Find the first element <= pivot in the range [k - 1, great] and
	          // put [:ek:] there. We know that such an element must exist:
	          // When k == less, then el3 (which is equal to pivot) lies in the
	          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.
	          // Note that in the latter case invariant 2 will be violated for a
	          // short amount of time. The invariant will be restored when the
	          // pivots are put into their final positions.
	          while (true) {
	            var greatValue = f(a[great]);
	            if (greatValue > pivotValue1) {
	              great--;
	              // This is the only location in the while-loop where a new
	              // iteration is started.
	              continue;
	            } else if (greatValue < pivotValue1) {
	              // Triple exchange.
	              a[k] = a[less];
	              a[less++] = a[great];
	              a[great--] = ek;
	              break;
	            } else {
	              a[k] = a[great];
	              a[great--] = ek;
	              // Note: if great < k then we will exit the outer loop and fix
	              // invariant 2 (which we just violated).
	              break;
	            }
	          }
	        }
	      }
	    } else {

	      // We partition the list into three parts:
	      //  1. < pivot1
	      //  2. >= pivot1 && <= pivot2
	      //  3. > pivot2
	      //
	      // During the loop we have:
	      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]
	      //  ^            ^                        ^              ^             ^
	      // left         less                     k              great        right
	      //
	      // a[left] and a[right] are undefined and are filled after the
	      // partitioning.
	      //
	      // Invariants:
	      //   1. for x in ]left, less[ : x < pivot1
	      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2
	      //   3. for x in ]great, right[ : x > pivot2
	      for (var k = less; k <= great; k++) {
	        var ek = a[k], xk = f(ek);
	        if (xk < pivotValue1) {
	          if (k !== less) {
	            a[k] = a[less];
	            a[less] = ek;
	          }
	          ++less;
	        } else {
	          if (xk > pivotValue2) {
	            while (true) {
	              var greatValue = f(a[great]);
	              if (greatValue > pivotValue2) {
	                great--;
	                if (great < k) break;
	                // This is the only location inside the loop where a new
	                // iteration is started.
	                continue;
	              } else {
	                // a[great] <= pivot2.
	                if (greatValue < pivotValue1) {
	                  // Triple exchange.
	                  a[k] = a[less];
	                  a[less++] = a[great];
	                  a[great--] = ek;
	                } else {
	                  // a[great] >= pivot1.
	                  a[k] = a[great];
	                  a[great--] = ek;
	                }
	                break;
	              }
	            }
	          }
	        }
	      }
	    }

	    // Move pivots into their final positions.
	    // We shrunk the list from both sides (a[left] and a[right] have
	    // meaningless values in them) and now we move elements from the first
	    // and third partition into these locations so that we can store the
	    // pivots.
	    a[lo] = a[less - 1];
	    a[less - 1] = pivot1;
	    a[hi - 1] = a[great + 1];
	    a[great + 1] = pivot2;

	    // The list is now partitioned into three partitions:
	    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]
	    //  ^            ^                        ^             ^
	    // left         less                     great        right

	    // Recursive descent. (Don't include the pivot values.)
	    sort(a, lo, less - 1);
	    sort(a, great + 2, hi);

	    if (pivotsEqual) {
	      // All elements in the second partition are equal to the pivot. No
	      // need to sort them.
	      return a;
	    }

	    // In theory it should be enough to call _doSort recursively on the second
	    // partition.
	    // The Android source however removes the pivot elements from the recursive
	    // call if the second partition is too large (more than 2/3 of the list).
	    if (less < i1 && great > i5) {
	      var lessValue, greatValue;
	      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;
	      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;

	      // Copy paste of the previous 3-way partitioning with adaptions.
	      //
	      // We partition the list into three parts:
	      //  1. == pivot1
	      //  2. > pivot1 && < pivot2
	      //  3. == pivot2
	      //
	      // During the loop we have:
	      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]
	      //              ^                      ^              ^
	      //            less                     k              great
	      //
	      // Invariants:
	      //   1. for x in [ *, less[ : x == pivot1
	      //   2. for x in [less, k[ : pivot1 < x && x < pivot2
	      //   3. for x in ]great, * ] : x == pivot2
	      for (var k = less; k <= great; k++) {
	        var ek = a[k], xk = f(ek);
	        if (xk <= pivotValue1 && xk >= pivotValue1) {
	          if (k !== less) {
	            a[k] = a[less];
	            a[less] = ek;
	          }
	          less++;
	        } else {
	          if (xk <= pivotValue2 && xk >= pivotValue2) {
	            while (true) {
	              var greatValue = f(a[great]);
	              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {
	                great--;
	                if (great < k) break;
	                // This is the only location inside the loop where a new
	                // iteration is started.
	                continue;
	              } else {
	                // a[great] < pivot2.
	                if (greatValue < pivotValue1) {
	                  // Triple exchange.
	                  a[k] = a[less];
	                  a[less++] = a[great];
	                  a[great--] = ek;
	                } else {
	                  // a[great] == pivot1.
	                  a[k] = a[great];
	                  a[great--] = ek;
	                }
	                break;
	              }
	            }
	          }
	        }
	      }
	    }

	    // The second partition has now been cleared of pivot elements and looks
	    // as follows:
	    // [  *  |  > pivot1 && < pivot2  | * ]
	    //        ^                      ^
	    //       less                  great
	    // Sort the second partition using recursive descent.

	    // The second partition looks as follows:
	    // [  *  |  >= pivot1 && <= pivot2  | * ]
	    //        ^                        ^
	    //       less                    great
	    // Simply sort it by recursive descent.

	    return sort(a, less, great + 1);
	  }

	  return sort;
	}

	var quicksort_sizeThreshold = 32;
	var crossfilter_array8 = crossfilter_arrayUntyped,
	    crossfilter_array16 = crossfilter_arrayUntyped,
	    crossfilter_array32 = crossfilter_arrayUntyped,
	    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,
	    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;

	if (typeof Uint8Array !== "undefined") {
	  crossfilter_array8 = function(n) { return new Uint8Array(n); };
	  crossfilter_array16 = function(n) { return new Uint16Array(n); };
	  crossfilter_array32 = function(n) { return new Uint32Array(n); };

	  crossfilter_arrayLengthen = function(array, length) {
	    if (array.length >= length) return array;
	    var copy = new array.constructor(length);
	    copy.set(array);
	    return copy;
	  };

	  crossfilter_arrayWiden = function(array, width) {
	    var copy;
	    switch (width) {
	      case 16: copy = crossfilter_array16(array.length); break;
	      case 32: copy = crossfilter_array32(array.length); break;
	      default: throw new Error("invalid array width!");
	    }
	    copy.set(array);
	    return copy;
	  };
	}

	function crossfilter_arrayUntyped(n) {
	  var array = new Array(n), i = -1;
	  while (++i < n) array[i] = 0;
	  return array;
	}

	function crossfilter_arrayLengthenUntyped(array, length) {
	  var n = array.length;
	  while (n < length) array[n++] = 0;
	  return array;
	}

	function crossfilter_arrayWidenUntyped(array, width) {
	  if (width > 32) throw new Error("invalid array width!");
	  return array;
	}
	function crossfilter_filterExact(bisect, value) {
	  return function(values) {
	    var n = values.length;
	    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];
	  };
	}

	function crossfilter_filterRange(bisect, range) {
	  var min = range[0],
	      max = range[1];
	  return function(values) {
	    var n = values.length;
	    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];
	  };
	}

	function crossfilter_filterAll(values) {
	  return [0, values.length];
	}
	function crossfilter_null() {
	  return null;
	}
	function crossfilter_zero() {
	  return 0;
	}
	function crossfilter_reduceIncrement(p) {
	  return p + 1;
	}

	function crossfilter_reduceDecrement(p) {
	  return p - 1;
	}

	function crossfilter_reduceAdd(f) {
	  return function(p, v) {
	    return p + +f(v);
	  };
	}

	function crossfilter_reduceSubtract(f) {
	  return function(p, v) {
	    return p - f(v);
	  };
	}
	exports.crossfilter = crossfilter;

	function crossfilter() {
	  var crossfilter = {
	    add: add,
	    remove: removeData,
	    dimension: dimension,
	    groupAll: groupAll,
	    size: size
	  };

	  var data = [], // the records
	      n = 0, // the number of records; data.length
	      m = 0, // a bit mask representing which dimensions are in use
	      M = 8, // number of dimensions that can fit in `filters`
	      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out
	      filterListeners = [], // when the filters change
	      dataListeners = [], // when data is added
	      removeDataListeners = []; // when data is removed

	  // Adds the specified new records to this crossfilter.
	  function add(newData) {
	    var n0 = n,
	        n1 = newData.length;

	    // If there's actually new data to add…
	    // Merge the new data into the existing data.
	    // Lengthen the filter bitset to handle the new records.
	    // Notify listeners (dimensions and groups) that new data is available.
	    if (n1) {
	      data = data.concat(newData);
	      filters = crossfilter_arrayLengthen(filters, n += n1);
	      dataListeners.forEach(function(l) { l(newData, n0, n1); });
	    }

	    return crossfilter;
	  }

	  // Removes all records that match the current filters.
	  function removeData() {
	    var newIndex = crossfilter_index(n, n),
	        removed = [];
	    for (var i = 0, j = 0; i < n; ++i) {
	      if (filters[i]) newIndex[i] = j++;
	      else removed.push(i);
	    }

	    // Remove all matching records from groups.
	    filterListeners.forEach(function(l) { l(0, [], removed); });

	    // Update indexes.
	    removeDataListeners.forEach(function(l) { l(newIndex); });

	    // Remove old filters and data by overwriting.
	    for (var i = 0, j = 0, k; i < n; ++i) {
	      if (k = filters[i]) {
	        if (i !== j) filters[j] = k, data[j] = data[i];
	        ++j;
	      }
	    }
	    data.length = j;
	    while (n > j) filters[--n] = 0;
	  }

	  // Adds a new dimension with the specified value accessor function.
	  function dimension(value) {
	    var dimension = {
	      filter: filter,
	      filterExact: filterExact,
	      filterRange: filterRange,
	      filterFunction: filterFunction,
	      filterAll: filterAll,
	      top: top,
	      bottom: bottom,
	      group: group,
	      groupAll: groupAll,
	      dispose: dispose,
	      remove: dispose // for backwards-compatibility
	    };

	    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000
	        zero = ~one, // inverted one, e.g., 11110111
	        values, // sorted, cached array
	        index, // value rank ↦ object id
	        newValues, // temporary array storing newly-added values
	        newIndex, // temporary array storing newly-added index
	        sort = quicksort_by(function(i) { return newValues[i]; }),
	        refilter = crossfilter_filterAll, // for recomputing filter
	        refilterFunction, // the custom filter function in use
	        indexListeners = [], // when data is added
	        dimensionGroups = [],
	        lo0 = 0,
	        hi0 = 0;

	    // Updating a dimension is a two-stage process. First, we must update the
	    // associated filters for the newly-added records. Once all dimensions have
	    // updated their filters, the groups are notified to update.
	    dataListeners.unshift(preAdd);
	    dataListeners.push(postAdd);

	    removeDataListeners.push(removeData);

	    // Incorporate any existing data into this dimension, and make sure that the
	    // filter bitset is wide enough to handle the new dimension.
	    m |= one;
	    if (M >= 32 ? !one : m & (1 << M) - 1) {
	      filters = crossfilter_arrayWiden(filters, M <<= 1);
	    }
	    preAdd(data, 0, n);
	    postAdd(data, 0, n);

	    // Incorporates the specified new records into this dimension.
	    // This function is responsible for updating filters, values, and index.
	    function preAdd(newData, n0, n1) {

	      // Permute new values into natural order using a sorted index.
	      newValues = newData.map(value);
	      newIndex = sort(crossfilter_range(n1), 0, n1);
	      newValues = permute(newValues, newIndex);

	      // Bisect newValues to determine which new records are selected.
	      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;
	      if (refilterFunction) {
	        for (i = 0; i < n1; ++i) {
	          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;
	        }
	      } else {
	        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;
	        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;
	      }

	      // If this dimension previously had no data, then we don't need to do the
	      // more expensive merge operation; use the new values and index as-is.
	      if (!n0) {
	        values = newValues;
	        index = newIndex;
	        lo0 = lo1;
	        hi0 = hi1;
	        return;
	      }

	      var oldValues = values,
	          oldIndex = index,
	          i0 = 0,
	          i1 = 0;

	      // Otherwise, create new arrays into which to merge new and old.
	      values = new Array(n);
	      index = crossfilter_index(n, n);

	      // Merge the old and new sorted values, and old and new index.
	      for (i = 0; i0 < n0 && i1 < n1; ++i) {
	        if (oldValues[i0] < newValues[i1]) {
	          values[i] = oldValues[i0];
	          index[i] = oldIndex[i0++];
	        } else {
	          values[i] = newValues[i1];
	          index[i] = newIndex[i1++] + n0;
	        }
	      }

	      // Add any remaining old values.
	      for (; i0 < n0; ++i0, ++i) {
	        values[i] = oldValues[i0];
	        index[i] = oldIndex[i0];
	      }

	      // Add any remaining new values.
	      for (; i1 < n1; ++i1, ++i) {
	        values[i] = newValues[i1];
	        index[i] = newIndex[i1] + n0;
	      }

	      // Bisect again to recompute lo0 and hi0.
	      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];
	    }

	    // When all filters have updated, notify index listeners of the new values.
	    function postAdd(newData, n0, n1) {
	      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });
	      newValues = newIndex = null;
	    }

	    function removeData(reIndex) {
	      for (var i = 0, j = 0, k; i < n; ++i) {
	        if (filters[k = index[i]]) {
	          if (i !== j) values[j] = values[i];
	          index[j] = reIndex[k];
	          ++j;
	        }
	      }
	      values.length = j;
	      while (j < n) index[j++] = 0;

	      // Bisect again to recompute lo0 and hi0.
	      var bounds = refilter(values);
	      lo0 = bounds[0], hi0 = bounds[1];
	    }

	    // Updates the selected values based on the specified bounds [lo, hi].
	    // This implementation is used by all the public filter methods.
	    function filterIndexBounds(bounds) {
	      var lo1 = bounds[0],
	          hi1 = bounds[1];

	      if (refilterFunction) {
	        refilterFunction = null;
	        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });
	        lo0 = lo1;
	        hi0 = hi1;
	        return dimension;
	      }

	      var i,
	          j,
	          k,
	          added = [],
	          removed = [];

	      // Fast incremental update based on previous lo index.
	      if (lo1 < lo0) {
	        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          added.push(k);
	        }
	      } else if (lo1 > lo0) {
	        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          removed.push(k);
	        }
	      }

	      // Fast incremental update based on previous hi index.
	      if (hi1 > hi0) {
	        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          added.push(k);
	        }
	      } else if (hi1 < hi0) {
	        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {
	          filters[k = index[i]] ^= one;
	          removed.push(k);
	        }
	      }

	      lo0 = lo1;
	      hi0 = hi1;
	      filterListeners.forEach(function(l) { l(one, added, removed); });
	      return dimension;
	    }

	    // Filters this dimension using the specified range, value, or null.
	    // If the range is null, this is equivalent to filterAll.
	    // If the range is an array, this is equivalent to filterRange.
	    // Otherwise, this is equivalent to filterExact.
	    function filter(range) {
	      return range == null
	          ? filterAll() : Array.isArray(range)
	          ? filterRange(range) : typeof range === "function"
	          ? filterFunction(range)
	          : filterExact(range);
	    }

	    // Filters this dimension to select the exact value.
	    function filterExact(value) {
	      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));
	    }

	    // Filters this dimension to select the specified range [lo, hi].
	    // The lower bound is inclusive, and the upper bound is exclusive.
	    function filterRange(range) {
	      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));
	    }

	    // Clears any filters on this dimension.
	    function filterAll() {
	      return filterIndexBounds((refilter = crossfilter_filterAll)(values));
	    }

	    // Filters this dimension using an arbitrary function.
	    function filterFunction(f) {
	      refilter = crossfilter_filterAll;

	      filterIndexFunction(refilterFunction = f);

	      lo0 = 0;
	      hi0 = n;

	      return dimension;
	    }

	    function filterIndexFunction(f) {
	      var i,
	          k,
	          x,
	          added = [],
	          removed = [];

	      for (i = 0; i < n; ++i) {
	        if (!(filters[k = index[i]] & one) ^ (x = f(values[i], i))) {
	          if (x) filters[k] &= zero, added.push(k);
	          else filters[k] |= one, removed.push(k);
	        }
	      }
	      filterListeners.forEach(function(l) { l(one, added, removed); });
	    }

	    // Returns the top K selected records based on this dimension's order.
	    // Note: observes this dimension's filter, unlike group and groupAll.
	    function top(k) {
	      var array = [],
	          i = hi0,
	          j;

	      while (--i >= lo0 && k > 0) {
	        if (!filters[j = index[i]]) {
	          array.push(data[j]);
	          --k;
	        }
	      }

	      return array;
	    }

	    // Returns the bottom K selected records based on this dimension's order.
	    // Note: observes this dimension's filter, unlike group and groupAll.
	    function bottom(k) {
	      var array = [],
	          i = lo0,
	          j;

	      while (i < hi0 && k > 0) {
	        if (!filters[j = index[i]]) {
	          array.push(data[j]);
	          --k;
	        }
	        i++;
	      }

	      return array;
	    }

	    // Adds a new group to this dimension, using the specified key function.
	    function group(key) {
	      var group = {
	        top: top,
	        all: all,
	        reduce: reduce,
	        reduceCount: reduceCount,
	        reduceSum: reduceSum,
	        order: order,
	        orderNatural: orderNatural,
	        size: size,
	        dispose: dispose,
	        remove: dispose // for backwards-compatibility
	      };

	      // Ensure that this group will be removed when the dimension is removed.
	      dimensionGroups.push(group);

	      var groups, // array of {key, value}
	          groupIndex, // object id ↦ group id
	          groupWidth = 8,
	          groupCapacity = crossfilter_capacity(groupWidth),
	          k = 0, // cardinality
	          select,
	          heap,
	          reduceAdd,
	          reduceRemove,
	          reduceInitial,
	          update = crossfilter_null,
	          reset = crossfilter_null,
	          resetNeeded = true;

	      if (arguments.length < 1) key = crossfilter_identity;

	      // The group listens to the crossfilter for when any dimension changes, so
	      // that it can update the associated reduce values. It must also listen to
	      // the parent dimension for when data is added, and compute new keys.
	      filterListeners.push(update);
	      indexListeners.push(add);
	      removeDataListeners.push(removeData);

	      // Incorporate any existing data into the grouping.
	      add(values, index, 0, n);

	      // Incorporates the specified new values into this group.
	      // This function is responsible for updating groups and groupIndex.
	      function add(newValues, newIndex, n0, n1) {
	        var oldGroups = groups,
	            reIndex = crossfilter_index(k, groupCapacity),
	            add = reduceAdd,
	            initial = reduceInitial,
	            k0 = k, // old cardinality
	            i0 = 0, // index of old group
	            i1 = 0, // index of new record
	            j, // object id
	            g0, // old group
	            x0, // old key
	            x1, // new key
	            g, // group to add
	            x; // key of group to add

	        // If a reset is needed, we don't need to update the reduce values.
	        if (resetNeeded) add = initial = crossfilter_null;

	        // Reset the new groups (k is a lower bound).
	        // Also, make sure that groupIndex exists and is long enough.
	        groups = new Array(k), k = 0;
	        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);

	        // Get the first old key (x0 of g0), if it exists.
	        if (k0) x0 = (g0 = oldGroups[0]).key;

	        // Find the first new key (x1), skipping NaN keys.
	        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;

	        // While new keys remain…
	        while (i1 < n1) {

	          // Determine the lesser of the two current keys; new and old.
	          // If there are no old keys remaining, then always add the new key.
	          if (g0 && x0 <= x1) {
	            g = g0, x = x0;

	            // Record the new index of the old group.
	            reIndex[i0] = k;

	            // Retrieve the next old key.
	            if (g0 = oldGroups[++i0]) x0 = g0.key;
	          } else {
	            g = {key: x1, value: initial()}, x = x1;
	          }

	          // Add the lesser group.
	          groups[k] = g;

	          // Add any selected records belonging to the added group, while
	          // advancing the new key and populating the associated group index.
	          while (!(x1 > x)) {
	            groupIndex[j = newIndex[i1] + n0] = k;
	            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);
	            if (++i1 >= n1) break;
	            x1 = key(newValues[i1]);
	          }

	          groupIncrement();
	        }

	        // Add any remaining old groups that were greater than all new keys.
	        // No incremental reduce is needed; these groups have no new records.
	        // Also record the new index of the old group.
	        while (i0 < k0) {
	          groups[reIndex[i0] = k] = oldGroups[i0++];
	          groupIncrement();
	        }

	        // If we added any new groups before any old groups,
	        // update the group index of all the old records.
	        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {
	          groupIndex[i0] = reIndex[groupIndex[i0]];
	        }

	        // Modify the update and reset behavior based on the cardinality.
	        // If the cardinality is less than or equal to one, then the groupIndex
	        // is not needed. If the cardinality is zero, then there are no records
	        // and therefore no groups to update or reset. Note that we also must
	        // change the registered listener to point to the new method.
	        j = filterListeners.indexOf(update);
	        if (k > 1) {
	          update = updateMany;
	          reset = resetMany;
	        } else {
	          if (k === 1) {
	            update = updateOne;
	            reset = resetOne;
	          } else {
	            update = crossfilter_null;
	            reset = crossfilter_null;
	          }
	          groupIndex = null;
	        }
	        filterListeners[j] = update;

	        // Count the number of added groups,
	        // and widen the group index as needed.
	        function groupIncrement() {
	          if (++k === groupCapacity) {
	            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);
	            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);
	            groupCapacity = crossfilter_capacity(groupWidth);
	          }
	        }
	      }

	      function removeData() {
	        if (k > 1) {
	          var oldK = k,
	              oldGroups = groups,
	              seenGroups = crossfilter_index(oldK, oldK);

	          // Filter out non-matches by copying matching group index entries to
	          // the beginning of the array.
	          for (var i = 0, j = 0; i < n; ++i) {
	            if (filters[i]) {
	              seenGroups[groupIndex[j] = groupIndex[i]] = 1;
	              ++j;
	            }
	          }

	          // Reassemble groups including only those groups that were referred
	          // to by matching group index entries.  Note the new group index in
	          // seenGroups.
	          groups = [], k = 0;
	          for (i = 0; i < oldK; ++i) {
	            if (seenGroups[i]) {
	              seenGroups[i] = k++;
	              groups.push(oldGroups[i]);
	            }
	          }

	          if (k > 1) {
	            // Reindex the group index using seenGroups to find the new index.
	            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];
	          } else {
	            groupIndex = null;
	          }
	          filterListeners[filterListeners.indexOf(update)] = k > 1
	              ? (reset = resetMany, update = updateMany)
	              : k === 1 ? (reset = resetOne, update = updateOne)
	              : reset = update = crossfilter_null;
	        } else if (k === 1) {
	          for (var i = 0; i < n; ++i) if (filters[i]) return;
	          groups = [], k = 0;
	          filterListeners[filterListeners.indexOf(update)] =
	          update = reset = crossfilter_null;
	        }
	      }

	      // Reduces the specified selected or deselected records.
	      // This function is only used when the cardinality is greater than 1.
	      function updateMany(filterOne, added, removed) {
	        if (filterOne === one || resetNeeded) return;

	        var i,
	            k,
	            n,
	            g;

	        // Add the added values.
	        for (i = 0, n = added.length; i < n; ++i) {
	          if (!(filters[k = added[i]] & zero)) {
	            g = groups[groupIndex[k]];
	            g.value = reduceAdd(g.value, data[k]);
	          }
	        }

	        // Remove the removed values.
	        for (i = 0, n = removed.length; i < n; ++i) {
	          if ((filters[k = removed[i]] & zero) === filterOne) {
	            g = groups[groupIndex[k]];
	            g.value = reduceRemove(g.value, data[k]);
	          }
	        }
	      }

	      // Reduces the specified selected or deselected records.
	      // This function is only used when the cardinality is 1.
	      function updateOne(filterOne, added, removed) {
	        if (filterOne === one || resetNeeded) return;

	        var i,
	            k,
	            n,
	            g = groups[0];

	        // Add the added values.
	        for (i = 0, n = added.length; i < n; ++i) {
	          if (!(filters[k = added[i]] & zero)) {
	            g.value = reduceAdd(g.value, data[k]);
	          }
	        }

	        // Remove the removed values.
	        for (i = 0, n = removed.length; i < n; ++i) {
	          if ((filters[k = removed[i]] & zero) === filterOne) {
	            g.value = reduceRemove(g.value, data[k]);
	          }
	        }
	      }

	      // Recomputes the group reduce values from scratch.
	      // This function is only used when the cardinality is greater than 1.
	      function resetMany() {
	        var i,
	            g;

	        // Reset all group values.
	        for (i = 0; i < k; ++i) {
	          groups[i].value = reduceInitial();
	        }

	        // Add any selected records.
	        for (i = 0; i < n; ++i) {
	          if (!(filters[i] & zero)) {
	            g = groups[groupIndex[i]];
	            g.value = reduceAdd(g.value, data[i]);
	          }
	        }
	      }

	      // Recomputes the group reduce values from scratch.
	      // This function is only used when the cardinality is 1.
	      function resetOne() {
	        var i,
	            g = groups[0];

	        // Reset the singleton group values.
	        g.value = reduceInitial();

	        // Add any selected records.
	        for (i = 0; i < n; ++i) {
	          if (!(filters[i] & zero)) {
	            g.value = reduceAdd(g.value, data[i]);
	          }
	        }
	      }

	      // Returns the array of group values, in the dimension's natural order.
	      function all() {
	        if (resetNeeded) reset(), resetNeeded = false;
	        return groups;
	      }

	      // Returns a new array containing the top K group values, in reduce order.
	      function top(k) {
	        var top = select(all(), 0, groups.length, k);
	        return heap.sort(top, 0, top.length);
	      }

	      // Sets the reduce behavior for this group to use the specified functions.
	      // This method lazily recomputes the reduce values, waiting until needed.
	      function reduce(add, remove, initial) {
	        reduceAdd = add;
	        reduceRemove = remove;
	        reduceInitial = initial;
	        resetNeeded = true;
	        return group;
	      }

	      // A convenience method for reducing by count.
	      function reduceCount() {
	        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);
	      }

	      // A convenience method for reducing by sum(value).
	      function reduceSum(value) {
	        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);
	      }

	      // Sets the reduce order, using the specified accessor.
	      function order(value) {
	        select = heapselect_by(valueOf);
	        heap = heap_by(valueOf);
	        function valueOf(d) { return value(d.value); }
	        return group;
	      }

	      // A convenience method for natural ordering by reduce value.
	      function orderNatural() {
	        return order(crossfilter_identity);
	      }

	      // Returns the cardinality of this group, irrespective of any filters.
	      function size() {
	        return k;
	      }

	      // Removes this group and associated event listeners.
	      function dispose() {
	        var i = filterListeners.indexOf(update);
	        if (i >= 0) filterListeners.splice(i, 1);
	        i = indexListeners.indexOf(add);
	        if (i >= 0) indexListeners.splice(i, 1);
	        i = removeDataListeners.indexOf(removeData);
	        if (i >= 0) removeDataListeners.splice(i, 1);
	        return group;
	      }

	      return reduceCount().orderNatural();
	    }

	    // A convenience function for generating a singleton group.
	    function groupAll() {
	      var g = group(crossfilter_null), all = g.all;
	      delete g.all;
	      delete g.top;
	      delete g.order;
	      delete g.orderNatural;
	      delete g.size;
	      g.value = function() { return all()[0].value; };
	      return g;
	    }

	    // Removes this dimension and associated groups and event listeners.
	    function dispose() {
	      dimensionGroups.forEach(function(group) { group.dispose(); });
	      var i = dataListeners.indexOf(preAdd);
	      if (i >= 0) dataListeners.splice(i, 1);
	      i = dataListeners.indexOf(postAdd);
	      if (i >= 0) dataListeners.splice(i, 1);
	      i = removeDataListeners.indexOf(removeData);
	      if (i >= 0) removeDataListeners.splice(i, 1);
	      for (i = 0; i < n; ++i) filters[i] &= zero;
	      m &= zero;
	      return dimension;
	    }

	    return dimension;
	  }

	  // A convenience method for groupAll on a dummy dimension.
	  // This implementation can be optimized since it always has cardinality 1.
	  function groupAll() {
	    var group = {
	      reduce: reduce,
	      reduceCount: reduceCount,
	      reduceSum: reduceSum,
	      value: value,
	      dispose: dispose,
	      remove: dispose // for backwards-compatibility
	    };

	    var reduceValue,
	        reduceAdd,
	        reduceRemove,
	        reduceInitial,
	        resetNeeded = true;

	    // The group listens to the crossfilter for when any dimension changes, so
	    // that it can update the reduce value. It must also listen to the parent
	    // dimension for when data is added.
	    filterListeners.push(update);
	    dataListeners.push(add);

	    // For consistency; actually a no-op since resetNeeded is true.
	    add(data, 0, n);

	    // Incorporates the specified new values into this group.
	    function add(newData, n0) {
	      var i;

	      if (resetNeeded) return;

	      // Add the added values.
	      for (i = n0; i < n; ++i) {
	        if (!filters[i]) {
	          reduceValue = reduceAdd(reduceValue, data[i]);
	        }
	      }
	    }

	    // Reduces the specified selected or deselected records.
	    function update(filterOne, added, removed) {
	      var i,
	          k,
	          n;

	      if (resetNeeded) return;

	      // Add the added values.
	      for (i = 0, n = added.length; i < n; ++i) {
	        if (!filters[k = added[i]]) {
	          reduceValue = reduceAdd(reduceValue, data[k]);
	        }
	      }

	      // Remove the removed values.
	      for (i = 0, n = removed.length; i < n; ++i) {
	        if (filters[k = removed[i]] === filterOne) {
	          reduceValue = reduceRemove(reduceValue, data[k]);
	        }
	      }
	    }

	    // Recomputes the group reduce value from scratch.
	    function reset() {
	      var i;

	      reduceValue = reduceInitial();

	      for (i = 0; i < n; ++i) {
	        if (!filters[i]) {
	          reduceValue = reduceAdd(reduceValue, data[i]);
	        }
	      }
	    }

	    // Sets the reduce behavior for this group to use the specified functions.
	    // This method lazily recomputes the reduce value, waiting until needed.
	    function reduce(add, remove, initial) {
	      reduceAdd = add;
	      reduceRemove = remove;
	      reduceInitial = initial;
	      resetNeeded = true;
	      return group;
	    }

	    // A convenience method for reducing by count.
	    function reduceCount() {
	      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);
	    }

	    // A convenience method for reducing by sum(value).
	    function reduceSum(value) {
	      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);
	    }

	    // Returns the computed reduce value.
	    function value() {
	      if (resetNeeded) reset(), resetNeeded = false;
	      return reduceValue;
	    }

	    // Removes this group and associated event listeners.
	    function dispose() {
	      var i = filterListeners.indexOf(update);
	      if (i >= 0) filterListeners.splice(i);
	      i = dataListeners.indexOf(add);
	      if (i >= 0) dataListeners.splice(i);
	      return group;
	    }

	    return reduceCount();
	  }

	  // Returns the number of records in this crossfilter, irrespective of any filters.
	  function size() {
	    return n;
	  }

	  return arguments.length
	      ? add(arguments[0])
	      : crossfilter;
	}

	// Returns an array of size n, big enough to store ids up to m.
	function crossfilter_index(n, m) {
	  return (m < 0x101
	      ? crossfilter_array8 : m < 0x10001
	      ? crossfilter_array16
	      : crossfilter_array32)(n);
	}

	// Constructs a new array of size n, with sequential values from 0 to n - 1.
	function crossfilter_range(n) {
	  var range = crossfilter_index(n, n);
	  for (var i = -1; ++i < n;) range[i] = i;
	  return range;
	}

	function crossfilter_capacity(w) {
	  return w === 8
	      ? 0x100 : w === 16
	      ? 0x10000
	      : 0x100000000;
	}
	})(typeof exports !== 'undefined' && exports || this);


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// shim for using process in browser

	var process = module.exports = {};

	process.nextTick = (function () {
	    var canSetImmediate = typeof window !== 'undefined'
	    && window.setImmediate;
	    var canPost = typeof window !== 'undefined'
	    && window.postMessage && window.addEventListener
	    ;

	    if (canSetImmediate) {
	        return function (f) { return window.setImmediate(f) };
	    }

	    if (canPost) {
	        var queue = [];
	        window.addEventListener('message', function (ev) {
	            var source = ev.source;
	            if ((source === window || source === null) && ev.data === 'process-tick') {
	                ev.stopPropagation();
	                if (queue.length > 0) {
	                    var fn = queue.shift();
	                    fn();
	                }
	            }
	        }, true);

	        return function nextTick(fn) {
	            queue.push(fn);
	            window.postMessage('process-tick', '*');
	        };
	    }

	    return function nextTick(fn) {
	        setTimeout(fn, 0);
	    };
	})();

	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	}

	// TODO(shtylman)
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Moroccan Arabic (ar-ma)
	// author : ElFadili Yassine : https://github.com/ElFadiliY
	// author : Abdel Said : https://github.com/abdelsaid

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ar-ma', {
	        months : "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
	        monthsShort : "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
	        weekdays : "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
	        weekdaysShort : "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
	        weekdaysMin : "ح_ن_ث_ر_خ_ج_س".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[اليوم على الساعة] LT",
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "في %s",
	            past : "منذ %s",
	            s : "ثوان",
	            m : "دقيقة",
	            mm : "%d دقائق",
	            h : "ساعة",
	            hh : "%d ساعات",
	            d : "يوم",
	            dd : "%d أيام",
	            M : "شهر",
	            MM : "%d أشهر",
	            y : "سنة",
	            yy : "%d سنوات"
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Arabic (ar)
	// author : Abdel Said : https://github.com/abdelsaid
	// changes in months, weekdays : Ahmed Elkhatib

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ar', {
	        months : "يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول".split("_"),
	        monthsShort : "يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول".split("_"),
	        weekdays : "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
	        weekdaysShort : "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
	        weekdaysMin : "ح_ن_ث_ر_خ_ج_س".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[اليوم على الساعة] LT",
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "في %s",
	            past : "منذ %s",
	            s : "ثوان",
	            m : "دقيقة",
	            mm : "%d دقائق",
	            h : "ساعة",
	            hh : "%d ساعات",
	            d : "يوم",
	            dd : "%d أيام",
	            M : "شهر",
	            MM : "%d أشهر",
	            y : "سنة",
	            yy : "%d سنوات"
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : bulgarian (bg)
	// author : Krasen Borisov : https://github.com/kraz

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('bg', {
	        months : "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
	        monthsShort : "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
	        weekdays : "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
	        weekdaysShort : "нед_пон_вто_сря_чет_пет_съб".split("_"),
	        weekdaysMin : "нд_пн_вт_ср_чт_пт_сб".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "D.MM.YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "след %s",
	            past : "преди %s",
	            s : "няколко секунди",
	            m : "минута",
	            mm : "%d минути",
	            h : "час",
	            hh : "%d часа",
	            d : "ден",
	            dd : "%d дни",
	            M : "месец",
	            MM : "%d месеца",
	            y : "година",
	            yy : "%d години"
	        },
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : breton (br)
	// author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': "munutenn",
	            'MM': "miz",
	            'dd': "devezh"
	        };
	        return number + ' ' + mutation(format[key], number);
	    }

	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }

	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }

	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }

	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    return moment.lang('br', {
	        months : "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
	        monthsShort : "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
	        weekdays : "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
	        weekdaysShort : "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
	        weekdaysMin : "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
	        longDateFormat : {
	            LT : "h[e]mm A",
	            L : "DD/MM/YYYY",
	            LL : "D [a viz] MMMM YYYY",
	            LLL : "D [a viz] MMMM YYYY LT",
	            LLLL : "dddd, D [a viz] MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "a-benn %s",
	            past : "%s 'zo",
	            s : "un nebeud segondennoù",
	            m : "ur vunutenn",
	            mm : relativeTimeWithMutation,
	            h : "un eur",
	            hh : "%d eur",
	            d : "un devezh",
	            dd : relativeTimeWithMutation,
	            M : "ur miz",
	            MM : relativeTimeWithMutation,
	            y : "ur bloaz",
	            yy : specialMutationForYears
	        },
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : bosnian (bs)
	// author : Nedim Cholich : https://github.com/frontyard
	// based on (hr) translation by Bojan Marković

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    function translate(number, withoutSuffix, key) {
	        var result = number + " ";
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    return moment.lang('bs', {
			months : "januar_februar_mart_april_maj_juni_juli_avgust_septembar_oktobar_novembar_decembar".split("_"),
			monthsShort : "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
	        weekdays : "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
	        weekdaysShort : "ned._pon._uto._sri._čet._pet._sub.".split("_"),
	        weekdaysMin : "ne_po_ut_sr_če_pe_su".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD. MM. YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY LT",
	            LLLL : "dddd, D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "za %s",
	            past   : "prije %s",
	            s      : "par sekundi",
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : "dan",
	            dd     : translate,
	            M      : "mjesec",
	            MM     : translate,
	            y      : "godinu",
	            yy     : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : catalan (ca)
	// author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ca', {
	        months : "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
	        monthsShort : "gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.".split("_"),
	        weekdays : "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
	        weekdaysShort : "dg._dl._dt._dc._dj._dv._ds.".split("_"),
	        weekdaysMin : "Dg_Dl_Dt_Dc_Dj_Dv_Ds".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "en %s",
	            past : "fa %s",
	            s : "uns segons",
	            m : "un minut",
	            mm : "%d minuts",
	            h : "una hora",
	            hh : "%d hores",
	            d : "un dia",
	            dd : "%d dies",
	            M : "un mes",
	            MM : "%d mesos",
	            y : "un any",
	            yy : "%d anys"
	        },
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : czech (cs)
	// author : petrbela : https://github.com/petrbela

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var months = "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"),
	        monthsShort = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_");

	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + " ";
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }

	    return moment.lang('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
	        weekdaysShort : "ne_po_út_st_čt_pá_so".split("_"),
	        weekdaysMin : "ne_po_út_st_čt_pá_so".split("_"),
	        longDateFormat : {
	            LT: "H.mm",
	            L : "DD. MM. YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY LT",
	            LLLL : "dddd D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[dnes v] LT",
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: "L"
	        },
	        relativeTime : {
	            future : "za %s",
	            past : "před %s",
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : chuvash (cv)
	// author : Anatoly Mironov : https://github.com/mirontoli

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('cv', {
	        months : "кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав".split("_"),
	        monthsShort : "кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш".split("_"),
	        weekdays : "вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун".split("_"),
	        weekdaysShort : "выр_тун_ытл_юн_кĕç_эрн_шăм".split("_"),
	        weekdaysMin : "вр_тн_ыт_юн_кç_эр_шм".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD-MM-YYYY",
	            LL : "YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]",
	            LLL : "YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT",
	            LLLL : "dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT"
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ĕнер] LT [сехетре]',
	            nextWeek: '[Çитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнĕ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? "рен" : /çул$/i.exec(output) ? "тан" : "ран";
	                return output + affix;
	            },
	            past : "%s каялла",
	            s : "пĕр-ик çеккунт",
	            m : "пĕр минут",
	            mm : "%d минут",
	            h : "пĕр сехет",
	            hh : "%d сехет",
	            d : "пĕр кун",
	            dd : "%d кун",
	            M : "пĕр уйăх",
	            MM : "%d уйăх",
	            y : "пĕр çул",
	            yy : "%d çул"
	        },
	        ordinal : '%d-мĕш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Welsh (cy)
	// author : Robert Allen

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang("cy", {
	        months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
	        monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
	        weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
	        weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
	        weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: "HH:mm",
	            L: "DD/MM/YYYY",
	            LL: "D MMMM YYYY",
	            LLL: "D MMMM YYYY LT",
	            LLLL: "dddd, D MMMM YYYY LT"
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: "mewn %s",
	            past: "%s yn àl",
	            s: "ychydig eiliadau",
	            m: "munud",
	            mm: "%d munud",
	            h: "awr",
	            hh: "%d awr",
	            d: "diwrnod",
	            dd: "%d diwrnod",
	            M: "mis",
	            MM: "%d mis",
	            y: "blwyddyn",
	            yy: "%d flynedd"
	        },
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];

	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }

	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : danish (da)
	// author : Ulrik Nielsen : https://github.com/mrbase

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('da', {
	        months : "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
	        monthsShort : "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
	        weekdays : "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
	        weekdaysShort : "søn_man_tir_ons_tor_fre_lør".split("_"),
	        weekdaysMin : "sø_ma_ti_on_to_fr_lø".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D. MMMM, YYYY LT"
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "om %s",
	            past : "%s siden",
	            s : "få sekunder",
	            m : "et minut",
	            mm : "%d minutter",
	            h : "en time",
	            hh : "%d timer",
	            d : "en dag",
	            dd : "%d dage",
	            M : "en måned",
	            MM : "%d måneder",
	            y : "et år",
	            yy : "%d år"
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : german (de)
	// author : lluchs : https://github.com/lluchs
	// author: Menelion Elensúle: https://github.com/Oire

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    return moment.lang('de', {
	        months : "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
	        monthsShort : "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
	        weekdays : "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
	        weekdaysShort : "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
	        weekdaysMin : "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
	        longDateFormat : {
	            LT: "HH:mm [Uhr]",
	            L : "DD.MM.YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY LT",
	            LLLL : "dddd, D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[Heute um] LT",
	            sameElse: "L",
	            nextDay: '[Morgen um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gestern um] LT',
	            lastWeek: '[letzten] dddd [um] LT'
	        },
	        relativeTime : {
	            future : "in %s",
	            past : "vor %s",
	            s : "ein paar Sekunden",
	            m : processRelativeTime,
	            mm : "%d Minuten",
	            h : processRelativeTime,
	            hh : "%d Stunden",
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : modern greek (el)
	// author : Aggelos Karalias : https://github.com/mehiel

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('el', {
	        monthsNominativeEl : "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),
	        monthsGenitiveEl : "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf("MMMM")))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
	        weekdays : "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
	        weekdaysShort : "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
	        weekdaysMin : "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        longDateFormat : {
	            LT : "h:mm A",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : '[την προηγούμενη] dddd [{}] LT',
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();

	            return output.replace("{}", (hours % 12 === 1 ? "στη" : "στις"));
	        },
	        relativeTime : {
	            future : "σε %s",
	            past : "%s πριν",
	            s : "δευτερόλεπτα",
	            m : "ένα λεπτό",
	            mm : "%d λεπτά",
	            h : "μία ώρα",
	            hh : "%d ώρες",
	            d : "μία μέρα",
	            dd : "%d μέρες",
	            M : "ένας μήνας",
	            MM : "%d μήνες",
	            y : "ένας χρόνος",
	            yy : "%d χρόνια"
	        },
	        ordinal : function (number) {
	            return number + 'η';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : australian english (en-au)

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('en-au', {
	        months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
	        monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
	        weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
	        weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
	        weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
	        longDateFormat : {
	            LT : "h:mm A",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "in %s",
	            past : "%s ago",
	            s : "a few seconds",
	            m : "a minute",
	            mm : "%d minutes",
	            h : "an hour",
	            hh : "%d hours",
	            d : "a day",
	            dd : "%d days",
	            M : "a month",
	            MM : "%d months",
	            y : "a year",
	            yy : "%d years"
	        },
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~ (number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : canadian english (en-ca)
	// author : Jonathan Abourbih : https://github.com/jonbca

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('en-ca', {
	        months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
	        monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
	        weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
	        weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
	        weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
	        longDateFormat : {
	            LT : "h:mm A",
	            L : "YYYY-MM-DD",
	            LL : "D MMMM, YYYY",
	            LLL : "D MMMM, YYYY LT",
	            LLLL : "dddd, D MMMM, YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "in %s",
	            past : "%s ago",
	            s : "a few seconds",
	            m : "a minute",
	            mm : "%d minutes",
	            h : "an hour",
	            hh : "%d hours",
	            d : "a day",
	            dd : "%d days",
	            M : "a month",
	            MM : "%d months",
	            y : "a year",
	            yy : "%d years"
	        },
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~ (number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	}));


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : great britain english (en-gb)
	// author : Chris Gedrim : https://github.com/chrisgedrim

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('en-gb', {
	        months : "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
	        monthsShort : "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
	        weekdays : "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
	        weekdaysShort : "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
	        weekdaysMin : "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "in %s",
	            past : "%s ago",
	            s : "a few seconds",
	            m : "a minute",
	            mm : "%d minutes",
	            h : "an hour",
	            hh : "%d hours",
	            d : "a day",
	            dd : "%d days",
	            M : "a month",
	            MM : "%d months",
	            y : "a year",
	            yy : "%d years"
	        },
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~ (number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : esperanto (eo)
	// author : Colin Dean : https://github.com/colindean
	// komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('eo', {
	        months : "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),
	        monthsShort : "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split("_"),
	        weekdays : "Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato".split("_"),
	        weekdaysShort : "Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab".split("_"),
	        weekdaysMin : "Di_Lu_Ma_Me_Ĵa_Ve_Sa".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "YYYY-MM-DD",
	            LL : "D[-an de] MMMM, YYYY",
	            LLL : "D[-an de] MMMM, YYYY LT",
	            LLLL : "dddd, [la] D[-an de] MMMM, YYYY LT"
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "je %s",
	            past : "antaŭ %s",
	            s : "sekundoj",
	            m : "minuto",
	            mm : "%d minutoj",
	            h : "horo",
	            hh : "%d horoj",
	            d : "tago",//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : "%d tagoj",
	            M : "monato",
	            MM : "%d monatoj",
	            y : "jaro",
	            yy : "%d jaroj"
	        },
	        ordinal : "%da",
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : spanish (es)
	// author : Julio Napurí : https://github.com/julionc

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var monthsShortDot = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"),
	        monthsShort = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_");

	    return moment.lang('es', {
	        months : "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        weekdays : "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
	        weekdaysShort : "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
	        weekdaysMin : "Do_Lu_Ma_Mi_Ju_Vi_Sá".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD/MM/YYYY",
	            LL : "D [de] MMMM [del] YYYY",
	            LLL : "D [de] MMMM [del] YYYY LT",
	            LLLL : "dddd, D [de] MMMM [del] YYYY LT"
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "en %s",
	            past : "hace %s",
	            s : "unos segundos",
	            m : "un minuto",
	            mm : "%d minutos",
	            h : "una hora",
	            hh : "%d horas",
	            d : "un día",
	            dd : "%d días",
	            M : "un mes",
	            MM : "%d meses",
	            y : "un año",
	            yy : "%d años"
	        },
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : estonian (et)
	// author : Henry Kehlmann : https://github.com/madhenry
	// improvements : Illimar Tambek : https://github.com/ragulka

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    return moment.lang('et', {
	        months        : "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
	        monthsShort   : "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
	        weekdays      : "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
	        weekdaysShort : "P_E_T_K_N_R_L".split("_"),
	        weekdaysMin   : "P_E_T_K_N_R_L".split("_"),
	        longDateFormat : {
	            LT   : "H:mm",
	            L    : "DD.MM.YYYY",
	            LL   : "D. MMMM YYYY",
	            LLL  : "D. MMMM YYYY LT",
	            LLLL : "dddd, D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s pärast",
	            past   : "%s tagasi",
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : euskara (eu)
	// author : Eneko Illarramendi : https://github.com/eillarra

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('eu', {
	        months : "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
	        monthsShort : "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
	        weekdays : "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
	        weekdaysShort : "ig._al._ar._az._og._ol._lr.".split("_"),
	        weekdaysMin : "ig_al_ar_az_og_ol_lr".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "YYYY-MM-DD",
	            LL : "YYYY[ko] MMMM[ren] D[a]",
	            LLL : "YYYY[ko] MMMM[ren] D[a] LT",
	            LLLL : "dddd, YYYY[ko] MMMM[ren] D[a] LT",
	            l : "YYYY-M-D",
	            ll : "YYYY[ko] MMM D[a]",
	            lll : "YYYY[ko] MMM D[a] LT",
	            llll : "ddd, YYYY[ko] MMM D[a] LT"
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s barru",
	            past : "duela %s",
	            s : "segundo batzuk",
	            m : "minutu bat",
	            mm : "%d minutu",
	            h : "ordu bat",
	            hh : "%d ordu",
	            d : "egun bat",
	            dd : "%d egun",
	            M : "hilabete bat",
	            MM : "%d hilabete",
	            y : "urte bat",
	            yy : "%d urte"
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Persian Language
	// author : Ebrahim Byagowi : https://github.com/ebraminio

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    return moment.lang('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY LT',
	            LLLL : 'dddd, D MMMM YYYY LT'
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return "قبل از ظهر";
	            } else {
	                return "بعد از ظهر";
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : finnish (fi)
	// author : Tarmo Aidantausta : https://github.com/bleadof

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	                          numbersPast[7], numbersPast[8], numbersPast[9]];

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = "";
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + " " + result;
	        return result;
	    }

	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }

	    return moment.lang('fi', {
	        months : "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
	        monthsShort : "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),
	        weekdays : "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
	        weekdaysShort : "su_ma_ti_ke_to_pe_la".split("_"),
	        weekdaysMin : "su_ma_ti_ke_to_pe_la".split("_"),
	        longDateFormat : {
	            LT : "HH.mm",
	            L : "DD.MM.YYYY",
	            LL : "Do MMMM[ta] YYYY",
	            LLL : "Do MMMM[ta] YYYY, [klo] LT",
	            LLLL : "dddd, Do MMMM[ta] YYYY, [klo] LT",
	            l : "D.M.YYYY",
	            ll : "Do MMM YYYY",
	            lll : "Do MMM YYYY, [klo] LT",
	            llll : "ddd, Do MMM YYYY, [klo] LT"
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s päästä",
	            past : "%s sitten",
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinal : "%d.",
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : faroese (fo)
	// author : Ragnar Johannesen : https://github.com/ragnar123

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('fo', {
	        months : "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
	        monthsShort : "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
	        weekdays : "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
	        weekdaysShort : "sun_mán_týs_mik_hós_frí_ley".split("_"),
	        weekdaysMin : "su_má_tý_mi_hó_fr_le".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D. MMMM, YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "um %s",
	            past : "%s síðani",
	            s : "fá sekund",
	            m : "ein minutt",
	            mm : "%d minuttir",
	            h : "ein tími",
	            hh : "%d tímar",
	            d : "ein dagur",
	            dd : "%d dagar",
	            M : "ein mánaði",
	            MM : "%d mánaðir",
	            y : "eitt ár",
	            yy : "%d ár"
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : canadian french (fr-ca)
	// author : Jonathan Abourbih : https://github.com/jonbca

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('fr-ca', {
	        months : "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
	        monthsShort : "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
	        weekdays : "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
	        weekdaysShort : "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
	        weekdaysMin : "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "YYYY-MM-DD",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[Aujourd'hui à] LT",
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "dans %s",
	            past : "il y a %s",
	            s : "quelques secondes",
	            m : "une minute",
	            mm : "%d minutes",
	            h : "une heure",
	            hh : "%d heures",
	            d : "un jour",
	            dd : "%d jours",
	            M : "un mois",
	            MM : "%d mois",
	            y : "un an",
	            yy : "%d ans"
	        },
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        }
	    });
	}));


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : french (fr)
	// author : John Fischer : https://github.com/jfroffice

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('fr', {
	        months : "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
	        monthsShort : "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
	        weekdays : "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
	        weekdaysShort : "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
	        weekdaysMin : "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[Aujourd'hui à] LT",
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "dans %s",
	            past : "il y a %s",
	            s : "quelques secondes",
	            m : "une minute",
	            mm : "%d minutes",
	            h : "une heure",
	            hh : "%d heures",
	            d : "un jour",
	            dd : "%d jours",
	            M : "un mois",
	            MM : "%d mois",
	            y : "un an",
	            yy : "%d ans"
	        },
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : galician (gl)
	// author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('gl', {
	        months : "Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro".split("_"),
	        monthsShort : "Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.".split("_"),
	        weekdays : "Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado".split("_"),
	        weekdaysShort : "Dom._Lun._Mar._Mér._Xov._Ven._Sáb.".split("_"),
	        weekdaysMin : "Do_Lu_Ma_Mé_Xo_Ve_Sá".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === "uns segundos") {
	                    return "nuns segundos";
	                }
	                return "en " + str;
	            },
	            past : "hai %s",
	            s : "uns segundos",
	            m : "un minuto",
	            mm : "%d minutos",
	            h : "unha hora",
	            hh : "%d horas",
	            d : "un día",
	            dd : "%d días",
	            M : "un mes",
	            MM : "%d meses",
	            y : "un ano",
	            yy : "%d anos"
	        },
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Hebrew (he)
	// author : Tomer Cohen : https://github.com/tomer
	// author : Moshe Simantov : https://github.com/DevelopmentIL
	// author : Tal Ater : https://github.com/TalAter

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('he', {
	        months : "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),
	        monthsShort : "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
	        weekdays : "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
	        weekdaysShort : "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
	        weekdaysMin : "א_ב_ג_ד_ה_ו_ש".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D [ב]MMMM YYYY",
	            LLL : "D [ב]MMMM YYYY LT",
	            LLLL : "dddd, D [ב]MMMM YYYY LT",
	            l : "D/M/YYYY",
	            ll : "D MMM YYYY",
	            lll : "D MMM YYYY LT",
	            llll : "ddd, D MMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "בעוד %s",
	            past : "לפני %s",
	            s : "מספר שניות",
	            m : "דקה",
	            mm : "%d דקות",
	            h : "שעה",
	            hh : function (number) {
	                if (number === 2) {
	                    return "שעתיים";
	                }
	                return number + " שעות";
	            },
	            d : "יום",
	            dd : function (number) {
	                if (number === 2) {
	                    return "יומיים";
	                }
	                return number + " ימים";
	            },
	            M : "חודש",
	            MM : function (number) {
	                if (number === 2) {
	                    return "חודשיים";
	                }
	                return number + " חודשים";
	            },
	            y : "שנה",
	            yy : function (number) {
	                if (number === 2) {
	                    return "שנתיים";
	                }
	                return number + " שנים";
	            }
	        }
	    });
	}));


/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : hindi (hi)
	// author : Mayank Singhal : https://github.com/mayanksinghal

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    return moment.lang('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split("_"),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split("_"),
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split("_"),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split("_"),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split("_"),
	        longDateFormat : {
	            LT : "A h:mm बजे",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY, LT",
	            LLLL : "dddd, D MMMM YYYY, LT"
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s में",
	            past : "%s पहले",
	            s : "कुछ ही क्षण",
	            m : "एक मिनट",
	            mm : "%d मिनट",
	            h : "एक घंटा",
	            hh : "%d घंटे",
	            d : "एक दिन",
	            dd : "%d दिन",
	            M : "एक महीने",
	            MM : "%d महीने",
	            y : "एक वर्ष",
	            yy : "%d वर्ष"
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return "रात";
	            } else if (hour < 10) {
	                return "सुबह";
	            } else if (hour < 17) {
	                return "दोपहर";
	            } else if (hour < 20) {
	                return "शाम";
	            } else {
	                return "रात";
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : hrvatski (hr)
	// author : Bojan Marković : https://github.com/bmarkovic

	// based on (sl) translation by Robert Sedovšek

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    function translate(number, withoutSuffix, key) {
	        var result = number + " ";
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    return moment.lang('hr', {
	        months : "sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_"),
	        monthsShort : "sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
	        weekdays : "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
	        weekdaysShort : "ned._pon._uto._sri._čet._pet._sub.".split("_"),
	        weekdaysMin : "ne_po_ut_sr_če_pe_su".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD. MM. YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY LT",
	            LLLL : "dddd, D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "za %s",
	            past   : "prije %s",
	            s      : "par sekundi",
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : "dan",
	            dd     : translate,
	            M      : "mjesec",
	            MM     : translate,
	            y      : "godinu",
	            yy     : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : hungarian (hu)
	// author : Adam Brunner : https://github.com/adambrunner

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');

	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;

	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }

	        return '';
	    }

	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    return moment.lang('hu', {
	        months : "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
	        monthsShort : "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
	        weekdays : "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
	        weekdaysShort : "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
	        weekdaysMin : "v_h_k_sze_cs_p_szo".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "YYYY.MM.DD.",
	            LL : "YYYY. MMMM D.",
	            LLL : "YYYY. MMMM D., LT",
	            LLLL : "YYYY. MMMM D., dddd LT"
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s múlva",
	            past : "%s",
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Armenian (hy-am)
	// author : Armendarabyan : https://github.com/armendarabyan

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),
	            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')
	        },

	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';

	        return months[nounCase][m.month()];
	    }

	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');

	        return monthsShort[m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');

	        return weekdays[m.day()];
	    }

	    return moment.lang('hy-am', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
	        weekdaysMin : "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY թ.",
	            LLL : "D MMMM YYYY թ., LT",
	            LLLL : "dddd, D MMMM YYYY թ., LT"
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "%s հետո",
	            past : "%s առաջ",
	            s : "մի քանի վայրկյան",
	            m : "րոպե",
	            mm : "%d րոպե",
	            h : "ժամ",
	            hh : "%d ժամ",
	            d : "օր",
	            dd : "%d օր",
	            M : "ամիս",
	            MM : "%d ամիս",
	            y : "տարի",
	            yy : "%d տարի"
	        },

	        meridiem : function (hour) {
	            if (hour < 4) {
	                return "գիշերվա";
	            } else if (hour < 12) {
	                return "առավոտվա";
	            } else if (hour < 17) {
	                return "ցերեկվա";
	            } else {
	                return "երեկոյան";
	            }
	        },

	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },

	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Bahasa Indonesia (id)
	// author : Mohammad Satrio Utomo : https://github.com/tyok
	// reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('id', {
	        months : "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
	        monthsShort : "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split("_"),
	        weekdays : "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
	        weekdaysShort : "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
	        weekdaysMin : "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
	        longDateFormat : {
	            LT : "HH.mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY [pukul] LT",
	            LLLL : "dddd, D MMMM YYYY [pukul] LT"
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "dalam %s",
	            past : "%s yang lalu",
	            s : "beberapa detik",
	            m : "semenit",
	            mm : "%d menit",
	            h : "sejam",
	            hh : "%d jam",
	            d : "sehari",
	            dd : "%d hari",
	            M : "sebulan",
	            MM : "%d bulan",
	            y : "setahun",
	            yy : "%d tahun"
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : icelandic (is)
	// author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + " ";
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    return moment.lang('is', {
	        months : "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
	        monthsShort : "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
	        weekdays : "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),
	        weekdaysShort : "sun_mán_þri_mið_fim_fös_lau".split("_"),
	        weekdaysMin : "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD/MM/YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY [kl.] LT",
	            LLLL : "dddd, D. MMMM YYYY [kl.] LT"
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "eftir %s",
	            past : "fyrir %s síðan",
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : "klukkustund",
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : italian (it)
	// author : Lorenzo : https://github.com/aliem
	// author: Mattia Larentis: https://github.com/nostalgiaz

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('it', {
	        months : "Gennaio_Febbraio_Marzo_Aprile_Maggio_Giugno_Luglio_Agosto_Settembre_Ottobre_Novembre_Dicembre".split("_"),
	        monthsShort : "Gen_Feb_Mar_Apr_Mag_Giu_Lug_Ago_Set_Ott_Nov_Dic".split("_"),
	        weekdays : "Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato".split("_"),
	        weekdaysShort : "Dom_Lun_Mar_Mer_Gio_Ven_Sab".split("_"),
	        weekdaysMin : "D_L_Ma_Me_G_V_S".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: '[lo scorso] dddd [alle] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? "tra" : "in") + " " + s;
	            },
	            past : "%s fa",
	            s : "alcuni secondi",
	            m : "un minuto",
	            mm : "%d minuti",
	            h : "un'ora",
	            hh : "%d ore",
	            d : "un giorno",
	            dd : "%d giorni",
	            M : "un mese",
	            MM : "%d mesi",
	            y : "un anno",
	            yy : "%d anni"
	        },
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : japanese (ja)
	// author : LI Long : https://github.com/baryon

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ja', {
	        months : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
	        monthsShort : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
	        weekdays : "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
	        weekdaysShort : "日_月_火_水_木_金_土".split("_"),
	        weekdaysMin : "日_月_火_水_木_金_土".split("_"),
	        longDateFormat : {
	            LT : "Ah時m分",
	            L : "YYYY/MM/DD",
	            LL : "YYYY年M月D日",
	            LLL : "YYYY年M月D日LT",
	            LLLL : "YYYY年M月D日LT dddd"
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return "午前";
	            } else {
	                return "午後";
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s後",
	            past : "%s前",
	            s : "数秒",
	            m : "1分",
	            mm : "%d分",
	            h : "1時間",
	            hh : "%d時間",
	            d : "1日",
	            dd : "%d日",
	            M : "1ヶ月",
	            MM : "%dヶ月",
	            y : "1年",
	            yy : "%d年"
	        }
	    });
	}));


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Georgian (ka)
	// author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },

	        nounCase = (/D[oD] *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';

	        return months[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')
	        },

	        nounCase = (/(წინა|შემდეგ)/).test(format) ?
	            'accusative' :
	            'nominative';

	        return weekdays[nounCase][m.day()];
	    }

	    return moment.lang('ka', {
	        months : monthsCaseReplace,
	        monthsShort : "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
	        weekdaysMin : "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
	        longDateFormat : {
	            LT : "h:mm A",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, "ში") :
	                    s + "ში";
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, "ის წინ");
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, "წლის წინ");
	                }
	            },
	            s : "რამდენიმე წამი",
	            m : "წუთი",
	            mm : "%d წუთი",
	            h : "საათი",
	            hh : "%d საათი",
	            d : "დღე",
	            dd : "%d დღე",
	            M : "თვე",
	            MM : "%d თვე",
	            y : "წელი",
	            yy : "%d წელი"
	        },
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }

	            if (number === 1) {
	                return number + "-ლი";
	            }

	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return "მე-" + number;
	            }

	            return number + "-ე";
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });
	}));


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : khmer (km)
	// author : Kruy Vanna : https://github.com/kruyvanna

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('km', {
	        months: "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
	        monthsShort: "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
	        weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
	        weekdaysShort: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
	        weekdaysMin: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
	        longDateFormat: {
	            LT: "HH:mm",
	            L: "DD/MM/YYYY",
	            LL: "D MMMM YYYY",
	            LLL: "D MMMM YYYY LT",
	            LLLL: "dddd, D MMMM YYYY LT"
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: "%sទៀត",
	            past: "%sមុន",
	            s: "ប៉ុន្មានវិនាទី",
	            m: "មួយនាទី",
	            mm: "%d នាទី",
	            h: "មួយម៉ោង",
	            hh: "%d ម៉ោង",
	            d: "មួយថ្ងៃ",
	            dd: "%d ថ្ងៃ",
	            M: "មួយខែ",
	            MM: "%d ខែ",
	            y: "មួយឆ្នាំ",
	            yy: "%d ឆ្នាំ"
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : korean (ko)
	//
	// authors 
	//
	// - Kyungwook, Park : https://github.com/kyungw00k
	// - Jeeeyul Lee <jeeeyul@gmail.com>
	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ko', {
	        months : "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
	        monthsShort : "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
	        weekdays : "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
	        weekdaysShort : "일_월_화_수_목_금_토".split("_"),
	        weekdaysMin : "일_월_화_수_목_금_토".split("_"),
	        longDateFormat : {
	            LT : "A h시 mm분",
	            L : "YYYY.MM.DD",
	            LL : "YYYY년 MMMM D일",
	            LLL : "YYYY년 MMMM D일 LT",
	            LLLL : "YYYY년 MMMM D일 dddd LT"
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s 후",
	            past : "%s 전",
	            s : "몇초",
	            ss : "%d초",
	            m : "일분",
	            mm : "%d분",
	            h : "한시간",
	            hh : "%d시간",
	            d : "하루",
	            dd : "%d일",
	            M : "한달",
	            MM : "%d달",
	            y : "일년",
	            yy : "%d년"
	        },
	        ordinal : '%d일',
	        meridiemParse : /(오전|오후)/,
	        isPM : function (token) {
	            return token === "오후";
	        }
	    });
	}));


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Luxembourgish (lb)
	// author : mweimerskirch : https://github.com/mweimerskirch

	// Note: Luxembourgish has a very particular phonological rule ("Eifeler Regel") that causes the
	// deletion of the final "n" in certain contexts. That's what the "eifelerRegelAppliesToWeekday"
	// and "eifelerRegelAppliesToNumber" methods are meant for

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'dd': [number + ' Deeg', number + ' Deeg'],
	            'M': ['ee Mount', 'engem Mount'],
	            'MM': [number + ' Méint', number + ' Méint'],
	            'y': ['ee Joer', 'engem Joer'],
	            'yy': [number + ' Joer', number + ' Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return "a " + string;
	        }
	        return "an " + string;
	    }

	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return "viru " + string;
	        }
	        return "virun " + string;
	    }

	    function processLastWeek(string1) {
	        var weekday = this.format('d');
	        if (eifelerRegelAppliesToWeekday(weekday)) {
	            return '[Leschte] dddd [um] LT';
	        }
	        return '[Leschten] dddd [um] LT';
	    }

	    /**
	     * Returns true if the word before the given week day loses the "-n" ending.
	     * e.g. "Leschten Dënschdeg" but "Leschte Méindeg"
	     *
	     * @param weekday {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToWeekday(weekday) {
	        weekday = parseInt(weekday, 10);
	        switch (weekday) {
	        case 0: // Sonndeg
	        case 1: // Méindeg
	        case 3: // Mëttwoch
	        case 5: // Freideg
	        case 6: // Samschdeg
	            return true;
	        default: // 2 Dënschdeg, 4 Donneschdeg
	            return false;
	        }
	    }

	    /**
	     * Returns true if the word before the given number loses the "-n" ending.
	     * e.g. "an 10 Deeg" but "a 5 Deeg"
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    return moment.lang('lb', {
	        months: "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
	        monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
	        weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
	        weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
	        weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
	        longDateFormat: {
	            LT: "H:mm [Auer]",
	            L: "DD.MM.YYYY",
	            LL: "D. MMMM YYYY",
	            LLL: "D. MMMM YYYY LT",
	            LLLL: "dddd, D. MMMM YYYY LT"
	        },
	        calendar: {
	            sameDay: "[Haut um] LT",
	            sameElse: "L",
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: processLastWeek
	        },
	        relativeTime: {
	            future: processFutureTime,
	            past: processPastTime,
	            s: "e puer Sekonnen",
	            m: processRelativeTime,
	            mm: "%d Minutten",
	            h: processRelativeTime,
	            hh: "%d Stonnen",
	            d: processRelativeTime,
	            dd: processRelativeTime,
	            M: processRelativeTime,
	            MM: processRelativeTime,
	            y: processRelativeTime,
	            yy: processRelativeTime
	        },
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Lithuanian (lt)
	// author : Mindaugas Mozūras : https://github.com/mmozuras

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var units = {
	        "m" : "minutė_minutės_minutę",
	        "mm": "minutės_minučių_minutes",
	        "h" : "valanda_valandos_valandą",
	        "hh": "valandos_valandų_valandas",
	        "d" : "diena_dienos_dieną",
	        "dd": "dienos_dienų_dienas",
	        "M" : "mėnuo_mėnesio_mėnesį",
	        "MM": "mėnesiai_mėnesių_mėnesius",
	        "y" : "metai_metų_metus",
	        "yy": "metai_metų_metus"
	    },
	    weekDays = "pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis_sekmadienis".split("_");

	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return "kelios sekundės";
	        } else {
	            return isFuture ? "kelių sekundžių" : "kelias sekundes";
	        }
	    }

	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }

	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }

	    function forms(key) {
	        return units[key].split("_");
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + " ";
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }

	    function relativeWeekDay(moment, format) {
	        var nominative = format.indexOf('dddd HH:mm') === -1,
	            weekDay = weekDays[moment.weekday()];

	        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + "į";
	    }

	    return moment.lang("lt", {
	        months : "sausio_vasario_kovo_balandžio_gegužės_biržėlio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),
	        monthsShort : "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
	        weekdays : relativeWeekDay,
	        weekdaysShort : "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
	        weekdaysMin : "S_P_A_T_K_Pn_Š".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "YYYY-MM-DD",
	            LL : "YYYY [m.] MMMM D [d.]",
	            LLL : "YYYY [m.] MMMM D [d.], LT [val.]",
	            LLLL : "YYYY [m.] MMMM D [d.], dddd, LT [val.]",
	            l : "YYYY-MM-DD",
	            ll : "YYYY [m.] MMMM D [d.]",
	            lll : "YYYY [m.] MMMM D [d.], LT [val.]",
	            llll : "YYYY [m.] MMMM D [d.], ddd, LT [val.]"
	        },
	        calendar : {
	            sameDay : "[Šiandien] LT",
	            nextDay : "[Rytoj] LT",
	            nextWeek : "dddd LT",
	            lastDay : "[Vakar] LT",
	            lastWeek : "[Praėjusį] dddd LT",
	            sameElse : "L"
	        },
	        relativeTime : {
	            future : "po %s",
	            past : "prieš %s",
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : latvian (lv)
	// author : Kristaps Karlsons : https://github.com/skakri

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var units = {
	        'mm': 'minūti_minūtes_minūte_minūtes',
	        'hh': 'stundu_stundas_stunda_stundas',
	        'dd': 'dienu_dienas_diena_dienas',
	        'MM': 'mēnesi_mēnešus_mēnesis_mēneši',
	        'yy': 'gadu_gadus_gads_gadi'
	    };

	    function format(word, number, withoutSuffix) {
	        var forms = word.split('_');
	        if (withoutSuffix) {
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }

	    return moment.lang('lv', {
	        months : "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
	        monthsShort : "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
	        weekdays : "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),
	        weekdaysShort : "Sv_P_O_T_C_Pk_S".split("_"),
	        weekdaysMin : "Sv_P_O_T_C_Pk_S".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "YYYY. [gada] D. MMMM",
	            LLL : "YYYY. [gada] D. MMMM, LT",
	            LLLL : "YYYY. [gada] D. MMMM, dddd, LT"
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s vēlāk",
	            past : "%s agrāk",
	            s : "dažas sekundes",
	            m : "minūti",
	            mm : relativeTimeWithPlural,
	            h : "stundu",
	            hh : relativeTimeWithPlural,
	            d : "dienu",
	            dd : relativeTimeWithPlural,
	            M : "mēnesi",
	            MM : relativeTimeWithPlural,
	            y : "gadu",
	            yy : relativeTimeWithPlural
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : macedonian (mk)
	// author : Borislav Mickov : https://github.com/B0k0

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('mk', {
	        months : "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),
	        monthsShort : "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
	        weekdays : "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
	        weekdaysShort : "нед_пон_вто_сре_чет_пет_саб".split("_"),
	        weekdaysMin : "нe_пo_вт_ср_че_пе_сa".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "D.MM.YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : 'dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Во изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Во изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "после %s",
	            past : "пред %s",
	            s : "неколку секунди",
	            m : "минута",
	            mm : "%d минути",
	            h : "час",
	            hh : "%d часа",
	            d : "ден",
	            dd : "%d дена",
	            M : "месец",
	            MM : "%d месеци",
	            y : "година",
	            yy : "%d години"
	        },
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : malayalam (ml)
	// author : Floyd Pink : https://github.com/floydpink

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split("_"),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split("_"),
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split("_"),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split("_"),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split("_"),
	        longDateFormat : {
	            LT : "A h:mm -നു",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY, LT",
	            LLLL : "dddd, D MMMM YYYY, LT"
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s കഴിഞ്ഞ്",
	            past : "%s മുൻപ്",
	            s : "അൽപ നിമിഷങ്ങൾ",
	            m : "ഒരു മിനിറ്റ്",
	            mm : "%d മിനിറ്റ്",
	            h : "ഒരു മണിക്കൂർ",
	            hh : "%d മണിക്കൂർ",
	            d : "ഒരു ദിവസം",
	            dd : "%d ദിവസം",
	            M : "ഒരു മാസം",
	            MM : "%d മാസം",
	            y : "ഒരു വർഷം",
	            yy : "%d വർഷം"
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return "രാത്രി";
	            } else if (hour < 12) {
	                return "രാവിലെ";
	            } else if (hour < 17) {
	                return "ഉച്ച കഴിഞ്ഞ്";
	            } else if (hour < 20) {
	                return "വൈകുന്നേരം";
	            } else {
	                return "രാത്രി";
	            }
	        }
	    });
	}));


/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Marathi (mr)
	// author : Harshad Kale : https://github.com/kalehv

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    return moment.lang('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split("_"),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split("_"),
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split("_"),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split("_"),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split("_"),
	        longDateFormat : {
	            LT : "A h:mm वाजता",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY, LT",
	            LLLL : "dddd, D MMMM YYYY, LT"
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s नंतर",
	            past : "%s पूर्वी",
	            s : "सेकंद",
	            m: "एक मिनिट",
	            mm: "%d मिनिटे",
	            h : "एक तास",
	            hh : "%d तास",
	            d : "एक दिवस",
	            dd : "%d दिवस",
	            M : "एक महिना",
	            MM : "%d महिने",
	            y : "एक वर्ष",
	            yy : "%d वर्षे"
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiem: function (hour, minute, isLower)
	        {
	            if (hour < 4) {
	                return "रात्री";
	            } else if (hour < 10) {
	                return "सकाळी";
	            } else if (hour < 17) {
	                return "दुपारी";
	            } else if (hour < 20) {
	                return "सायंकाळी";
	            } else {
	                return "रात्री";
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Bahasa Malaysia (ms-MY)
	// author : Weldan Jamili : https://github.com/weldan

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('ms-my', {
	        months : "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
	        monthsShort : "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
	        weekdays : "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
	        weekdaysShort : "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
	        weekdaysMin : "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
	        longDateFormat : {
	            LT : "HH.mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY [pukul] LT",
	            LLLL : "dddd, D MMMM YYYY [pukul] LT"
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "dalam %s",
	            past : "%s yang lepas",
	            s : "beberapa saat",
	            m : "seminit",
	            mm : "%d minit",
	            h : "sejam",
	            hh : "%d jam",
	            d : "sehari",
	            dd : "%d hari",
	            M : "sebulan",
	            MM : "%d bulan",
	            y : "setahun",
	            yy : "%d tahun"
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : norwegian bokmål (nb)
	// authors : Espen Hovlandsdal : https://github.com/rexxars
	//           Sigurd Gartmann : https://github.com/sigurdga

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('nb', {
	        months : "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
	        monthsShort : "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
	        weekdays : "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
	        weekdaysShort : "sø._ma._ti._on._to._fr._lø.".split("_"),
	        weekdaysMin : "sø_ma_ti_on_to_fr_lø".split("_"),
	        longDateFormat : {
	            LT : "H.mm",
	            L : "DD.MM.YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY [kl.] LT",
	            LLLL : "dddd D. MMMM YYYY [kl.] LT"
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "om %s",
	            past : "for %s siden",
	            s : "noen sekunder",
	            m : "ett minutt",
	            mm : "%d minutter",
	            h : "en time",
	            hh : "%d timer",
	            d : "en dag",
	            dd : "%d dager",
	            M : "en måned",
	            MM : "%d måneder",
	            y : "ett år",
	            yy : "%d år"
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : nepali/nepalese
	// author : suvash : https://github.com/suvash

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    return moment.lang('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split("_"),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split("_"),
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split("_"),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split("_"),
	        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split("_"),
	        longDateFormat : {
	            LT : "Aको h:mm बजे",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY, LT",
	            LLLL : "dddd, D MMMM YYYY, LT"
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return "राती";
	            } else if (hour < 10) {
	                return "बिहान";
	            } else if (hour < 15) {
	                return "दिउँसो";
	            } else if (hour < 18) {
	                return "बेलुका";
	            } else if (hour < 20) {
	                return "साँझ";
	            } else {
	                return "राती";
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोली] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%sमा",
	            past : "%s अगाडी",
	            s : "केही समय",
	            m : "एक मिनेट",
	            mm : "%d मिनेट",
	            h : "एक घण्टा",
	            hh : "%d घण्टा",
	            d : "एक दिन",
	            dd : "%d दिन",
	            M : "एक महिना",
	            MM : "%d महिना",
	            y : "एक बर्ष",
	            yy : "%d बर्ष"
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : dutch (nl)
	// author : Joris Röling : https://github.com/jjupiter

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var monthsShortWithDots = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"),
	        monthsShortWithoutDots = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_");

	    return moment.lang('nl', {
	        months : "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
	        weekdaysShort : "zo._ma._di._wo._do._vr._za.".split("_"),
	        weekdaysMin : "Zo_Ma_Di_Wo_Do_Vr_Za".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD-MM-YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "over %s",
	            past : "%s geleden",
	            s : "een paar seconden",
	            m : "één minuut",
	            mm : "%d minuten",
	            h : "één uur",
	            hh : "%d uur",
	            d : "één dag",
	            dd : "%d dagen",
	            M : "één maand",
	            MM : "%d maanden",
	            y : "één jaar",
	            yy : "%d jaar"
	        },
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : norwegian nynorsk (nn)
	// author : https://github.com/mechuwind

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('nn', {
	        months : "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
	        monthsShort : "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
	        weekdays : "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
	        weekdaysShort : "sun_mån_tys_ons_tor_fre_lau".split("_"),
	        weekdaysMin : "su_må_ty_on_to_fr_lø".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "om %s",
	            past : "for %s sidan",
	            s : "nokre sekund",
	            m : "eit minutt",
	            mm : "%d minutt",
	            h : "ein time",
	            hh : "%d timar",
	            d : "ein dag",
	            dd : "%d dagar",
	            M : "ein månad",
	            MM : "%d månader",
	            y : "eit år",
	            yy : "%d år"
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : polish (pl)
	// author : Rafal Hirsz : https://github.com/evoL

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var monthsNominative = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_"),
	        monthsSubjective = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_");

	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }

	    function translate(number, withoutSuffix, key) {
	        var result = number + " ";
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    return moment.lang('pl', {
	        months : function (momentToFormat, format) {
	            if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
	        weekdays : "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
	        weekdaysShort : "nie_pon_wt_śr_czw_pt_sb".split("_"),
	        weekdaysMin : "N_Pn_Wt_Śr_Cz_Pt_So".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "za %s",
	            past : "%s temu",
	            s : "kilka sekund",
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : "1 dzień",
	            dd : '%d dni',
	            M : "miesiąc",
	            MM : translate,
	            y : "rok",
	            yy : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : brazilian portuguese (pt-br)
	// author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('pt-br', {
	        months : "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
	        monthsShort : "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
	        weekdays : "domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),
	        weekdaysShort : "dom_seg_ter_qua_qui_sex_sáb".split("_"),
	        weekdaysMin : "dom_2ª_3ª_4ª_5ª_6ª_sáb".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D [de] MMMM [de] YYYY",
	            LLL : "D [de] MMMM [de] YYYY [às] LT",
	            LLLL : "dddd, D [de] MMMM [de] YYYY [às] LT"
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "em %s",
	            past : "%s atrás",
	            s : "segundos",
	            m : "um minuto",
	            mm : "%d minutos",
	            h : "uma hora",
	            hh : "%d horas",
	            d : "um dia",
	            dd : "%d dias",
	            M : "um mês",
	            MM : "%d meses",
	            y : "um ano",
	            yy : "%d anos"
	        },
	        ordinal : '%dº'
	    });
	}));


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : portuguese (pt)
	// author : Jefferson : https://github.com/jalex79

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('pt', {
	        months : "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
	        monthsShort : "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
	        weekdays : "domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),
	        weekdaysShort : "dom_seg_ter_qua_qui_sex_sáb".split("_"),
	        weekdaysMin : "dom_2ª_3ª_4ª_5ª_6ª_sáb".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D [de] MMMM [de] YYYY",
	            LLL : "D [de] MMMM [de] YYYY LT",
	            LLLL : "dddd, D [de] MMMM [de] YYYY LT"
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "em %s",
	            past : "%s atrás",
	            s : "segundos",
	            m : "um minuto",
	            mm : "%d minutos",
	            h : "uma hora",
	            hh : "%d horas",
	            d : "um dia",
	            dd : "%d dias",
	            M : "um mês",
	            MM : "%d meses",
	            y : "um ano",
	            yy : "%d anos"
	        },
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : romanian (ro)
	// author : Vlad Gurdiga : https://github.com/gurdiga
	// author : Valentin Agachi : https://github.com/avaly

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'minute',
	            'hh': 'ore',
	            'dd': 'zile',
	            'MM': 'luni',
	            'yy': 'ani'
	        },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }

	        return number + separator + format[key];
	    }

	    return moment.lang('ro', {
	        months : "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
	        monthsShort : "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
	        weekdays : "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
	        weekdaysShort : "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
	        weekdaysMin : "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY H:mm",
	            LLLL : "dddd, D MMMM YYYY H:mm"
	        },
	        calendar : {
	            sameDay: "[azi la] LT",
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "peste %s",
	            past : "%s în urmă",
	            s : "câteva secunde",
	            m : "un minut",
	            mm : relativeTimeWithPlural,
	            h : "o oră",
	            hh : relativeTimeWithPlural,
	            d : "o zi",
	            dd : relativeTimeWithPlural,
	            M : "o lună",
	            MM : relativeTimeWithPlural,
	            y : "un an",
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : russian (ru)
	// author : Viktorminator : https://github.com/Viktorminator
	// Author : Menelion Elensúle : https://github.com/Oire

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')
	        },

	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';

	        return months[nounCase][m.month()];
	    }

	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = {
	            'nominative': 'янв_фев_мар_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')
	        },

	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';

	        return monthsShort[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')
	        },

	        nounCase = (/\[ ?[Вв] ?(?:прошлую|следующую)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';

	        return weekdays[nounCase][m.day()];
	    }

	    return moment.lang('ru', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : "вс_пн_вт_ср_чт_пт_сб".split("_"),
	        weekdaysMin : "вс_пн_вт_ср_чт_пт_сб".split("_"),
	        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY г.",
	            LLL : "D MMMM YYYY г., LT",
	            LLLL : "dddd, D MMMM YYYY г., LT"
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function () {
	                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[В прошлое] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[В прошлый] dddd [в] LT';
	                case 3:
	                case 5:
	                case 6:
	                    return '[В прошлую] dddd [в] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "через %s",
	            past : "%s назад",
	            s : "несколько секунд",
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : "час",
	            hh : relativeTimeWithPlural,
	            d : "день",
	            dd : relativeTimeWithPlural,
	            M : "месяц",
	            MM : relativeTimeWithPlural,
	            y : "год",
	            yy : relativeTimeWithPlural
	        },

	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason

	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return "ночи";
	            } else if (hour < 12) {
	                return "утра";
	            } else if (hour < 17) {
	                return "дня";
	            } else {
	                return "вечера";
	            }
	        },

	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },

	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : slovak (sk)
	// author : Martin Minka : https://github.com/k2s
	// based on work of petrbela : https://github.com/petrbela

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    var months = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"),
	        monthsShort = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");

	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }

	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + " ";
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }

	    return moment.lang('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
	        weekdaysShort : "ne_po_ut_st_št_pi_so".split("_"),
	        weekdaysMin : "ne_po_ut_st_št_pi_so".split("_"),
	        longDateFormat : {
	            LT: "H:mm",
	            L : "DD.MM.YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY LT",
	            LLLL : "dddd D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[dnes o] LT",
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: "L"
	        },
	        relativeTime : {
	            future : "za %s",
	            past : "pred %s",
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : slovenian (sl)
	// author : Robert Sedovšek : https://github.com/sedovsek

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function translate(number, withoutSuffix, key) {
	        var result = number + " ";
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2) {
	                result += 'minuti';
	            } else if (number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minut';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += 'ura';
	            } else if (number === 2) {
	                result += 'uri';
	            } else if (number === 3 || number === 4) {
	                result += 'ure';
	            } else {
	                result += 'ur';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dni';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mesec';
	            } else if (number === 2) {
	                result += 'meseca';
	            } else if (number === 3 || number === 4) {
	                result += 'mesece';
	            } else {
	                result += 'mesecev';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'leto';
	            } else if (number === 2) {
	                result += 'leti';
	            } else if (number === 3 || number === 4) {
	                result += 'leta';
	            } else {
	                result += 'let';
	            }
	            return result;
	        }
	    }

	    return moment.lang('sl', {
	        months : "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
	        monthsShort : "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
	        weekdays : "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
	        weekdaysShort : "ned._pon._tor._sre._čet._pet._sob.".split("_"),
	        weekdaysMin : "ne_po_to_sr_če_pe_so".split("_"),
	        longDateFormat : {
	            LT : "H:mm",
	            L : "DD. MM. YYYY",
	            LL : "D. MMMM YYYY",
	            LLL : "D. MMMM YYYY LT",
	            LLLL : "dddd, D. MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[prejšnja] dddd [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "čez %s",
	            past   : "%s nazaj",
	            s      : "nekaj sekund",
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : "en dan",
	            dd     : translate,
	            M      : "en mesec",
	            MM     : translate,
	            y      : "eno leto",
	            yy     : translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Albanian (sq)
	// author : Flakërim Ismani : https://github.com/flakerimi
	// author: Menelion Elensúle: https://github.com/Oire (tests)
	// author : Oerd Cukalla : https://github.com/oerd (fixes)

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('sq', {
	        months : "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),
	        monthsShort : "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
	        weekdays : "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
	        weekdaysShort : "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
	        weekdaysMin : "D_H_Ma_Më_E_P_Sh".split("_"),
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "në %s",
	            past : "%s më parë",
	            s : "disa sekonda",
	            m : "një minutë",
	            mm : "%d minuta",
	            h : "një orë",
	            hh : "%d orë",
	            d : "një ditë",
	            dd : "%d ditë",
	            M : "një muaj",
	            MM : "%d muaj",
	            y : "një vit",
	            yy : "%d vite"
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Serbian-cyrillic (sr-cyr)
	// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    return moment.lang('sr-cyr', {
	        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],
	        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],
	        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],
	        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],
	        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],
	        longDateFormat: {
	            LT: "H:mm",
	            L: "DD. MM. YYYY",
	            LL: "D. MMMM YYYY",
	            LLL: "D. MMMM YYYY LT",
	            LLLL: "dddd, D. MMMM YYYY LT"
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "за %s",
	            past   : "пре %s",
	            s      : "неколико секунди",
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : "дан",
	            dd     : translator.translate,
	            M      : "месец",
	            MM     : translator.translate,
	            y      : "годину",
	            yy     : translator.translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Serbian-latin (sr)
	// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    return moment.lang('sr', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: "H:mm",
	            L: "DD. MM. YYYY",
	            LL: "D. MMMM YYYY",
	            LLL: "D. MMMM YYYY LT",
	            LLLL: "dddd, D. MMMM YYYY LT"
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "za %s",
	            past   : "pre %s",
	            s      : "nekoliko sekundi",
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : "dan",
	            dd     : translator.translate,
	            M      : "mesec",
	            MM     : translator.translate,
	            y      : "godinu",
	            yy     : translator.translate
	        },
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : swedish (sv)
	// author : Jens Alm : https://github.com/ulmus

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('sv', {
	        months : "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
	        monthsShort : "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
	        weekdays : "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
	        weekdaysShort : "sön_mån_tis_ons_tor_fre_lör".split("_"),
	        weekdaysMin : "sö_må_ti_on_to_fr_lö".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "YYYY-MM-DD",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: 'dddd LT',
	            lastWeek: '[Förra] dddd[en] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "om %s",
	            past : "för %s sedan",
	            s : "några sekunder",
	            m : "en minut",
	            mm : "%d minuter",
	            h : "en timme",
	            hh : "%d timmar",
	            d : "en dag",
	            dd : "%d dagar",
	            M : "en månad",
	            MM : "%d månader",
	            y : "ett år",
	            yy : "%d år"
	        },
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~ (number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : tamil (ta)
	// author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    /*var symbolMap = {
	            '1': '௧',
	            '2': '௨',
	            '3': '௩',
	            '4': '௪',
	            '5': '௫',
	            '6': '௬',
	            '7': '௭',
	            '8': '௮',
	            '9': '௯',
	            '0': '௦'
	        },
	        numberMap = {
	            '௧': '1',
	            '௨': '2',
	            '௩': '3',
	            '௪': '4',
	            '௫': '5',
	            '௬': '6',
	            '௭': '7',
	            '௮': '8',
	            '௯': '9',
	            '௦': '0'
	        }; */

	    return moment.lang('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split("_"),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split("_"),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split("_"),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split("_"),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY, LT",
	            LLLL : "dddd, D MMMM YYYY, LT"
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s இல்",
	            past : "%s முன்",
	            s : "ஒரு சில விநாடிகள்",
	            m : "ஒரு நிமிடம்",
	            mm : "%d நிமிடங்கள்",
	            h : "ஒரு மணி நேரம்",
	            hh : "%d மணி நேரம்",
	            d : "ஒரு நாள்",
	            dd : "%d நாட்கள்",
	            M : "ஒரு மாதம்",
	            MM : "%d மாதங்கள்",
	            y : "ஒரு வருடம்",
	            yy : "%d ஆண்டுகள்"
	        },
	/*        preparse: function (string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },*/
	        ordinal : function (number) {
	            return number + 'வது';
	        },


	// refer http://ta.wikipedia.org/s/1er1      

	        meridiem : function (hour, minute, isLower) {
	            if (hour >= 6 && hour <= 10) {
	                return " காலை";
	            } else   if (hour >= 10 && hour <= 14) {
	                return " நண்பகல்";
	            } else    if (hour >= 14 && hour <= 18) {
	                return " எற்பாடு";
	            } else   if (hour >= 18 && hour <= 20) {
	                return " மாலை";
	            } else  if (hour >= 20 && hour <= 24) {
	                return " இரவு";
	            } else  if (hour >= 0 && hour <= 6) {
	                return " வைகறை";
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : thai (th)
	// author : Kridsada Thanabulpong : https://github.com/sirn

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('th', {
	        months : "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),
	        monthsShort : "มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา".split("_"),
	        weekdays : "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
	        weekdaysShort : "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"), // yes, three characters difference
	        weekdaysMin : "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
	        longDateFormat : {
	            LT : "H นาฬิกา m นาที",
	            L : "YYYY/MM/DD",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY เวลา LT",
	            LLLL : "วันddddที่ D MMMM YYYY เวลา LT"
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return "ก่อนเที่ยง";
	            } else {
	                return "หลังเที่ยง";
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "อีก %s",
	            past : "%sที่แล้ว",
	            s : "ไม่กี่วินาที",
	            m : "1 นาที",
	            mm : "%d นาที",
	            h : "1 ชั่วโมง",
	            hh : "%d ชั่วโมง",
	            d : "1 วัน",
	            dd : "%d วัน",
	            M : "1 เดือน",
	            MM : "%d เดือน",
	            y : "1 ปี",
	            yy : "%d ปี"
	        }
	    });
	}));


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Tagalog/Filipino (tl-ph)
	// author : Dan Hagman

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('tl-ph', {
	        months : "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
	        monthsShort : "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
	        weekdays : "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
	        weekdaysShort : "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
	        weekdaysMin : "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "MM/D/YYYY",
	            LL : "MMMM D, YYYY",
	            LLL : "MMMM D, YYYY LT",
	            LLLL : "dddd, MMMM DD, YYYY LT"
	        },
	        calendar : {
	            sameDay: "[Ngayon sa] LT",
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "sa loob ng %s",
	            past : "%s ang nakalipas",
	            s : "ilang segundo",
	            m : "isang minuto",
	            mm : "%d minuto",
	            h : "isang oras",
	            hh : "%d oras",
	            d : "isang araw",
	            dd : "%d araw",
	            M : "isang buwan",
	            MM : "%d buwan",
	            y : "isang taon",
	            yy : "%d taon"
	        },
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : turkish (tr)
	// authors : Erhan Gundogan : https://github.com/erhangundogan,
	//           Burak Yiğit Kaya: https://github.com/BYK

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {

	    var suffixes = {
	        1: "'inci",
	        5: "'inci",
	        8: "'inci",
	        70: "'inci",
	        80: "'inci",

	        2: "'nci",
	        7: "'nci",
	        20: "'nci",
	        50: "'nci",

	        3: "'üncü",
	        4: "'üncü",
	        100: "'üncü",

	        6: "'ncı",

	        9: "'uncu",
	        10: "'uncu",
	        30: "'uncu",

	        60: "'ıncı",
	        90: "'ıncı"
	    };

	    return moment.lang('tr', {
	        months : "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
	        monthsShort : "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
	        weekdays : "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
	        weekdaysShort : "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
	        weekdaysMin : "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd, D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "%s sonra",
	            past : "%s önce",
	            s : "birkaç saniye",
	            m : "bir dakika",
	            mm : "%d dakika",
	            h : "bir saat",
	            hh : "%d saat",
	            d : "bir gün",
	            dd : "%d gün",
	            M : "bir ay",
	            MM : "%d ay",
	            y : "bir yıl",
	            yy : "%d yıl"
	        },
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + "'ıncı";
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;

	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Morocco Central Atlas Tamaziɣt in Latin (tzm-la)
	// author : Abdel Said : https://github.com/abdelsaid

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('tzm-la', {
	        months : "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
	        monthsShort : "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
	        weekdays : "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
	        weekdaysShort : "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
	        weekdaysMin : "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[asdkh g] LT",
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "dadkh s yan %s",
	            past : "yan %s",
	            s : "imik",
	            m : "minuḍ",
	            mm : "%d minuḍ",
	            h : "saɛa",
	            hh : "%d tassaɛin",
	            d : "ass",
	            dd : "%d ossan",
	            M : "ayowr",
	            MM : "%d iyyirn",
	            y : "asgas",
	            yy : "%d isgasn"
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : Morocco Central Atlas Tamaziɣt (tzm)
	// author : Abdel Said : https://github.com/abdelsaid

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('tzm', {
	        months : "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
	        monthsShort : "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
	        weekdays : "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
	        weekdaysShort : "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
	        weekdaysMin : "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "dddd D MMMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
	            past : "ⵢⴰⵏ %s",
	            s : "ⵉⵎⵉⴽ",
	            m : "ⵎⵉⵏⵓⴺ",
	            mm : "%d ⵎⵉⵏⵓⴺ",
	            h : "ⵙⴰⵄⴰ",
	            hh : "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
	            d : "ⴰⵙⵙ",
	            dd : "%d oⵙⵙⴰⵏ",
	            M : "ⴰⵢoⵓⵔ",
	            MM : "%d ⵉⵢⵢⵉⵔⵏ",
	            y : "ⴰⵙⴳⴰⵙ",
	            yy : "%d ⵉⵙⴳⴰⵙⵏ"
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : ukrainian (uk)
	// author : zemlanin : https://github.com/zemlanin
	// Author : Menelion Elensúle : https://github.com/Oire

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }

	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'хвилина_хвилини_хвилин',
	            'hh': 'година_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }

	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),
	            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')
	        },

	        nounCase = (/D[oD]? *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';

	        return months[nounCase][m.month()];
	    }

	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },

	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');

	        return weekdays[nounCase][m.day()];
	    }

	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    return moment.lang('uk', {
	        months : monthsCaseReplace,
	        monthsShort : "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : "нд_пн_вт_ср_чт_пт_сб".split("_"),
	        weekdaysMin : "нд_пн_вт_ср_чт_пт_сб".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD.MM.YYYY",
	            LL : "D MMMM YYYY р.",
	            LLL : "D MMMM YYYY р., LT",
	            LLLL : "dddd, D MMMM YYYY р., LT"
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "за %s",
	            past : "%s тому",
	            s : "декілька секунд",
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : "годину",
	            hh : relativeTimeWithPlural,
	            d : "день",
	            dd : relativeTimeWithPlural,
	            M : "місяць",
	            MM : relativeTimeWithPlural,
	            y : "рік",
	            yy : relativeTimeWithPlural
	        },

	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason

	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return "ночі";
	            } else if (hour < 12) {
	                return "ранку";
	            } else if (hour < 17) {
	                return "дня";
	            } else {
	                return "вечора";
	            }
	        },

	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },

	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : uzbek
	// author : Sardor Muminov : https://github.com/muminoff

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('uz', {
	        months : "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
	        monthsShort : "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
	        weekdays : "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
	        weekdaysShort : "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
	        weekdaysMin : "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM YYYY",
	            LLL : "D MMMM YYYY LT",
	            LLLL : "D MMMM YYYY, dddd LT"
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : "Якин %s ичида",
	            past : "Бир неча %s олдин",
	            s : "фурсат",
	            m : "бир дакика",
	            mm : "%d дакика",
	            h : "бир соат",
	            hh : "%d соат",
	            d : "бир кун",
	            dd : "%d кун",
	            M : "бир ой",
	            MM : "%d ой",
	            y : "бир йил",
	            yy : "%d йил"
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : vietnamese (vi)
	// author : Bang Nguyen : https://github.com/bangnk

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('vi', {
	        months : "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
	        monthsShort : "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
	        weekdays : "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
	        weekdaysShort : "CN_T2_T3_T4_T5_T6_T7".split("_"),
	        weekdaysMin : "CN_T2_T3_T4_T5_T6_T7".split("_"),
	        longDateFormat : {
	            LT : "HH:mm",
	            L : "DD/MM/YYYY",
	            LL : "D MMMM [năm] YYYY",
	            LLL : "D MMMM [năm] YYYY LT",
	            LLLL : "dddd, D MMMM [năm] YYYY LT",
	            l : "DD/M/YYYY",
	            ll : "D MMM YYYY",
	            lll : "D MMM YYYY LT",
	            llll : "ddd, D MMM YYYY LT"
	        },
	        calendar : {
	            sameDay: "[Hôm nay lúc] LT",
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : "%s tới",
	            past : "%s trước",
	            s : "vài giây",
	            m : "một phút",
	            mm : "%d phút",
	            h : "một giờ",
	            hh : "%d giờ",
	            d : "một ngày",
	            dd : "%d ngày",
	            M : "một tháng",
	            MM : "%d tháng",
	            y : "một năm",
	            yy : "%d năm"
	        },
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : chinese
	// author : suupic : https://github.com/suupic
	// author : Zeno Zeng : https://github.com/zenozeng

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('zh-cn', {
	        months : "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
	        monthsShort : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
	        weekdays : "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
	        weekdaysShort : "周日_周一_周二_周三_周四_周五_周六".split("_"),
	        weekdaysMin : "日_一_二_三_四_五_六".split("_"),
	        longDateFormat : {
	            LT : "Ah点mm",
	            L : "YYYY-MM-DD",
	            LL : "YYYY年MMMD日",
	            LLL : "YYYY年MMMD日LT",
	            LLLL : "YYYY年MMMD日ddddLT",
	            l : "YYYY-MM-DD",
	            ll : "YYYY年MMMD日",
	            lll : "YYYY年MMMD日LT",
	            llll : "YYYY年MMMD日ddddLT"
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return "凌晨";
	            } else if (hm < 900) {
	                return "早上";
	            } else if (hm < 1130) {
	                return "上午";
	            } else if (hm < 1230) {
	                return "中午";
	            } else if (hm < 1800) {
	                return "下午";
	            } else {
	                return "晚上";
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? "[今天]Ah[点整]" : "[今天]LT";
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? "[明天]Ah[点整]" : "[明天]LT";
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? "[昨天]Ah[点整]" : "[昨天]LT";
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + "dddAh点整" : prefix + "dddAh点mm";
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + "dddAh点整" : prefix + "dddAh点mm";
	            },
	            sameElse : 'LL'
	        },
	        ordinal : function (number, period) {
	            switch (period) {
	            case "d":
	            case "D":
	            case "DDD":
	                return number + "日";
	            case "M":
	                return number + "月";
	            case "w":
	            case "W":
	                return number + "周";
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : "%s内",
	            past : "%s前",
	            s : "几秒",
	            m : "1分钟",
	            mm : "%d分钟",
	            h : "1小时",
	            hh : "%d小时",
	            d : "1天",
	            dd : "%d天",
	            M : "1个月",
	            MM : "%d个月",
	            y : "1年",
	            yy : "%d年"
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	}));


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// moment.js language configuration
	// language : traditional chinese (zh-tw)
	// author : Ben : https://github.com/ben-lin

	(function (factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_RESULT__ = (factory.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD
	    } else if (typeof exports === 'object') {
	        module.exports = factory(require('../moment')); // Node
	    } else {
	        factory(window.moment); // Browser global
	    }
	}(function (moment) {
	    return moment.lang('zh-tw', {
	        months : "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
	        monthsShort : "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
	        weekdays : "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
	        weekdaysShort : "週日_週一_週二_週三_週四_週五_週六".split("_"),
	        weekdaysMin : "日_一_二_三_四_五_六".split("_"),
	        longDateFormat : {
	            LT : "Ah點mm",
	            L : "YYYY年MMMD日",
	            LL : "YYYY年MMMD日",
	            LLL : "YYYY年MMMD日LT",
	            LLLL : "YYYY年MMMD日ddddLT",
	            l : "YYYY年MMMD日",
	            ll : "YYYY年MMMD日",
	            lll : "YYYY年MMMD日LT",
	            llll : "YYYY年MMMD日ddddLT"
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return "早上";
	            } else if (hm < 1130) {
	                return "上午";
	            } else if (hm < 1230) {
	                return "中午";
	            } else if (hm < 1800) {
	                return "下午";
	            } else {
	                return "晚上";
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinal : function (number, period) {
	            switch (period) {
	            case "d" :
	            case "D" :
	            case "DDD" :
	                return number + "日";
	            case "M" :
	                return number + "月";
	            case "w" :
	            case "W" :
	                return number + "週";
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : "%s內",
	            past : "%s前",
	            s : "幾秒",
	            m : "一分鐘",
	            mm : "%d分鐘",
	            h : "一小時",
	            hh : "%d小時",
	            d : "一天",
	            dd : "%d天",
	            M : "一個月",
	            MM : "%d個月",
	            y : "一年",
	            yy : "%d年"
	        }
	    });
	}));


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }
/******/ ])